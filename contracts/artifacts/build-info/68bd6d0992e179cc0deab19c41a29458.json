{
	"id": "68bd6d0992e179cc0deab19c41a29458",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BurnMintSuperToken.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity ^0.8.0;\n\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\n\nimport {SuperTokenBase} from \"./base/SuperTokenBase.sol\";\n\n/// @title Burnable and Mintable Pure Super Token\n/// @author jtriley.eth\n/// @notice This does not perform checks when burning\ncontract BurnMintSuperToken is SuperTokenBase, AccessControl {\n\t/// @notice Minter Role\n\tbytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n\t/// @notice Burner Role\n\tbytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\");\n\n    constructor() {\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    }\n\n\t/// @notice Initializer, used AFTER factory upgrade\n\t/// @dev We MUST mint here, there is no other way to mint tokens\n\t/// @param factory Super Token factory for initialization\n\t/// @param name Name of Super Token\n\t/// @param symbol Symbol of Super Token\n\t/// @param initialSupply Initial token supply to pre-mint\n\t/// @param receiver Receiver of pre-mint\n\t/// @param userData Arbitrary user data for pre-mint\n\tfunction initialize(\n\t\taddress factory,\n\t\tstring memory name,\n\t\tstring memory symbol,\n\t\tuint256 initialSupply,\n\t\taddress receiver,\n\t\tbytes memory userData\n\t) external {\n\t\t_initialize(factory, name, symbol);\n\t\t_mint(receiver, initialSupply, userData);\n\t}\n\n\t/// @notice Mints tokens, only the owner may do this\n\t/// @param receiver Receiver of minted tokens\n\t/// @param amount Amount to mint\n\tfunction mint(\n\t\taddress receiver,\n\t\tuint256 amount,\n\t\tbytes memory userData\n\t) external onlyRole(MINTER_ROLE) {\n\t\t_mint(receiver, amount, userData);\n\t}\n\n\t/// @notice Burns from message sender\n\t/// @param amount Amount to burn\n\tfunction burn(uint256 amount, bytes memory userData)\n\t\texternal\n\t\tonlyRole(BURNER_ROLE)\n\t{\n\t\t_burn(msg.sender, amount, userData);\n\t}\n}\n"
			},
			"contracts/base/SuperTokenBase.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity ^0.8.0;\n\nimport {SuperTokenStorage} from \"../base/SuperTokenStorage.sol\";\nimport {UUPSProxy} from \"../base/UUPSProxy.sol\";\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {ISuperToken} from \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\";\nimport {ISuperTokenFactory} from \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\";\n\n/// @title Abstract contract containing a thin layer of abstraction for aux logic.\n/// @author jtriley.eth\n/// @dev The initial supply may be zero, in the event the token is mintable.\n/// Inheriting contracts MUST have an initializer calling this function!\nabstract contract SuperTokenBase is SuperTokenStorage, UUPSProxy {\n\n\t/// @dev Upgrades the super token with the factory, then initializes.\n\t/// @param factory super token factory for initialization\n\t/// @param name super token name\n\t/// @param symbol super token symbol\n\tfunction _initialize(address factory, string memory name, string memory symbol) internal {\n\t\tISuperTokenFactory(factory).initializeCustomSuperToken(address(this));\n\t\tISuperToken(address(this)).initialize(IERC20(address(0)), 18, name, symbol);\n\t}\n\n\t/// @dev Gets totalSupply\n\t/// @return t total supply\n\tfunction _totalSupply() internal view returns (uint256 t) {\n\t\treturn ISuperToken(address(this)).totalSupply();\n\t}\n\n\t/// @dev Internal mint, calling functions should perform important checks!\n\t/// @param account Address receiving minted tokens\n\t/// @param amount Amount of tokens minted\n\t/// @param userData Optional user data for ERC777 send callback\n\tfunction _mint(address account, uint256 amount, bytes memory userData) internal {\n\t\tISuperToken(address(this)).selfMint(account, amount, userData);\n\t}\n\n\t/// @dev Internal burn, calling functions should perform important checks!\n\t/// @param from Address from which to burn tokens\n\t/// @param amount Amount to burn\n\t/// @param userData Optional user data for ERC777 send callback\n\tfunction _burn(address from, uint256 amount, bytes memory userData) internal {\n\t\tISuperToken(address(this)).selfBurn(from, amount, userData);\n\t}\n\n\t/// @dev Internal approve, calling functions should perform important checks!\n\t/// @param account Address of approving party\n\t/// @param spender Address of spending party\n\t/// @param amount Approval amount\n\tfunction _approve(address account, address spender, uint256 amount) internal {\n\t\tISuperToken(address(this)).selfApproveFor(account, spender, amount);\n\t}\n\n\t/// @dev Internal transferFrom, calling functions should perform important checks!\n\t/// @param holder Owner of the tranfserred tokens\n\t/// @param spender Address of spending party (approved/operator)\n\t/// @param recipient Address of recipient party\n\t/// @param amount Amount to be tranfserred\n\tfunction _transferFrom(\n\t\taddress holder,\n\t\taddress spender,\n\t\taddress recipient,\n\t\tuint256 amount\n\t) internal {\n\t\tISuperToken(address(this)).selfTransferFrom(holder, spender, recipient, amount);\n\t}\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.8.4;\n\nimport { ISuperToken } from \"./ISuperToken.sol\";\n\nimport {\n    IERC20,\n    ERC20WithTokenInfo\n} from \"../tokens/ERC20WithTokenInfo.sol\";\n\n/**\n * @title Super token factory interface\n * @author Superfluid\n */\ninterface ISuperTokenFactory {\n\n    /**************************************************************************\n     * Errors\n     *************************************************************************/\n    error SUPER_TOKEN_FACTORY_ALREADY_EXISTS(); // 0x91d67972\n    error SUPER_TOKEN_FACTORY_DOES_NOT_EXIST(); // 0x872cac48\n    error SUPER_TOKEN_FACTORY_UNINITIALIZED();  // 0x1b39b9b4\n    error SUPER_TOKEN_FACTORY_ONLY_HOST();      // 0x478b8e83\n    error SUPER_TOKEN_FACTORY_ZERO_ADDRESS();   // 0x305c9e82\n\n    /**\n     * @dev Get superfluid host contract address\n     */\n    function getHost() external view returns(address host);\n\n    /// @dev Initialize the contract\n    function initialize() external;\n\n    /**\n     * @dev Get the current super token logic used by the factory\n     */\n    function getSuperTokenLogic() external view returns (ISuperToken superToken);\n\n    /**\n     * @dev Upgradability modes\n     */\n    enum Upgradability {\n        /// Non upgradable super token, `host.updateSuperTokenLogic` will revert\n        NON_UPGRADABLE,\n        /// Upgradable through `host.updateSuperTokenLogic` operation\n        SEMI_UPGRADABLE,\n        /// Always using the latest super token logic\n        FULL_UPGRADABLE\n    }\n\n    /**\n     * @notice Create new super token wrapper for the underlying ERC20 token\n     * @param underlyingToken Underlying ERC20 token\n     * @param underlyingDecimals Underlying token decimals\n     * @param upgradability Upgradability mode\n     * @param name Super token name\n     * @param symbol Super token symbol\n     * @return superToken The deployed and initialized wrapper super token\n     */\n    function createERC20Wrapper(\n        IERC20 underlyingToken,\n        uint8 underlyingDecimals,\n        Upgradability upgradability,\n        string calldata name,\n        string calldata symbol\n    )\n        external\n        returns (ISuperToken superToken);\n\n    /**\n     * @notice Create new super token wrapper for the underlying ERC20 token with extra token info\n     * @param underlyingToken Underlying ERC20 token\n     * @param upgradability Upgradability mode\n     * @param name Super token name\n     * @param symbol Super token symbol\n     * @return superToken The deployed and initialized wrapper super token\n     * NOTE:\n     * - It assumes token provide the .decimals() function\n     */\n    function createERC20Wrapper(\n        ERC20WithTokenInfo underlyingToken,\n        Upgradability upgradability,\n        string calldata name,\n        string calldata symbol\n    )\n        external\n        returns (ISuperToken superToken);\n\n    /**\n     * @notice Creates a wrapper super token AND sets it in the canonical list OR reverts if it already exists\n     * @dev salt for create2 is the keccak256 hash of abi.encode(address(_underlyingToken))\n     * @param _underlyingToken Underlying ERC20 token\n     * @return ISuperToken the created supertoken\n     */\n    function createCanonicalERC20Wrapper(ERC20WithTokenInfo _underlyingToken)\n        external\n        returns (ISuperToken);\n\n    /**\n     * @notice Computes/Retrieves wrapper super token address given the underlying token address\n     * @dev We return from our canonical list if it already exists, otherwise we compute it\n     * @dev note that this function only computes addresses for SEMI_UPGRADABLE SuperTokens\n     * @param _underlyingToken Underlying ERC20 token address\n     * @return superTokenAddress Super token address\n     * @return isDeployed whether the super token is deployed AND set in the canonical mapping\n     */\n    function computeCanonicalERC20WrapperAddress(address _underlyingToken)\n        external\n        view\n        returns (address superTokenAddress, bool isDeployed);\n\n    /**\n     * @notice Gets the canonical ERC20 wrapper super token address given the underlying token address\n     * @dev We return the address if it exists and the zero address otherwise\n     * @param _underlyingTokenAddress Underlying ERC20 token address\n     * @return superTokenAddress Super token address\n     */\n    function getCanonicalERC20Wrapper(address _underlyingTokenAddress)\n        external\n        view\n        returns (address superTokenAddress);\n\n    /**\n     * @dev Creates a new custom super token\n     * @param customSuperTokenProxy address of the custom supertoken proxy\n     */\n    function initializeCustomSuperToken(\n        address customSuperTokenProxy\n    )\n        external;\n\n    /**\n      * @dev Super token logic created event\n      * @param tokenLogic Token logic address\n      */\n    event SuperTokenLogicCreated(ISuperToken indexed tokenLogic);\n\n    /**\n      * @dev Super token created event\n      * @param token Newly created super token address\n      */\n    event SuperTokenCreated(ISuperToken indexed token);\n\n    /**\n      * @dev Custom super token created event\n      * @param token Newly created custom super token address\n      */\n    event CustomSuperTokenCreated(ISuperToken indexed token);\n\n}\n"
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.8.4;\n\nimport { ISuperfluid } from \"./ISuperfluid.sol\";\nimport { ISuperfluidToken } from \"./ISuperfluidToken.sol\";\nimport { TokenInfo } from \"../tokens/TokenInfo.sol\";\nimport { IERC777 } from \"@openzeppelin/contracts/token/ERC777/IERC777.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title Super token (Superfluid Token + ERC20 + ERC777) interface\n * @author Superfluid\n */\ninterface ISuperToken is ISuperfluidToken, TokenInfo, IERC20, IERC777 {\n\n    /**************************************************************************\n     * Errors\n     *************************************************************************/\n    error SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER();       // 0xf7f02227\n    error SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT();             // 0xfe737d05\n    error SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED(); // 0xe3e13698\n    error SUPER_TOKEN_NO_UNDERLYING_TOKEN();                     // 0xf79cf656\n    error SUPER_TOKEN_ONLY_SELF();                               // 0x7ffa6648\n    error SUPER_TOKEN_ONLY_HOST();                               // 0x98f73704\n    error SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS();               // 0x81638627\n    error SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS();                 // 0xdf070274\n    error SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS();                  // 0xba2ab184\n    error SUPER_TOKEN_MINT_TO_ZERO_ADDRESS();                    // 0x0d243157\n    error SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS();              // 0xeecd6c9b\n    error SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS();                // 0xe219bd39\n\n    /**\n     * @dev Initialize the contract\n     */\n    function initialize(\n        IERC20 underlyingToken,\n        uint8 underlyingDecimals,\n        string calldata n,\n        string calldata s\n    ) external;\n\n    /**************************************************************************\n    * TokenInfo & ERC777\n    *************************************************************************/\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view override(IERC777, TokenInfo) returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view override(IERC777, TokenInfo) returns (string memory);\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * @custom:note SuperToken always uses 18 decimals.\n     *\n     * This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() external view override(TokenInfo) returns (uint8);\n\n    /**************************************************************************\n    * ERC20 & ERC777\n    *************************************************************************/\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() external view override(IERC777, IERC20) returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`owner`).\n     */\n    function balanceOf(address account) external view override(IERC777, IERC20) returns(uint256 balance);\n\n    /**************************************************************************\n    * ERC20\n    *************************************************************************/\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * @return Returns Success a boolean value indicating whether the operation succeeded.\n     *\n     * @custom:emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external override(IERC20) returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     *         allowed to spend on behalf of `owner` through {transferFrom}. This is\n     *         zero by default.\n     *\n     * @notice This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external override(IERC20) view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * @return Returns Success a boolean value indicating whether the operation succeeded.\n     *\n     * @custom:note Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * @custom:emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external override(IERC20) returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     *         allowance mechanism. `amount` is then deducted from the caller's\n     *         allowance.\n     *\n     * @return Returns Success a boolean value indicating whether the operation succeeded.\n     *\n     * @custom:emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external override(IERC20) returns (bool);\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * @custom:emits an {Approval} event indicating the updated allowance.\n     *\n     * @custom:requirements \n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) external returns (bool);\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * @custom:emits an {Approval} event indicating the updated allowance.\n     *\n     * @custom:requirements \n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n     function decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool);\n\n    /**************************************************************************\n    * ERC777\n    *************************************************************************/\n\n    /**\n     * @dev Returns the smallest part of the token that is not divisible. This\n     *         means all token operations (creation, movement and destruction) must have\n     *         amounts that are a multiple of this number.\n     *\n     * @custom:note For super token contracts, this value is always 1\n     */\n    function granularity() external view override(IERC777) returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * @dev If send or receive hooks are registered for the caller and `recipient`,\n     *      the corresponding functions will be called with `data` and empty\n     *      `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * @custom:emits a {Sent} event.\n     *\n     * @custom:requirements \n     * - the caller must have at least `amount` tokens.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function send(address recipient, uint256 amount, bytes calldata data) external override(IERC777);\n\n    /**\n     * @dev Destroys `amount` tokens from the caller's account, reducing the\n     * total supply.\n     *\n     * If a send hook is registered for the caller, the corresponding function\n     * will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n     *\n     * @custom:emits a {Burned} event.\n     *\n     * @custom:requirements \n     * - the caller must have at least `amount` tokens.\n     */\n    function burn(uint256 amount, bytes calldata data) external override(IERC777);\n\n    /**\n     * @dev Returns true if an account is an operator of `tokenHolder`.\n     * Operators can send and burn tokens on behalf of their owners. All\n     * accounts are their own operator.\n     *\n     * See {operatorSend} and {operatorBurn}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) external override(IERC777) view returns (bool);\n\n    /**\n     * @dev Make an account an operator of the caller.\n     *\n     * See {isOperatorFor}.\n     *\n     * @custom:emits an {AuthorizedOperator} event.\n     *\n     * @custom:requirements \n     * - `operator` cannot be calling address.\n     */\n    function authorizeOperator(address operator) external override(IERC777);\n\n    /**\n     * @dev Revoke an account's operator status for the caller.\n     *\n     * See {isOperatorFor} and {defaultOperators}.\n     *\n     * @custom:emits a {RevokedOperator} event.\n     *\n     * @custom:requirements \n     * - `operator` cannot be calling address.\n     */\n    function revokeOperator(address operator) external override(IERC777);\n\n    /**\n     * @dev Returns the list of default operators. These accounts are operators\n     * for all token holders, even if {authorizeOperator} was never called on\n     * them.\n     *\n     * This list is immutable, but individual holders may revoke these via\n     * {revokeOperator}, in which case {isOperatorFor} will return false.\n     */\n    function defaultOperators() external override(IERC777) view returns (address[] memory);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n     * be an operator of `sender`.\n     *\n     * If send or receive hooks are registered for `sender` and `recipient`,\n     * the corresponding functions will be called with `data` and\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * @custom:emits a {Sent} event.\n     *\n     * @custom:requirements \n     * - `sender` cannot be the zero address.\n     * - `sender` must have at least `amount` tokens.\n     * - the caller must be an operator for `sender`.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external override(IERC777);\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\n     * The caller must be an operator of `account`.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `data` and `operatorData`. See {IERC777Sender}.\n     *\n     * @custom:emits a {Burned} event.\n     *\n     * @custom:requirements \n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     * - the caller must be an operator for `account`.\n     */\n    function operatorBurn(\n        address account,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external override(IERC777);\n\n    /**************************************************************************\n     * SuperToken custom token functions\n     *************************************************************************/\n\n    /**\n     * @dev Mint new tokens for the account\n     *\n     * @custom:modifiers \n     *  - onlySelf\n     */\n    function selfMint(\n        address account,\n        uint256 amount,\n        bytes memory userData\n    ) external;\n\n   /**\n    * @dev Burn existing tokens for the account\n    *\n    * @custom:modifiers \n    *  - onlySelf\n    */\n   function selfBurn(\n       address account,\n       uint256 amount,\n       bytes memory userData\n   ) external;\n\n   /**\n    * @dev Transfer `amount` tokens from the `sender` to `recipient`.\n    * If `spender` isn't the same as `sender`, checks if `spender` has allowance to\n    * spend tokens of `sender`.\n    *\n    * @custom:modifiers \n    *  - onlySelf\n    */\n   function selfTransferFrom(\n        address sender,\n        address spender,\n        address recipient,\n        uint256 amount\n   ) external;\n\n   /**\n    * @dev Give `spender`, `amount` allowance to spend the tokens of\n    * `account`.\n    *\n    * @custom:modifiers \n    *  - onlySelf\n    */\n   function selfApproveFor(\n        address account,\n        address spender,\n        uint256 amount\n   ) external;\n\n    /**************************************************************************\n     * SuperToken extra functions\n     *************************************************************************/\n\n    /**\n     * @dev Transfer all available balance from `msg.sender` to `recipient`\n     */\n    function transferAll(address recipient) external;\n\n    /**************************************************************************\n     * ERC20 wrapping\n     *************************************************************************/\n\n    /**\n     * @dev Return the underlying token contract\n     * @return tokenAddr Underlying token address\n     */\n    function getUnderlyingToken() external view returns(address tokenAddr);\n\n    /**\n     * @dev Upgrade ERC20 to SuperToken.\n     * @param amount Number of tokens to be upgraded (in 18 decimals)\n     *\n     * @custom:note It will use `transferFrom` to get tokens. Before calling this\n     * function you should `approve` this contract\n     */\n    function upgrade(uint256 amount) external;\n\n    /**\n     * @dev Upgrade ERC20 to SuperToken and transfer immediately\n     * @param to The account to received upgraded tokens\n     * @param amount Number of tokens to be upgraded (in 18 decimals)\n     * @param data User data for the TokensRecipient callback\n     *\n     * @custom:note It will use `transferFrom` to get tokens. Before calling this\n     * function you should `approve` this contract\n     */\n    function upgradeTo(address to, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev Token upgrade event\n     * @param account Account where tokens are upgraded to\n     * @param amount Amount of tokens upgraded (in 18 decimals)\n     */\n    event TokenUpgraded(\n        address indexed account,\n        uint256 amount\n    );\n\n    /**\n     * @dev Downgrade SuperToken to ERC20.\n     * @dev It will call transfer to send tokens\n     * @param amount Number of tokens to be downgraded\n     */\n    function downgrade(uint256 amount) external;\n\n    /**\n     * @dev Token downgrade event\n     * @param account Account whose tokens are upgraded\n     * @param amount Amount of tokens downgraded\n     */\n    event TokenDowngraded(\n        address indexed account,\n        uint256 amount\n    );\n\n    /**************************************************************************\n    * Batch Operations\n    *************************************************************************/\n\n    /**\n    * @dev Perform ERC20 approve by host contract.\n    * @param account The account owner to be approved.\n    * @param spender The spender of account owner's funds.\n    * @param amount Number of tokens to be approved.\n    *\n    * @custom:modifiers \n    *  - onlyHost\n    */\n    function operationApprove(\n        address account,\n        address spender,\n        uint256 amount\n    ) external;\n\n    /**\n    * @dev Perform ERC20 transfer from by host contract.\n    * @param account The account to spend sender's funds.\n    * @param spender  The account where the funds is sent from.\n    * @param recipient The recipient of thefunds.\n    * @param amount Number of tokens to be transferred.\n    *\n    * @custom:modifiers \n    *  - onlyHost\n    */\n    function operationTransferFrom(\n        address account,\n        address spender,\n        address recipient,\n        uint256 amount\n    ) external;\n\n    /**\n    * @dev Upgrade ERC20 to SuperToken by host contract.\n    * @param account The account to be changed.\n    * @param amount Number of tokens to be upgraded (in 18 decimals)\n    *\n    * @custom:modifiers \n    *  - onlyHost\n    */\n    function operationUpgrade(address account, uint256 amount) external;\n\n    /**\n    * @dev Downgrade ERC20 to SuperToken by host contract.\n    * @param account The account to be changed.\n    * @param amount Number of tokens to be downgraded (in 18 decimals)\n    *\n    * @custom:modifiers \n    *  - onlyHost\n    */\n    function operationDowngrade(address account, uint256 amount) external;\n\n\n    /**************************************************************************\n    * Function modifiers for access control and parameter validations\n    *\n    * While they cannot be explicitly stated in function definitions, they are\n    * listed in function definition comments instead for clarity.\n    *\n    * NOTE: solidity-coverage not supporting it\n    *************************************************************************/\n\n    /// @dev The msg.sender must be the contract itself\n    //modifier onlySelf() virtual\n\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"contracts/base/UUPSProxy.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity ^0.8.0;\n\nimport {Proxy} from \"@openzeppelin/contracts/proxy/Proxy.sol\";\n\n/// @title UUPS Proxy implementation contract\n/// @author jtriley.eth\n/// @notice Stores the logic contract's address at the _IMPLEMENTATION_SLOT\n/// @dev `initializeProxy(address)` is called by the Super Token Factory\n/// The call to the factory should be in the same transaction to avoid being\n/// front run\ncontract UUPSProxy is Proxy {\n\t/// @notice Thrown when the logic contract address is zero\n\terror ZeroAddress();\n\n\t/// @notice Thrown when the logic contract has been set\n\terror Initialized();\n\n\t/// @notice Precomputed from the following for gas savings\n\t/// bytes32(uint256(keccak256(\"eip1967.proxy.implementation\") - 1));\n\tbytes32 internal constant _IMPLEMENTATION_SLOT =\n\t\t0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n\t/// @notice Stores the logic contract address only once.\n\t/// @dev Called by the SuperTokenFactory contract on upgrade\n\t/// @param initialAddress logic contract address\n\tfunction initializeProxy(address initialAddress) external {\n\t\tif (initialAddress == address(0)) revert ZeroAddress();\n\t\tif (_implementation() != address(0)) revert Initialized();\n\t\tassembly {\n\t\t\tsstore(_IMPLEMENTATION_SLOT, initialAddress)\n\t\t}\n\t}\n\n\t/// @notice Reads logic contract from precomputed slot\n\t/// @return impl Logic contract address\n\tfunction _implementation()\n\t\tinternal\n\t\tview\n\t\tvirtual\n\t\toverride\n\t\treturns (address impl)\n\t{\n\t\tassembly {\n\t\t\timpl := sload(_IMPLEMENTATION_SLOT)\n\t\t}\n\t}\n}\n"
			},
			"contracts/base/SuperTokenStorage.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity ^0.8.0;\n\n/// @title Abstract Storage Contract to pad the first 32 slots of storage\n/// @author Superfluid\n/// @dev MUST be the FIRST contract inherited to pad the first 32 slots. The slots are padded to\n/// ensure the implementation contract (SuperToken.sol) does not override any auxiliary state\n/// variables. For more info see `./docs/StorageLayout.md`.\nabstract contract SuperTokenStorage {\n    uint256[32] internal _storagePaddings;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.8.4;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { TokenInfo } from \"./TokenInfo.sol\";\n\n/**\n * @title ERC20 token with token info interface\n * @author Superfluid\n * @dev Using abstract contract instead of interfaces because old solidity\n *      does not support interface inheriting other interfaces\n * solhint-disable-next-line no-empty-blocks\n *\n */\n// solhint-disable-next-line no-empty-blocks\nabstract contract ERC20WithTokenInfo is IERC20, TokenInfo {}\n"
			},
			"@openzeppelin/contracts/token/ERC777/IERC777.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC777/IERC777.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777Token standard as defined in the EIP.\n *\n * This contract uses the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n * token holders and recipients react to token movements by using setting implementers\n * for the associated interfaces in said registry. See {IERC1820Registry} and\n * {ERC1820Implementer}.\n */\ninterface IERC777 {\n    /**\n     * @dev Emitted when `amount` tokens are created by `operator` and assigned to `to`.\n     *\n     * Note that some additional user `data` and `operatorData` can be logged in the event.\n     */\n    event Minted(address indexed operator, address indexed to, uint256 amount, bytes data, bytes operatorData);\n\n    /**\n     * @dev Emitted when `operator` destroys `amount` tokens from `account`.\n     *\n     * Note that some additional user `data` and `operatorData` can be logged in the event.\n     */\n    event Burned(address indexed operator, address indexed from, uint256 amount, bytes data, bytes operatorData);\n\n    /**\n     * @dev Emitted when `operator` is made operator for `tokenHolder`.\n     */\n    event AuthorizedOperator(address indexed operator, address indexed tokenHolder);\n\n    /**\n     * @dev Emitted when `operator` is revoked its operator status for `tokenHolder`.\n     */\n    event RevokedOperator(address indexed operator, address indexed tokenHolder);\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the smallest part of the token that is not divisible. This\n     * means all token operations (creation, movement and destruction) must have\n     * amounts that are a multiple of this number.\n     *\n     * For most token contracts, this value will equal 1.\n     */\n    function granularity() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`owner`).\n     */\n    function balanceOf(address owner) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * If send or receive hooks are registered for the caller and `recipient`,\n     * the corresponding functions will be called with `data` and empty\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function send(\n        address recipient,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Destroys `amount` tokens from the caller's account, reducing the\n     * total supply.\n     *\n     * If a send hook is registered for the caller, the corresponding function\n     * will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     */\n    function burn(uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev Returns true if an account is an operator of `tokenHolder`.\n     * Operators can send and burn tokens on behalf of their owners. All\n     * accounts are their own operator.\n     *\n     * See {operatorSend} and {operatorBurn}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) external view returns (bool);\n\n    /**\n     * @dev Make an account an operator of the caller.\n     *\n     * See {isOperatorFor}.\n     *\n     * Emits an {AuthorizedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function authorizeOperator(address operator) external;\n\n    /**\n     * @dev Revoke an account's operator status for the caller.\n     *\n     * See {isOperatorFor} and {defaultOperators}.\n     *\n     * Emits a {RevokedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function revokeOperator(address operator) external;\n\n    /**\n     * @dev Returns the list of default operators. These accounts are operators\n     * for all token holders, even if {authorizeOperator} was never called on\n     * them.\n     *\n     * This list is immutable, but individual holders may revoke these via\n     * {revokeOperator}, in which case {isOperatorFor} will return false.\n     */\n    function defaultOperators() external view returns (address[] memory);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n     * be an operator of `sender`.\n     *\n     * If send or receive hooks are registered for `sender` and `recipient`,\n     * the corresponding functions will be called with `data` and\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - `sender` cannot be the zero address.\n     * - `sender` must have at least `amount` tokens.\n     * - the caller must be an operator for `sender`.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\n     * The caller must be an operator of `account`.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `data` and `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     * - the caller must be an operator for `account`.\n     */\n    function operatorBurn(\n        address account,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    event Sent(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 amount,\n        bytes data,\n        bytes operatorData\n    );\n}\n"
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.8.4;\n\n/**\n * @title ERC20 token info interface\n * @author Superfluid\n * @dev ERC20 standard interface does not specify these functions, but\n *      often the token implementations have them.\n */\ninterface TokenInfo {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.8.4;\n\nimport { ISuperAgreement } from \"./ISuperAgreement.sol\";\n\n/**\n * @title Superfluid token interface\n * @author Superfluid\n */\ninterface ISuperfluidToken {\n\n    /**************************************************************************\n     * Errors\n     *************************************************************************/\n    error SF_TOKEN_AGREEMENT_ALREADY_EXISTS();  // 0xf05521f6\n    error SF_TOKEN_AGREEMENT_DOES_NOT_EXIST();  // 0xdae18809\n    error SF_TOKEN_BURN_INSUFFICIENT_BALANCE(); // 0x10ecdf44\n    error SF_TOKEN_MOVE_INSUFFICIENT_BALANCE(); // 0x2f4cb941\n    error SF_TOKEN_ONLY_LISTED_AGREEMENT();     // 0xc9ff6644\n    error SF_TOKEN_ONLY_HOST();                 // 0xc51efddd\n\n    /**************************************************************************\n     * Basic information\n     *************************************************************************/\n\n    /**\n     * @dev Get superfluid host contract address\n     */\n    function getHost() external view returns(address host);\n\n    /**\n     * @dev Encoded liquidation type data mainly used for handling stack to deep errors\n     *\n     * @custom:note \n     * - version: 1\n     * - liquidationType key:\n     *    - 0 = reward account receives reward (PIC period)\n     *    - 1 = liquidator account receives reward (Pleb period)\n     *    - 2 = liquidator account receives reward (Pirate period/bailout)\n     */\n    struct LiquidationTypeData {\n        uint256 version;\n        uint8 liquidationType;\n    }\n\n    /**************************************************************************\n     * Real-time balance functions\n     *************************************************************************/\n\n    /**\n    * @dev Calculate the real balance of a user, taking in consideration all agreements of the account\n    * @param account for the query\n    * @param timestamp Time of balance\n    * @return availableBalance Real-time balance\n    * @return deposit Account deposit\n    * @return owedDeposit Account owed Deposit\n    */\n    function realtimeBalanceOf(\n       address account,\n       uint256 timestamp\n    )\n        external view\n        returns (\n            int256 availableBalance,\n            uint256 deposit,\n            uint256 owedDeposit);\n\n    /**\n     * @notice Calculate the realtime balance given the current host.getNow() value\n     * @dev realtimeBalanceOf with timestamp equals to block timestamp\n     * @param account for the query\n     * @return availableBalance Real-time balance\n     * @return deposit Account deposit\n     * @return owedDeposit Account owed Deposit\n     */\n    function realtimeBalanceOfNow(\n       address account\n    )\n        external view\n        returns (\n            int256 availableBalance,\n            uint256 deposit,\n            uint256 owedDeposit,\n            uint256 timestamp);\n\n    /**\n    * @notice Check if account is critical\n    * @dev A critical account is when availableBalance < 0\n    * @param account The account to check\n    * @param timestamp The time we'd like to check if the account is critical (should use future)\n    * @return isCritical Whether the account is critical\n    */\n    function isAccountCritical(\n        address account,\n        uint256 timestamp\n    )\n        external view\n        returns(bool isCritical);\n\n    /**\n    * @notice Check if account is critical now (current host.getNow())\n    * @dev A critical account is when availableBalance < 0\n    * @param account The account to check\n    * @return isCritical Whether the account is critical\n    */\n    function isAccountCriticalNow(\n        address account\n    )\n        external view\n        returns(bool isCritical);\n\n    /**\n     * @notice Check if account is solvent\n     * @dev An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\n     * @param account The account to check\n     * @param timestamp The time we'd like to check if the account is solvent (should use future)\n     * @return isSolvent True if the account is solvent, false otherwise\n     */\n    function isAccountSolvent(\n        address account,\n        uint256 timestamp\n    )\n        external view\n        returns(bool isSolvent);\n\n    /**\n     * @notice Check if account is solvent now\n     * @dev An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\n     * @param account The account to check\n     * @return isSolvent True if the account is solvent, false otherwise\n     */\n    function isAccountSolventNow(\n        address account\n    )\n        external view\n        returns(bool isSolvent);\n\n    /**\n    * @notice Get a list of agreements that is active for the account\n    * @dev An active agreement is one that has state for the account\n    * @param account Account to query\n    * @return activeAgreements List of accounts that have non-zero states for the account\n    */\n    function getAccountActiveAgreements(address account)\n       external view\n       returns(ISuperAgreement[] memory activeAgreements);\n\n\n   /**************************************************************************\n    * Super Agreement hosting functions\n    *************************************************************************/\n\n    /**\n     * @dev Create a new agreement\n     * @param id Agreement ID\n     * @param data Agreement data\n     */\n    function createAgreement(\n        bytes32 id,\n        bytes32[] calldata data\n    )\n        external;\n    /**\n     * @dev Agreement created event\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param data Agreement data\n     */\n    event AgreementCreated(\n        address indexed agreementClass,\n        bytes32 id,\n        bytes32[] data\n    );\n\n    /**\n     * @dev Get data of the agreement\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @return data Data of the agreement\n     */\n    function getAgreementData(\n        address agreementClass,\n        bytes32 id,\n        uint dataLength\n    )\n        external view\n        returns(bytes32[] memory data);\n\n    /**\n     * @dev Create a new agreement\n     * @param id Agreement ID\n     * @param data Agreement data\n     */\n    function updateAgreementData(\n        bytes32 id,\n        bytes32[] calldata data\n    )\n        external;\n    /**\n     * @dev Agreement updated event\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param data Agreement data\n     */\n    event AgreementUpdated(\n        address indexed agreementClass,\n        bytes32 id,\n        bytes32[] data\n    );\n\n    /**\n     * @dev Close the agreement\n     * @param id Agreement ID\n     */\n    function terminateAgreement(\n        bytes32 id,\n        uint dataLength\n    )\n        external;\n    /**\n     * @dev Agreement terminated event\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     */\n    event AgreementTerminated(\n        address indexed agreementClass,\n        bytes32 id\n    );\n\n    /**\n     * @dev Update agreement state slot\n     * @param account Account to be updated\n     *\n     * @custom:note \n     * - To clear the storage out, provide zero-ed array of intended length\n     */\n    function updateAgreementStateSlot(\n        address account,\n        uint256 slotId,\n        bytes32[] calldata slotData\n    )\n        external;\n    /**\n     * @dev Agreement account state updated event\n     * @param agreementClass Contract address of the agreement\n     * @param account Account updated\n     * @param slotId slot id of the agreement state\n     */\n    event AgreementStateUpdated(\n        address indexed agreementClass,\n        address indexed account,\n        uint256 slotId\n    );\n\n    /**\n     * @dev Get data of the slot of the state of an agreement\n     * @param agreementClass Contract address of the agreement\n     * @param account Account to query\n     * @param slotId slot id of the state\n     * @param dataLength length of the state data\n     */\n    function getAgreementStateSlot(\n        address agreementClass,\n        address account,\n        uint256 slotId,\n        uint dataLength\n    )\n        external view\n        returns (bytes32[] memory slotData);\n\n    /**\n     * @notice Settle balance from an account by the agreement\n     * @dev The agreement needs to make sure that the balance delta is balanced afterwards\n     * @param account Account to query.\n     * @param delta Amount of balance delta to be settled\n     *\n     * @custom:modifiers \n     *  - onlyAgreement\n     */\n    function settleBalance(\n        address account,\n        int256 delta\n    )\n        external;\n\n    /**\n     * @dev Make liquidation payouts (v2)\n     * @param id Agreement ID\n     * @param liquidationTypeData Data regarding the version of the liquidation schema and the type\n     * @param liquidatorAccount Address of the executor of the liquidation\n     * @param useDefaultRewardAccount Whether or not the default reward account receives the rewardAmount\n     * @param targetAccount Account to be liquidated\n     * @param rewardAmount The amount the rewarded account will receive\n     * @param targetAccountBalanceDelta The delta amount the target account balance should change by\n     *\n     * @custom:note \n     * - If a bailout is required (bailoutAmount > 0)\n     *   - the actual reward (single deposit) goes to the executor,\n     *   - while the reward account becomes the bailout account\n     *   - total bailout include: bailout amount + reward amount\n     *   - the targetAccount will be bailed out\n     * - If a bailout is not required\n     *   - the targetAccount will pay the rewardAmount\n     *   - the liquidator (reward account in PIC period) will receive the rewardAmount\n     *\n     * @custom:modifiers \n     *  - onlyAgreement\n     */\n    function makeLiquidationPayoutsV2\n    (\n        bytes32 id,\n        bytes memory liquidationTypeData,\n        address liquidatorAccount,\n        bool useDefaultRewardAccount,\n        address targetAccount,\n        uint256 rewardAmount,\n        int256 targetAccountBalanceDelta\n    ) external;\n    /**\n     * @dev Agreement liquidation event v2 (including agent account)\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param liquidatorAccount Address of the executor of the liquidation\n     * @param targetAccount Account of the stream sender\n     * @param rewardAmountReceiver Account that collects the reward or bails out insolvent accounts\n     * @param rewardAmount The amount the reward recipient account balance should change by\n     * @param targetAccountBalanceDelta The amount the sender account balance should change by\n     * @param liquidationTypeData The encoded liquidation type data including the version (how to decode)\n     *\n     * @custom:note \n     * Reward account rule:\n     * - if the agreement is liquidated during the PIC period\n     *   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount\n     *   - the targetAccount will pay for the rewardAmount\n     * - if the agreement is liquidated after the PIC period AND the targetAccount is solvent\n     *   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)\n     *   - the targetAccount will pay for the rewardAmount\n     * - if the targetAccount is insolvent\n     *   - the liquidatorAccount will get the rewardAmount (single deposit)\n     *   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount\n     *   - the targetAccount will receive the bailoutAmount\n     */\n    event AgreementLiquidatedV2(\n        address indexed agreementClass,\n        bytes32 id,\n        address indexed liquidatorAccount,\n        address indexed targetAccount,\n        address rewardAmountReceiver,\n        uint256 rewardAmount,\n        int256 targetAccountBalanceDelta,\n        bytes liquidationTypeData\n    );\n\n    /**************************************************************************\n     * Function modifiers for access control and parameter validations\n     *\n     * While they cannot be explicitly stated in function definitions, they are\n     * listed in function definition comments instead for clarity.\n     *\n     * NOTE: solidity-coverage not supporting it\n     *************************************************************************/\n\n     /// @dev The msg.sender must be host contract\n     //modifier onlyHost() virtual;\n\n    /// @dev The msg.sender must be a listed agreement.\n    //modifier onlyAgreement() virtual;\n\n    /**************************************************************************\n     * DEPRECATED\n     *************************************************************************/\n\n    /**\n     * @dev Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param penaltyAccount Account of the agreement to be penalized\n     * @param rewardAccount Account that collect the reward\n     * @param rewardAmount Amount of liquidation reward\n     *\n     * @custom:deprecated Use AgreementLiquidatedV2 instead\n     */\n    event AgreementLiquidated(\n        address indexed agreementClass,\n        bytes32 id,\n        address indexed penaltyAccount,\n        address indexed rewardAccount,\n        uint256 rewardAmount\n    );\n\n    /**\n     * @dev System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\n     * @param bailoutAccount Account that bailout the penalty account\n     * @param bailoutAmount Amount of account bailout\n     *\n     * @custom:deprecated Use AgreementLiquidatedV2 instead\n     */\n    event Bailout(\n        address indexed bailoutAccount,\n        uint256 bailoutAmount\n    );\n\n    /**\n     * @dev Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\n     * @param liquidatorAccount Account of the agent that performed the liquidation.\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param penaltyAccount Account of the agreement to be penalized\n     * @param bondAccount Account that collect the reward or bailout accounts\n     * @param rewardAmount Amount of liquidation reward\n     * @param bailoutAmount Amount of liquidation bailouot\n     *\n     * @custom:deprecated Use AgreementLiquidatedV2 instead\n     *\n     * @custom:note \n     * Reward account rule:\n     * - if bailout is equal to 0, then\n     *   - the bondAccount will get the rewardAmount,\n     *   - the penaltyAccount will pay for the rewardAmount.\n     * - if bailout is larger than 0, then\n     *   - the liquidatorAccount will get the rewardAmouont,\n     *   - the bondAccount will pay for both the rewardAmount and bailoutAmount,\n     *   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.\n     */\n    event AgreementLiquidatedBy(\n        address liquidatorAccount,\n        address indexed agreementClass,\n        bytes32 id,\n        address indexed penaltyAccount,\n        address indexed bondAccount,\n        uint256 rewardAmount,\n        uint256 bailoutAmount\n    );\n}\n"
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.8.4;\n\nimport { ISuperfluidGovernance } from \"./ISuperfluidGovernance.sol\";\nimport { ISuperfluidToken } from \"./ISuperfluidToken.sol\";\nimport { ISuperToken } from \"./ISuperToken.sol\";\nimport { ISuperTokenFactory } from \"./ISuperTokenFactory.sol\";\nimport { ISuperAgreement } from \"./ISuperAgreement.sol\";\nimport { ISuperApp } from \"./ISuperApp.sol\";\nimport {\n    BatchOperation,\n    ContextDefinitions,\n    FlowOperatorDefinitions,\n    SuperAppDefinitions,\n    SuperfluidGovernanceConfigs\n} from \"./Definitions.sol\";\nimport { TokenInfo } from \"../tokens/TokenInfo.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { IERC777 } from \"@openzeppelin/contracts/token/ERC777/IERC777.sol\";\n\n/**\n * @title Host interface\n * @author Superfluid\n * @notice This is the central contract of the system where super agreement, super app\n * and super token features are connected.\n *\n * The Superfluid host contract is also the entry point for the protocol users,\n * where batch call and meta transaction are provided for UX improvements.\n *\n */\ninterface ISuperfluid {\n\n    /**************************************************************************\n     * Errors\n     *************************************************************************/\n    // Superfluid Custom Errors\n    error HOST_AGREEMENT_CALLBACK_IS_NOT_ACTION();              // 0xef4295f6\n    error HOST_CANNOT_DOWNGRADE_TO_NON_UPGRADEABLE();           // 0x474e7641\n    error HOST_CALL_AGREEMENT_WITH_CTX_FROM_WRONG_ADDRESS();    // 0x0cd0ebc2\n    error HOST_CALL_APP_ACTION_WITH_CTX_FROM_WRONG_ADDRESS();   // 0x473f7bd4\n    error HOST_INVALID_CONFIG_WORD();                           // 0xf4c802a4\n    error HOST_MAX_256_AGREEMENTS();                            // 0x7c281a78\n    error HOST_NON_UPGRADEABLE();                               // 0x14f72c9f\n    error HOST_NON_ZERO_LENGTH_PLACEHOLDER_CTX();               // 0x67e9985b\n    error HOST_ONLY_GOVERNANCE();                               // 0xc5d22a4e\n    error HOST_UNKNOWN_BATCH_CALL_OPERATION_TYPE();             // 0xb4770115\n    error HOST_AGREEMENT_ALREADY_REGISTERED();                  // 0xdc9ddba8\n    error HOST_AGREEMENT_IS_NOT_REGISTERED();                   // 0x1c9e9bea\n    error HOST_MUST_BE_CONTRACT();                              // 0xd4f6b30c\n    error HOST_ONLY_LISTED_AGREEMENT();                         // 0x619c5359\n\n    // App Related Custom Errors\n    // uses SuperAppDefinitions' App Jail Reasons as _code\n    error APP_RULE(uint256 _code);                              // 0xa85ba64f\n\n    error HOST_INVALID_OR_EXPIRED_SUPER_APP_REGISTRATION_KEY(); // 0x19ab84d1\n    error HOST_NOT_A_SUPER_APP();                               // 0x163cbe43\n    error HOST_NO_APP_REGISTRATION_PERMISSIONS();               // 0x5b93ebf0\n    error HOST_RECEIVER_IS_NOT_SUPER_APP();                     // 0x96aa315e\n    error HOST_SENDER_IS_NOT_SUPER_APP();                       // 0xbacfdc40\n    error HOST_SOURCE_APP_NEEDS_HIGHER_APP_LEVEL();             // 0x44725270\n    error HOST_SUPER_APP_IS_JAILED();                           // 0x02384b64\n    error HOST_SUPER_APP_ALREADY_REGISTERED();                  // 0x01b0a935\n    error HOST_UNAUTHORIZED_SUPER_APP_FACTORY();                // 0x289533c5\n\n    /**************************************************************************\n     * Time\n     *\n     * > The Oracle: You have the sight now, Neo. You are looking at the world without time.\n     * > Neo: Then why can't I see what happens to her?\n     * > The Oracle: We can never see past the choices we don't understand.\n     * >       - The Oracle and Neo conversing about the future of Trinity and the effects of Neo's choices\n     *************************************************************************/\n\n    function getNow() external view returns (uint256);\n\n    /**************************************************************************\n     * Governance\n     *************************************************************************/\n\n    /**\n     * @dev Get the current governance address of the Superfluid host\n     */\n    function getGovernance() external view returns(ISuperfluidGovernance governance);\n\n    /**\n     * @dev Replace the current governance with a new one\n     */\n    function replaceGovernance(ISuperfluidGovernance newGov) external;\n    /**\n     * @dev Governance replaced event\n     * @param oldGov Address of the old governance contract\n     * @param newGov Address of the new governance contract\n     */\n    event GovernanceReplaced(ISuperfluidGovernance oldGov, ISuperfluidGovernance newGov);\n\n    /**************************************************************************\n     * Agreement Whitelisting\n     *************************************************************************/\n\n    /**\n     * @dev Register a new agreement class to the system\n     * @param agreementClassLogic Initial agreement class code\n     *\n     * @custom:modifiers \n     * - onlyGovernance\n     */\n    function registerAgreementClass(ISuperAgreement agreementClassLogic) external;\n    /**\n     * @notice Agreement class registered event\n     * @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"\n     * @param agreementType The agreement type registered\n     * @param code Address of the new agreement\n     */\n    event AgreementClassRegistered(bytes32 agreementType, address code);\n\n    /**\n    * @dev Update code of an agreement class\n    * @param agreementClassLogic New code for the agreement class\n    *\n    * @custom:modifiers \n    *  - onlyGovernance\n    */\n    function updateAgreementClass(ISuperAgreement agreementClassLogic) external;\n    /**\n     * @notice Agreement class updated event\n     * @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"\n     * @param agreementType The agreement type updated\n     * @param code Address of the new agreement\n     */\n    event AgreementClassUpdated(bytes32 agreementType, address code);\n\n    /**\n    * @notice Check if the agreement type is whitelisted\n    * @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"\n    */\n    function isAgreementTypeListed(bytes32 agreementType) external view returns(bool yes);\n\n    /**\n    * @dev Check if the agreement class is whitelisted\n    */\n    function isAgreementClassListed(ISuperAgreement agreementClass) external view returns(bool yes);\n\n    /**\n    * @notice Get agreement class\n    * @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"\n    */\n    function getAgreementClass(bytes32 agreementType) external view returns(ISuperAgreement agreementClass);\n\n    /**\n    * @dev Map list of the agreement classes using a bitmap\n    * @param bitmap Agreement class bitmap\n    */\n    function mapAgreementClasses(uint256 bitmap)\n        external view\n        returns (ISuperAgreement[] memory agreementClasses);\n\n    /**\n    * @notice Create a new bitmask by adding a agreement class to it\n    * @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"\n    * @param bitmap Agreement class bitmap\n    */\n    function addToAgreementClassesBitmap(uint256 bitmap, bytes32 agreementType)\n        external view\n        returns (uint256 newBitmap);\n\n    /**\n    * @notice Create a new bitmask by removing a agreement class from it\n    * @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"\n    * @param bitmap Agreement class bitmap\n    */\n    function removeFromAgreementClassesBitmap(uint256 bitmap, bytes32 agreementType)\n        external view\n        returns (uint256 newBitmap);\n\n    /**************************************************************************\n    * Super Token Factory\n    **************************************************************************/\n\n    /**\n     * @dev Get the super token factory\n     * @return factory The factory\n     */\n    function getSuperTokenFactory() external view returns (ISuperTokenFactory factory);\n\n    /**\n     * @dev Get the super token factory logic (applicable to upgradable deployment)\n     * @return logic The factory logic\n     */\n    function getSuperTokenFactoryLogic() external view returns (address logic);\n\n    /**\n     * @dev Update super token factory\n     * @param newFactory New factory logic\n     */\n    function updateSuperTokenFactory(ISuperTokenFactory newFactory) external;\n    /**\n     * @dev SuperToken factory updated event\n     * @param newFactory Address of the new factory\n     */\n    event SuperTokenFactoryUpdated(ISuperTokenFactory newFactory);\n\n    /**\n     * @notice Update the super token logic to the latest\n     * @dev Refer to ISuperTokenFactory.Upgradability for expected behaviours\n     */\n    function updateSuperTokenLogic(ISuperToken token) external;\n    /**\n     * @dev SuperToken logic updated event\n     * @param code Address of the new SuperToken logic\n     */\n    event SuperTokenLogicUpdated(ISuperToken indexed token, address code);\n\n    /**************************************************************************\n     * App Registry\n     *************************************************************************/\n\n    /**\n     * @dev Message sender (must be a contract) declares itself as a super app.\n     * @custom:deprecated you should use `registerAppWithKey` or `registerAppByFactory` instead,\n     * because app registration is currently governance permissioned on mainnets.\n     * @param configWord The super app manifest configuration, flags are defined in\n     * `SuperAppDefinitions`\n     */\n    function registerApp(uint256 configWord) external;\n    /**\n     * @dev App registered event\n     * @param app Address of jailed app\n     */\n    event AppRegistered(ISuperApp indexed app);\n\n    /**\n     * @dev Message sender declares itself as a super app.\n     * @param configWord The super app manifest configuration, flags are defined in `SuperAppDefinitions`\n     * @param registrationKey The registration key issued by the governance, needed to register on a mainnet.\n     * @notice See https://github.com/superfluid-finance/protocol-monorepo/wiki/Super-App-White-listing-Guide\n     * On testnets or in dev environment, a placeholder (e.g. empty string) can be used.\n     * While the message sender must be the super app itself, the transaction sender (tx.origin)\n     * must be the deployer account the registration key was issued for.\n     */\n    function registerAppWithKey(uint256 configWord, string calldata registrationKey) external;\n\n    /**\n     * @dev Message sender (must be a contract) declares app as a super app\n     * @param configWord The super app manifest configuration, flags are defined in `SuperAppDefinitions`\n     * @notice On mainnet deployments, only factory contracts pre-authorized by governance can use this.\n     * See https://github.com/superfluid-finance/protocol-monorepo/wiki/Super-App-White-listing-Guide\n     */\n    function registerAppByFactory(ISuperApp app, uint256 configWord) external;\n\n    /**\n     * @dev Query if the app is registered\n     * @param app Super app address\n     */\n    function isApp(ISuperApp app) external view returns(bool);\n\n    /**\n     * @dev Query app callbacklevel\n     * @param app Super app address\n     */\n    function getAppCallbackLevel(ISuperApp app) external view returns(uint8 appCallbackLevel);\n\n    /**\n     * @dev Get the manifest of the super app\n     * @param app Super app address\n     */\n    function getAppManifest(\n        ISuperApp app\n    )\n        external view\n        returns (\n            bool isSuperApp,\n            bool isJailed,\n            uint256 noopMask\n        );\n\n    /**\n     * @dev Query if the app has been jailed\n     * @param app Super app address\n     */\n    function isAppJailed(ISuperApp app) external view returns (bool isJail);\n\n    /**\n     * @dev Whitelist the target app for app composition for the source app (msg.sender)\n     * @param targetApp The target super app address\n     */\n    function allowCompositeApp(ISuperApp targetApp) external;\n\n    /**\n     * @dev Query if source app is allowed to call the target app as downstream app\n     * @param app Super app address\n     * @param targetApp The target super app address\n     */\n    function isCompositeAppAllowed(\n        ISuperApp app,\n        ISuperApp targetApp\n    )\n        external view\n        returns (bool isAppAllowed);\n\n    /**************************************************************************\n     * Agreement Framework\n     *\n     * Agreements use these function to trigger super app callbacks, updates\n     * app credit and charge gas fees.\n     *\n     * These functions can only be called by registered agreements.\n     *************************************************************************/\n\n    /**\n     * @dev (For agreements) StaticCall the app before callback\n     * @param  app               The super app.\n     * @param  callData          The call data sending to the super app.\n     * @param  isTermination     Is it a termination callback?\n     * @param  ctx               Current ctx, it will be validated.\n     * @return cbdata            Data returned from the callback.\n     */\n    function callAppBeforeCallback(\n        ISuperApp app,\n        bytes calldata callData,\n        bool isTermination,\n        bytes calldata ctx\n    )\n        external\n        // onlyAgreement\n        // assertValidCtx(ctx)\n        returns(bytes memory cbdata);\n\n    /**\n     * @dev (For agreements) Call the app after callback\n     * @param  app               The super app.\n     * @param  callData          The call data sending to the super app.\n     * @param  isTermination     Is it a termination callback?\n     * @param  ctx               Current ctx, it will be validated.\n     * @return newCtx            The current context of the transaction.\n     */\n    function callAppAfterCallback(\n        ISuperApp app,\n        bytes calldata callData,\n        bool isTermination,\n        bytes calldata ctx\n    )\n        external\n        // onlyAgreement\n        // assertValidCtx(ctx)\n        returns(bytes memory newCtx);\n\n    /**\n     * @dev (For agreements) Create a new callback stack\n     * @param  ctx                     The current ctx, it will be validated.\n     * @param  app                     The super app.\n     * @param  appCreditGranted        App credit granted so far.\n     * @param  appCreditUsed           App credit used so far.\n     * @return newCtx                  The current context of the transaction.\n     */\n    function appCallbackPush(\n        bytes calldata ctx,\n        ISuperApp app,\n        uint256 appCreditGranted,\n        int256 appCreditUsed,\n        ISuperfluidToken appCreditToken\n    )\n        external\n        // onlyAgreement\n        // assertValidCtx(ctx)\n        returns (bytes memory newCtx);\n\n    /**\n     * @dev (For agreements) Pop from the current app callback stack\n     * @param  ctx                     The ctx that was pushed before the callback stack.\n     * @param  appCreditUsedDelta      App credit used by the app.\n     * @return newCtx                  The current context of the transaction.\n     *\n     * @custom:security\n     * - Here we cannot do assertValidCtx(ctx), since we do not really save the stack in memory.\n     * - Hence there is still implicit trust that the agreement handles the callback push/pop pair correctly.\n     */\n    function appCallbackPop(\n        bytes calldata ctx,\n        int256 appCreditUsedDelta\n    )\n        external\n        // onlyAgreement\n        returns (bytes memory newCtx);\n\n    /**\n     * @dev (For agreements) Use app credit.\n     * @param  ctx                      The current ctx, it will be validated.\n     * @param  appCreditUsedMore        See app credit for more details.\n     * @return newCtx                   The current context of the transaction.\n     */\n    function ctxUseCredit(\n        bytes calldata ctx,\n        int256 appCreditUsedMore\n    )\n        external\n        // onlyAgreement\n        // assertValidCtx(ctx)\n        returns (bytes memory newCtx);\n\n    /**\n     * @dev (For agreements) Jail the app.\n     * @param  app                     The super app.\n     * @param  reason                  Jail reason code.\n     * @return newCtx                  The current context of the transaction.\n     */\n    function jailApp(\n        bytes calldata ctx,\n        ISuperApp app,\n        uint256 reason\n    )\n        external\n        // onlyAgreement\n        // assertValidCtx(ctx)\n        returns (bytes memory newCtx);\n\n    /**\n     * @dev Jail event for the app\n     * @param app Address of jailed app\n     * @param reason Reason the app is jailed (see Definitions.sol for the full list)\n     */\n    event Jail(ISuperApp indexed app, uint256 reason);\n\n    /**************************************************************************\n     * Contextless Call Proxies\n     *\n     * NOTE: For EOAs or non-app contracts, they are the entry points for interacting\n     * with agreements or apps.\n     *\n     * NOTE: The contextual call data should be generated using\n     * abi.encodeWithSelector. The context parameter should be set to \"0x\",\n     * an empty bytes array as a placeholder to be replaced by the host\n     * contract.\n     *************************************************************************/\n\n     /**\n      * @dev Call agreement function\n      * @param agreementClass The agreement address you are calling\n      * @param callData The contextual call data with placeholder ctx\n      * @param userData Extra user data being sent to the super app callbacks\n      */\n     function callAgreement(\n         ISuperAgreement agreementClass,\n         bytes calldata callData,\n         bytes calldata userData\n     )\n        external\n        //cleanCtx\n        //isAgreement(agreementClass)\n        returns(bytes memory returnedData);\n\n    /**\n     * @notice Call app action\n     * @dev Main use case is calling app action in a batch call via the host\n     * @param callData The contextual call data\n     *\n     * @custom:note See \"Contextless Call Proxies\" above for more about contextual call data.\n     */\n    function callAppAction(\n        ISuperApp app,\n        bytes calldata callData\n    )\n        external\n        //cleanCtx\n        //isAppActive(app)\n        //isValidAppAction(callData)\n        returns(bytes memory returnedData);\n\n    /**************************************************************************\n     * Contextual Call Proxies and Context Utilities\n     *\n     * For apps, they must use context they receive to interact with\n     * agreements or apps.\n     *\n     * The context changes must be saved and returned by the apps in their\n     * callbacks always, any modification to the context will be detected and\n     * the violating app will be jailed.\n     *************************************************************************/\n\n    /**\n     * @dev Context Struct\n     *\n     * @custom:note on backward compatibility:\n     * - Non-dynamic fields are padded to 32bytes and packed\n     * - Dynamic fields are referenced through a 32bytes offset to their \"parents\" field (or root)\n     * - The order of the fields hence should not be rearranged in order to be backward compatible:\n     *    - non-dynamic fields will be parsed at the same memory location,\n     *    - and dynamic fields will simply have a greater offset than it was.\n     * - We cannot change the structure of the Context struct because of ABI compatibility requirements\n     */\n    struct Context {\n        //\n        // Call context\n        //\n        // app callback level\n        uint8 appCallbackLevel;\n        // type of call\n        uint8 callType;\n        // the system timestamp\n        uint256 timestamp;\n        // The intended message sender for the call\n        address msgSender;\n\n        //\n        // Callback context\n        //\n        // For callbacks it is used to know which agreement function selector is called\n        bytes4 agreementSelector;\n        // User provided data for app callbacks\n        bytes userData;\n\n        //\n        // App context\n        //\n        // app credit granted\n        uint256 appCreditGranted;\n        // app credit wanted by the app callback\n        uint256 appCreditWantedDeprecated;\n        // app credit used, allowing negative values over a callback session\n        // the appCreditUsed value over a callback sessions is calculated with:\n        // existing flow data owed deposit + sum of the callback agreements\n        // deposit deltas \n        // the final value used to modify the state is determined by the\n        // _adjustNewAppCreditUsed function (in AgreementLibrary.sol) which takes \n        // the appCreditUsed value reached in the callback session and the app\n        // credit granted\n        int256 appCreditUsed;\n        // app address\n        address appAddress;\n        // app credit in super token\n        ISuperfluidToken appCreditToken;\n    }\n\n    function callAgreementWithContext(\n        ISuperAgreement agreementClass,\n        bytes calldata callData,\n        bytes calldata userData,\n        bytes calldata ctx\n    )\n        external\n        // requireValidCtx(ctx)\n        // onlyAgreement(agreementClass)\n        returns (bytes memory newCtx, bytes memory returnedData);\n\n    function callAppActionWithContext(\n        ISuperApp app,\n        bytes calldata callData,\n        bytes calldata ctx\n    )\n        external\n        // requireValidCtx(ctx)\n        // isAppActive(app)\n        returns (bytes memory newCtx);\n\n    function decodeCtx(bytes memory ctx)\n        external pure\n        returns (Context memory context);\n\n    function isCtxValid(bytes calldata ctx) external view returns (bool);\n\n    /**************************************************************************\n    * Batch call\n    **************************************************************************/\n    /**\n     * @dev Batch operation data\n     */\n    struct Operation {\n        // Operation type. Defined in BatchOperation (Definitions.sol)\n        uint32 operationType;\n        // Operation target\n        address target;\n        // Data specific to the operation\n        bytes data;\n    }\n\n    /**\n     * @dev Batch call function\n     * @param operations Array of batch operations\n     */\n    function batchCall(Operation[] calldata operations) external;\n\n    /**\n     * @dev Batch call function for trusted forwarders (EIP-2771)\n     * @param operations Array of batch operations\n     */\n    function forwardBatchCall(Operation[] calldata operations) external;\n\n    /**************************************************************************\n     * Function modifiers for access control and parameter validations\n     *\n     * While they cannot be explicitly stated in function definitions, they are\n     * listed in function definition comments instead for clarity.\n     *\n     * TODO: turning these off because solidity-coverage doesn't like it\n     *************************************************************************/\n\n     /* /// @dev The current superfluid context is clean.\n     modifier cleanCtx() virtual;\n\n     /// @dev Require the ctx being valid.\n     modifier requireValidCtx(bytes memory ctx) virtual;\n\n     /// @dev Assert the ctx being valid.\n     modifier assertValidCtx(bytes memory ctx) virtual;\n\n     /// @dev The agreement is a listed agreement.\n     modifier isAgreement(ISuperAgreement agreementClass) virtual;\n\n     // onlyGovernance\n\n     /// @dev The msg.sender must be a listed agreement.\n     modifier onlyAgreement() virtual;\n\n     /// @dev The app is registered and not jailed.\n     modifier isAppActive(ISuperApp app) virtual; */\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.8.4;\n\nimport { ISuperfluidToken } from \"./ISuperfluidToken.sol\";\n\n/**\n * @title Super agreement interface\n * @author Superfluid\n */\ninterface ISuperAgreement {\n\n    /**\n     * @dev Get the type of the agreement class\n     */\n    function agreementType() external view returns (bytes32);\n\n    /**\n     * @dev Calculate the real-time balance for the account of this agreement class\n     * @param account Account the state belongs to\n     * @param time Time used for the calculation\n     * @return dynamicBalance Dynamic balance portion of real-time balance of this agreement\n     * @return deposit Account deposit amount of this agreement\n     * @return owedDeposit Account owed deposit amount of this agreement\n     */\n    function realtimeBalanceOf(\n        ISuperfluidToken token,\n        address account,\n        uint256 time\n    )\n        external\n        view\n        returns (\n            int256 dynamicBalance,\n            uint256 deposit,\n            uint256 owedDeposit\n        );\n\n}\n"
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.8.4;\n\n/**\n * @title Super app definitions library\n * @author Superfluid\n */\nlibrary SuperAppDefinitions {\n\n    /**************************************************************************\n    / App manifest config word\n    /**************************************************************************/\n\n    /*\n     * App level is a way to allow the app to whitelist what other app it can\n     * interact with (aka. composite app feature).\n     *\n     * For more details, refer to the technical paper of superfluid protocol.\n     */\n    uint256 constant internal APP_LEVEL_MASK = 0xFF;\n\n    // The app is at the final level, hence it doesn't want to interact with any other app\n    uint256 constant internal APP_LEVEL_FINAL = 1 << 0;\n\n    // The app is at the second level, it may interact with other final level apps if whitelisted\n    uint256 constant internal APP_LEVEL_SECOND = 1 << 1;\n\n    function getAppCallbackLevel(uint256 configWord) internal pure returns (uint8) {\n        return uint8(configWord & APP_LEVEL_MASK);\n    }\n\n    uint256 constant internal APP_JAIL_BIT = 1 << 15;\n    function isAppJailed(uint256 configWord) internal pure returns (bool) {\n        return (configWord & SuperAppDefinitions.APP_JAIL_BIT) > 0;\n    }\n\n    /**************************************************************************\n    / Callback implementation bit masks\n    /**************************************************************************/\n    uint256 constant internal AGREEMENT_CALLBACK_NOOP_BITMASKS = 0xFF << 32;\n    uint256 constant internal BEFORE_AGREEMENT_CREATED_NOOP = 1 << (32 + 0);\n    uint256 constant internal AFTER_AGREEMENT_CREATED_NOOP = 1 << (32 + 1);\n    uint256 constant internal BEFORE_AGREEMENT_UPDATED_NOOP = 1 << (32 + 2);\n    uint256 constant internal AFTER_AGREEMENT_UPDATED_NOOP = 1 << (32 + 3);\n    uint256 constant internal BEFORE_AGREEMENT_TERMINATED_NOOP = 1 << (32 + 4);\n    uint256 constant internal AFTER_AGREEMENT_TERMINATED_NOOP = 1 << (32 + 5);\n\n    /**************************************************************************\n    / App Jail Reasons\n    /**************************************************************************/\n\n    uint256 constant internal APP_RULE_REGISTRATION_ONLY_IN_CONSTRUCTOR = 1;\n    uint256 constant internal APP_RULE_NO_REGISTRATION_FOR_EOA = 2;\n    uint256 constant internal APP_RULE_NO_REVERT_ON_TERMINATION_CALLBACK = 10;\n    uint256 constant internal APP_RULE_NO_CRITICAL_SENDER_ACCOUNT = 11;\n    uint256 constant internal APP_RULE_NO_CRITICAL_RECEIVER_ACCOUNT = 12;\n    uint256 constant internal APP_RULE_CTX_IS_READONLY = 20;\n    uint256 constant internal APP_RULE_CTX_IS_NOT_CLEAN = 21;\n    uint256 constant internal APP_RULE_CTX_IS_MALFORMATED = 22;\n    uint256 constant internal APP_RULE_COMPOSITE_APP_IS_NOT_WHITELISTED = 30;\n    uint256 constant internal APP_RULE_COMPOSITE_APP_IS_JAILED = 31;\n    uint256 constant internal APP_RULE_MAX_APP_LEVEL_REACHED = 40;\n\n    // Validate configWord cleaness for future compatibility, or else may introduce undefined future behavior\n    function isConfigWordClean(uint256 configWord) internal pure returns (bool) {\n        return (configWord & ~(APP_LEVEL_MASK | APP_JAIL_BIT | AGREEMENT_CALLBACK_NOOP_BITMASKS)) == uint256(0);\n    }\n}\n\n/**\n * @title Context definitions library\n * @author Superfluid\n */\nlibrary ContextDefinitions {\n\n    /**************************************************************************\n    / Call info\n    /**************************************************************************/\n\n    // app level\n    uint256 constant internal CALL_INFO_APP_LEVEL_MASK = 0xFF;\n\n    // call type\n    uint256 constant internal CALL_INFO_CALL_TYPE_SHIFT = 32;\n    uint256 constant internal CALL_INFO_CALL_TYPE_MASK = 0xF << CALL_INFO_CALL_TYPE_SHIFT;\n    uint8 constant internal CALL_INFO_CALL_TYPE_AGREEMENT = 1;\n    uint8 constant internal CALL_INFO_CALL_TYPE_APP_ACTION = 2;\n    uint8 constant internal CALL_INFO_CALL_TYPE_APP_CALLBACK = 3;\n\n    function decodeCallInfo(uint256 callInfo)\n        internal pure\n        returns (uint8 appCallbackLevel, uint8 callType)\n    {\n        appCallbackLevel = uint8(callInfo & CALL_INFO_APP_LEVEL_MASK);\n        callType = uint8((callInfo & CALL_INFO_CALL_TYPE_MASK) >> CALL_INFO_CALL_TYPE_SHIFT);\n    }\n\n    function encodeCallInfo(uint8 appCallbackLevel, uint8 callType)\n        internal pure\n        returns (uint256 callInfo)\n    {\n        return uint256(appCallbackLevel) | (uint256(callType) << CALL_INFO_CALL_TYPE_SHIFT);\n    }\n\n}\n\n/**\n * @title Flow Operator definitions library\n  * @author Superfluid\n */\n library FlowOperatorDefinitions {\n    uint8 constant internal AUTHORIZE_FLOW_OPERATOR_CREATE = uint8(1) << 0;\n    uint8 constant internal AUTHORIZE_FLOW_OPERATOR_UPDATE = uint8(1) << 1;\n    uint8 constant internal AUTHORIZE_FLOW_OPERATOR_DELETE = uint8(1) << 2;\n    uint8 constant internal AUTHORIZE_FULL_CONTROL =\n        AUTHORIZE_FLOW_OPERATOR_CREATE | AUTHORIZE_FLOW_OPERATOR_UPDATE | AUTHORIZE_FLOW_OPERATOR_DELETE;\n    uint8 constant internal REVOKE_FLOW_OPERATOR_CREATE = ~(uint8(1) << 0);\n    uint8 constant internal REVOKE_FLOW_OPERATOR_UPDATE = ~(uint8(1) << 1);\n    uint8 constant internal REVOKE_FLOW_OPERATOR_DELETE = ~(uint8(1) << 2);\n\n    function isPermissionsClean(uint8 permissions) internal pure returns (bool) {\n        return (\n            permissions & ~(AUTHORIZE_FLOW_OPERATOR_CREATE\n                | AUTHORIZE_FLOW_OPERATOR_UPDATE\n                | AUTHORIZE_FLOW_OPERATOR_DELETE)\n            ) == uint8(0);\n    }\n }\n\n/**\n * @title Batch operation library\n * @author Superfluid\n */\nlibrary BatchOperation {\n    /**\n     * @dev ERC20.approve batch operation type\n     *\n     * Call spec:\n     * ISuperToken(target).operationApprove(\n     *     abi.decode(data, (address spender, uint256 amount))\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_ERC20_APPROVE = 1;\n    /**\n     * @dev ERC20.transferFrom batch operation type\n     *\n     * Call spec:\n     * ISuperToken(target).operationTransferFrom(\n     *     abi.decode(data, (address sender, address recipient, uint256 amount)\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_ERC20_TRANSFER_FROM = 2;\n    /**\n     * @dev SuperToken.upgrade batch operation type\n     *\n     * Call spec:\n     * ISuperToken(target).operationUpgrade(\n     *     abi.decode(data, (uint256 amount)\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_SUPERTOKEN_UPGRADE = 1 + 100;\n    /**\n     * @dev SuperToken.downgrade batch operation type\n     *\n     * Call spec:\n     * ISuperToken(target).operationDowngrade(\n     *     abi.decode(data, (uint256 amount)\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_SUPERTOKEN_DOWNGRADE = 2 + 100;\n    /**\n     * @dev Superfluid.callAgreement batch operation type\n     *\n     * Call spec:\n     * callAgreement(\n     *     ISuperAgreement(target)),\n     *     abi.decode(data, (bytes calldata, bytes userdata)\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_SUPERFLUID_CALL_AGREEMENT = 1 + 200;\n    /**\n     * @dev Superfluid.callAppAction batch operation type\n     *\n     * Call spec:\n     * callAppAction(\n     *     ISuperApp(target)),\n     *     data\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_SUPERFLUID_CALL_APP_ACTION = 2 + 200;\n}\n\n/**\n * @title Superfluid governance configs library\n * @author Superfluid\n */\nlibrary SuperfluidGovernanceConfigs {\n\n    bytes32 constant internal SUPERFLUID_REWARD_ADDRESS_CONFIG_KEY =\n        keccak256(\"org.superfluid-finance.superfluid.rewardAddress\");\n    bytes32 constant internal CFAV1_PPP_CONFIG_KEY =\n        keccak256(\"org.superfluid-finance.agreements.ConstantFlowAgreement.v1.PPPConfiguration\");\n    bytes32 constant internal SUPERTOKEN_MINIMUM_DEPOSIT_KEY =\n        keccak256(\"org.superfluid-finance.superfluid.superTokenMinimumDeposit\");\n\n    function getTrustedForwarderConfigKey(address forwarder) internal pure returns (bytes32) {\n        return keccak256(abi.encode(\n            \"org.superfluid-finance.superfluid.trustedForwarder\",\n            forwarder));\n    }\n\n    function getAppRegistrationConfigKey(address deployer, string memory registrationKey) internal pure returns (bytes32) {\n        return keccak256(abi.encode(\n            \"org.superfluid-finance.superfluid.appWhiteListing.registrationKey\",\n            deployer,\n            registrationKey));\n    }\n\n    function getAppFactoryConfigKey(address factory) internal pure returns (bytes32) {\n        return keccak256(abi.encode(\n            \"org.superfluid-finance.superfluid.appWhiteListing.factory\",\n            factory));\n    }\n\n    function decodePPPConfig(uint256 pppConfig) internal pure returns (uint256 liquidationPeriod, uint256 patricianPeriod) {\n        liquidationPeriod = (pppConfig >> 32) & type(uint32).max;\n        patricianPeriod = pppConfig & type(uint32).max;\n    }\n}\n"
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.8.4;\n\nimport { ISuperToken } from \"./ISuperToken.sol\";\n\n/**\n * @title SuperApp interface\n * @author Superfluid\n * @dev Be aware of the app being jailed, when the word permitted is used.\n */\ninterface ISuperApp {\n\n    /**\n     * @dev Callback before a new agreement is created.\n     * @param superToken The super token used for the agreement.\n     * @param agreementClass The agreement class address.\n     * @param agreementId The agreementId\n     * @param agreementData The agreement data (non-compressed)\n     * @param ctx The context data.\n     * @return cbdata A free format in memory data the app can use to pass\n     *          arbitary information to the after-hook callback.\n     *\n     * @custom:note \n     * - It will be invoked with `staticcall`, no state changes are permitted.\n     * - Only revert with a \"reason\" is permitted.\n     */\n    function beforeAgreementCreated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata ctx\n    )\n        external\n        view\n        returns (bytes memory cbdata);\n\n    /**\n     * @dev Callback after a new agreement is created.\n     * @param superToken The super token used for the agreement.\n     * @param agreementClass The agreement class address.\n     * @param agreementId The agreementId\n     * @param agreementData The agreement data (non-compressed)\n     * @param cbdata The data returned from the before-hook callback.\n     * @param ctx The context data.\n     * @return newCtx The current context of the transaction.\n     *\n     * @custom:note \n     * - State changes is permitted.\n     * - Only revert with a \"reason\" is permitted.\n     */\n    function afterAgreementCreated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata cbdata,\n        bytes calldata ctx\n    )\n        external\n        returns (bytes memory newCtx);\n\n    /**\n     * @dev Callback before a new agreement is updated.\n     * @param superToken The super token used for the agreement.\n     * @param agreementClass The agreement class address.\n     * @param agreementId The agreementId\n     * @param agreementData The agreement data (non-compressed)\n     * @param ctx The context data.\n     * @return cbdata A free format in memory data the app can use to pass\n     *          arbitary information to the after-hook callback.\n     *\n     * @custom:note \n     * - It will be invoked with `staticcall`, no state changes are permitted.\n     * - Only revert with a \"reason\" is permitted.\n     */\n    function beforeAgreementUpdated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata ctx\n    )\n        external\n        view\n        returns (bytes memory cbdata);\n\n\n    /**\n    * @dev Callback after a new agreement is updated.\n    * @param superToken The super token used for the agreement.\n    * @param agreementClass The agreement class address.\n    * @param agreementId The agreementId\n    * @param agreementData The agreement data (non-compressed)\n    * @param cbdata The data returned from the before-hook callback.\n    * @param ctx The context data.\n    * @return newCtx The current context of the transaction.\n    *\n    * @custom:note \n    * - State changes is permitted.\n    * - Only revert with a \"reason\" is permitted.\n    */\n    function afterAgreementUpdated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata cbdata,\n        bytes calldata ctx\n    )\n        external\n        returns (bytes memory newCtx);\n\n    /**\n    * @dev Callback before a new agreement is terminated.\n    * @param superToken The super token used for the agreement.\n    * @param agreementClass The agreement class address.\n    * @param agreementId The agreementId\n    * @param agreementData The agreement data (non-compressed)\n    * @param ctx The context data.\n    * @return cbdata A free format in memory data the app can use to pass arbitary information to the after-hook callback.\n    *\n    * @custom:note \n    * - It will be invoked with `staticcall`, no state changes are permitted.\n    * - Revert is not permitted.\n    */\n    function beforeAgreementTerminated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata ctx\n    )\n        external\n        view\n        returns (bytes memory cbdata);\n\n    /**\n    * @dev Callback after a new agreement is terminated.\n    * @param superToken The super token used for the agreement.\n    * @param agreementClass The agreement class address.\n    * @param agreementId The agreementId\n    * @param agreementData The agreement data (non-compressed)\n    * @param cbdata The data returned from the before-hook callback.\n    * @param ctx The context data.\n    * @return newCtx The current context of the transaction.\n    *\n    * @custom:note \n    * - State changes is permitted.\n    * - Revert is not permitted.\n    */\n    function afterAgreementTerminated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata cbdata,\n        bytes calldata ctx\n    )\n        external\n        returns (bytes memory newCtx);\n}\n"
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.8.4;\n\nimport { ISuperAgreement } from \"./ISuperAgreement.sol\";\nimport { ISuperToken } from \"./ISuperToken.sol\";\nimport { ISuperfluidToken  } from \"./ISuperfluidToken.sol\";\nimport { ISuperfluid } from \"./ISuperfluid.sol\";\n\n\n/**\n * @title Superfluid governance interface\n * @author Superfluid\n */\ninterface ISuperfluidGovernance {\n    \n    /**************************************************************************\n     * Errors\n     *************************************************************************/\n    error SF_GOV_ARRAYS_NOT_SAME_LENGTH();                  // 0x27743aa6\n    error SF_GOV_INVALID_LIQUIDATION_OR_PATRICIAN_PERIOD(); // 0xe171980a\n    error SF_GOV_MUST_BE_CONTRACT();                        // 0x80dddd73\n\n    /**\n     * @dev Replace the current governance with a new governance\n     */\n    function replaceGovernance(\n        ISuperfluid host,\n        address newGov) external;\n\n    /**\n     * @dev Register a new agreement class\n     */\n    function registerAgreementClass(\n        ISuperfluid host,\n        address agreementClass) external;\n\n    /**\n     * @dev Update logics of the contracts\n     *\n     * @custom:note \n     * - Because they might have inter-dependencies, it is good to have one single function to update them all\n     */\n    function updateContracts(\n        ISuperfluid host,\n        address hostNewLogic,\n        address[] calldata agreementClassNewLogics,\n        address superTokenFactoryNewLogic\n    ) external;\n\n    /**\n     * @dev Update supertoken logic contract to the latest that is managed by the super token factory\n     */\n    function batchUpdateSuperTokenLogic(\n        ISuperfluid host,\n        ISuperToken[] calldata tokens) external;\n    \n    /**\n     * @dev Set configuration as address value\n     */\n    function setConfig(\n        ISuperfluid host,\n        ISuperfluidToken superToken,\n        bytes32 key,\n        address value\n    ) external;\n    \n    /**\n     * @dev Set configuration as uint256 value\n     */\n    function setConfig(\n        ISuperfluid host,\n        ISuperfluidToken superToken,\n        bytes32 key,\n        uint256 value\n    ) external;\n\n    /**\n     * @dev Clear configuration\n     */\n    function clearConfig(\n        ISuperfluid host,\n        ISuperfluidToken superToken,\n        bytes32 key\n    ) external;\n\n    /**\n     * @dev Get configuration as address value\n     */\n    function getConfigAsAddress(\n        ISuperfluid host,\n        ISuperfluidToken superToken,\n        bytes32 key) external view returns (address value);\n\n    /**\n     * @dev Get configuration as uint256 value\n     */\n    function getConfigAsUint256(\n        ISuperfluid host,\n        ISuperfluidToken superToken,\n        bytes32 key) external view returns (uint256 value);\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": ["ast"],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC777/IERC777.sol": {
				"IERC777": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "AuthorizedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Burned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "RevokedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Sent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "authorizeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultOperators",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "granularity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "isOperatorFor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorSend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "revokeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "send",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {ERC1820Implementer}.",
						"events": {
							"AuthorizedOperator(address,address)": {
								"details": "Emitted when `operator` is made operator for `tokenHolder`."
							},
							"Burned(address,address,uint256,bytes,bytes)": {
								"details": "Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event."
							},
							"Minted(address,address,uint256,bytes,bytes)": {
								"details": "Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event."
							},
							"RevokedOperator(address,address)": {
								"details": "Emitted when `operator` is revoked its operator status for `tokenHolder`."
							}
						},
						"kind": "dev",
						"methods": {
							"authorizeOperator(address)": {
								"details": "Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by an account (`owner`)."
							},
							"burn(uint256,bytes)": {
								"details": "Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens."
							},
							"defaultOperators()": {
								"details": "Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."
							},
							"granularity()": {
								"details": "Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1."
							},
							"isOperatorFor(address,address)": {
								"details": "Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"operatorBurn(address,uint256,bytes,bytes)": {
								"details": "Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`."
							},
							"operatorSend(address,address,uint256,bytes,bytes)": {
								"details": "Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."
							},
							"revokeOperator(address)": {
								"details": "Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address."
							},
							"send(address,uint256,bytes)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"authorizeOperator(address)": "959b8c3f",
							"balanceOf(address)": "70a08231",
							"burn(uint256,bytes)": "fe9d9303",
							"defaultOperators()": "06e48538",
							"granularity()": "556f0dc7",
							"isOperatorFor(address,address)": "d95b6371",
							"name()": "06fdde03",
							"operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
							"operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
							"revokeOperator(address)": "fad8b32a",
							"send(address,uint256,bytes)": "9bd9bbc6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {ERC1820Implementer}.\",\"events\":{\"AuthorizedOperator(address,address)\":{\"details\":\"Emitted when `operator` is made operator for `tokenHolder`.\"},\"Burned(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"Minted(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"RevokedOperator(address,address)\":{\"details\":\"Emitted when `operator` is revoked its operator status for `tokenHolder`.\"}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address)\":{\"details\":\"Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"granularity()\":{\"details\":\"Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1.\"},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"revokeOperator(address)\":{\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address.\"},\"send(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":\"IERC777\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202be3788305d51dccf412882e015ded65d6890e38d360ee4450d98f27031c296564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202be3788305d51dccf412882e015ded65d6890e38d360ee4450d98f27031c296564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xE3 PUSH25 0x8305D51DCCF412882E015DED65D6890E38D360EE4450D98F27 SUB SHR 0x29 PUSH6 0x64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "188:2065:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202be3788305d51dccf412882e015ded65d6890e38d360ee4450d98f27031c296564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xE3 PUSH25 0x8305D51DCCF412882E015DED65D6890E38D360EE4450D98F27 SUB SHR 0x29 PUSH6 0x64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "188:2065:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202be3788305d51dccf412882e015ded65d6890e38d360ee4450d98f27031c296564736f6c63430008120033",
									".code": [
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC777/IERC777.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
								"contracts/BurnMintSuperToken.sol",
								"contracts/base/SuperTokenBase.sol",
								"contracts/base/SuperTokenStorage.sol",
								"contracts/base/UUPSProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208f63ffdaae21fc026dee9daad1bffb318e7c5b3a3259e486c6500b228f15508f64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f63ffdaae21fc026dee9daad1bffb318e7c5b3a3259e486c6500b228f15508f64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH4 0xFFDAAE21 0xFC MUL PUSH14 0xEE9DAAD1BFFB318E7C5B3A3259E4 DUP7 0xC6 POP SIGNEXTEND 0x22 DUP16 ISZERO POP DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "202:12302:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f63ffdaae21fc026dee9daad1bffb318e7c5b3a3259e486c6500b228f15508f64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH4 0xFFDAAE21 0xFC MUL PUSH14 0xEE9DAAD1BFFB318E7C5B3A3259E4 DUP7 0xC6 POP SIGNEXTEND 0x22 DUP16 ISZERO POP DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "202:12302:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208f63ffdaae21fc026dee9daad1bffb318e7c5b3a3259e486c6500b228f15508f64736f6c63430008120033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC777/IERC777.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
								"contracts/BurnMintSuperToken.sol",
								"contracts/base/SuperTokenBase.sol",
								"contracts/base/SuperTokenStorage.sol",
								"contracts/base/UUPSProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
				"BatchOperation": {
					"abi": [],
					"devdoc": {
						"author": "Superfluid",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"OPERATION_TYPE_ERC20_APPROVE": {
								"details": "ERC20.approve batch operation type Call spec: ISuperToken(target).operationApprove(     abi.decode(data, (address spender, uint256 amount)) )"
							},
							"OPERATION_TYPE_ERC20_TRANSFER_FROM": {
								"details": "ERC20.transferFrom batch operation type Call spec: ISuperToken(target).operationTransferFrom(     abi.decode(data, (address sender, address recipient, uint256 amount) )"
							},
							"OPERATION_TYPE_SUPERFLUID_CALL_AGREEMENT": {
								"details": "Superfluid.callAgreement batch operation type Call spec: callAgreement(     ISuperAgreement(target)),     abi.decode(data, (bytes calldata, bytes userdata) )"
							},
							"OPERATION_TYPE_SUPERFLUID_CALL_APP_ACTION": {
								"details": "Superfluid.callAppAction batch operation type Call spec: callAppAction(     ISuperApp(target)),     data )"
							},
							"OPERATION_TYPE_SUPERTOKEN_DOWNGRADE": {
								"details": "SuperToken.downgrade batch operation type Call spec: ISuperToken(target).operationDowngrade(     abi.decode(data, (uint256 amount) )"
							},
							"OPERATION_TYPE_SUPERTOKEN_UPGRADE": {
								"details": "SuperToken.upgrade batch operation type Call spec: ISuperToken(target).operationUpgrade(     abi.decode(data, (uint256 amount) )"
							}
						},
						"title": "Batch operation library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":5648:7349  library BatchOperation {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":5648:7349  library BatchOperation {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209b776374491000626f2d2208ab4ab1be45b0974b4e61b679ea179d09cb261c1564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209b776374491000626f2d2208ab4ab1be45b0974b4e61b679ea179d09cb261c1564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 PUSH24 0x6374491000626F2D2208AB4AB1BE45B0974B4E61B679EA17 SWAP14 MULMOD 0xCB 0x26 SHR ISZERO PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "5648:1701:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209b776374491000626f2d2208ab4ab1be45b0974b4e61b679ea179d09cb261c1564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 PUSH24 0x6374491000626F2D2208AB4AB1BE45B0974B4E61B679EA17 SWAP14 MULMOD 0xCB 0x26 SHR ISZERO PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "5648:1701:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209b776374491000626f2d2208ab4ab1be45b0974b4e61b679ea179d09cb261c1564736f6c63430008120033",
									".code": [
										{
											"begin": 5648,
											"end": 7349,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 5648,
											"end": 7349,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 5648,
											"end": 7349,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5648,
											"end": 7349,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5648,
											"end": 7349,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5648,
											"end": 7349,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5648,
											"end": 7349,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5648,
											"end": 7349,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5648,
											"end": 7349,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC777/IERC777.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
								"contracts/BurnMintSuperToken.sol",
								"contracts/base/SuperTokenBase.sol",
								"contracts/base/SuperTokenStorage.sol",
								"contracts/base/UUPSProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"OPERATION_TYPE_ERC20_APPROVE\":{\"details\":\"ERC20.approve batch operation type Call spec: ISuperToken(target).operationApprove(     abi.decode(data, (address spender, uint256 amount)) )\"},\"OPERATION_TYPE_ERC20_TRANSFER_FROM\":{\"details\":\"ERC20.transferFrom batch operation type Call spec: ISuperToken(target).operationTransferFrom(     abi.decode(data, (address sender, address recipient, uint256 amount) )\"},\"OPERATION_TYPE_SUPERFLUID_CALL_AGREEMENT\":{\"details\":\"Superfluid.callAgreement batch operation type Call spec: callAgreement(     ISuperAgreement(target)),     abi.decode(data, (bytes calldata, bytes userdata) )\"},\"OPERATION_TYPE_SUPERFLUID_CALL_APP_ACTION\":{\"details\":\"Superfluid.callAppAction batch operation type Call spec: callAppAction(     ISuperApp(target)),     data )\"},\"OPERATION_TYPE_SUPERTOKEN_DOWNGRADE\":{\"details\":\"SuperToken.downgrade batch operation type Call spec: ISuperToken(target).operationDowngrade(     abi.decode(data, (uint256 amount) )\"},\"OPERATION_TYPE_SUPERTOKEN_UPGRADE\":{\"details\":\"SuperToken.upgrade batch operation type Call spec: ISuperToken(target).operationUpgrade(     abi.decode(data, (uint256 amount) )\"}},\"title\":\"Batch operation library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":\"BatchOperation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ContextDefinitions": {
					"abi": [],
					"devdoc": {
						"author": "Superfluid",
						"kind": "dev",
						"methods": {},
						"title": "Context definitions library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":3374:4562  library ContextDefinitions {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":3374:4562  library ContextDefinitions {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208270ef9aadecf33d3d7d152cce676b4433f36a1dfc2063cb0bdbb40e041d332764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208270ef9aadecf33d3d7d152cce676b4433f36a1dfc2063cb0bdbb40e041d332764736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 PUSH17 0xEF9AADECF33D3D7D152CCE676B4433F36A SAR 0xFC KECCAK256 PUSH4 0xCB0BDBB4 0xE DIV SAR CALLER 0x27 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "3374:1188:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208270ef9aadecf33d3d7d152cce676b4433f36a1dfc2063cb0bdbb40e041d332764736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 PUSH17 0xEF9AADECF33D3D7D152CCE676B4433F36A SAR 0xFC KECCAK256 PUSH4 0xCB0BDBB4 0xE DIV SAR CALLER 0x27 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "3374:1188:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"decodeCallInfo(uint256)": "infinite",
								"encodeCallInfo(uint8,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208270ef9aadecf33d3d7d152cce676b4433f36a1dfc2063cb0bdbb40e041d332764736f6c63430008120033",
									".code": [
										{
											"begin": 3374,
											"end": 4562,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 3374,
											"end": 4562,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 3374,
											"end": 4562,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3374,
											"end": 4562,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3374,
											"end": 4562,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 4562,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3374,
											"end": 4562,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 4562,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3374,
											"end": 4562,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC777/IERC777.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
								"contracts/BurnMintSuperToken.sol",
								"contracts/base/SuperTokenBase.sol",
								"contracts/base/SuperTokenStorage.sol",
								"contracts/base/UUPSProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Context definitions library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":\"ContextDefinitions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"FlowOperatorDefinitions": {
					"abi": [],
					"devdoc": {
						"author": "Superfluid",
						"kind": "dev",
						"methods": {},
						"title": "Flow Operator definitions library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":4640:5582  library FlowOperatorDefinitions {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":4640:5582  library FlowOperatorDefinitions {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e28a44be77ca23d77fec30066dc5708e400e9937ae51f51ab2e214f60a1f00f364736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e28a44be77ca23d77fec30066dc5708e400e9937ae51f51ab2e214f60a1f00f364736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 DUP11 PREVRANDAO 0xBE PUSH24 0xCA23D77FEC30066DC5708E400E9937AE51F51AB2E214F60A 0x1F STOP RETURN PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "4640:942:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e28a44be77ca23d77fec30066dc5708e400e9937ae51f51ab2e214f60a1f00f364736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 DUP11 PREVRANDAO 0xBE PUSH24 0xCA23D77FEC30066DC5708E400E9937AE51F51AB2E214F60A 0x1F STOP RETURN PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "4640:942:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"isPermissionsClean(uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e28a44be77ca23d77fec30066dc5708e400e9937ae51f51ab2e214f60a1f00f364736f6c63430008120033",
									".code": [
										{
											"begin": 4640,
											"end": 5582,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 4640,
											"end": 5582,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 4640,
											"end": 5582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4640,
											"end": 5582,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4640,
											"end": 5582,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4640,
											"end": 5582,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4640,
											"end": 5582,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 5582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4640,
											"end": 5582,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC777/IERC777.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
								"contracts/BurnMintSuperToken.sol",
								"contracts/base/SuperTokenBase.sol",
								"contracts/base/SuperTokenStorage.sol",
								"contracts/base/UUPSProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Flow Operator definitions library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":\"FlowOperatorDefinitions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SuperAppDefinitions": {
					"abi": [],
					"devdoc": {
						"author": "Superfluid",
						"kind": "dev",
						"methods": {},
						"title": "Super app definitions library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":132:3304  library SuperAppDefinitions {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":132:3304  library SuperAppDefinitions {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220844747de52a2e0a019316d608b2339d4ad588a581a21362fc17e398c23ea746b64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220844747de52a2e0a019316d608b2339d4ad588a581a21362fc17e398c23ea746b64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 SELFBALANCE SELFBALANCE 0xDE MSTORE LOG2 0xE0 LOG0 NOT BALANCE PUSH14 0x608B2339D4AD588A581A21362FC1 PUSH31 0x398C23EA746B64736F6C634300081200330000000000000000000000000000 ",
							"sourceMap": "132:3172:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220844747de52a2e0a019316d608b2339d4ad588a581a21362fc17e398c23ea746b64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 SELFBALANCE SELFBALANCE 0xDE MSTORE LOG2 0xE0 LOG0 NOT BALANCE PUSH14 0x608B2339D4AD588A581A21362FC1 PUSH31 0x398C23EA746B64736F6C634300081200330000000000000000000000000000 ",
							"sourceMap": "132:3172:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getAppCallbackLevel(uint256)": "infinite",
								"isAppJailed(uint256)": "infinite",
								"isConfigWordClean(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220844747de52a2e0a019316d608b2339d4ad588a581a21362fc17e398c23ea746b64736f6c63430008120033",
									".code": [
										{
											"begin": 132,
											"end": 3304,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 132,
											"end": 3304,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 132,
											"end": 3304,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 132,
											"end": 3304,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 132,
											"end": 3304,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 3304,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 132,
											"end": 3304,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 3304,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 132,
											"end": 3304,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC777/IERC777.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
								"contracts/BurnMintSuperToken.sol",
								"contracts/base/SuperTokenBase.sol",
								"contracts/base/SuperTokenStorage.sol",
								"contracts/base/UUPSProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Super app definitions library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":\"SuperAppDefinitions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SuperfluidGovernanceConfigs": {
					"abi": [],
					"devdoc": {
						"author": "Superfluid",
						"kind": "dev",
						"methods": {},
						"title": "Superfluid governance configs library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":7429:8916  library SuperfluidGovernanceConfigs {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":7429:8916  library SuperfluidGovernanceConfigs {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d5f67b6aa17faaf945da28660c287f9d2157643d9f832adc3c18504a0426fc6164736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d5f67b6aa17faaf945da28660c287f9d2157643d9f832adc3c18504a0426fc6164736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xF6 PUSH28 0x6AA17FAAF945DA28660C287F9D2157643D9F832ADC3C18504A0426FC PUSH2 0x6473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "7429:1487:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d5f67b6aa17faaf945da28660c287f9d2157643d9f832adc3c18504a0426fc6164736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xF6 PUSH28 0x6AA17FAAF945DA28660C287F9D2157643D9F832ADC3C18504A0426FC PUSH2 0x6473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "7429:1487:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"decodePPPConfig(uint256)": "infinite",
								"getAppFactoryConfigKey(address)": "infinite",
								"getAppRegistrationConfigKey(address,string memory)": "infinite",
								"getTrustedForwarderConfigKey(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d5f67b6aa17faaf945da28660c287f9d2157643d9f832adc3c18504a0426fc6164736f6c63430008120033",
									".code": [
										{
											"begin": 7429,
											"end": 8916,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 8916,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 8916,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 8916,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7429,
											"end": 8916,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7429,
											"end": 8916,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 8916,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7429,
											"end": 8916,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 8916,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC777/IERC777.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
								"contracts/BurnMintSuperToken.sol",
								"contracts/base/SuperTokenBase.sol",
								"contracts/base/SuperTokenStorage.sol",
								"contracts/base/UUPSProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Superfluid governance configs library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":\"SuperfluidGovernanceConfigs\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
				"ISuperAgreement": {
					"abi": [
						{
							"inputs": [],
							"name": "agreementType",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluidToken",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "realtimeBalanceOf",
							"outputs": [
								{
									"internalType": "int256",
									"name": "dynamicBalance",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "deposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "owedDeposit",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Superfluid",
						"kind": "dev",
						"methods": {
							"agreementType()": {
								"details": "Get the type of the agreement class"
							},
							"realtimeBalanceOf(address,address,uint256)": {
								"details": "Calculate the real-time balance for the account of this agreement class",
								"params": {
									"account": "Account the state belongs to",
									"time": "Time used for the calculation"
								},
								"returns": {
									"deposit": "Account deposit amount of this agreement",
									"dynamicBalance": "Dynamic balance portion of real-time balance of this agreement",
									"owedDeposit": "Account owed deposit amount of this agreement"
								}
							}
						},
						"title": "Super agreement interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"agreementType()": "7730599e",
							"realtimeBalanceOf(address,address,uint256)": "9b2e48bc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"agreementType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"dynamicBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{\"agreementType()\":{\"details\":\"Get the type of the agreement class\"},\"realtimeBalanceOf(address,address,uint256)\":{\"details\":\"Calculate the real-time balance for the account of this agreement class\",\"params\":{\"account\":\"Account the state belongs to\",\"time\":\"Time used for the calculation\"},\"returns\":{\"deposit\":\"Account deposit amount of this agreement\",\"dynamicBalance\":\"Dynamic balance portion of real-time balance of this agreement\",\"owedDeposit\":\"Account owed deposit amount of this agreement\"}}},\"title\":\"Super agreement interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":\"ISuperAgreement\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
				"ISuperApp": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "agreementId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "agreementData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "cbdata",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "afterAgreementCreated",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "newCtx",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "agreementId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "agreementData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "cbdata",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "afterAgreementTerminated",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "newCtx",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "agreementId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "agreementData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "cbdata",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "afterAgreementUpdated",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "newCtx",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "agreementId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "agreementData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "beforeAgreementCreated",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "cbdata",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "agreementId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "agreementData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "beforeAgreementTerminated",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "cbdata",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "agreementId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "agreementData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "beforeAgreementUpdated",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "cbdata",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Superfluid",
						"details": "Be aware of the app being jailed, when the word permitted is used.",
						"kind": "dev",
						"methods": {
							"afterAgreementCreated(address,address,bytes32,bytes,bytes,bytes)": {
								"custom:note": " - State changes is permitted. - Only revert with a \"reason\" is permitted.",
								"details": "Callback after a new agreement is created.",
								"params": {
									"agreementClass": "The agreement class address.",
									"agreementData": "The agreement data (non-compressed)",
									"agreementId": "The agreementId",
									"cbdata": "The data returned from the before-hook callback.",
									"ctx": "The context data.",
									"superToken": "The super token used for the agreement."
								},
								"returns": {
									"newCtx": "The current context of the transaction."
								}
							},
							"afterAgreementTerminated(address,address,bytes32,bytes,bytes,bytes)": {
								"custom:note": " - State changes is permitted. - Revert is not permitted.",
								"details": "Callback after a new agreement is terminated.",
								"params": {
									"agreementClass": "The agreement class address.",
									"agreementData": "The agreement data (non-compressed)",
									"agreementId": "The agreementId",
									"cbdata": "The data returned from the before-hook callback.",
									"ctx": "The context data.",
									"superToken": "The super token used for the agreement."
								},
								"returns": {
									"newCtx": "The current context of the transaction."
								}
							},
							"afterAgreementUpdated(address,address,bytes32,bytes,bytes,bytes)": {
								"custom:note": " - State changes is permitted. - Only revert with a \"reason\" is permitted.",
								"details": "Callback after a new agreement is updated.",
								"params": {
									"agreementClass": "The agreement class address.",
									"agreementData": "The agreement data (non-compressed)",
									"agreementId": "The agreementId",
									"cbdata": "The data returned from the before-hook callback.",
									"ctx": "The context data.",
									"superToken": "The super token used for the agreement."
								},
								"returns": {
									"newCtx": "The current context of the transaction."
								}
							},
							"beforeAgreementCreated(address,address,bytes32,bytes,bytes)": {
								"custom:note": " - It will be invoked with `staticcall`, no state changes are permitted. - Only revert with a \"reason\" is permitted.",
								"details": "Callback before a new agreement is created.",
								"params": {
									"agreementClass": "The agreement class address.",
									"agreementData": "The agreement data (non-compressed)",
									"agreementId": "The agreementId",
									"ctx": "The context data.",
									"superToken": "The super token used for the agreement."
								},
								"returns": {
									"cbdata": "A free format in memory data the app can use to pass          arbitary information to the after-hook callback."
								}
							},
							"beforeAgreementTerminated(address,address,bytes32,bytes,bytes)": {
								"custom:note": " - It will be invoked with `staticcall`, no state changes are permitted. - Revert is not permitted.",
								"details": "Callback before a new agreement is terminated.",
								"params": {
									"agreementClass": "The agreement class address.",
									"agreementData": "The agreement data (non-compressed)",
									"agreementId": "The agreementId",
									"ctx": "The context data.",
									"superToken": "The super token used for the agreement."
								},
								"returns": {
									"cbdata": "A free format in memory data the app can use to pass arbitary information to the after-hook callback."
								}
							},
							"beforeAgreementUpdated(address,address,bytes32,bytes,bytes)": {
								"custom:note": " - It will be invoked with `staticcall`, no state changes are permitted. - Only revert with a \"reason\" is permitted.",
								"details": "Callback before a new agreement is updated.",
								"params": {
									"agreementClass": "The agreement class address.",
									"agreementData": "The agreement data (non-compressed)",
									"agreementId": "The agreementId",
									"ctx": "The context data.",
									"superToken": "The super token used for the agreement."
								},
								"returns": {
									"cbdata": "A free format in memory data the app can use to pass          arbitary information to the after-hook callback."
								}
							}
						},
						"title": "SuperApp interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"afterAgreementCreated(address,address,bytes32,bytes,bytes,bytes)": "d86ed3e5",
							"afterAgreementTerminated(address,address,bytes32,bytes,bytes,bytes)": "53c11f99",
							"afterAgreementUpdated(address,address,bytes32,bytes,bytes,bytes)": "230dbd29",
							"beforeAgreementCreated(address,address,bytes32,bytes,bytes)": "30d9c915",
							"beforeAgreementTerminated(address,address,bytes32,bytes,bytes)": "5f9e7d77",
							"beforeAgreementUpdated(address,address,bytes32,bytes,bytes)": "884d1f40"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"afterAgreementCreated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"afterAgreementTerminated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"afterAgreementUpdated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"beforeAgreementCreated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"beforeAgreementTerminated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"beforeAgreementUpdated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"Be aware of the app being jailed, when the word permitted is used.\",\"kind\":\"dev\",\"methods\":{\"afterAgreementCreated(address,address,bytes32,bytes,bytes,bytes)\":{\"custom:note\":\" - State changes is permitted. - Only revert with a \\\"reason\\\" is permitted.\",\"details\":\"Callback after a new agreement is created.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"cbdata\":\"The data returned from the before-hook callback.\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"newCtx\":\"The current context of the transaction.\"}},\"afterAgreementTerminated(address,address,bytes32,bytes,bytes,bytes)\":{\"custom:note\":\" - State changes is permitted. - Revert is not permitted.\",\"details\":\"Callback after a new agreement is terminated.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"cbdata\":\"The data returned from the before-hook callback.\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"newCtx\":\"The current context of the transaction.\"}},\"afterAgreementUpdated(address,address,bytes32,bytes,bytes,bytes)\":{\"custom:note\":\" - State changes is permitted. - Only revert with a \\\"reason\\\" is permitted.\",\"details\":\"Callback after a new agreement is updated.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"cbdata\":\"The data returned from the before-hook callback.\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"newCtx\":\"The current context of the transaction.\"}},\"beforeAgreementCreated(address,address,bytes32,bytes,bytes)\":{\"custom:note\":\" - It will be invoked with `staticcall`, no state changes are permitted. - Only revert with a \\\"reason\\\" is permitted.\",\"details\":\"Callback before a new agreement is created.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"cbdata\":\"A free format in memory data the app can use to pass          arbitary information to the after-hook callback.\"}},\"beforeAgreementTerminated(address,address,bytes32,bytes,bytes)\":{\"custom:note\":\" - It will be invoked with `staticcall`, no state changes are permitted. - Revert is not permitted.\",\"details\":\"Callback before a new agreement is terminated.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"cbdata\":\"A free format in memory data the app can use to pass arbitary information to the after-hook callback.\"}},\"beforeAgreementUpdated(address,address,bytes32,bytes,bytes)\":{\"custom:note\":\" - It will be invoked with `staticcall`, no state changes are permitted. - Only revert with a \\\"reason\\\" is permitted.\",\"details\":\"Callback before a new agreement is updated.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"cbdata\":\"A free format in memory data the app can use to pass          arbitary information to the after-hook callback.\"}}},\"title\":\"SuperApp interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":\"ISuperApp\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x6cc4b0724d977190c7441dfc3be6c6e48b43b555c3370af32ef5b6600f15f53f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3e89c944642772a42429f21a11017b57deb98a9198f8e4f8749f00aaee71299e\",\"dweb:/ipfs/QmaSv9GvqikcGHJ3tcwATDHSpQw6mfnHPDtcfqcZSS7LF6\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0x2ccec11f964b165f64e453192793991bf28e1054069b6f709a39849a8286aeb4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://edbaf6db0b9c6803dcdb7c91a2ddbdba503a41ecc5cecf9c27a43643669bfff1\",\"dweb:/ipfs/QmYpf7XFKrnB2ZAPf8cDqfvZDfyoxMHA1x2FQSYzDFE3KZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x316aa6cd16167569d5ee47fb2e4673b1def2117c7ea56969290ab6aec97cd263\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a5eb13acce613a227c2c2b3da2b88ad6361c9e541ca59ccee0bb5cf42cffccc6\",\"dweb:/ipfs/QmceA9RWHL1BWk4cPnYY55FjAdsEi1LfXrC11RbF8Wb8eW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64\",\"dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229\",\"dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
				"ISuperToken": {
					"abi": [
						{
							"inputs": [],
							"name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_TOKEN_ONLY_HOST",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_TOKEN_ONLY_LISTED_AGREEMENT",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_ONLY_HOST",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_ONLY_SELF",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"name": "AgreementCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "penaltyAccount",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "rewardAccount",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"name": "AgreementLiquidated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "liquidatorAccount",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "penaltyAccount",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "bondAccount",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bailoutAmount",
									"type": "uint256"
								}
							],
							"name": "AgreementLiquidatedBy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "liquidatorAccount",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "targetAccount",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "rewardAmountReceiver",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "targetAccountBalanceDelta",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "liquidationTypeData",
									"type": "bytes"
								}
							],
							"name": "AgreementLiquidatedV2",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "slotId",
									"type": "uint256"
								}
							],
							"name": "AgreementStateUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "AgreementTerminated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"name": "AgreementUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "AuthorizedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "bailoutAccount",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bailoutAmount",
									"type": "uint256"
								}
							],
							"name": "Bailout",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Burned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "RevokedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Sent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokenDowngraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokenUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "authorizeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"name": "createAgreement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultOperators",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "downgrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getAccountActiveAgreements",
							"outputs": [
								{
									"internalType": "contract ISuperAgreement[]",
									"name": "activeAgreements",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "dataLength",
									"type": "uint256"
								}
							],
							"name": "getAgreementData",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "slotId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "dataLength",
									"type": "uint256"
								}
							],
							"name": "getAgreementStateSlot",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "slotData",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHost",
							"outputs": [
								{
									"internalType": "address",
									"name": "host",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getUnderlyingToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "tokenAddr",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "granularity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "underlyingToken",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "underlyingDecimals",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "n",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "s",
									"type": "string"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "isAccountCritical",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isCritical",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAccountCriticalNow",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isCritical",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "isAccountSolvent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isSolvent",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAccountSolventNow",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isSolvent",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "isOperatorFor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "liquidationTypeData",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "liquidatorAccount",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "useDefaultRewardAccount",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "targetAccount",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								},
								{
									"internalType": "int256",
									"name": "targetAccountBalanceDelta",
									"type": "int256"
								}
							],
							"name": "makeLiquidationPayoutsV2",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "operationApprove",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "operationDowngrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "operationTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "operationUpgrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorSend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "realtimeBalanceOf",
							"outputs": [
								{
									"internalType": "int256",
									"name": "availableBalance",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "deposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "owedDeposit",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "realtimeBalanceOfNow",
							"outputs": [
								{
									"internalType": "int256",
									"name": "availableBalance",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "deposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "owedDeposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "revokeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "selfApproveFor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								}
							],
							"name": "selfBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								}
							],
							"name": "selfMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "selfTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "send",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "int256",
									"name": "delta",
									"type": "int256"
								}
							],
							"name": "settleBalance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "dataLength",
									"type": "uint256"
								}
							],
							"name": "terminateAgreement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "transferAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"name": "updateAgreementData",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "slotId",
									"type": "uint256"
								},
								{
									"internalType": "bytes32[]",
									"name": "slotData",
									"type": "bytes32[]"
								}
							],
							"name": "updateAgreementStateSlot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "upgrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Superfluid",
						"events": {
							"AgreementCreated(address,bytes32,bytes32[])": {
								"details": "Agreement created event",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"data": "Agreement data",
									"id": "Agreement ID"
								}
							},
							"AgreementLiquidated(address,bytes32,address,address,uint256)": {
								"custom:deprecated": "Use AgreementLiquidatedV2 instead",
								"details": "Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"id": "Agreement ID",
									"penaltyAccount": "Account of the agreement to be penalized",
									"rewardAccount": "Account that collect the reward",
									"rewardAmount": "Amount of liquidation reward"
								}
							},
							"AgreementLiquidatedBy(address,address,bytes32,address,address,uint256,uint256)": {
								"custom:deprecated": "Use AgreementLiquidatedV2 instead",
								"custom:note": " Reward account rule: - if bailout is equal to 0, then   - the bondAccount will get the rewardAmount,   - the penaltyAccount will pay for the rewardAmount. - if bailout is larger than 0, then   - the liquidatorAccount will get the rewardAmouont,   - the bondAccount will pay for both the rewardAmount and bailoutAmount,   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.",
								"details": "Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"bailoutAmount": "Amount of liquidation bailouot",
									"bondAccount": "Account that collect the reward or bailout accounts",
									"id": "Agreement ID",
									"liquidatorAccount": "Account of the agent that performed the liquidation.",
									"penaltyAccount": "Account of the agreement to be penalized",
									"rewardAmount": "Amount of liquidation reward"
								}
							},
							"AgreementLiquidatedV2(address,bytes32,address,address,address,uint256,int256,bytes)": {
								"custom:note": " Reward account rule: - if the agreement is liquidated during the PIC period   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount   - the targetAccount will pay for the rewardAmount - if the agreement is liquidated after the PIC period AND the targetAccount is solvent   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)   - the targetAccount will pay for the rewardAmount - if the targetAccount is insolvent   - the liquidatorAccount will get the rewardAmount (single deposit)   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount   - the targetAccount will receive the bailoutAmount",
								"details": "Agreement liquidation event v2 (including agent account)",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"id": "Agreement ID",
									"liquidationTypeData": "The encoded liquidation type data including the version (how to decode)",
									"liquidatorAccount": "Address of the executor of the liquidation",
									"rewardAmount": "The amount the reward recipient account balance should change by",
									"rewardAmountReceiver": "Account that collects the reward or bails out insolvent accounts",
									"targetAccount": "Account of the stream sender",
									"targetAccountBalanceDelta": "The amount the sender account balance should change by"
								}
							},
							"AgreementStateUpdated(address,address,uint256)": {
								"details": "Agreement account state updated event",
								"params": {
									"account": "Account updated",
									"agreementClass": "Contract address of the agreement",
									"slotId": "slot id of the agreement state"
								}
							},
							"AgreementTerminated(address,bytes32)": {
								"details": "Agreement terminated event",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"id": "Agreement ID"
								}
							},
							"AgreementUpdated(address,bytes32,bytes32[])": {
								"details": "Agreement updated event",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"data": "Agreement data",
									"id": "Agreement ID"
								}
							},
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"AuthorizedOperator(address,address)": {
								"details": "Emitted when `operator` is made operator for `tokenHolder`."
							},
							"Bailout(address,uint256)": {
								"custom:deprecated": "Use AgreementLiquidatedV2 instead",
								"details": "System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)",
								"params": {
									"bailoutAccount": "Account that bailout the penalty account",
									"bailoutAmount": "Amount of account bailout"
								}
							},
							"Burned(address,address,uint256,bytes,bytes)": {
								"details": "Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event."
							},
							"Minted(address,address,uint256,bytes,bytes)": {
								"details": "Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event."
							},
							"RevokedOperator(address,address)": {
								"details": "Emitted when `operator` is revoked its operator status for `tokenHolder`."
							},
							"TokenDowngraded(address,uint256)": {
								"details": "Token downgrade event",
								"params": {
									"account": "Account whose tokens are upgraded",
									"amount": "Amount of tokens downgraded"
								}
							},
							"TokenUpgraded(address,uint256)": {
								"details": "Token upgrade event",
								"params": {
									"account": "Account where tokens are upgraded to",
									"amount": "Amount of tokens upgraded (in 18 decimals)"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be         allowed to spend on behalf of `owner` through {transferFrom}. This is         zero by default."
							},
							"approve(address,uint256)": {
								"custom:emits": "an {Approval} event.",
								"custom:note": "Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.",
								"returns": {
									"_0": "Returns Success a boolean value indicating whether the operation succeeded."
								}
							},
							"authorizeOperator(address)": {
								"custom:emits": "an {AuthorizedOperator} event.",
								"custom:requirements": " - `operator` cannot be calling address.",
								"details": "Make an account an operator of the caller. See {isOperatorFor}."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by an account (`owner`)."
							},
							"burn(uint256,bytes)": {
								"custom:emits": "a {Burned} event.",
								"custom:requirements": " - the caller must have at least `amount` tokens.",
								"details": "Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}."
							},
							"createAgreement(bytes32,bytes32[])": {
								"details": "Create a new agreement",
								"params": {
									"data": "Agreement data",
									"id": "Agreement ID"
								}
							},
							"decimals()": {
								"custom:note": "SuperToken always uses 18 decimals. This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.",
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called."
							},
							"decreaseAllowance(address,uint256)": {
								"custom:emits": "an {Approval} event indicating the updated allowance.",
								"custom:requirements": " - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.",
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}."
							},
							"defaultOperators()": {
								"details": "Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."
							},
							"downgrade(uint256)": {
								"details": "Downgrade SuperToken to ERC20.It will call transfer to send tokens",
								"params": {
									"amount": "Number of tokens to be downgraded"
								}
							},
							"getAccountActiveAgreements(address)": {
								"details": "An active agreement is one that has state for the account",
								"params": {
									"account": "Account to query"
								},
								"returns": {
									"activeAgreements": "List of accounts that have non-zero states for the account"
								}
							},
							"getAgreementData(address,bytes32,uint256)": {
								"details": "Get data of the agreement",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"id": "Agreement ID"
								},
								"returns": {
									"data": "Data of the agreement"
								}
							},
							"getAgreementStateSlot(address,address,uint256,uint256)": {
								"details": "Get data of the slot of the state of an agreement",
								"params": {
									"account": "Account to query",
									"agreementClass": "Contract address of the agreement",
									"dataLength": "length of the state data",
									"slotId": "slot id of the state"
								}
							},
							"getHost()": {
								"details": "Get superfluid host contract address"
							},
							"getUnderlyingToken()": {
								"details": "Return the underlying token contract",
								"returns": {
									"tokenAddr": "Underlying token address"
								}
							},
							"granularity()": {
								"custom:note": "For super token contracts, this value is always 1",
								"details": "Returns the smallest part of the token that is not divisible. This         means all token operations (creation, movement and destruction) must have         amounts that are a multiple of this number."
							},
							"increaseAllowance(address,uint256)": {
								"custom:emits": "an {Approval} event indicating the updated allowance.",
								"custom:requirements": " - `spender` cannot be the zero address.",
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}."
							},
							"initialize(address,uint8,string,string)": {
								"details": "Initialize the contract"
							},
							"isAccountCritical(address,uint256)": {
								"details": "A critical account is when availableBalance < 0",
								"params": {
									"account": "The account to check",
									"timestamp": "The time we'd like to check if the account is critical (should use future)"
								},
								"returns": {
									"isCritical": "Whether the account is critical"
								}
							},
							"isAccountCriticalNow(address)": {
								"details": "A critical account is when availableBalance < 0",
								"params": {
									"account": "The account to check"
								},
								"returns": {
									"isCritical": "Whether the account is critical"
								}
							},
							"isAccountSolvent(address,uint256)": {
								"details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
								"params": {
									"account": "The account to check",
									"timestamp": "The time we'd like to check if the account is solvent (should use future)"
								},
								"returns": {
									"isSolvent": "True if the account is solvent, false otherwise"
								}
							},
							"isAccountSolventNow(address)": {
								"details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
								"params": {
									"account": "The account to check"
								},
								"returns": {
									"isSolvent": "True if the account is solvent, false otherwise"
								}
							},
							"isOperatorFor(address,address)": {
								"details": "Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."
							},
							"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": {
								"custom:modifiers": "  - onlyAgreement",
								"custom:note": " - If a bailout is required (bailoutAmount > 0)   - the actual reward (single deposit) goes to the executor,   - while the reward account becomes the bailout account   - total bailout include: bailout amount + reward amount   - the targetAccount will be bailed out - If a bailout is not required   - the targetAccount will pay the rewardAmount   - the liquidator (reward account in PIC period) will receive the rewardAmount",
								"details": "Make liquidation payouts (v2)",
								"params": {
									"id": "Agreement ID",
									"liquidationTypeData": "Data regarding the version of the liquidation schema and the type",
									"liquidatorAccount": "Address of the executor of the liquidation",
									"rewardAmount": "The amount the rewarded account will receive",
									"targetAccount": "Account to be liquidated",
									"targetAccountBalanceDelta": "The delta amount the target account balance should change by",
									"useDefaultRewardAccount": "Whether or not the default reward account receives the rewardAmount"
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"operationApprove(address,address,uint256)": {
								"custom:modifiers": "  - onlyHost",
								"details": "Perform ERC20 approve by host contract.",
								"params": {
									"account": "The account owner to be approved.",
									"amount": "Number of tokens to be approved.",
									"spender": "The spender of account owner's funds."
								}
							},
							"operationDowngrade(address,uint256)": {
								"custom:modifiers": "  - onlyHost",
								"details": "Downgrade ERC20 to SuperToken by host contract.",
								"params": {
									"account": "The account to be changed.",
									"amount": "Number of tokens to be downgraded (in 18 decimals)"
								}
							},
							"operationTransferFrom(address,address,address,uint256)": {
								"custom:modifiers": "  - onlyHost",
								"details": "Perform ERC20 transfer from by host contract.",
								"params": {
									"account": "The account to spend sender's funds.",
									"amount": "Number of tokens to be transferred.",
									"recipient": "The recipient of thefunds.",
									"spender": "The account where the funds is sent from."
								}
							},
							"operationUpgrade(address,uint256)": {
								"custom:modifiers": "  - onlyHost",
								"details": "Upgrade ERC20 to SuperToken by host contract.",
								"params": {
									"account": "The account to be changed.",
									"amount": "Number of tokens to be upgraded (in 18 decimals)"
								}
							},
							"operatorBurn(address,uint256,bytes,bytes)": {
								"custom:emits": "a {Burned} event.",
								"custom:requirements": " - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.",
								"details": "Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}."
							},
							"operatorSend(address,address,uint256,bytes,bytes)": {
								"custom:emits": "a {Sent} event.",
								"custom:requirements": " - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.",
								"details": "Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}."
							},
							"realtimeBalanceOf(address,uint256)": {
								"details": "Calculate the real balance of a user, taking in consideration all agreements of the account",
								"params": {
									"account": "for the query",
									"timestamp": "Time of balance"
								},
								"returns": {
									"availableBalance": "Real-time balance",
									"deposit": "Account deposit",
									"owedDeposit": "Account owed Deposit"
								}
							},
							"realtimeBalanceOfNow(address)": {
								"details": "realtimeBalanceOf with timestamp equals to block timestamp",
								"params": {
									"account": "for the query"
								},
								"returns": {
									"availableBalance": "Real-time balance",
									"deposit": "Account deposit",
									"owedDeposit": "Account owed Deposit"
								}
							},
							"revokeOperator(address)": {
								"custom:emits": "a {RevokedOperator} event.",
								"custom:requirements": " - `operator` cannot be calling address.",
								"details": "Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}."
							},
							"selfApproveFor(address,address,uint256)": {
								"custom:modifiers": "  - onlySelf",
								"details": "Give `spender`, `amount` allowance to spend the tokens of `account`."
							},
							"selfBurn(address,uint256,bytes)": {
								"custom:modifiers": "  - onlySelf",
								"details": "Burn existing tokens for the account"
							},
							"selfMint(address,uint256,bytes)": {
								"custom:modifiers": "  - onlySelf",
								"details": "Mint new tokens for the account"
							},
							"selfTransferFrom(address,address,address,uint256)": {
								"custom:modifiers": "  - onlySelf",
								"details": "Transfer `amount` tokens from the `sender` to `recipient`. If `spender` isn't the same as `sender`, checks if `spender` has allowance to spend tokens of `sender`."
							},
							"send(address,uint256,bytes)": {
								"custom:emits": "a {Sent} event.",
								"custom:requirements": " - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.",
								"details": "Moves `amount` tokens from the caller's account to `recipient`.If send or receive hooks are registered for the caller and `recipient`,      the corresponding functions will be called with `data` and empty      `operatorData`. See {IERC777Sender} and {IERC777Recipient}."
							},
							"settleBalance(address,int256)": {
								"custom:modifiers": "  - onlyAgreement",
								"details": "The agreement needs to make sure that the balance delta is balanced afterwards",
								"params": {
									"account": "Account to query.",
									"delta": "Amount of balance delta to be settled"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"terminateAgreement(bytes32,uint256)": {
								"details": "Close the agreement",
								"params": {
									"id": "Agreement ID"
								}
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"custom:emits": "a {Transfer} event.",
								"details": "Moves `amount` tokens from the caller's account to `recipient`.",
								"returns": {
									"_0": "Returns Success a boolean value indicating whether the operation succeeded."
								}
							},
							"transferAll(address)": {
								"details": "Transfer all available balance from `msg.sender` to `recipient`"
							},
							"transferFrom(address,address,uint256)": {
								"custom:emits": "a {Transfer} event.",
								"details": "Moves `amount` tokens from `sender` to `recipient` using the         allowance mechanism. `amount` is then deducted from the caller's         allowance.",
								"returns": {
									"_0": "Returns Success a boolean value indicating whether the operation succeeded."
								}
							},
							"updateAgreementData(bytes32,bytes32[])": {
								"details": "Create a new agreement",
								"params": {
									"data": "Agreement data",
									"id": "Agreement ID"
								}
							},
							"updateAgreementStateSlot(address,uint256,bytes32[])": {
								"custom:note": " - To clear the storage out, provide zero-ed array of intended length",
								"details": "Update agreement state slot",
								"params": {
									"account": "Account to be updated"
								}
							},
							"upgrade(uint256)": {
								"custom:note": "It will use `transferFrom` to get tokens. Before calling this function you should `approve` this contract",
								"details": "Upgrade ERC20 to SuperToken.",
								"params": {
									"amount": "Number of tokens to be upgraded (in 18 decimals)"
								}
							},
							"upgradeTo(address,uint256,bytes)": {
								"custom:note": "It will use `transferFrom` to get tokens. Before calling this function you should `approve` this contract",
								"details": "Upgrade ERC20 to SuperToken and transfer immediately",
								"params": {
									"amount": "Number of tokens to be upgraded (in 18 decimals)",
									"data": "User data for the TokensRecipient callback",
									"to": "The account to received upgraded tokens"
								}
							}
						},
						"title": "Super token (Superfluid Token + ERC20 + ERC777) interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"authorizeOperator(address)": "959b8c3f",
							"balanceOf(address)": "70a08231",
							"burn(uint256,bytes)": "fe9d9303",
							"createAgreement(bytes32,bytes32[])": "12a6a3f8",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"defaultOperators()": "06e48538",
							"downgrade(uint256)": "11bcc81e",
							"getAccountActiveAgreements(address)": "386fa221",
							"getAgreementData(address,bytes32,uint256)": "6c2d9f2f",
							"getAgreementStateSlot(address,address,uint256,uint256)": "4b61cc33",
							"getHost()": "20bc4425",
							"getUnderlyingToken()": "ee719bc8",
							"granularity()": "556f0dc7",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize(address,uint8,string,string)": "42fe0980",
							"isAccountCritical(address,uint256)": "d9d078d6",
							"isAccountCriticalNow(address)": "79359f6f",
							"isAccountSolvent(address,uint256)": "b84cdd4a",
							"isAccountSolventNow(address)": "bb0d196e",
							"isOperatorFor(address,address)": "d95b6371",
							"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": "1863e809",
							"name()": "06fdde03",
							"operationApprove(address,address,uint256)": "62aa5287",
							"operationDowngrade(address,uint256)": "245887fc",
							"operationTransferFrom(address,address,address,uint256)": "16d055d6",
							"operationUpgrade(address,uint256)": "ca789464",
							"operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
							"operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
							"realtimeBalanceOf(address,uint256)": "eb3537cc",
							"realtimeBalanceOfNow(address)": "2ec8eec7",
							"revokeOperator(address)": "fad8b32a",
							"selfApproveFor(address,address,uint256)": "66a12fb6",
							"selfBurn(address,uint256,bytes)": "9d876741",
							"selfMint(address,uint256,bytes)": "c68d4283",
							"selfTransferFrom(address,address,address,uint256)": "41b706be",
							"send(address,uint256,bytes)": "9bd9bbc6",
							"settleBalance(address,int256)": "cf97256d",
							"symbol()": "95d89b41",
							"terminateAgreement(bytes32,uint256)": "27048397",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAll(address)": "a3a7e7f3",
							"transferFrom(address,address,uint256)": "23b872dd",
							"updateAgreementData(bytes32,bytes32[])": "a1b2bf8b",
							"updateAgreementStateSlot(address,uint256,bytes32[])": "090c415e",
							"upgrade(uint256)": "45977d03",
							"upgradeTo(address,uint256,bytes)": "5b9d09cc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_ALREADY_EXISTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_DOES_NOT_EXIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_BURN_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_MOVE_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_LISTED_AGREEMENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_MINT_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NO_UNDERLYING_TOKEN\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_SELF\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidatedBy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardAmountReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"}],\"name\":\"AgreementLiquidatedV2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"}],\"name\":\"AgreementStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"AgreementTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bailoutAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"Bailout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenDowngraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"downgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountActiveAgreements\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"activeAgreements\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementData\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementStateSlot\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnderlyingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"underlyingDecimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"n\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountCritical\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountCriticalNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountSolvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountSolventNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useDefaultRewardAccount\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"}],\"name\":\"makeLiquidationPayoutsV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationDowngrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"realtimeBalanceOfNow\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"selfApproveFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"selfTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"settleBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementStateSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"events\":{\"AgreementCreated(address,bytes32,bytes32[])\":{\"details\":\"Agreement created event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"AgreementLiquidated(address,bytes32,address,address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAccount\":\"Account that collect the reward\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedBy(address,address,bytes32,address,address,uint256,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"custom:note\":\" Reward account rule: - if bailout is equal to 0, then   - the bondAccount will get the rewardAmount,   - the penaltyAccount will pay for the rewardAmount. - if bailout is larger than 0, then   - the liquidatorAccount will get the rewardAmouont,   - the bondAccount will pay for both the rewardAmount and bailoutAmount,   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"bailoutAmount\":\"Amount of liquidation bailouot\",\"bondAccount\":\"Account that collect the reward or bailout accounts\",\"id\":\"Agreement ID\",\"liquidatorAccount\":\"Account of the agent that performed the liquidation.\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedV2(address,bytes32,address,address,address,uint256,int256,bytes)\":{\"custom:note\":\" Reward account rule: - if the agreement is liquidated during the PIC period   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount   - the targetAccount will pay for the rewardAmount - if the agreement is liquidated after the PIC period AND the targetAccount is solvent   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)   - the targetAccount will pay for the rewardAmount - if the targetAccount is insolvent   - the liquidatorAccount will get the rewardAmount (single deposit)   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount   - the targetAccount will receive the bailoutAmount\",\"details\":\"Agreement liquidation event v2 (including agent account)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"liquidationTypeData\":\"The encoded liquidation type data including the version (how to decode)\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the reward recipient account balance should change by\",\"rewardAmountReceiver\":\"Account that collects the reward or bails out insolvent accounts\",\"targetAccount\":\"Account of the stream sender\",\"targetAccountBalanceDelta\":\"The amount the sender account balance should change by\"}},\"AgreementStateUpdated(address,address,uint256)\":{\"details\":\"Agreement account state updated event\",\"params\":{\"account\":\"Account updated\",\"agreementClass\":\"Contract address of the agreement\",\"slotId\":\"slot id of the agreement state\"}},\"AgreementTerminated(address,bytes32)\":{\"details\":\"Agreement terminated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"}},\"AgreementUpdated(address,bytes32,bytes32[])\":{\"details\":\"Agreement updated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"AuthorizedOperator(address,address)\":{\"details\":\"Emitted when `operator` is made operator for `tokenHolder`.\"},\"Bailout(address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"bailoutAccount\":\"Account that bailout the penalty account\",\"bailoutAmount\":\"Amount of account bailout\"}},\"Burned(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"Minted(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"RevokedOperator(address,address)\":{\"details\":\"Emitted when `operator` is revoked its operator status for `tokenHolder`.\"},\"TokenDowngraded(address,uint256)\":{\"details\":\"Token downgrade event\",\"params\":{\"account\":\"Account whose tokens are upgraded\",\"amount\":\"Amount of tokens downgraded\"}},\"TokenUpgraded(address,uint256)\":{\"details\":\"Token upgrade event\",\"params\":{\"account\":\"Account where tokens are upgraded to\",\"amount\":\"Amount of tokens upgraded (in 18 decimals)\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be         allowed to spend on behalf of `owner` through {transferFrom}. This is         zero by default.\"},\"approve(address,uint256)\":{\"custom:emits\":\"an {Approval} event.\",\"custom:note\":\"Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"authorizeOperator(address)\":{\"custom:emits\":\"an {AuthorizedOperator} event.\",\"custom:requirements\":\" - `operator` cannot be calling address.\",\"details\":\"Make an account an operator of the caller. See {isOperatorFor}.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"custom:emits\":\"a {Burned} event.\",\"custom:requirements\":\" - the caller must have at least `amount` tokens.\",\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}.\"},\"createAgreement(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"decimals()\":{\"custom:note\":\"SuperToken always uses 18 decimals. This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\",\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.\"},\"decreaseAllowance(address,uint256)\":{\"custom:emits\":\"an {Approval} event indicating the updated allowance.\",\"custom:requirements\":\" - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\",\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"downgrade(uint256)\":{\"details\":\"Downgrade SuperToken to ERC20.It will call transfer to send tokens\",\"params\":{\"amount\":\"Number of tokens to be downgraded\"}},\"getAccountActiveAgreements(address)\":{\"details\":\"An active agreement is one that has state for the account\",\"params\":{\"account\":\"Account to query\"},\"returns\":{\"activeAgreements\":\"List of accounts that have non-zero states for the account\"}},\"getAgreementData(address,bytes32,uint256)\":{\"details\":\"Get data of the agreement\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"},\"returns\":{\"data\":\"Data of the agreement\"}},\"getAgreementStateSlot(address,address,uint256,uint256)\":{\"details\":\"Get data of the slot of the state of an agreement\",\"params\":{\"account\":\"Account to query\",\"agreementClass\":\"Contract address of the agreement\",\"dataLength\":\"length of the state data\",\"slotId\":\"slot id of the state\"}},\"getHost()\":{\"details\":\"Get superfluid host contract address\"},\"getUnderlyingToken()\":{\"details\":\"Return the underlying token contract\",\"returns\":{\"tokenAddr\":\"Underlying token address\"}},\"granularity()\":{\"custom:note\":\"For super token contracts, this value is always 1\",\"details\":\"Returns the smallest part of the token that is not divisible. This         means all token operations (creation, movement and destruction) must have         amounts that are a multiple of this number.\"},\"increaseAllowance(address,uint256)\":{\"custom:emits\":\"an {Approval} event indicating the updated allowance.\",\"custom:requirements\":\" - `spender` cannot be the zero address.\",\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\"},\"initialize(address,uint8,string,string)\":{\"details\":\"Initialize the contract\"},\"isAccountCritical(address,uint256)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is critical (should use future)\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountCriticalNow(address)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountSolvent(address,uint256)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is solvent (should use future)\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isAccountSolventNow(address)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)\":{\"custom:modifiers\":\"  - onlyAgreement\",\"custom:note\":\" - If a bailout is required (bailoutAmount > 0)   - the actual reward (single deposit) goes to the executor,   - while the reward account becomes the bailout account   - total bailout include: bailout amount + reward amount   - the targetAccount will be bailed out - If a bailout is not required   - the targetAccount will pay the rewardAmount   - the liquidator (reward account in PIC period) will receive the rewardAmount\",\"details\":\"Make liquidation payouts (v2)\",\"params\":{\"id\":\"Agreement ID\",\"liquidationTypeData\":\"Data regarding the version of the liquidation schema and the type\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the rewarded account will receive\",\"targetAccount\":\"Account to be liquidated\",\"targetAccountBalanceDelta\":\"The delta amount the target account balance should change by\",\"useDefaultRewardAccount\":\"Whether or not the default reward account receives the rewardAmount\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"operationApprove(address,address,uint256)\":{\"custom:modifiers\":\"  - onlyHost\",\"details\":\"Perform ERC20 approve by host contract.\",\"params\":{\"account\":\"The account owner to be approved.\",\"amount\":\"Number of tokens to be approved.\",\"spender\":\"The spender of account owner's funds.\"}},\"operationDowngrade(address,uint256)\":{\"custom:modifiers\":\"  - onlyHost\",\"details\":\"Downgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be downgraded (in 18 decimals)\"}},\"operationTransferFrom(address,address,address,uint256)\":{\"custom:modifiers\":\"  - onlyHost\",\"details\":\"Perform ERC20 transfer from by host contract.\",\"params\":{\"account\":\"The account to spend sender's funds.\",\"amount\":\"Number of tokens to be transferred.\",\"recipient\":\"The recipient of thefunds.\",\"spender\":\"The account where the funds is sent from.\"}},\"operationUpgrade(address,uint256)\":{\"custom:modifiers\":\"  - onlyHost\",\"details\":\"Upgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be upgraded (in 18 decimals)\"}},\"operatorBurn(address,uint256,bytes,bytes)\":{\"custom:emits\":\"a {Burned} event.\",\"custom:requirements\":\" - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.\",\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"custom:emits\":\"a {Sent} event.\",\"custom:requirements\":\" - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\",\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\"},\"realtimeBalanceOf(address,uint256)\":{\"details\":\"Calculate the real balance of a user, taking in consideration all agreements of the account\",\"params\":{\"account\":\"for the query\",\"timestamp\":\"Time of balance\"},\"returns\":{\"availableBalance\":\"Real-time balance\",\"deposit\":\"Account deposit\",\"owedDeposit\":\"Account owed Deposit\"}},\"realtimeBalanceOfNow(address)\":{\"details\":\"realtimeBalanceOf with timestamp equals to block timestamp\",\"params\":{\"account\":\"for the query\"},\"returns\":{\"availableBalance\":\"Real-time balance\",\"deposit\":\"Account deposit\",\"owedDeposit\":\"Account owed Deposit\"}},\"revokeOperator(address)\":{\"custom:emits\":\"a {RevokedOperator} event.\",\"custom:requirements\":\" - `operator` cannot be calling address.\",\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}.\"},\"selfApproveFor(address,address,uint256)\":{\"custom:modifiers\":\"  - onlySelf\",\"details\":\"Give `spender`, `amount` allowance to spend the tokens of `account`.\"},\"selfBurn(address,uint256,bytes)\":{\"custom:modifiers\":\"  - onlySelf\",\"details\":\"Burn existing tokens for the account\"},\"selfMint(address,uint256,bytes)\":{\"custom:modifiers\":\"  - onlySelf\",\"details\":\"Mint new tokens for the account\"},\"selfTransferFrom(address,address,address,uint256)\":{\"custom:modifiers\":\"  - onlySelf\",\"details\":\"Transfer `amount` tokens from the `sender` to `recipient`. If `spender` isn't the same as `sender`, checks if `spender` has allowance to spend tokens of `sender`.\"},\"send(address,uint256,bytes)\":{\"custom:emits\":\"a {Sent} event.\",\"custom:requirements\":\" - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\",\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.If send or receive hooks are registered for the caller and `recipient`,      the corresponding functions will be called with `data` and empty      `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\"},\"settleBalance(address,int256)\":{\"custom:modifiers\":\"  - onlyAgreement\",\"details\":\"The agreement needs to make sure that the balance delta is balanced afterwards\",\"params\":{\"account\":\"Account to query.\",\"delta\":\"Amount of balance delta to be settled\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"terminateAgreement(bytes32,uint256)\":{\"details\":\"Close the agreement\",\"params\":{\"id\":\"Agreement ID\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"custom:emits\":\"a {Transfer} event.\",\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"transferAll(address)\":{\"details\":\"Transfer all available balance from `msg.sender` to `recipient`\"},\"transferFrom(address,address,uint256)\":{\"custom:emits\":\"a {Transfer} event.\",\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the         allowance mechanism. `amount` is then deducted from the caller's         allowance.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"updateAgreementData(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"updateAgreementStateSlot(address,uint256,bytes32[])\":{\"custom:note\":\" - To clear the storage out, provide zero-ed array of intended length\",\"details\":\"Update agreement state slot\",\"params\":{\"account\":\"Account to be updated\"}},\"upgrade(uint256)\":{\"custom:note\":\"It will use `transferFrom` to get tokens. Before calling this function you should `approve` this contract\",\"details\":\"Upgrade ERC20 to SuperToken.\",\"params\":{\"amount\":\"Number of tokens to be upgraded (in 18 decimals)\"}},\"upgradeTo(address,uint256,bytes)\":{\"custom:note\":\"It will use `transferFrom` to get tokens. Before calling this function you should `approve` this contract\",\"details\":\"Upgrade ERC20 to SuperToken and transfer immediately\",\"params\":{\"amount\":\"Number of tokens to be upgraded (in 18 decimals)\",\"data\":\"User data for the TokensRecipient callback\",\"to\":\"The account to received upgraded tokens\"}}},\"title\":\"Super token (Superfluid Token + ERC20 + ERC777) interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"This value changes when {approve} or {transferFrom} are called.\"},\"getAccountActiveAgreements(address)\":{\"notice\":\"Get a list of agreements that is active for the account\"},\"isAccountCritical(address,uint256)\":{\"notice\":\"Check if account is critical\"},\"isAccountCriticalNow(address)\":{\"notice\":\"Check if account is critical now (current host.getNow())\"},\"isAccountSolvent(address,uint256)\":{\"notice\":\"Check if account is solvent\"},\"isAccountSolventNow(address)\":{\"notice\":\"Check if account is solvent now\"},\"realtimeBalanceOfNow(address)\":{\"notice\":\"Calculate the realtime balance given the current host.getNow() value\"},\"settleBalance(address,int256)\":{\"notice\":\"Settle balance from an account by the agreement\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":\"ISuperToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x6cc4b0724d977190c7441dfc3be6c6e48b43b555c3370af32ef5b6600f15f53f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3e89c944642772a42429f21a11017b57deb98a9198f8e4f8749f00aaee71299e\",\"dweb:/ipfs/QmaSv9GvqikcGHJ3tcwATDHSpQw6mfnHPDtcfqcZSS7LF6\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0x2ccec11f964b165f64e453192793991bf28e1054069b6f709a39849a8286aeb4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://edbaf6db0b9c6803dcdb7c91a2ddbdba503a41ecc5cecf9c27a43643669bfff1\",\"dweb:/ipfs/QmYpf7XFKrnB2ZAPf8cDqfvZDfyoxMHA1x2FQSYzDFE3KZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x316aa6cd16167569d5ee47fb2e4673b1def2117c7ea56969290ab6aec97cd263\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a5eb13acce613a227c2c2b3da2b88ad6361c9e541ca59ccee0bb5cf42cffccc6\",\"dweb:/ipfs/QmceA9RWHL1BWk4cPnYY55FjAdsEi1LfXrC11RbF8Wb8eW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64\",\"dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229\",\"dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "This value changes when {approve} or {transferFrom} are called."
							},
							"getAccountActiveAgreements(address)": {
								"notice": "Get a list of agreements that is active for the account"
							},
							"isAccountCritical(address,uint256)": {
								"notice": "Check if account is critical"
							},
							"isAccountCriticalNow(address)": {
								"notice": "Check if account is critical now (current host.getNow())"
							},
							"isAccountSolvent(address,uint256)": {
								"notice": "Check if account is solvent"
							},
							"isAccountSolventNow(address)": {
								"notice": "Check if account is solvent now"
							},
							"realtimeBalanceOfNow(address)": {
								"notice": "Calculate the realtime balance given the current host.getNow() value"
							},
							"settleBalance(address,int256)": {
								"notice": "Settle balance from an account by the agreement"
							}
						},
						"version": 1
					}
				}
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
				"ISuperTokenFactory": {
					"abi": [
						{
							"inputs": [],
							"name": "SUPER_TOKEN_FACTORY_ALREADY_EXISTS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_FACTORY_DOES_NOT_EXIST",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_FACTORY_ONLY_HOST",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_FACTORY_UNINITIALIZED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_FACTORY_ZERO_ADDRESS",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract ISuperToken",
									"name": "token",
									"type": "address"
								}
							],
							"name": "CustomSuperTokenCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract ISuperToken",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SuperTokenCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract ISuperToken",
									"name": "tokenLogic",
									"type": "address"
								}
							],
							"name": "SuperTokenLogicCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_underlyingToken",
									"type": "address"
								}
							],
							"name": "computeCanonicalERC20WrapperAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "superTokenAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isDeployed",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ERC20WithTokenInfo",
									"name": "_underlyingToken",
									"type": "address"
								}
							],
							"name": "createCanonicalERC20Wrapper",
							"outputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ERC20WithTokenInfo",
									"name": "underlyingToken",
									"type": "address"
								},
								{
									"internalType": "enum ISuperTokenFactory.Upgradability",
									"name": "upgradability",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"name": "createERC20Wrapper",
							"outputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "superToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "underlyingToken",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "underlyingDecimals",
									"type": "uint8"
								},
								{
									"internalType": "enum ISuperTokenFactory.Upgradability",
									"name": "upgradability",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"name": "createERC20Wrapper",
							"outputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "superToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_underlyingTokenAddress",
									"type": "address"
								}
							],
							"name": "getCanonicalERC20Wrapper",
							"outputs": [
								{
									"internalType": "address",
									"name": "superTokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHost",
							"outputs": [
								{
									"internalType": "address",
									"name": "host",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSuperTokenLogic",
							"outputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "superToken",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "customSuperTokenProxy",
									"type": "address"
								}
							],
							"name": "initializeCustomSuperToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Superfluid",
						"events": {
							"CustomSuperTokenCreated(address)": {
								"details": "Custom super token created event",
								"params": {
									"token": "Newly created custom super token address"
								}
							},
							"SuperTokenCreated(address)": {
								"details": "Super token created event",
								"params": {
									"token": "Newly created super token address"
								}
							},
							"SuperTokenLogicCreated(address)": {
								"details": "Super token logic created event",
								"params": {
									"tokenLogic": "Token logic address"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"computeCanonicalERC20WrapperAddress(address)": {
								"details": "We return from our canonical list if it already exists, otherwise we compute itnote that this function only computes addresses for SEMI_UPGRADABLE SuperTokens",
								"params": {
									"_underlyingToken": "Underlying ERC20 token address"
								},
								"returns": {
									"isDeployed": "whether the super token is deployed AND set in the canonical mapping",
									"superTokenAddress": "Super token address"
								}
							},
							"createCanonicalERC20Wrapper(address)": {
								"details": "salt for create2 is the keccak256 hash of abi.encode(address(_underlyingToken))",
								"params": {
									"_underlyingToken": "Underlying ERC20 token"
								},
								"returns": {
									"_0": "ISuperToken the created supertoken"
								}
							},
							"createERC20Wrapper(address,uint8,string,string)": {
								"params": {
									"name": "Super token name",
									"symbol": "Super token symbol",
									"underlyingToken": "Underlying ERC20 token",
									"upgradability": "Upgradability mode"
								},
								"returns": {
									"superToken": "The deployed and initialized wrapper super token NOTE: - It assumes token provide the .decimals() function"
								}
							},
							"createERC20Wrapper(address,uint8,uint8,string,string)": {
								"params": {
									"name": "Super token name",
									"symbol": "Super token symbol",
									"underlyingDecimals": "Underlying token decimals",
									"underlyingToken": "Underlying ERC20 token",
									"upgradability": "Upgradability mode"
								},
								"returns": {
									"superToken": "The deployed and initialized wrapper super token"
								}
							},
							"getCanonicalERC20Wrapper(address)": {
								"details": "We return the address if it exists and the zero address otherwise",
								"params": {
									"_underlyingTokenAddress": "Underlying ERC20 token address"
								},
								"returns": {
									"superTokenAddress": "Super token address"
								}
							},
							"getHost()": {
								"details": "Get superfluid host contract address"
							},
							"getSuperTokenLogic()": {
								"details": "Get the current super token logic used by the factory"
							},
							"initialize()": {
								"details": "Initialize the contract"
							},
							"initializeCustomSuperToken(address)": {
								"details": "Creates a new custom super token",
								"params": {
									"customSuperTokenProxy": "address of the custom supertoken proxy"
								}
							}
						},
						"title": "Super token factory interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"computeCanonicalERC20WrapperAddress(address)": "bab74c89",
							"createCanonicalERC20Wrapper(address)": "151188dc",
							"createERC20Wrapper(address,uint8,string,string)": "431f1481",
							"createERC20Wrapper(address,uint8,uint8,string,string)": "a6d0c534",
							"getCanonicalERC20Wrapper(address)": "eff0a89d",
							"getHost()": "20bc4425",
							"getSuperTokenLogic()": "9470a5b2",
							"initialize()": "8129fc1c",
							"initializeCustomSuperToken(address)": "d412d344"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_ALREADY_EXISTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_DOES_NOT_EXIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_UNINITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"CustomSuperTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SuperTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"tokenLogic\",\"type\":\"address\"}],\"name\":\"SuperTokenLogicCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_underlyingToken\",\"type\":\"address\"}],\"name\":\"computeCanonicalERC20WrapperAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"superTokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDeployed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20WithTokenInfo\",\"name\":\"_underlyingToken\",\"type\":\"address\"}],\"name\":\"createCanonicalERC20Wrapper\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20WithTokenInfo\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"enum ISuperTokenFactory.Upgradability\",\"name\":\"upgradability\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createERC20Wrapper\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"underlyingDecimals\",\"type\":\"uint8\"},{\"internalType\":\"enum ISuperTokenFactory.Upgradability\",\"name\":\"upgradability\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createERC20Wrapper\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_underlyingTokenAddress\",\"type\":\"address\"}],\"name\":\"getCanonicalERC20Wrapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"superTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSuperTokenLogic\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"customSuperTokenProxy\",\"type\":\"address\"}],\"name\":\"initializeCustomSuperToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"events\":{\"CustomSuperTokenCreated(address)\":{\"details\":\"Custom super token created event\",\"params\":{\"token\":\"Newly created custom super token address\"}},\"SuperTokenCreated(address)\":{\"details\":\"Super token created event\",\"params\":{\"token\":\"Newly created super token address\"}},\"SuperTokenLogicCreated(address)\":{\"details\":\"Super token logic created event\",\"params\":{\"tokenLogic\":\"Token logic address\"}}},\"kind\":\"dev\",\"methods\":{\"computeCanonicalERC20WrapperAddress(address)\":{\"details\":\"We return from our canonical list if it already exists, otherwise we compute itnote that this function only computes addresses for SEMI_UPGRADABLE SuperTokens\",\"params\":{\"_underlyingToken\":\"Underlying ERC20 token address\"},\"returns\":{\"isDeployed\":\"whether the super token is deployed AND set in the canonical mapping\",\"superTokenAddress\":\"Super token address\"}},\"createCanonicalERC20Wrapper(address)\":{\"details\":\"salt for create2 is the keccak256 hash of abi.encode(address(_underlyingToken))\",\"params\":{\"_underlyingToken\":\"Underlying ERC20 token\"},\"returns\":{\"_0\":\"ISuperToken the created supertoken\"}},\"createERC20Wrapper(address,uint8,string,string)\":{\"params\":{\"name\":\"Super token name\",\"symbol\":\"Super token symbol\",\"underlyingToken\":\"Underlying ERC20 token\",\"upgradability\":\"Upgradability mode\"},\"returns\":{\"superToken\":\"The deployed and initialized wrapper super token NOTE: - It assumes token provide the .decimals() function\"}},\"createERC20Wrapper(address,uint8,uint8,string,string)\":{\"params\":{\"name\":\"Super token name\",\"symbol\":\"Super token symbol\",\"underlyingDecimals\":\"Underlying token decimals\",\"underlyingToken\":\"Underlying ERC20 token\",\"upgradability\":\"Upgradability mode\"},\"returns\":{\"superToken\":\"The deployed and initialized wrapper super token\"}},\"getCanonicalERC20Wrapper(address)\":{\"details\":\"We return the address if it exists and the zero address otherwise\",\"params\":{\"_underlyingTokenAddress\":\"Underlying ERC20 token address\"},\"returns\":{\"superTokenAddress\":\"Super token address\"}},\"getHost()\":{\"details\":\"Get superfluid host contract address\"},\"getSuperTokenLogic()\":{\"details\":\"Get the current super token logic used by the factory\"},\"initialize()\":{\"details\":\"Initialize the contract\"},\"initializeCustomSuperToken(address)\":{\"details\":\"Creates a new custom super token\",\"params\":{\"customSuperTokenProxy\":\"address of the custom supertoken proxy\"}}},\"title\":\"Super token factory interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"computeCanonicalERC20WrapperAddress(address)\":{\"notice\":\"Computes/Retrieves wrapper super token address given the underlying token address\"},\"createCanonicalERC20Wrapper(address)\":{\"notice\":\"Creates a wrapper super token AND sets it in the canonical list OR reverts if it already exists\"},\"createERC20Wrapper(address,uint8,string,string)\":{\"notice\":\"Create new super token wrapper for the underlying ERC20 token with extra token info\"},\"createERC20Wrapper(address,uint8,uint8,string,string)\":{\"notice\":\"Create new super token wrapper for the underlying ERC20 token\"},\"getCanonicalERC20Wrapper(address)\":{\"notice\":\"Gets the canonical ERC20 wrapper super token address given the underlying token address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":\"ISuperTokenFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x6cc4b0724d977190c7441dfc3be6c6e48b43b555c3370af32ef5b6600f15f53f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3e89c944642772a42429f21a11017b57deb98a9198f8e4f8749f00aaee71299e\",\"dweb:/ipfs/QmaSv9GvqikcGHJ3tcwATDHSpQw6mfnHPDtcfqcZSS7LF6\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0x2ccec11f964b165f64e453192793991bf28e1054069b6f709a39849a8286aeb4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://edbaf6db0b9c6803dcdb7c91a2ddbdba503a41ecc5cecf9c27a43643669bfff1\",\"dweb:/ipfs/QmYpf7XFKrnB2ZAPf8cDqfvZDfyoxMHA1x2FQSYzDFE3KZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x316aa6cd16167569d5ee47fb2e4673b1def2117c7ea56969290ab6aec97cd263\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a5eb13acce613a227c2c2b3da2b88ad6361c9e541ca59ccee0bb5cf42cffccc6\",\"dweb:/ipfs/QmceA9RWHL1BWk4cPnYY55FjAdsEi1LfXrC11RbF8Wb8eW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64\",\"dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229\",\"dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"computeCanonicalERC20WrapperAddress(address)": {
								"notice": "Computes/Retrieves wrapper super token address given the underlying token address"
							},
							"createCanonicalERC20Wrapper(address)": {
								"notice": "Creates a wrapper super token AND sets it in the canonical list OR reverts if it already exists"
							},
							"createERC20Wrapper(address,uint8,string,string)": {
								"notice": "Create new super token wrapper for the underlying ERC20 token with extra token info"
							},
							"createERC20Wrapper(address,uint8,uint8,string,string)": {
								"notice": "Create new super token wrapper for the underlying ERC20 token"
							},
							"getCanonicalERC20Wrapper(address)": {
								"notice": "Gets the canonical ERC20 wrapper super token address given the underlying token address"
							}
						},
						"version": 1
					}
				}
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
				"ISuperfluid": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_code",
									"type": "uint256"
								}
							],
							"name": "APP_RULE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_AGREEMENT_ALREADY_REGISTERED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_AGREEMENT_CALLBACK_IS_NOT_ACTION",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_AGREEMENT_IS_NOT_REGISTERED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_CALL_AGREEMENT_WITH_CTX_FROM_WRONG_ADDRESS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_CALL_APP_ACTION_WITH_CTX_FROM_WRONG_ADDRESS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_CANNOT_DOWNGRADE_TO_NON_UPGRADEABLE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_INVALID_CONFIG_WORD",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_INVALID_OR_EXPIRED_SUPER_APP_REGISTRATION_KEY",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_MAX_256_AGREEMENTS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_MUST_BE_CONTRACT",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_NON_UPGRADEABLE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_NON_ZERO_LENGTH_PLACEHOLDER_CTX",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_NOT_A_SUPER_APP",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_NO_APP_REGISTRATION_PERMISSIONS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_ONLY_GOVERNANCE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_ONLY_LISTED_AGREEMENT",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_RECEIVER_IS_NOT_SUPER_APP",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_SENDER_IS_NOT_SUPER_APP",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_SOURCE_APP_NEEDS_HIGHER_APP_LEVEL",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_SUPER_APP_ALREADY_REGISTERED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_SUPER_APP_IS_JAILED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_UNAUTHORIZED_SUPER_APP_FACTORY",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_UNKNOWN_BATCH_CALL_OPERATION_TYPE",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "agreementType",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "code",
									"type": "address"
								}
							],
							"name": "AgreementClassRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "agreementType",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "code",
									"type": "address"
								}
							],
							"name": "AgreementClassUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								}
							],
							"name": "AppRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "contract ISuperfluidGovernance",
									"name": "oldGov",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "contract ISuperfluidGovernance",
									"name": "newGov",
									"type": "address"
								}
							],
							"name": "GovernanceReplaced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reason",
									"type": "uint256"
								}
							],
							"name": "Jail",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "contract ISuperTokenFactory",
									"name": "newFactory",
									"type": "address"
								}
							],
							"name": "SuperTokenFactoryUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract ISuperToken",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "code",
									"type": "address"
								}
							],
							"name": "SuperTokenLogicUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "bitmap",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "agreementType",
									"type": "bytes32"
								}
							],
							"name": "addToAgreementClassesBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "newBitmap",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "targetApp",
									"type": "address"
								}
							],
							"name": "allowCompositeApp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								},
								{
									"internalType": "int256",
									"name": "appCreditUsedDelta",
									"type": "int256"
								}
							],
							"name": "appCallbackPop",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "newCtx",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								},
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "appCreditGranted",
									"type": "uint256"
								},
								{
									"internalType": "int256",
									"name": "appCreditUsed",
									"type": "int256"
								},
								{
									"internalType": "contract ISuperfluidToken",
									"name": "appCreditToken",
									"type": "address"
								}
							],
							"name": "appCallbackPush",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "newCtx",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "operationType",
											"type": "uint32"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct ISuperfluid.Operation[]",
									"name": "operations",
									"type": "tuple[]"
								}
							],
							"name": "batchCall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperAgreement",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "callData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								}
							],
							"name": "callAgreement",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "returnedData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperAgreement",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "callData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "callAgreementWithContext",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "newCtx",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "returnedData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "callData",
									"type": "bytes"
								}
							],
							"name": "callAppAction",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "returnedData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "callData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "callAppActionWithContext",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "newCtx",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "callData",
									"type": "bytes"
								},
								{
									"internalType": "bool",
									"name": "isTermination",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "callAppAfterCallback",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "newCtx",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "callData",
									"type": "bytes"
								},
								{
									"internalType": "bool",
									"name": "isTermination",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "callAppBeforeCallback",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "cbdata",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								},
								{
									"internalType": "int256",
									"name": "appCreditUsedMore",
									"type": "int256"
								}
							],
							"name": "ctxUseCredit",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "newCtx",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "decodeCtx",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "appCallbackLevel",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "callType",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "msgSender",
											"type": "address"
										},
										{
											"internalType": "bytes4",
											"name": "agreementSelector",
											"type": "bytes4"
										},
										{
											"internalType": "bytes",
											"name": "userData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "appCreditGranted",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "appCreditWantedDeprecated",
											"type": "uint256"
										},
										{
											"internalType": "int256",
											"name": "appCreditUsed",
											"type": "int256"
										},
										{
											"internalType": "address",
											"name": "appAddress",
											"type": "address"
										},
										{
											"internalType": "contract ISuperfluidToken",
											"name": "appCreditToken",
											"type": "address"
										}
									],
									"internalType": "struct ISuperfluid.Context",
									"name": "context",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "operationType",
											"type": "uint32"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct ISuperfluid.Operation[]",
									"name": "operations",
									"type": "tuple[]"
								}
							],
							"name": "forwardBatchCall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "agreementType",
									"type": "bytes32"
								}
							],
							"name": "getAgreementClass",
							"outputs": [
								{
									"internalType": "contract ISuperAgreement",
									"name": "agreementClass",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								}
							],
							"name": "getAppCallbackLevel",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "appCallbackLevel",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								}
							],
							"name": "getAppManifest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isSuperApp",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isJailed",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "noopMask",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getGovernance",
							"outputs": [
								{
									"internalType": "contract ISuperfluidGovernance",
									"name": "governance",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNow",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSuperTokenFactory",
							"outputs": [
								{
									"internalType": "contract ISuperTokenFactory",
									"name": "factory",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSuperTokenFactoryLogic",
							"outputs": [
								{
									"internalType": "address",
									"name": "logic",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperAgreement",
									"name": "agreementClass",
									"type": "address"
								}
							],
							"name": "isAgreementClassListed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "yes",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "agreementType",
									"type": "bytes32"
								}
							],
							"name": "isAgreementTypeListed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "yes",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								}
							],
							"name": "isApp",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								}
							],
							"name": "isAppJailed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isJail",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								},
								{
									"internalType": "contract ISuperApp",
									"name": "targetApp",
									"type": "address"
								}
							],
							"name": "isCompositeAppAllowed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isAppAllowed",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "isCtxValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								},
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "reason",
									"type": "uint256"
								}
							],
							"name": "jailApp",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "newCtx",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "bitmap",
									"type": "uint256"
								}
							],
							"name": "mapAgreementClasses",
							"outputs": [
								{
									"internalType": "contract ISuperAgreement[]",
									"name": "agreementClasses",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperAgreement",
									"name": "agreementClassLogic",
									"type": "address"
								}
							],
							"name": "registerAgreementClass",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "configWord",
									"type": "uint256"
								}
							],
							"name": "registerApp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "configWord",
									"type": "uint256"
								}
							],
							"name": "registerAppByFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "configWord",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "registrationKey",
									"type": "string"
								}
							],
							"name": "registerAppWithKey",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "bitmap",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "agreementType",
									"type": "bytes32"
								}
							],
							"name": "removeFromAgreementClassesBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "newBitmap",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluidGovernance",
									"name": "newGov",
									"type": "address"
								}
							],
							"name": "replaceGovernance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperAgreement",
									"name": "agreementClassLogic",
									"type": "address"
								}
							],
							"name": "updateAgreementClass",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperTokenFactory",
									"name": "newFactory",
									"type": "address"
								}
							],
							"name": "updateSuperTokenFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "token",
									"type": "address"
								}
							],
							"name": "updateSuperTokenLogic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Superfluid",
						"events": {
							"AgreementClassRegistered(bytes32,address)": {
								"details": "agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"",
								"params": {
									"agreementType": "The agreement type registered",
									"code": "Address of the new agreement"
								}
							},
							"AgreementClassUpdated(bytes32,address)": {
								"details": "agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"",
								"params": {
									"agreementType": "The agreement type updated",
									"code": "Address of the new agreement"
								}
							},
							"AppRegistered(address)": {
								"details": "App registered event",
								"params": {
									"app": "Address of jailed app"
								}
							},
							"GovernanceReplaced(address,address)": {
								"details": "Governance replaced event",
								"params": {
									"newGov": "Address of the new governance contract",
									"oldGov": "Address of the old governance contract"
								}
							},
							"Jail(address,uint256)": {
								"details": "Jail event for the app",
								"params": {
									"app": "Address of jailed app",
									"reason": "Reason the app is jailed (see Definitions.sol for the full list)"
								}
							},
							"SuperTokenFactoryUpdated(address)": {
								"details": "SuperToken factory updated event",
								"params": {
									"newFactory": "Address of the new factory"
								}
							},
							"SuperTokenLogicUpdated(address,address)": {
								"details": "SuperToken logic updated event",
								"params": {
									"code": "Address of the new SuperToken logic"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"addToAgreementClassesBitmap(uint256,bytes32)": {
								"details": "agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"",
								"params": {
									"bitmap": "Agreement class bitmap"
								}
							},
							"allowCompositeApp(address)": {
								"details": "Whitelist the target app for app composition for the source app (msg.sender)",
								"params": {
									"targetApp": "The target super app address"
								}
							},
							"appCallbackPop(bytes,int256)": {
								"custom:security": "- Here we cannot do assertValidCtx(ctx), since we do not really save the stack in memory. - Hence there is still implicit trust that the agreement handles the callback push/pop pair correctly.",
								"details": "(For agreements) Pop from the current app callback stack",
								"params": {
									"appCreditUsedDelta": "App credit used by the app.",
									"ctx": "The ctx that was pushed before the callback stack."
								},
								"returns": {
									"newCtx": "                 The current context of the transaction."
								}
							},
							"appCallbackPush(bytes,address,uint256,int256,address)": {
								"details": "(For agreements) Create a new callback stack",
								"params": {
									"app": "The super app.",
									"appCreditGranted": "App credit granted so far.",
									"appCreditUsed": "App credit used so far.",
									"ctx": "The current ctx, it will be validated."
								},
								"returns": {
									"newCtx": "                 The current context of the transaction."
								}
							},
							"batchCall((uint32,address,bytes)[])": {
								"details": "Batch call function",
								"params": {
									"operations": "Array of batch operations"
								}
							},
							"callAgreement(address,bytes,bytes)": {
								"details": "Call agreement function",
								"params": {
									"agreementClass": "The agreement address you are calling",
									"callData": "The contextual call data with placeholder ctx",
									"userData": "Extra user data being sent to the super app callbacks"
								}
							},
							"callAppAction(address,bytes)": {
								"custom:note": "See \"Contextless Call Proxies\" above for more about contextual call data.",
								"details": "Main use case is calling app action in a batch call via the host",
								"params": {
									"callData": "The contextual call data"
								}
							},
							"callAppAfterCallback(address,bytes,bool,bytes)": {
								"details": "(For agreements) Call the app after callback",
								"params": {
									"app": "The super app.",
									"callData": "The call data sending to the super app.",
									"ctx": "Current ctx, it will be validated.",
									"isTermination": "Is it a termination callback?"
								},
								"returns": {
									"newCtx": "           The current context of the transaction."
								}
							},
							"callAppBeforeCallback(address,bytes,bool,bytes)": {
								"details": "(For agreements) StaticCall the app before callback",
								"params": {
									"app": "The super app.",
									"callData": "The call data sending to the super app.",
									"ctx": "Current ctx, it will be validated.",
									"isTermination": "Is it a termination callback?"
								},
								"returns": {
									"cbdata": "           Data returned from the callback."
								}
							},
							"ctxUseCredit(bytes,int256)": {
								"details": "(For agreements) Use app credit.",
								"params": {
									"appCreditUsedMore": "See app credit for more details.",
									"ctx": "The current ctx, it will be validated."
								},
								"returns": {
									"newCtx": "                  The current context of the transaction."
								}
							},
							"forwardBatchCall((uint32,address,bytes)[])": {
								"details": "Batch call function for trusted forwarders (EIP-2771)",
								"params": {
									"operations": "Array of batch operations"
								}
							},
							"getAgreementClass(bytes32)": {
								"details": "agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\""
							},
							"getAppCallbackLevel(address)": {
								"details": "Query app callbacklevel",
								"params": {
									"app": "Super app address"
								}
							},
							"getAppManifest(address)": {
								"details": "Get the manifest of the super app",
								"params": {
									"app": "Super app address"
								}
							},
							"getGovernance()": {
								"details": "Get the current governance address of the Superfluid host"
							},
							"getSuperTokenFactory()": {
								"details": "Get the super token factory",
								"returns": {
									"factory": "The factory"
								}
							},
							"getSuperTokenFactoryLogic()": {
								"details": "Get the super token factory logic (applicable to upgradable deployment)",
								"returns": {
									"logic": "The factory logic"
								}
							},
							"isAgreementClassListed(address)": {
								"details": "Check if the agreement class is whitelisted"
							},
							"isAgreementTypeListed(bytes32)": {
								"details": "agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\""
							},
							"isApp(address)": {
								"details": "Query if the app is registered",
								"params": {
									"app": "Super app address"
								}
							},
							"isAppJailed(address)": {
								"details": "Query if the app has been jailed",
								"params": {
									"app": "Super app address"
								}
							},
							"isCompositeAppAllowed(address,address)": {
								"details": "Query if source app is allowed to call the target app as downstream app",
								"params": {
									"app": "Super app address",
									"targetApp": "The target super app address"
								}
							},
							"jailApp(bytes,address,uint256)": {
								"details": "(For agreements) Jail the app.",
								"params": {
									"app": "The super app.",
									"reason": "Jail reason code."
								},
								"returns": {
									"newCtx": "                 The current context of the transaction."
								}
							},
							"mapAgreementClasses(uint256)": {
								"details": "Map list of the agreement classes using a bitmap",
								"params": {
									"bitmap": "Agreement class bitmap"
								}
							},
							"registerAgreementClass(address)": {
								"custom:modifiers": " - onlyGovernance",
								"details": "Register a new agreement class to the system",
								"params": {
									"agreementClassLogic": "Initial agreement class code"
								}
							},
							"registerApp(uint256)": {
								"custom:deprecated": "you should use `registerAppWithKey` or `registerAppByFactory` instead, because app registration is currently governance permissioned on mainnets.",
								"details": "Message sender (must be a contract) declares itself as a super app.",
								"params": {
									"configWord": "The super app manifest configuration, flags are defined in `SuperAppDefinitions`"
								}
							},
							"registerAppByFactory(address,uint256)": {
								"details": "Message sender (must be a contract) declares app as a super app",
								"params": {
									"configWord": "The super app manifest configuration, flags are defined in `SuperAppDefinitions`"
								}
							},
							"registerAppWithKey(uint256,string)": {
								"details": "Message sender declares itself as a super app.",
								"params": {
									"configWord": "The super app manifest configuration, flags are defined in `SuperAppDefinitions`",
									"registrationKey": "The registration key issued by the governance, needed to register on a mainnet."
								}
							},
							"removeFromAgreementClassesBitmap(uint256,bytes32)": {
								"details": "agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"",
								"params": {
									"bitmap": "Agreement class bitmap"
								}
							},
							"replaceGovernance(address)": {
								"details": "Replace the current governance with a new one"
							},
							"updateAgreementClass(address)": {
								"custom:modifiers": "  - onlyGovernance",
								"details": "Update code of an agreement class",
								"params": {
									"agreementClassLogic": "New code for the agreement class"
								}
							},
							"updateSuperTokenFactory(address)": {
								"details": "Update super token factory",
								"params": {
									"newFactory": "New factory logic"
								}
							},
							"updateSuperTokenLogic(address)": {
								"details": "Refer to ISuperTokenFactory.Upgradability for expected behaviours"
							}
						},
						"title": "Host interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addToAgreementClassesBitmap(uint256,bytes32)": "bced3ddc",
							"allowCompositeApp(address)": "57121e0c",
							"appCallbackPop(bytes,int256)": "989b0c3e",
							"appCallbackPush(bytes,address,uint256,int256,address)": "768fabb0",
							"batchCall((uint32,address,bytes)[])": "6ad3ca7d",
							"callAgreement(address,bytes,bytes)": "39255d5b",
							"callAgreementWithContext(address,bytes,bytes,bytes)": "4329d293",
							"callAppAction(address,bytes)": "1e855cf3",
							"callAppActionWithContext(address,bytes,bytes)": "ba48b5f8",
							"callAppAfterCallback(address,bytes,bool,bytes)": "1e6d0a84",
							"callAppBeforeCallback(address,bytes,bool,bytes)": "74041e02",
							"ctxUseCredit(bytes,int256)": "59a29141",
							"decodeCtx(bytes)": "3f6c923a",
							"forwardBatchCall((uint32,address,bytes)[])": "670e77e3",
							"getAgreementClass(bytes32)": "b6d200de",
							"getAppCallbackLevel(address)": "9378fa13",
							"getAppManifest(address)": "f9f522f4",
							"getGovernance()": "289b3c0d",
							"getNow()": "bbe4fd50",
							"getSuperTokenFactory()": "731aed6e",
							"getSuperTokenFactoryLogic()": "f2e55caf",
							"isAgreementClassListed(address)": "8ca48484",
							"isAgreementTypeListed(bytes32)": "e8dccb7d",
							"isApp(address)": "3ca3ad4e",
							"isAppJailed(address)": "6b4f3335",
							"isCompositeAppAllowed(address,address)": "bb84cfa1",
							"isCtxValid(bytes)": "bf428734",
							"jailApp(bytes,address,uint256)": "b724211e",
							"mapAgreementClasses(uint256)": "c56a069d",
							"registerAgreementClass(address)": "15a024e1",
							"registerApp(uint256)": "ad3915c8",
							"registerAppByFactory(address,uint256)": "f3733052",
							"registerAppWithKey(uint256,string)": "bd1c448b",
							"removeFromAgreementClassesBitmap(uint256,bytes32)": "a5dbbbcd",
							"replaceGovernance(address)": "7283100c",
							"updateAgreementClass(address)": "06cecba8",
							"updateSuperTokenFactory(address)": "54fbc493",
							"updateSuperTokenLogic(address)": "787afde7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_code\",\"type\":\"uint256\"}],\"name\":\"APP_RULE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_AGREEMENT_ALREADY_REGISTERED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_AGREEMENT_CALLBACK_IS_NOT_ACTION\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_AGREEMENT_IS_NOT_REGISTERED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_CALL_AGREEMENT_WITH_CTX_FROM_WRONG_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_CALL_APP_ACTION_WITH_CTX_FROM_WRONG_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_CANNOT_DOWNGRADE_TO_NON_UPGRADEABLE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_INVALID_CONFIG_WORD\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_INVALID_OR_EXPIRED_SUPER_APP_REGISTRATION_KEY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_MAX_256_AGREEMENTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_MUST_BE_CONTRACT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_NON_UPGRADEABLE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_NON_ZERO_LENGTH_PLACEHOLDER_CTX\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_NOT_A_SUPER_APP\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_NO_APP_REGISTRATION_PERMISSIONS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_ONLY_GOVERNANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_ONLY_LISTED_AGREEMENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_RECEIVER_IS_NOT_SUPER_APP\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_SENDER_IS_NOT_SUPER_APP\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_SOURCE_APP_NEEDS_HIGHER_APP_LEVEL\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_SUPER_APP_ALREADY_REGISTERED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_SUPER_APP_IS_JAILED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_UNAUTHORIZED_SUPER_APP_FACTORY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_UNKNOWN_BATCH_CALL_OPERATION_TYPE\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"code\",\"type\":\"address\"}],\"name\":\"AgreementClassRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"code\",\"type\":\"address\"}],\"name\":\"AgreementClassUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"AppRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ISuperfluidGovernance\",\"name\":\"oldGov\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ISuperfluidGovernance\",\"name\":\"newGov\",\"type\":\"address\"}],\"name\":\"GovernanceReplaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reason\",\"type\":\"uint256\"}],\"name\":\"Jail\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ISuperTokenFactory\",\"name\":\"newFactory\",\"type\":\"address\"}],\"name\":\"SuperTokenFactoryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"code\",\"type\":\"address\"}],\"name\":\"SuperTokenLogicUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmap\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"}],\"name\":\"addToAgreementClassesBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newBitmap\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"targetApp\",\"type\":\"address\"}],\"name\":\"allowCompositeApp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"appCreditUsedDelta\",\"type\":\"int256\"}],\"name\":\"appCallbackPop\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"},{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"appCreditGranted\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"appCreditUsed\",\"type\":\"int256\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"appCreditToken\",\"type\":\"address\"}],\"name\":\"appCallbackPush\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operationType\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ISuperfluid.Operation[]\",\"name\":\"operations\",\"type\":\"tuple[]\"}],\"name\":\"batchCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"callAgreement\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"returnedData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"callAgreementWithContext\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnedData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"name\":\"callAppAction\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"returnedData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"callAppActionWithContext\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isTermination\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"callAppAfterCallback\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isTermination\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"callAppBeforeCallback\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"appCreditUsedMore\",\"type\":\"int256\"}],\"name\":\"ctxUseCredit\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"decodeCtx\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"appCallbackLevel\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"callType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"agreementSelector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"appCreditGranted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"appCreditWantedDeprecated\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"appCreditUsed\",\"type\":\"int256\"},{\"internalType\":\"address\",\"name\":\"appAddress\",\"type\":\"address\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"appCreditToken\",\"type\":\"address\"}],\"internalType\":\"struct ISuperfluid.Context\",\"name\":\"context\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operationType\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ISuperfluid.Operation[]\",\"name\":\"operations\",\"type\":\"tuple[]\"}],\"name\":\"forwardBatchCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"}],\"name\":\"getAgreementClass\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClass\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"getAppCallbackLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"appCallbackLevel\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"getAppManifest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSuperApp\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isJailed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"noopMask\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGovernance\",\"outputs\":[{\"internalType\":\"contract ISuperfluidGovernance\",\"name\":\"governance\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSuperTokenFactory\",\"outputs\":[{\"internalType\":\"contract ISuperTokenFactory\",\"name\":\"factory\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSuperTokenFactoryLogic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"logic\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClass\",\"type\":\"address\"}],\"name\":\"isAgreementClassListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"yes\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"}],\"name\":\"isAgreementTypeListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"yes\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"isApp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"isAppJailed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isJail\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"contract ISuperApp\",\"name\":\"targetApp\",\"type\":\"address\"}],\"name\":\"isCompositeAppAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isAppAllowed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"isCtxValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"},{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reason\",\"type\":\"uint256\"}],\"name\":\"jailApp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmap\",\"type\":\"uint256\"}],\"name\":\"mapAgreementClasses\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"agreementClasses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClassLogic\",\"type\":\"address\"}],\"name\":\"registerAgreementClass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"configWord\",\"type\":\"uint256\"}],\"name\":\"registerApp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"configWord\",\"type\":\"uint256\"}],\"name\":\"registerAppByFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"configWord\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"registrationKey\",\"type\":\"string\"}],\"name\":\"registerAppWithKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmap\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"}],\"name\":\"removeFromAgreementClassesBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newBitmap\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidGovernance\",\"name\":\"newGov\",\"type\":\"address\"}],\"name\":\"replaceGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClassLogic\",\"type\":\"address\"}],\"name\":\"updateAgreementClass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperTokenFactory\",\"name\":\"newFactory\",\"type\":\"address\"}],\"name\":\"updateSuperTokenFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"updateSuperTokenLogic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"events\":{\"AgreementClassRegistered(bytes32,address)\":{\"details\":\"agreementType is the keccak256 hash of: \\\"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\\\"\",\"params\":{\"agreementType\":\"The agreement type registered\",\"code\":\"Address of the new agreement\"}},\"AgreementClassUpdated(bytes32,address)\":{\"details\":\"agreementType is the keccak256 hash of: \\\"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\\\"\",\"params\":{\"agreementType\":\"The agreement type updated\",\"code\":\"Address of the new agreement\"}},\"AppRegistered(address)\":{\"details\":\"App registered event\",\"params\":{\"app\":\"Address of jailed app\"}},\"GovernanceReplaced(address,address)\":{\"details\":\"Governance replaced event\",\"params\":{\"newGov\":\"Address of the new governance contract\",\"oldGov\":\"Address of the old governance contract\"}},\"Jail(address,uint256)\":{\"details\":\"Jail event for the app\",\"params\":{\"app\":\"Address of jailed app\",\"reason\":\"Reason the app is jailed (see Definitions.sol for the full list)\"}},\"SuperTokenFactoryUpdated(address)\":{\"details\":\"SuperToken factory updated event\",\"params\":{\"newFactory\":\"Address of the new factory\"}},\"SuperTokenLogicUpdated(address,address)\":{\"details\":\"SuperToken logic updated event\",\"params\":{\"code\":\"Address of the new SuperToken logic\"}}},\"kind\":\"dev\",\"methods\":{\"addToAgreementClassesBitmap(uint256,bytes32)\":{\"details\":\"agreementType is the keccak256 hash of: \\\"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\\\"\",\"params\":{\"bitmap\":\"Agreement class bitmap\"}},\"allowCompositeApp(address)\":{\"details\":\"Whitelist the target app for app composition for the source app (msg.sender)\",\"params\":{\"targetApp\":\"The target super app address\"}},\"appCallbackPop(bytes,int256)\":{\"custom:security\":\"- Here we cannot do assertValidCtx(ctx), since we do not really save the stack in memory. - Hence there is still implicit trust that the agreement handles the callback push/pop pair correctly.\",\"details\":\"(For agreements) Pop from the current app callback stack\",\"params\":{\"appCreditUsedDelta\":\"App credit used by the app.\",\"ctx\":\"The ctx that was pushed before the callback stack.\"},\"returns\":{\"newCtx\":\"                 The current context of the transaction.\"}},\"appCallbackPush(bytes,address,uint256,int256,address)\":{\"details\":\"(For agreements) Create a new callback stack\",\"params\":{\"app\":\"The super app.\",\"appCreditGranted\":\"App credit granted so far.\",\"appCreditUsed\":\"App credit used so far.\",\"ctx\":\"The current ctx, it will be validated.\"},\"returns\":{\"newCtx\":\"                 The current context of the transaction.\"}},\"batchCall((uint32,address,bytes)[])\":{\"details\":\"Batch call function\",\"params\":{\"operations\":\"Array of batch operations\"}},\"callAgreement(address,bytes,bytes)\":{\"details\":\"Call agreement function\",\"params\":{\"agreementClass\":\"The agreement address you are calling\",\"callData\":\"The contextual call data with placeholder ctx\",\"userData\":\"Extra user data being sent to the super app callbacks\"}},\"callAppAction(address,bytes)\":{\"custom:note\":\"See \\\"Contextless Call Proxies\\\" above for more about contextual call data.\",\"details\":\"Main use case is calling app action in a batch call via the host\",\"params\":{\"callData\":\"The contextual call data\"}},\"callAppAfterCallback(address,bytes,bool,bytes)\":{\"details\":\"(For agreements) Call the app after callback\",\"params\":{\"app\":\"The super app.\",\"callData\":\"The call data sending to the super app.\",\"ctx\":\"Current ctx, it will be validated.\",\"isTermination\":\"Is it a termination callback?\"},\"returns\":{\"newCtx\":\"           The current context of the transaction.\"}},\"callAppBeforeCallback(address,bytes,bool,bytes)\":{\"details\":\"(For agreements) StaticCall the app before callback\",\"params\":{\"app\":\"The super app.\",\"callData\":\"The call data sending to the super app.\",\"ctx\":\"Current ctx, it will be validated.\",\"isTermination\":\"Is it a termination callback?\"},\"returns\":{\"cbdata\":\"           Data returned from the callback.\"}},\"ctxUseCredit(bytes,int256)\":{\"details\":\"(For agreements) Use app credit.\",\"params\":{\"appCreditUsedMore\":\"See app credit for more details.\",\"ctx\":\"The current ctx, it will be validated.\"},\"returns\":{\"newCtx\":\"                  The current context of the transaction.\"}},\"forwardBatchCall((uint32,address,bytes)[])\":{\"details\":\"Batch call function for trusted forwarders (EIP-2771)\",\"params\":{\"operations\":\"Array of batch operations\"}},\"getAgreementClass(bytes32)\":{\"details\":\"agreementType is the keccak256 hash of: \\\"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\\\"\"},\"getAppCallbackLevel(address)\":{\"details\":\"Query app callbacklevel\",\"params\":{\"app\":\"Super app address\"}},\"getAppManifest(address)\":{\"details\":\"Get the manifest of the super app\",\"params\":{\"app\":\"Super app address\"}},\"getGovernance()\":{\"details\":\"Get the current governance address of the Superfluid host\"},\"getSuperTokenFactory()\":{\"details\":\"Get the super token factory\",\"returns\":{\"factory\":\"The factory\"}},\"getSuperTokenFactoryLogic()\":{\"details\":\"Get the super token factory logic (applicable to upgradable deployment)\",\"returns\":{\"logic\":\"The factory logic\"}},\"isAgreementClassListed(address)\":{\"details\":\"Check if the agreement class is whitelisted\"},\"isAgreementTypeListed(bytes32)\":{\"details\":\"agreementType is the keccak256 hash of: \\\"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\\\"\"},\"isApp(address)\":{\"details\":\"Query if the app is registered\",\"params\":{\"app\":\"Super app address\"}},\"isAppJailed(address)\":{\"details\":\"Query if the app has been jailed\",\"params\":{\"app\":\"Super app address\"}},\"isCompositeAppAllowed(address,address)\":{\"details\":\"Query if source app is allowed to call the target app as downstream app\",\"params\":{\"app\":\"Super app address\",\"targetApp\":\"The target super app address\"}},\"jailApp(bytes,address,uint256)\":{\"details\":\"(For agreements) Jail the app.\",\"params\":{\"app\":\"The super app.\",\"reason\":\"Jail reason code.\"},\"returns\":{\"newCtx\":\"                 The current context of the transaction.\"}},\"mapAgreementClasses(uint256)\":{\"details\":\"Map list of the agreement classes using a bitmap\",\"params\":{\"bitmap\":\"Agreement class bitmap\"}},\"registerAgreementClass(address)\":{\"custom:modifiers\":\" - onlyGovernance\",\"details\":\"Register a new agreement class to the system\",\"params\":{\"agreementClassLogic\":\"Initial agreement class code\"}},\"registerApp(uint256)\":{\"custom:deprecated\":\"you should use `registerAppWithKey` or `registerAppByFactory` instead, because app registration is currently governance permissioned on mainnets.\",\"details\":\"Message sender (must be a contract) declares itself as a super app.\",\"params\":{\"configWord\":\"The super app manifest configuration, flags are defined in `SuperAppDefinitions`\"}},\"registerAppByFactory(address,uint256)\":{\"details\":\"Message sender (must be a contract) declares app as a super app\",\"params\":{\"configWord\":\"The super app manifest configuration, flags are defined in `SuperAppDefinitions`\"}},\"registerAppWithKey(uint256,string)\":{\"details\":\"Message sender declares itself as a super app.\",\"params\":{\"configWord\":\"The super app manifest configuration, flags are defined in `SuperAppDefinitions`\",\"registrationKey\":\"The registration key issued by the governance, needed to register on a mainnet.\"}},\"removeFromAgreementClassesBitmap(uint256,bytes32)\":{\"details\":\"agreementType is the keccak256 hash of: \\\"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\\\"\",\"params\":{\"bitmap\":\"Agreement class bitmap\"}},\"replaceGovernance(address)\":{\"details\":\"Replace the current governance with a new one\"},\"updateAgreementClass(address)\":{\"custom:modifiers\":\"  - onlyGovernance\",\"details\":\"Update code of an agreement class\",\"params\":{\"agreementClassLogic\":\"New code for the agreement class\"}},\"updateSuperTokenFactory(address)\":{\"details\":\"Update super token factory\",\"params\":{\"newFactory\":\"New factory logic\"}},\"updateSuperTokenLogic(address)\":{\"details\":\"Refer to ISuperTokenFactory.Upgradability for expected behaviours\"}},\"title\":\"Host interface\",\"version\":1},\"userdoc\":{\"events\":{\"AgreementClassRegistered(bytes32,address)\":{\"notice\":\"Agreement class registered event\"},\"AgreementClassUpdated(bytes32,address)\":{\"notice\":\"Agreement class updated event\"}},\"kind\":\"user\",\"methods\":{\"addToAgreementClassesBitmap(uint256,bytes32)\":{\"notice\":\"Create a new bitmask by adding a agreement class to it\"},\"callAppAction(address,bytes)\":{\"notice\":\"Call app action\"},\"getAgreementClass(bytes32)\":{\"notice\":\"Get agreement class\"},\"isAgreementTypeListed(bytes32)\":{\"notice\":\"Check if the agreement type is whitelisted\"},\"registerAppByFactory(address,uint256)\":{\"notice\":\"On mainnet deployments, only factory contracts pre-authorized by governance can use this. See https://github.com/superfluid-finance/protocol-monorepo/wiki/Super-App-White-listing-Guide\"},\"registerAppWithKey(uint256,string)\":{\"notice\":\"See https://github.com/superfluid-finance/protocol-monorepo/wiki/Super-App-White-listing-Guide On testnets or in dev environment, a placeholder (e.g. empty string) can be used. While the message sender must be the super app itself, the transaction sender (tx.origin) must be the deployer account the registration key was issued for.\"},\"removeFromAgreementClassesBitmap(uint256,bytes32)\":{\"notice\":\"Create a new bitmask by removing a agreement class from it\"},\"updateSuperTokenLogic(address)\":{\"notice\":\"Update the super token logic to the latest\"}},\"notice\":\"This is the central contract of the system where super agreement, super app and super token features are connected. The Superfluid host contract is also the entry point for the protocol users, where batch call and meta transaction are provided for UX improvements.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":\"ISuperfluid\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x6cc4b0724d977190c7441dfc3be6c6e48b43b555c3370af32ef5b6600f15f53f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3e89c944642772a42429f21a11017b57deb98a9198f8e4f8749f00aaee71299e\",\"dweb:/ipfs/QmaSv9GvqikcGHJ3tcwATDHSpQw6mfnHPDtcfqcZSS7LF6\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0x2ccec11f964b165f64e453192793991bf28e1054069b6f709a39849a8286aeb4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://edbaf6db0b9c6803dcdb7c91a2ddbdba503a41ecc5cecf9c27a43643669bfff1\",\"dweb:/ipfs/QmYpf7XFKrnB2ZAPf8cDqfvZDfyoxMHA1x2FQSYzDFE3KZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x316aa6cd16167569d5ee47fb2e4673b1def2117c7ea56969290ab6aec97cd263\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a5eb13acce613a227c2c2b3da2b88ad6361c9e541ca59ccee0bb5cf42cffccc6\",\"dweb:/ipfs/QmceA9RWHL1BWk4cPnYY55FjAdsEi1LfXrC11RbF8Wb8eW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64\",\"dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229\",\"dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"AgreementClassRegistered(bytes32,address)": {
								"notice": "Agreement class registered event"
							},
							"AgreementClassUpdated(bytes32,address)": {
								"notice": "Agreement class updated event"
							}
						},
						"kind": "user",
						"methods": {
							"addToAgreementClassesBitmap(uint256,bytes32)": {
								"notice": "Create a new bitmask by adding a agreement class to it"
							},
							"callAppAction(address,bytes)": {
								"notice": "Call app action"
							},
							"getAgreementClass(bytes32)": {
								"notice": "Get agreement class"
							},
							"isAgreementTypeListed(bytes32)": {
								"notice": "Check if the agreement type is whitelisted"
							},
							"registerAppByFactory(address,uint256)": {
								"notice": "On mainnet deployments, only factory contracts pre-authorized by governance can use this. See https://github.com/superfluid-finance/protocol-monorepo/wiki/Super-App-White-listing-Guide"
							},
							"registerAppWithKey(uint256,string)": {
								"notice": "See https://github.com/superfluid-finance/protocol-monorepo/wiki/Super-App-White-listing-Guide On testnets or in dev environment, a placeholder (e.g. empty string) can be used. While the message sender must be the super app itself, the transaction sender (tx.origin) must be the deployer account the registration key was issued for."
							},
							"removeFromAgreementClassesBitmap(uint256,bytes32)": {
								"notice": "Create a new bitmask by removing a agreement class from it"
							},
							"updateSuperTokenLogic(address)": {
								"notice": "Update the super token logic to the latest"
							}
						},
						"notice": "This is the central contract of the system where super agreement, super app and super token features are connected. The Superfluid host contract is also the entry point for the protocol users, where batch call and meta transaction are provided for UX improvements.",
						"version": 1
					}
				}
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
				"ISuperfluidGovernance": {
					"abi": [
						{
							"inputs": [],
							"name": "SF_GOV_ARRAYS_NOT_SAME_LENGTH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_GOV_INVALID_LIQUIDATION_OR_PATRICIAN_PERIOD",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_GOV_MUST_BE_CONTRACT",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluid",
									"name": "host",
									"type": "address"
								},
								{
									"internalType": "contract ISuperToken[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "batchUpdateSuperTokenLogic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluid",
									"name": "host",
									"type": "address"
								},
								{
									"internalType": "contract ISuperfluidToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "clearConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluid",
									"name": "host",
									"type": "address"
								},
								{
									"internalType": "contract ISuperfluidToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "getConfigAsAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "value",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluid",
									"name": "host",
									"type": "address"
								},
								{
									"internalType": "contract ISuperfluidToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "getConfigAsUint256",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluid",
									"name": "host",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								}
							],
							"name": "registerAgreementClass",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluid",
									"name": "host",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newGov",
									"type": "address"
								}
							],
							"name": "replaceGovernance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluid",
									"name": "host",
									"type": "address"
								},
								{
									"internalType": "contract ISuperfluidToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "value",
									"type": "address"
								}
							],
							"name": "setConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluid",
									"name": "host",
									"type": "address"
								},
								{
									"internalType": "contract ISuperfluidToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "setConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluid",
									"name": "host",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "hostNewLogic",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "agreementClassNewLogics",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "superTokenFactoryNewLogic",
									"type": "address"
								}
							],
							"name": "updateContracts",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Superfluid",
						"kind": "dev",
						"methods": {
							"batchUpdateSuperTokenLogic(address,address[])": {
								"details": "Update supertoken logic contract to the latest that is managed by the super token factory"
							},
							"clearConfig(address,address,bytes32)": {
								"details": "Clear configuration"
							},
							"getConfigAsAddress(address,address,bytes32)": {
								"details": "Get configuration as address value"
							},
							"getConfigAsUint256(address,address,bytes32)": {
								"details": "Get configuration as uint256 value"
							},
							"registerAgreementClass(address,address)": {
								"details": "Register a new agreement class"
							},
							"replaceGovernance(address,address)": {
								"details": "Replace the current governance with a new governance"
							},
							"setConfig(address,address,bytes32,address)": {
								"details": "Set configuration as address value"
							},
							"setConfig(address,address,bytes32,uint256)": {
								"details": "Set configuration as uint256 value"
							},
							"updateContracts(address,address,address[],address)": {
								"custom:note": " - Because they might have inter-dependencies, it is good to have one single function to update them all",
								"details": "Update logics of the contracts"
							}
						},
						"title": "Superfluid governance interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"batchUpdateSuperTokenLogic(address,address[])": "42148deb",
							"clearConfig(address,address,bytes32)": "640b6cc9",
							"getConfigAsAddress(address,address,bytes32)": "8369a0f1",
							"getConfigAsUint256(address,address,bytes32)": "80f70cba",
							"registerAgreementClass(address,address)": "cadf8f85",
							"replaceGovernance(address,address)": "44864b25",
							"setConfig(address,address,bytes32,address)": "78707cb8",
							"setConfig(address,address,bytes32,uint256)": "f79a8e63",
							"updateContracts(address,address,address[],address)": "427942a4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SF_GOV_ARRAYS_NOT_SAME_LENGTH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_GOV_INVALID_LIQUIDATION_OR_PATRICIAN_PERIOD\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_GOV_MUST_BE_CONTRACT\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract ISuperToken[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"batchUpdateSuperTokenLogic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"clearConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"getConfigAsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"getConfigAsUint256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"}],\"name\":\"registerAgreementClass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newGov\",\"type\":\"address\"}],\"name\":\"replaceGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"hostNewLogic\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"agreementClassNewLogics\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"superTokenFactoryNewLogic\",\"type\":\"address\"}],\"name\":\"updateContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{\"batchUpdateSuperTokenLogic(address,address[])\":{\"details\":\"Update supertoken logic contract to the latest that is managed by the super token factory\"},\"clearConfig(address,address,bytes32)\":{\"details\":\"Clear configuration\"},\"getConfigAsAddress(address,address,bytes32)\":{\"details\":\"Get configuration as address value\"},\"getConfigAsUint256(address,address,bytes32)\":{\"details\":\"Get configuration as uint256 value\"},\"registerAgreementClass(address,address)\":{\"details\":\"Register a new agreement class\"},\"replaceGovernance(address,address)\":{\"details\":\"Replace the current governance with a new governance\"},\"setConfig(address,address,bytes32,address)\":{\"details\":\"Set configuration as address value\"},\"setConfig(address,address,bytes32,uint256)\":{\"details\":\"Set configuration as uint256 value\"},\"updateContracts(address,address,address[],address)\":{\"custom:note\":\" - Because they might have inter-dependencies, it is good to have one single function to update them all\",\"details\":\"Update logics of the contracts\"}},\"title\":\"Superfluid governance interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":\"ISuperfluidGovernance\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x6cc4b0724d977190c7441dfc3be6c6e48b43b555c3370af32ef5b6600f15f53f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3e89c944642772a42429f21a11017b57deb98a9198f8e4f8749f00aaee71299e\",\"dweb:/ipfs/QmaSv9GvqikcGHJ3tcwATDHSpQw6mfnHPDtcfqcZSS7LF6\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0x2ccec11f964b165f64e453192793991bf28e1054069b6f709a39849a8286aeb4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://edbaf6db0b9c6803dcdb7c91a2ddbdba503a41ecc5cecf9c27a43643669bfff1\",\"dweb:/ipfs/QmYpf7XFKrnB2ZAPf8cDqfvZDfyoxMHA1x2FQSYzDFE3KZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x316aa6cd16167569d5ee47fb2e4673b1def2117c7ea56969290ab6aec97cd263\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a5eb13acce613a227c2c2b3da2b88ad6361c9e541ca59ccee0bb5cf42cffccc6\",\"dweb:/ipfs/QmceA9RWHL1BWk4cPnYY55FjAdsEi1LfXrC11RbF8Wb8eW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64\",\"dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229\",\"dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
				"ISuperfluidToken": {
					"abi": [
						{
							"inputs": [],
							"name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_TOKEN_ONLY_HOST",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_TOKEN_ONLY_LISTED_AGREEMENT",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"name": "AgreementCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "penaltyAccount",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "rewardAccount",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"name": "AgreementLiquidated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "liquidatorAccount",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "penaltyAccount",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "bondAccount",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bailoutAmount",
									"type": "uint256"
								}
							],
							"name": "AgreementLiquidatedBy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "liquidatorAccount",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "targetAccount",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "rewardAmountReceiver",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "targetAccountBalanceDelta",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "liquidationTypeData",
									"type": "bytes"
								}
							],
							"name": "AgreementLiquidatedV2",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "slotId",
									"type": "uint256"
								}
							],
							"name": "AgreementStateUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "AgreementTerminated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"name": "AgreementUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "bailoutAccount",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bailoutAmount",
									"type": "uint256"
								}
							],
							"name": "Bailout",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"name": "createAgreement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getAccountActiveAgreements",
							"outputs": [
								{
									"internalType": "contract ISuperAgreement[]",
									"name": "activeAgreements",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "dataLength",
									"type": "uint256"
								}
							],
							"name": "getAgreementData",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "slotId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "dataLength",
									"type": "uint256"
								}
							],
							"name": "getAgreementStateSlot",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "slotData",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHost",
							"outputs": [
								{
									"internalType": "address",
									"name": "host",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "isAccountCritical",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isCritical",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAccountCriticalNow",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isCritical",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "isAccountSolvent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isSolvent",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAccountSolventNow",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isSolvent",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "liquidationTypeData",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "liquidatorAccount",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "useDefaultRewardAccount",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "targetAccount",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								},
								{
									"internalType": "int256",
									"name": "targetAccountBalanceDelta",
									"type": "int256"
								}
							],
							"name": "makeLiquidationPayoutsV2",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "realtimeBalanceOf",
							"outputs": [
								{
									"internalType": "int256",
									"name": "availableBalance",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "deposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "owedDeposit",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "realtimeBalanceOfNow",
							"outputs": [
								{
									"internalType": "int256",
									"name": "availableBalance",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "deposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "owedDeposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "int256",
									"name": "delta",
									"type": "int256"
								}
							],
							"name": "settleBalance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "dataLength",
									"type": "uint256"
								}
							],
							"name": "terminateAgreement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"name": "updateAgreementData",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "slotId",
									"type": "uint256"
								},
								{
									"internalType": "bytes32[]",
									"name": "slotData",
									"type": "bytes32[]"
								}
							],
							"name": "updateAgreementStateSlot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Superfluid",
						"events": {
							"AgreementCreated(address,bytes32,bytes32[])": {
								"details": "Agreement created event",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"data": "Agreement data",
									"id": "Agreement ID"
								}
							},
							"AgreementLiquidated(address,bytes32,address,address,uint256)": {
								"custom:deprecated": "Use AgreementLiquidatedV2 instead",
								"details": "Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"id": "Agreement ID",
									"penaltyAccount": "Account of the agreement to be penalized",
									"rewardAccount": "Account that collect the reward",
									"rewardAmount": "Amount of liquidation reward"
								}
							},
							"AgreementLiquidatedBy(address,address,bytes32,address,address,uint256,uint256)": {
								"custom:deprecated": "Use AgreementLiquidatedV2 instead",
								"custom:note": " Reward account rule: - if bailout is equal to 0, then   - the bondAccount will get the rewardAmount,   - the penaltyAccount will pay for the rewardAmount. - if bailout is larger than 0, then   - the liquidatorAccount will get the rewardAmouont,   - the bondAccount will pay for both the rewardAmount and bailoutAmount,   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.",
								"details": "Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"bailoutAmount": "Amount of liquidation bailouot",
									"bondAccount": "Account that collect the reward or bailout accounts",
									"id": "Agreement ID",
									"liquidatorAccount": "Account of the agent that performed the liquidation.",
									"penaltyAccount": "Account of the agreement to be penalized",
									"rewardAmount": "Amount of liquidation reward"
								}
							},
							"AgreementLiquidatedV2(address,bytes32,address,address,address,uint256,int256,bytes)": {
								"custom:note": " Reward account rule: - if the agreement is liquidated during the PIC period   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount   - the targetAccount will pay for the rewardAmount - if the agreement is liquidated after the PIC period AND the targetAccount is solvent   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)   - the targetAccount will pay for the rewardAmount - if the targetAccount is insolvent   - the liquidatorAccount will get the rewardAmount (single deposit)   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount   - the targetAccount will receive the bailoutAmount",
								"details": "Agreement liquidation event v2 (including agent account)",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"id": "Agreement ID",
									"liquidationTypeData": "The encoded liquidation type data including the version (how to decode)",
									"liquidatorAccount": "Address of the executor of the liquidation",
									"rewardAmount": "The amount the reward recipient account balance should change by",
									"rewardAmountReceiver": "Account that collects the reward or bails out insolvent accounts",
									"targetAccount": "Account of the stream sender",
									"targetAccountBalanceDelta": "The amount the sender account balance should change by"
								}
							},
							"AgreementStateUpdated(address,address,uint256)": {
								"details": "Agreement account state updated event",
								"params": {
									"account": "Account updated",
									"agreementClass": "Contract address of the agreement",
									"slotId": "slot id of the agreement state"
								}
							},
							"AgreementTerminated(address,bytes32)": {
								"details": "Agreement terminated event",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"id": "Agreement ID"
								}
							},
							"AgreementUpdated(address,bytes32,bytes32[])": {
								"details": "Agreement updated event",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"data": "Agreement data",
									"id": "Agreement ID"
								}
							},
							"Bailout(address,uint256)": {
								"custom:deprecated": "Use AgreementLiquidatedV2 instead",
								"details": "System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)",
								"params": {
									"bailoutAccount": "Account that bailout the penalty account",
									"bailoutAmount": "Amount of account bailout"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"createAgreement(bytes32,bytes32[])": {
								"details": "Create a new agreement",
								"params": {
									"data": "Agreement data",
									"id": "Agreement ID"
								}
							},
							"getAccountActiveAgreements(address)": {
								"details": "An active agreement is one that has state for the account",
								"params": {
									"account": "Account to query"
								},
								"returns": {
									"activeAgreements": "List of accounts that have non-zero states for the account"
								}
							},
							"getAgreementData(address,bytes32,uint256)": {
								"details": "Get data of the agreement",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"id": "Agreement ID"
								},
								"returns": {
									"data": "Data of the agreement"
								}
							},
							"getAgreementStateSlot(address,address,uint256,uint256)": {
								"details": "Get data of the slot of the state of an agreement",
								"params": {
									"account": "Account to query",
									"agreementClass": "Contract address of the agreement",
									"dataLength": "length of the state data",
									"slotId": "slot id of the state"
								}
							},
							"getHost()": {
								"details": "Get superfluid host contract address"
							},
							"isAccountCritical(address,uint256)": {
								"details": "A critical account is when availableBalance < 0",
								"params": {
									"account": "The account to check",
									"timestamp": "The time we'd like to check if the account is critical (should use future)"
								},
								"returns": {
									"isCritical": "Whether the account is critical"
								}
							},
							"isAccountCriticalNow(address)": {
								"details": "A critical account is when availableBalance < 0",
								"params": {
									"account": "The account to check"
								},
								"returns": {
									"isCritical": "Whether the account is critical"
								}
							},
							"isAccountSolvent(address,uint256)": {
								"details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
								"params": {
									"account": "The account to check",
									"timestamp": "The time we'd like to check if the account is solvent (should use future)"
								},
								"returns": {
									"isSolvent": "True if the account is solvent, false otherwise"
								}
							},
							"isAccountSolventNow(address)": {
								"details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
								"params": {
									"account": "The account to check"
								},
								"returns": {
									"isSolvent": "True if the account is solvent, false otherwise"
								}
							},
							"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": {
								"custom:modifiers": "  - onlyAgreement",
								"custom:note": " - If a bailout is required (bailoutAmount > 0)   - the actual reward (single deposit) goes to the executor,   - while the reward account becomes the bailout account   - total bailout include: bailout amount + reward amount   - the targetAccount will be bailed out - If a bailout is not required   - the targetAccount will pay the rewardAmount   - the liquidator (reward account in PIC period) will receive the rewardAmount",
								"details": "Make liquidation payouts (v2)",
								"params": {
									"id": "Agreement ID",
									"liquidationTypeData": "Data regarding the version of the liquidation schema and the type",
									"liquidatorAccount": "Address of the executor of the liquidation",
									"rewardAmount": "The amount the rewarded account will receive",
									"targetAccount": "Account to be liquidated",
									"targetAccountBalanceDelta": "The delta amount the target account balance should change by",
									"useDefaultRewardAccount": "Whether or not the default reward account receives the rewardAmount"
								}
							},
							"realtimeBalanceOf(address,uint256)": {
								"details": "Calculate the real balance of a user, taking in consideration all agreements of the account",
								"params": {
									"account": "for the query",
									"timestamp": "Time of balance"
								},
								"returns": {
									"availableBalance": "Real-time balance",
									"deposit": "Account deposit",
									"owedDeposit": "Account owed Deposit"
								}
							},
							"realtimeBalanceOfNow(address)": {
								"details": "realtimeBalanceOf with timestamp equals to block timestamp",
								"params": {
									"account": "for the query"
								},
								"returns": {
									"availableBalance": "Real-time balance",
									"deposit": "Account deposit",
									"owedDeposit": "Account owed Deposit"
								}
							},
							"settleBalance(address,int256)": {
								"custom:modifiers": "  - onlyAgreement",
								"details": "The agreement needs to make sure that the balance delta is balanced afterwards",
								"params": {
									"account": "Account to query.",
									"delta": "Amount of balance delta to be settled"
								}
							},
							"terminateAgreement(bytes32,uint256)": {
								"details": "Close the agreement",
								"params": {
									"id": "Agreement ID"
								}
							},
							"updateAgreementData(bytes32,bytes32[])": {
								"details": "Create a new agreement",
								"params": {
									"data": "Agreement data",
									"id": "Agreement ID"
								}
							},
							"updateAgreementStateSlot(address,uint256,bytes32[])": {
								"custom:note": " - To clear the storage out, provide zero-ed array of intended length",
								"details": "Update agreement state slot",
								"params": {
									"account": "Account to be updated"
								}
							}
						},
						"title": "Superfluid token interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createAgreement(bytes32,bytes32[])": "12a6a3f8",
							"getAccountActiveAgreements(address)": "386fa221",
							"getAgreementData(address,bytes32,uint256)": "6c2d9f2f",
							"getAgreementStateSlot(address,address,uint256,uint256)": "4b61cc33",
							"getHost()": "20bc4425",
							"isAccountCritical(address,uint256)": "d9d078d6",
							"isAccountCriticalNow(address)": "79359f6f",
							"isAccountSolvent(address,uint256)": "b84cdd4a",
							"isAccountSolventNow(address)": "bb0d196e",
							"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": "1863e809",
							"realtimeBalanceOf(address,uint256)": "eb3537cc",
							"realtimeBalanceOfNow(address)": "2ec8eec7",
							"settleBalance(address,int256)": "cf97256d",
							"terminateAgreement(bytes32,uint256)": "27048397",
							"updateAgreementData(bytes32,bytes32[])": "a1b2bf8b",
							"updateAgreementStateSlot(address,uint256,bytes32[])": "090c415e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_ALREADY_EXISTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_DOES_NOT_EXIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_BURN_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_MOVE_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_LISTED_AGREEMENT\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidatedBy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardAmountReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"}],\"name\":\"AgreementLiquidatedV2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"}],\"name\":\"AgreementStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"AgreementTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bailoutAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"Bailout\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountActiveAgreements\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"activeAgreements\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementData\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementStateSlot\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountCritical\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountCriticalNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountSolvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountSolventNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useDefaultRewardAccount\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"}],\"name\":\"makeLiquidationPayoutsV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"realtimeBalanceOfNow\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"settleBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementStateSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"events\":{\"AgreementCreated(address,bytes32,bytes32[])\":{\"details\":\"Agreement created event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"AgreementLiquidated(address,bytes32,address,address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAccount\":\"Account that collect the reward\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedBy(address,address,bytes32,address,address,uint256,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"custom:note\":\" Reward account rule: - if bailout is equal to 0, then   - the bondAccount will get the rewardAmount,   - the penaltyAccount will pay for the rewardAmount. - if bailout is larger than 0, then   - the liquidatorAccount will get the rewardAmouont,   - the bondAccount will pay for both the rewardAmount and bailoutAmount,   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"bailoutAmount\":\"Amount of liquidation bailouot\",\"bondAccount\":\"Account that collect the reward or bailout accounts\",\"id\":\"Agreement ID\",\"liquidatorAccount\":\"Account of the agent that performed the liquidation.\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedV2(address,bytes32,address,address,address,uint256,int256,bytes)\":{\"custom:note\":\" Reward account rule: - if the agreement is liquidated during the PIC period   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount   - the targetAccount will pay for the rewardAmount - if the agreement is liquidated after the PIC period AND the targetAccount is solvent   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)   - the targetAccount will pay for the rewardAmount - if the targetAccount is insolvent   - the liquidatorAccount will get the rewardAmount (single deposit)   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount   - the targetAccount will receive the bailoutAmount\",\"details\":\"Agreement liquidation event v2 (including agent account)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"liquidationTypeData\":\"The encoded liquidation type data including the version (how to decode)\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the reward recipient account balance should change by\",\"rewardAmountReceiver\":\"Account that collects the reward or bails out insolvent accounts\",\"targetAccount\":\"Account of the stream sender\",\"targetAccountBalanceDelta\":\"The amount the sender account balance should change by\"}},\"AgreementStateUpdated(address,address,uint256)\":{\"details\":\"Agreement account state updated event\",\"params\":{\"account\":\"Account updated\",\"agreementClass\":\"Contract address of the agreement\",\"slotId\":\"slot id of the agreement state\"}},\"AgreementTerminated(address,bytes32)\":{\"details\":\"Agreement terminated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"}},\"AgreementUpdated(address,bytes32,bytes32[])\":{\"details\":\"Agreement updated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"Bailout(address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"bailoutAccount\":\"Account that bailout the penalty account\",\"bailoutAmount\":\"Amount of account bailout\"}}},\"kind\":\"dev\",\"methods\":{\"createAgreement(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"getAccountActiveAgreements(address)\":{\"details\":\"An active agreement is one that has state for the account\",\"params\":{\"account\":\"Account to query\"},\"returns\":{\"activeAgreements\":\"List of accounts that have non-zero states for the account\"}},\"getAgreementData(address,bytes32,uint256)\":{\"details\":\"Get data of the agreement\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"},\"returns\":{\"data\":\"Data of the agreement\"}},\"getAgreementStateSlot(address,address,uint256,uint256)\":{\"details\":\"Get data of the slot of the state of an agreement\",\"params\":{\"account\":\"Account to query\",\"agreementClass\":\"Contract address of the agreement\",\"dataLength\":\"length of the state data\",\"slotId\":\"slot id of the state\"}},\"getHost()\":{\"details\":\"Get superfluid host contract address\"},\"isAccountCritical(address,uint256)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is critical (should use future)\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountCriticalNow(address)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountSolvent(address,uint256)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is solvent (should use future)\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isAccountSolventNow(address)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)\":{\"custom:modifiers\":\"  - onlyAgreement\",\"custom:note\":\" - If a bailout is required (bailoutAmount > 0)   - the actual reward (single deposit) goes to the executor,   - while the reward account becomes the bailout account   - total bailout include: bailout amount + reward amount   - the targetAccount will be bailed out - If a bailout is not required   - the targetAccount will pay the rewardAmount   - the liquidator (reward account in PIC period) will receive the rewardAmount\",\"details\":\"Make liquidation payouts (v2)\",\"params\":{\"id\":\"Agreement ID\",\"liquidationTypeData\":\"Data regarding the version of the liquidation schema and the type\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the rewarded account will receive\",\"targetAccount\":\"Account to be liquidated\",\"targetAccountBalanceDelta\":\"The delta amount the target account balance should change by\",\"useDefaultRewardAccount\":\"Whether or not the default reward account receives the rewardAmount\"}},\"realtimeBalanceOf(address,uint256)\":{\"details\":\"Calculate the real balance of a user, taking in consideration all agreements of the account\",\"params\":{\"account\":\"for the query\",\"timestamp\":\"Time of balance\"},\"returns\":{\"availableBalance\":\"Real-time balance\",\"deposit\":\"Account deposit\",\"owedDeposit\":\"Account owed Deposit\"}},\"realtimeBalanceOfNow(address)\":{\"details\":\"realtimeBalanceOf with timestamp equals to block timestamp\",\"params\":{\"account\":\"for the query\"},\"returns\":{\"availableBalance\":\"Real-time balance\",\"deposit\":\"Account deposit\",\"owedDeposit\":\"Account owed Deposit\"}},\"settleBalance(address,int256)\":{\"custom:modifiers\":\"  - onlyAgreement\",\"details\":\"The agreement needs to make sure that the balance delta is balanced afterwards\",\"params\":{\"account\":\"Account to query.\",\"delta\":\"Amount of balance delta to be settled\"}},\"terminateAgreement(bytes32,uint256)\":{\"details\":\"Close the agreement\",\"params\":{\"id\":\"Agreement ID\"}},\"updateAgreementData(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"updateAgreementStateSlot(address,uint256,bytes32[])\":{\"custom:note\":\" - To clear the storage out, provide zero-ed array of intended length\",\"details\":\"Update agreement state slot\",\"params\":{\"account\":\"Account to be updated\"}}},\"title\":\"Superfluid token interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAccountActiveAgreements(address)\":{\"notice\":\"Get a list of agreements that is active for the account\"},\"isAccountCritical(address,uint256)\":{\"notice\":\"Check if account is critical\"},\"isAccountCriticalNow(address)\":{\"notice\":\"Check if account is critical now (current host.getNow())\"},\"isAccountSolvent(address,uint256)\":{\"notice\":\"Check if account is solvent\"},\"isAccountSolventNow(address)\":{\"notice\":\"Check if account is solvent now\"},\"realtimeBalanceOfNow(address)\":{\"notice\":\"Calculate the realtime balance given the current host.getNow() value\"},\"settleBalance(address,int256)\":{\"notice\":\"Settle balance from an account by the agreement\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":\"ISuperfluidToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getAccountActiveAgreements(address)": {
								"notice": "Get a list of agreements that is active for the account"
							},
							"isAccountCritical(address,uint256)": {
								"notice": "Check if account is critical"
							},
							"isAccountCriticalNow(address)": {
								"notice": "Check if account is critical now (current host.getNow())"
							},
							"isAccountSolvent(address,uint256)": {
								"notice": "Check if account is solvent"
							},
							"isAccountSolventNow(address)": {
								"notice": "Check if account is solvent now"
							},
							"realtimeBalanceOfNow(address)": {
								"notice": "Calculate the realtime balance given the current host.getNow() value"
							},
							"settleBalance(address,int256)": {
								"notice": "Settle balance from an account by the agreement"
							}
						},
						"version": 1
					}
				}
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
				"ERC20WithTokenInfo": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Superfluid",
						"details": "Using abstract contract instead of interfaces because old solidity      does not support interface inheriting other interfaces solhint-disable-next-line no-empty-blocks",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"title": "ERC20 token with token info interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"Using abstract contract instead of interfaces because old solidity      does not support interface inheriting other interfaces solhint-disable-next-line no-empty-blocks\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"title\":\"ERC20 token with token info interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":\"ERC20WithTokenInfo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
				"TokenInfo": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Superfluid",
						"details": "ERC20 standard interface does not specify these functions, but      often the token implementations have them.",
						"kind": "dev",
						"methods": {
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							}
						},
						"title": "ERC20 token info interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"ERC20 standard interface does not specify these functions, but      often the token implementations have them.\",\"kind\":\"dev\",\"methods\":{\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"}},\"title\":\"ERC20 token info interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":\"TokenInfo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BurnMintSuperToken.sol": {
				"BurnMintSuperToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "Initialized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "BURNER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factory",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialAddress",
									"type": "address"
								}
							],
							"name": "initializeProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"author": "jtriley.eth",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"burn(uint256,bytes)": {
								"params": {
									"amount": "Amount to burn"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"initialize(address,string,string,uint256,address,bytes)": {
								"details": "We MUST mint here, there is no other way to mint tokens",
								"params": {
									"factory": "Super Token factory for initialization",
									"initialSupply": "Initial token supply to pre-mint",
									"name": "Name of Super Token",
									"receiver": "Receiver of pre-mint",
									"symbol": "Symbol of Super Token",
									"userData": "Arbitrary user data for pre-mint"
								}
							},
							"initializeProxy(address)": {
								"details": "Called by the SuperTokenFactory contract on upgrade",
								"params": {
									"initialAddress": "logic contract address"
								}
							},
							"mint(address,uint256,bytes)": {
								"params": {
									"amount": "Amount to mint",
									"receiver": "Receiver of minted tokens"
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"title": "Burnable and Mintable Pure Super Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BurnMintSuperToken.sol\":328:1817  contract BurnMintSuperToken is SuperTokenBase, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BurnMintSuperToken.sol\":577:650  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/BurnMintSuperToken.sol\":601:643  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  0x00\n    /* \"contracts/BurnMintSuperToken.sol\":612:630  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/BurnMintSuperToken.sol\":632:642  msg.sender */\n  caller\n    /* \"contracts/BurnMintSuperToken.sol\":601:611  _setupRole */\n  shl(0x20, tag_5)\n    /* \"contracts/BurnMintSuperToken.sol\":601:643  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/BurnMintSuperToken.sol\":328:1817  contract BurnMintSuperToken is SuperTokenBase, AccessControl {... */\n  jump(tag_6)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6811:6921  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6889:6914  _grantRole(role, account) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6904  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6906:6913  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6889:6899  _grantRole */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6889:6914  _grantRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6811:6921  function _setupRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7552:7556  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7558:7565  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7551  hasRole */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7614:7618  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7588  _roles */\n  0x20\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7589:7593  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7602  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7603:7610  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7618  _roles[role].members[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n  tag_14\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7674  _msgSender */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7655:7662  account */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7649:7653  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n  0x20\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3011:3015  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3024  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3025:3032  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2997:3033  return _roles[role].members[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/BurnMintSuperToken.sol\":328:1817  contract BurnMintSuperToken is SuperTokenBase, AccessControl {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BurnMintSuperToken.sol\":328:1817  contract BurnMintSuperToken is SuperTokenBase, AccessControl {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91d14854\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa6a05598\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa6a05598\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xfe9d9303\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x91d14854\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x94d008ef\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x282c51f3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4a0687ef\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2898:2909  _fallback() */\n      tag_20\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2898:2907  _fallback */\n      tag_21\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2898:2909  _fallback() */\n      jump\t// in\n    tag_20:\n        /* \"contracts/BurnMintSuperToken.sol\":328:1817  contract BurnMintSuperToken is SuperTokenBase, AccessControl {... */\n      stop\n    tag_2:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2675:2686  _fallback() */\n      tag_24\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2675:2684  _fallback */\n      tag_21\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2675:2686  _fallback() */\n      jump\t// in\n    tag_24:\n        /* \"contracts/BurnMintSuperToken.sol\":328:1817  contract BurnMintSuperToken is SuperTokenBase, AccessControl {... */\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4378:4507  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BurnMintSuperToken.sol\":508:570  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4803:4948  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5912:6126  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/base/UUPSProxy.sol\":1049:1295  function initializeProxy(address initialAddress) external {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BurnMintSuperToken.sol\":1455:1607  function mint(... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BurnMintSuperToken.sol\":1064:1317  function initialize(... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/BurnMintSuperToken.sol\":417:479  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5228:5375  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"contracts/BurnMintSuperToken.sol\":1683:1815  function burn(uint256 amount, bytes memory userData)... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      stop\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2370:2387  _beforeFallback() */\n      tag_90\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2370:2385  _beforeFallback */\n      tag_91\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2370:2387  _beforeFallback() */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      tag_92\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2407:2424  _implementation() */\n      tag_93\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2407:2422  _implementation */\n      tag_94\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2407:2424  _implementation() */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2397:2406  _delegate */\n      tag_95\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2691:2695  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2729:2761  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2725  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_97\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n      tag_98\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2789:2800  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2788  super.supportsInterface */\n      tag_99\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2707:2801  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4378:4507  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4452:4459  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4478:4484  _roles */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4478:4490  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4485:4489  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4478:4490  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4478:4500  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4471:4500  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4378:4507  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BurnMintSuperToken.sol\":508:570  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_41:\n        /* \"contracts/BurnMintSuperToken.sol\":546:570  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"contracts/BurnMintSuperToken.sol\":508:570  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4803:4948  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4886:4904  getRoleAdmin(role) */\n      tag_101\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4899:4903  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4886:4898  getRoleAdmin */\n      tag_36\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4886:4904  getRoleAdmin(role) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_103\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_104\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4916:4941  _grantRole(role, account) */\n      tag_106\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4927:4931  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4933:4940  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4916:4926  _grantRole */\n      tag_107\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4916:4941  _grantRole(role, account) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4803:4948  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5912:6126  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6018:6030  _msgSender() */\n      tag_109\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6018:6028  _msgSender */\n      tag_110\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6018:6030  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6007:6030  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6007:6014  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6007:6030  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5999:6082  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6093:6119  _revokeRole(role, account) */\n      tag_114\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6105:6109  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6111:6118  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6093:6104  _revokeRole */\n      tag_115\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6093:6119  _revokeRole(role, account) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5912:6126  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/base/UUPSProxy.sol\":1049:1295  function initializeProxy(address initialAddress) external {... */\n    tag_56:\n        /* \"contracts/base/UUPSProxy.sol\":1141:1142  0 */\n      0x00\n        /* \"contracts/base/UUPSProxy.sol\":1115:1143  initialAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/base/UUPSProxy.sol\":1115:1129  initialAddress */\n      dup2\n        /* \"contracts/base/UUPSProxy.sol\":1115:1143  initialAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/base/UUPSProxy.sol\":1111:1165  if (initialAddress == address(0)) revert ZeroAddress() */\n      tag_117\n      jumpi\n        /* \"contracts/base/UUPSProxy.sol\":1152:1165  ZeroAddress() */\n      mload(0x40)\n      0xd92e233d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/base/UUPSProxy.sol\":1111:1165  if (initialAddress == address(0)) revert ZeroAddress() */\n    tag_117:\n        /* \"contracts/base/UUPSProxy.sol\":1202:1203  0 */\n      0x00\n        /* \"contracts/base/UUPSProxy.sol\":1173:1204  _implementation() != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/base/UUPSProxy.sol\":1173:1190  _implementation() */\n      tag_118\n        /* \"contracts/base/UUPSProxy.sol\":1173:1188  _implementation */\n      tag_94\n        /* \"contracts/base/UUPSProxy.sol\":1173:1190  _implementation() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/base/UUPSProxy.sol\":1173:1204  _implementation() != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/base/UUPSProxy.sol\":1169:1226  if (_implementation() != address(0)) revert Initialized() */\n      tag_119\n      jumpi\n        /* \"contracts/base/UUPSProxy.sol\":1213:1226  Initialized() */\n      mload(0x40)\n      0x5daa87a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/base/UUPSProxy.sol\":1169:1226  if (_implementation() != address(0)) revert Initialized() */\n    tag_119:\n        /* \"contracts/base/UUPSProxy.sol\":1273:1287  initialAddress */\n      dup1\n        /* \"contracts/base/UUPSProxy.sol\":1251:1271  _IMPLEMENTATION_SLOT */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/base/UUPSProxy.sol\":1244:1288  sstore(_IMPLEMENTATION_SLOT, initialAddress) */\n      sstore\n        /* \"contracts/base/UUPSProxy.sol\":1049:1295  function initializeProxy(address initialAddress) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3011:3015  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3024  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3025:3032  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2997:3033  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BurnMintSuperToken.sol\":1455:1607  function mint(... */\n    tag_66:\n        /* \"contracts/BurnMintSuperToken.sol\":455:479  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_122\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_104\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/BurnMintSuperToken.sol\":1570:1603  _mint(receiver, amount, userData) */\n      tag_124\n        /* \"contracts/BurnMintSuperToken.sol\":1576:1584  receiver */\n      dup5\n        /* \"contracts/BurnMintSuperToken.sol\":1586:1592  amount */\n      dup5\n        /* \"contracts/BurnMintSuperToken.sol\":1594:1602  userData */\n      dup5\n        /* \"contracts/BurnMintSuperToken.sol\":1570:1575  _mint */\n      tag_125\n        /* \"contracts/BurnMintSuperToken.sol\":1570:1603  _mint(receiver, amount, userData) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/BurnMintSuperToken.sol\":1455:1607  function mint(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/BurnMintSuperToken.sol\":1064:1317  function initialize(... */\n    tag_75:\n        /* \"contracts/BurnMintSuperToken.sol\":1235:1269  _initialize(factory, name, symbol) */\n      tag_127\n        /* \"contracts/BurnMintSuperToken.sol\":1247:1254  factory */\n      dup7\n        /* \"contracts/BurnMintSuperToken.sol\":1256:1260  name */\n      dup7\n        /* \"contracts/BurnMintSuperToken.sol\":1262:1268  symbol */\n      dup7\n        /* \"contracts/BurnMintSuperToken.sol\":1235:1246  _initialize */\n      tag_128\n        /* \"contracts/BurnMintSuperToken.sol\":1235:1269  _initialize(factory, name, symbol) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/BurnMintSuperToken.sol\":1273:1313  _mint(receiver, initialSupply, userData) */\n      tag_129\n        /* \"contracts/BurnMintSuperToken.sol\":1279:1287  receiver */\n      dup3\n        /* \"contracts/BurnMintSuperToken.sol\":1289:1302  initialSupply */\n      dup5\n        /* \"contracts/BurnMintSuperToken.sol\":1304:1312  userData */\n      dup4\n        /* \"contracts/BurnMintSuperToken.sol\":1273:1278  _mint */\n      tag_125\n        /* \"contracts/BurnMintSuperToken.sol\":1273:1313  _mint(receiver, initialSupply, userData) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/BurnMintSuperToken.sol\":1064:1317  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BurnMintSuperToken.sol\":417:479  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_78:\n        /* \"contracts/BurnMintSuperToken.sol\":455:479  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/BurnMintSuperToken.sol\":417:479  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5228:5375  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5312:5330  getRoleAdmin(role) */\n      tag_130\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5325:5329  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5312:5324  getRoleAdmin */\n      tag_36\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5312:5330  getRoleAdmin(role) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_132\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_104\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5342:5368  _revokeRole(role, account) */\n      tag_134\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5354:5358  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5360:5367  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5342:5353  _revokeRole */\n      tag_115\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5342:5368  _revokeRole(role, account) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5228:5375  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BurnMintSuperToken.sol\":1683:1815  function burn(uint256 amount, bytes memory userData)... */\n    tag_88:\n        /* \"contracts/BurnMintSuperToken.sol\":546:570  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_136\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_104\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/BurnMintSuperToken.sol\":1776:1811  _burn(msg.sender, amount, userData) */\n      tag_138\n        /* \"contracts/BurnMintSuperToken.sol\":1782:1792  msg.sender */\n      caller\n        /* \"contracts/BurnMintSuperToken.sol\":1794:1800  amount */\n      dup5\n        /* \"contracts/BurnMintSuperToken.sol\":1802:1810  userData */\n      dup5\n        /* \"contracts/BurnMintSuperToken.sol\":1776:1781  _burn */\n      tag_139\n        /* \"contracts/BurnMintSuperToken.sol\":1776:1811  _burn(msg.sender, amount, userData) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/BurnMintSuperToken.sol\":1683:1815  function burn(uint256 amount, bytes memory userData)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":3198:3244  function _beforeFallback() internal virtual {} */\n    tag_91:\n      jump\t// out\n        /* \"contracts/base/UUPSProxy.sol\":1395:1547  function _implementation()... */\n    tag_94:\n        /* \"contracts/base/UUPSProxy.sol\":1472:1484  address impl */\n      0x00\n        /* \"contracts/base/UUPSProxy.sol\":1519:1539  _IMPLEMENTATION_SLOT */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/base/UUPSProxy.sol\":1513:1540  sload(_IMPLEMENTATION_SLOT) */\n      sload\n        /* \"contracts/base/UUPSProxy.sol\":1505:1540  impl := sload(_IMPLEMENTATION_SLOT) */\n      swap1\n      pop\n        /* \"contracts/base/UUPSProxy.sol\":1395:1547  function _implementation()... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":948:1843  function _delegate(address implementation) internal virtual {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1286:1300  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1283:1284  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1280:1281  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1267:1301  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1500:1501  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1497:1498  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1481:1495  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1478:1479  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1462:1476  implementation */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1455:1460  gas() */\n      gas\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1442:1502  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1576:1592  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1573:1574  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1570:1571  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1555:1593  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1614:1620  result */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1686:1687  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1681:1747  case 0 {... */\n      dup2\n      eq\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1796:1812  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1793:1794  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1786:1813  return(0, returndatasize()) */\n      return\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1681:1747  case 0 {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1716:1732  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1713:1714  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1706:1733  revert(0, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      tag_147\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3411:3415  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n      tag_148\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3427  _msgSender */\n      tag_110\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3410  _checkRole */\n      tag_149\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n      tag_151\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7552:7556  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7558:7565  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7551  hasRole */\n      tag_60\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\n      tag_152\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7614:7618  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7588  _roles */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7589:7593  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7602  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7603:7610  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7618  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n      tag_153\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7674  _msgSender */\n      tag_110\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7655:7662  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7649:7653  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7865:8099  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7948:7970  hasRole(role, account) */\n      tag_156\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7956:7960  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7962:7969  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7948:7955  hasRole */\n      tag_60\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7948:7970  hasRole(role, account) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7944:8093  if (hasRole(role, account)) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8018:8023  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:7992  _roles */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:7998  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7993:7997  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:7998  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:8006  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:8015  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8007:8014  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:8015  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:8023  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8069:8081  _msgSender() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8069:8079  _msgSender */\n      tag_110\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8069:8081  _msgSender() */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8042:8082  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8060:8067  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8042:8082  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8054:8058  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8042:8082  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7944:8093  if (hasRole(role, account)) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7865:8099  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/base/SuperTokenBase.sol\":1676:1826  function _mint(address account, uint256 amount, bytes memory userData) internal {... */\n    tag_125:\n        /* \"contracts/base/SuperTokenBase.sol\":1780:1784  this */\n      address\n        /* \"contracts/base/SuperTokenBase.sol\":1760:1795  ISuperToken(address(this)).selfMint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc68d4283\n        /* \"contracts/base/SuperTokenBase.sol\":1796:1803  account */\n      dup5\n        /* \"contracts/base/SuperTokenBase.sol\":1805:1811  amount */\n      dup5\n        /* \"contracts/base/SuperTokenBase.sol\":1813:1821  userData */\n      dup5\n        /* \"contracts/base/SuperTokenBase.sol\":1760:1822  ISuperToken(address(this)).selfMint(account, amount, userData) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_164:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/base/SuperTokenBase.sol\":1676:1826  function _mint(address account, uint256 amount, bytes memory userData) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/base/SuperTokenBase.sol\":1021:1266  function _initialize(address factory, string memory name, string memory symbol) internal {... */\n    tag_128:\n        /* \"contracts/base/SuperTokenBase.sol\":1133:1140  factory */\n      dup3\n        /* \"contracts/base/SuperTokenBase.sol\":1114:1168  ISuperTokenFactory(factory).initializeCustomSuperToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd412d344\n        /* \"contracts/base/SuperTokenBase.sol\":1177:1181  this */\n      address\n        /* \"contracts/base/SuperTokenBase.sol\":1114:1183  ISuperTokenFactory(factory).initializeCustomSuperToken(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_168:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/base/SuperTokenBase.sol\":1207:1211  this */\n      address\n        /* \"contracts/base/SuperTokenBase.sol\":1187:1224  ISuperToken(address(this)).initialize */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42fe0980\n        /* \"contracts/base/SuperTokenBase.sol\":1240:1241  0 */\n      0x00\n        /* \"contracts/base/SuperTokenBase.sol\":1245:1247  18 */\n      0x12\n        /* \"contracts/base/SuperTokenBase.sol\":1249:1253  name */\n      dup6\n        /* \"contracts/base/SuperTokenBase.sol\":1255:1261  symbol */\n      dup6\n        /* \"contracts/base/SuperTokenBase.sol\":1187:1262  ISuperToken(address(this)).initialize(IERC20(address(0)), 18, name, symbol) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_173\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_173:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_175:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/base/SuperTokenBase.sol\":1021:1266  function _initialize(address factory, string memory name, string memory symbol) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/base/SuperTokenBase.sol\":2055:2199  function _burn(address from, uint256 amount, bytes memory userData) internal {... */\n    tag_139:\n        /* \"contracts/base/SuperTokenBase.sol\":2156:2160  this */\n      address\n        /* \"contracts/base/SuperTokenBase.sol\":2136:2171  ISuperToken(address(this)).selfBurn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9d876741\n        /* \"contracts/base/SuperTokenBase.sol\":2172:2176  from */\n      dup5\n        /* \"contracts/base/SuperTokenBase.sol\":2178:2184  amount */\n      dup5\n        /* \"contracts/base/SuperTokenBase.sol\":2186:2194  userData */\n      dup5\n        /* \"contracts/base/SuperTokenBase.sol\":2136:2195  ISuperToken(address(this)).selfBurn(from, amount, userData) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_177:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_180:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/base/SuperTokenBase.sol\":2055:2199  function _burn(address from, uint256 amount, bytes memory userData) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4197  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      tag_182\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3814:3818  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3820:3827  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3813  hasRole */\n      tag_60\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4191  if (!hasRole(role, account)) {... */\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4017  Strings.toHexString(account) */\n      tag_184\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4009:4016  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4008  Strings.toHexString */\n      tag_185\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4017  Strings.toHexString(account) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4088:4126  Strings.toHexString(uint256(role), 32) */\n      tag_186\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4116:4120  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4108:4121  uint256(role) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4123:4125  32 */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4088:4107  Strings.toHexString */\n      tag_187\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4088:4126  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3896:4148  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_188\n      swap3\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4180  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4191  if (!hasRole(role, account)) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4197  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2102:2251  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2160:2173  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2192:2244  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_193\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2220:2224  addr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2204:2226  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":311:313  20 */\n      0x14\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2192:2244  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2192:2203  toHexString */\n      tag_187\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2192:2244  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2185:2244  return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2102:2251  function toHexString(address addr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1513:1950  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:1601  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1613:1632  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1658:1659  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1649:1655  length */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1645:1646  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1645:1655  2 * length */\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1645:1659  2 * length + 2 */\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1635:1660  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_199\n      jumpi\n      tag_200\n      tag_201\n      jump\t// in\n    tag_200:\n    tag_199:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_202\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_202:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1613:1660  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1670:1685  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1670:1676  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1677:1678  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1670:1679  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_203\n      jumpi\n      tag_204\n      tag_205\n      jump\t// in\n    tag_204:\n    tag_203:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1670:1685  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1695:1710  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1695:1701  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1702:1703  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1695:1704  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_206\n      jumpi\n      tag_207\n      tag_205\n      jump\t// in\n    tag_207:\n    tag_206:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1695:1710  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1725:1734  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1750:1751  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1741:1747  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1737:1738  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1737:1747  2 * length */\n      tag_211\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1737:1751  2 * length + 1 */\n      tag_212\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1725:1751  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1848  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1757:1758  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1753:1754  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1753:1758  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1848  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1791:1799  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1808:1811  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1805  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1811  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1791:1812  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_213\n      jumpi\n      tag_214\n      tag_205\n      jump\t// in\n    tag_214:\n    tag_213:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1779:1785  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1786:1787  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1779:1788  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_215\n      jumpi\n      tag_216\n      tag_205\n      jump\t// in\n    tag_216:\n    tag_215:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1779:1812  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1836:1837  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1826:1837  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1760:1763  --i */\n      dup1\n      tag_217\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1848  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_208)\n    tag_209:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1874:1875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1865:1870  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1865:1875  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1857:1912  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1942  buffer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1922:1943  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1513:1950  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_222:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_223:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_224:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_225:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_226:\n        /* \"#utility.yul\":561:584   */\n      tag_288\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_225\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_289\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_289:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_227:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_291\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_226\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_28:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_294\n      tag_223\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":833:952   */\n    tag_293:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_295\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_227\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_228:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_229:\n        /* \"#utility.yul\":1268:1289   */\n      tag_298\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_228\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_31:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_300\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_229\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_230:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_231:\n        /* \"#utility.yul\":1674:1698   */\n      tag_303\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_230\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_304:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_232:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_306\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_231\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_35:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_309\n      tag_223\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":1950:2069   */\n    tag_308:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_310\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_232\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2327   */\n    tag_233:\n        /* \"#utility.yul\":2296:2320   */\n      tag_312\n        /* \"#utility.yul\":2314:2319   */\n      dup2\n        /* \"#utility.yul\":2296:2320   */\n      tag_230\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":2291:2294   */\n      dup3\n        /* \"#utility.yul\":2284:2321   */\n      mstore\n        /* \"#utility.yul\":2209:2327   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2333:2555   */\n    tag_38:\n        /* \"#utility.yul\":2426:2430   */\n      0x00\n        /* \"#utility.yul\":2464:2466   */\n      0x20\n        /* \"#utility.yul\":2453:2462   */\n      dup3\n        /* \"#utility.yul\":2449:2467   */\n      add\n        /* \"#utility.yul\":2441:2467   */\n      swap1\n      pop\n        /* \"#utility.yul\":2477:2548   */\n      tag_314\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2534:2543   */\n      dup4\n        /* \"#utility.yul\":2530:2547   */\n      add\n        /* \"#utility.yul\":2521:2527   */\n      dup5\n        /* \"#utility.yul\":2477:2548   */\n      tag_233\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2333:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2687   */\n    tag_234:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2638:2680   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2631:2636   */\n      dup3\n        /* \"#utility.yul\":2627:2681   */\n      and\n        /* \"#utility.yul\":2616:2681   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2693:2789   */\n    tag_235:\n        /* \"#utility.yul\":2730:2737   */\n      0x00\n        /* \"#utility.yul\":2759:2783   */\n      tag_317\n        /* \"#utility.yul\":2777:2782   */\n      dup3\n        /* \"#utility.yul\":2759:2783   */\n      tag_234\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":2748:2783   */\n      swap1\n      pop\n        /* \"#utility.yul\":2693:2789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2917   */\n    tag_236:\n        /* \"#utility.yul\":2868:2892   */\n      tag_319\n        /* \"#utility.yul\":2886:2891   */\n      dup2\n        /* \"#utility.yul\":2868:2892   */\n      tag_235\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":2861:2866   */\n      dup2\n        /* \"#utility.yul\":2858:2893   */\n      eq\n        /* \"#utility.yul\":2848:2911   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":2907:2908   */\n      0x00\n        /* \"#utility.yul\":2904:2905   */\n      dup1\n        /* \"#utility.yul\":2897:2909   */\n      revert\n        /* \"#utility.yul\":2848:2911   */\n    tag_320:\n        /* \"#utility.yul\":2795:2917   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2923:3062   */\n    tag_237:\n        /* \"#utility.yul\":2969:2974   */\n      0x00\n        /* \"#utility.yul\":3007:3013   */\n      dup2\n        /* \"#utility.yul\":2994:3014   */\n      calldataload\n        /* \"#utility.yul\":2985:3014   */\n      swap1\n      pop\n        /* \"#utility.yul\":3023:3056   */\n      tag_322\n        /* \"#utility.yul\":3050:3055   */\n      dup2\n        /* \"#utility.yul\":3023:3056   */\n      tag_236\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":2923:3062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3068:3542   */\n    tag_46:\n        /* \"#utility.yul\":3136:3142   */\n      0x00\n        /* \"#utility.yul\":3144:3150   */\n      dup1\n        /* \"#utility.yul\":3193:3195   */\n      0x40\n        /* \"#utility.yul\":3181:3190   */\n      dup4\n        /* \"#utility.yul\":3172:3179   */\n      dup6\n        /* \"#utility.yul\":3168:3191   */\n      sub\n        /* \"#utility.yul\":3164:3196   */\n      slt\n        /* \"#utility.yul\":3161:3280   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":3199:3278   */\n      tag_325\n      tag_223\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":3161:3280   */\n    tag_324:\n        /* \"#utility.yul\":3319:3320   */\n      0x00\n        /* \"#utility.yul\":3344:3397   */\n      tag_326\n        /* \"#utility.yul\":3389:3396   */\n      dup6\n        /* \"#utility.yul\":3380:3386   */\n      dup3\n        /* \"#utility.yul\":3369:3378   */\n      dup7\n        /* \"#utility.yul\":3365:3387   */\n      add\n        /* \"#utility.yul\":3344:3397   */\n      tag_232\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3334:3397   */\n      swap3\n      pop\n        /* \"#utility.yul\":3290:3407   */\n      pop\n        /* \"#utility.yul\":3446:3448   */\n      0x20\n        /* \"#utility.yul\":3472:3525   */\n      tag_327\n        /* \"#utility.yul\":3517:3524   */\n      dup6\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup7\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_237\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3417:3535   */\n      pop\n        /* \"#utility.yul\":3068:3542   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3877   */\n    tag_55:\n        /* \"#utility.yul\":3607:3613   */\n      0x00\n        /* \"#utility.yul\":3656:3658   */\n      0x20\n        /* \"#utility.yul\":3644:3653   */\n      dup3\n        /* \"#utility.yul\":3635:3642   */\n      dup5\n        /* \"#utility.yul\":3631:3654   */\n      sub\n        /* \"#utility.yul\":3627:3659   */\n      slt\n        /* \"#utility.yul\":3624:3743   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":3662:3741   */\n      tag_330\n      tag_223\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":3624:3743   */\n    tag_329:\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3807:3860   */\n      tag_331\n        /* \"#utility.yul\":3852:3859   */\n      dup5\n        /* \"#utility.yul\":3843:3849   */\n      dup3\n        /* \"#utility.yul\":3832:3841   */\n      dup6\n        /* \"#utility.yul\":3828:3850   */\n      add\n        /* \"#utility.yul\":3807:3860   */\n      tag_237\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":3797:3860   */\n      swap2\n      pop\n        /* \"#utility.yul\":3753:3870   */\n      pop\n        /* \"#utility.yul\":3548:3877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3883:3960   */\n    tag_238:\n        /* \"#utility.yul\":3920:3927   */\n      0x00\n        /* \"#utility.yul\":3949:3954   */\n      dup2\n        /* \"#utility.yul\":3938:3954   */\n      swap1\n      pop\n        /* \"#utility.yul\":3883:3960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3966:4088   */\n    tag_239:\n        /* \"#utility.yul\":4039:4063   */\n      tag_334\n        /* \"#utility.yul\":4057:4062   */\n      dup2\n        /* \"#utility.yul\":4039:4063   */\n      tag_238\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":4032:4037   */\n      dup2\n        /* \"#utility.yul\":4029:4064   */\n      eq\n        /* \"#utility.yul\":4019:4082   */\n      tag_335\n      jumpi\n        /* \"#utility.yul\":4078:4079   */\n      0x00\n        /* \"#utility.yul\":4075:4076   */\n      dup1\n        /* \"#utility.yul\":4068:4080   */\n      revert\n        /* \"#utility.yul\":4019:4082   */\n    tag_335:\n        /* \"#utility.yul\":3966:4088   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4094:4233   */\n    tag_240:\n        /* \"#utility.yul\":4140:4145   */\n      0x00\n        /* \"#utility.yul\":4178:4184   */\n      dup2\n        /* \"#utility.yul\":4165:4185   */\n      calldataload\n        /* \"#utility.yul\":4156:4185   */\n      swap1\n      pop\n        /* \"#utility.yul\":4194:4227   */\n      tag_337\n        /* \"#utility.yul\":4221:4226   */\n      dup2\n        /* \"#utility.yul\":4194:4227   */\n      tag_239\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":4094:4233   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4239:4356   */\n    tag_241:\n        /* \"#utility.yul\":4348:4349   */\n      0x00\n        /* \"#utility.yul\":4345:4346   */\n      dup1\n        /* \"#utility.yul\":4338:4350   */\n      revert\n        /* \"#utility.yul\":4362:4479   */\n    tag_242:\n        /* \"#utility.yul\":4471:4472   */\n      0x00\n        /* \"#utility.yul\":4468:4469   */\n      dup1\n        /* \"#utility.yul\":4461:4473   */\n      revert\n        /* \"#utility.yul\":4485:4587   */\n    tag_243:\n        /* \"#utility.yul\":4526:4532   */\n      0x00\n        /* \"#utility.yul\":4577:4579   */\n      0x1f\n        /* \"#utility.yul\":4573:4580   */\n      not\n        /* \"#utility.yul\":4568:4570   */\n      0x1f\n        /* \"#utility.yul\":4561:4566   */\n      dup4\n        /* \"#utility.yul\":4557:4571   */\n      add\n        /* \"#utility.yul\":4553:4581   */\n      and\n        /* \"#utility.yul\":4543:4581   */\n      swap1\n      pop\n        /* \"#utility.yul\":4485:4587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4593:4773   */\n    tag_201:\n        /* \"#utility.yul\":4641:4718   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4638:4639   */\n      0x00\n        /* \"#utility.yul\":4631:4719   */\n      mstore\n        /* \"#utility.yul\":4738:4742   */\n      0x41\n        /* \"#utility.yul\":4735:4736   */\n      0x04\n        /* \"#utility.yul\":4728:4743   */\n      mstore\n        /* \"#utility.yul\":4762:4766   */\n      0x24\n        /* \"#utility.yul\":4759:4760   */\n      0x00\n        /* \"#utility.yul\":4752:4767   */\n      revert\n        /* \"#utility.yul\":4779:5060   */\n    tag_244:\n        /* \"#utility.yul\":4862:4889   */\n      tag_343\n        /* \"#utility.yul\":4884:4888   */\n      dup3\n        /* \"#utility.yul\":4862:4889   */\n      tag_243\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":4854:4860   */\n      dup2\n        /* \"#utility.yul\":4850:4890   */\n      add\n        /* \"#utility.yul\":4992:4998   */\n      dup2\n        /* \"#utility.yul\":4980:4990   */\n      dup2\n        /* \"#utility.yul\":4977:4999   */\n      lt\n        /* \"#utility.yul\":4956:4974   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4944:4954   */\n      dup3\n        /* \"#utility.yul\":4941:4975   */\n      gt\n        /* \"#utility.yul\":4938:5000   */\n      or\n        /* \"#utility.yul\":4935:5023   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":5003:5021   */\n      tag_345\n      tag_201\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4935:5023   */\n    tag_344:\n        /* \"#utility.yul\":5043:5053   */\n      dup1\n        /* \"#utility.yul\":5039:5041   */\n      0x40\n        /* \"#utility.yul\":5032:5054   */\n      mstore\n        /* \"#utility.yul\":4822:5060   */\n      pop\n        /* \"#utility.yul\":4779:5060   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5066:5195   */\n    tag_245:\n        /* \"#utility.yul\":5100:5106   */\n      0x00\n        /* \"#utility.yul\":5127:5147   */\n      tag_347\n      tag_222\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":5117:5147   */\n      swap1\n      pop\n        /* \"#utility.yul\":5156:5189   */\n      tag_348\n        /* \"#utility.yul\":5184:5188   */\n      dup3\n        /* \"#utility.yul\":5176:5182   */\n      dup3\n        /* \"#utility.yul\":5156:5189   */\n      tag_244\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":5066:5195   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5201:5508   */\n    tag_246:\n        /* \"#utility.yul\":5262:5266   */\n      0x00\n        /* \"#utility.yul\":5352:5370   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5344:5350   */\n      dup3\n        /* \"#utility.yul\":5341:5371   */\n      gt\n        /* \"#utility.yul\":5338:5394   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":5374:5392   */\n      tag_351\n      tag_201\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":5338:5394   */\n    tag_350:\n        /* \"#utility.yul\":5412:5441   */\n      tag_352\n        /* \"#utility.yul\":5434:5440   */\n      dup3\n        /* \"#utility.yul\":5412:5441   */\n      tag_243\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":5404:5441   */\n      swap1\n      pop\n        /* \"#utility.yul\":5496:5500   */\n      0x20\n        /* \"#utility.yul\":5490:5494   */\n      dup2\n        /* \"#utility.yul\":5486:5501   */\n      add\n        /* \"#utility.yul\":5478:5501   */\n      swap1\n      pop\n        /* \"#utility.yul\":5201:5508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5514:5660   */\n    tag_247:\n        /* \"#utility.yul\":5611:5617   */\n      dup3\n        /* \"#utility.yul\":5606:5609   */\n      dup2\n        /* \"#utility.yul\":5601:5604   */\n      dup4\n        /* \"#utility.yul\":5588:5618   */\n      calldatacopy\n        /* \"#utility.yul\":5652:5653   */\n      0x00\n        /* \"#utility.yul\":5643:5649   */\n      dup4\n        /* \"#utility.yul\":5638:5641   */\n      dup4\n        /* \"#utility.yul\":5634:5650   */\n      add\n        /* \"#utility.yul\":5627:5654   */\n      mstore\n        /* \"#utility.yul\":5514:5660   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5666:6089   */\n    tag_248:\n        /* \"#utility.yul\":5743:5748   */\n      0x00\n        /* \"#utility.yul\":5768:5833   */\n      tag_355\n        /* \"#utility.yul\":5784:5832   */\n      tag_356\n        /* \"#utility.yul\":5825:5831   */\n      dup5\n        /* \"#utility.yul\":5784:5832   */\n      tag_246\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":5768:5833   */\n      tag_245\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":5759:5833   */\n      swap1\n      pop\n        /* \"#utility.yul\":5856:5862   */\n      dup3\n        /* \"#utility.yul\":5849:5854   */\n      dup2\n        /* \"#utility.yul\":5842:5863   */\n      mstore\n        /* \"#utility.yul\":5894:5898   */\n      0x20\n        /* \"#utility.yul\":5887:5892   */\n      dup2\n        /* \"#utility.yul\":5883:5899   */\n      add\n        /* \"#utility.yul\":5932:5935   */\n      dup5\n        /* \"#utility.yul\":5923:5929   */\n      dup5\n        /* \"#utility.yul\":5918:5921   */\n      dup5\n        /* \"#utility.yul\":5914:5930   */\n      add\n        /* \"#utility.yul\":5911:5936   */\n      gt\n        /* \"#utility.yul\":5908:6020   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":5939:6018   */\n      tag_358\n      tag_242\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":5908:6020   */\n    tag_357:\n        /* \"#utility.yul\":6029:6083   */\n      tag_359\n        /* \"#utility.yul\":6076:6082   */\n      dup5\n        /* \"#utility.yul\":6071:6074   */\n      dup3\n        /* \"#utility.yul\":6066:6069   */\n      dup6\n        /* \"#utility.yul\":6029:6083   */\n      tag_247\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5749:6089   */\n      pop\n        /* \"#utility.yul\":5666:6089   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6108:6446   */\n    tag_249:\n        /* \"#utility.yul\":6163:6168   */\n      0x00\n        /* \"#utility.yul\":6212:6215   */\n      dup3\n        /* \"#utility.yul\":6205:6209   */\n      0x1f\n        /* \"#utility.yul\":6197:6203   */\n      dup4\n        /* \"#utility.yul\":6193:6210   */\n      add\n        /* \"#utility.yul\":6189:6216   */\n      slt\n        /* \"#utility.yul\":6179:6301   */\n      tag_361\n      jumpi\n        /* \"#utility.yul\":6220:6299   */\n      tag_362\n      tag_241\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":6179:6301   */\n    tag_361:\n        /* \"#utility.yul\":6337:6343   */\n      dup2\n        /* \"#utility.yul\":6324:6344   */\n      calldataload\n        /* \"#utility.yul\":6362:6440   */\n      tag_363\n        /* \"#utility.yul\":6436:6439   */\n      dup5\n        /* \"#utility.yul\":6428:6434   */\n      dup3\n        /* \"#utility.yul\":6421:6425   */\n      0x20\n        /* \"#utility.yul\":6413:6419   */\n      dup7\n        /* \"#utility.yul\":6409:6426   */\n      add\n        /* \"#utility.yul\":6362:6440   */\n      tag_248\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":6353:6440   */\n      swap2\n      pop\n        /* \"#utility.yul\":6169:6446   */\n      pop\n        /* \"#utility.yul\":6108:6446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6452:7249   */\n    tag_65:\n        /* \"#utility.yul\":6538:6544   */\n      0x00\n        /* \"#utility.yul\":6546:6552   */\n      dup1\n        /* \"#utility.yul\":6554:6560   */\n      0x00\n        /* \"#utility.yul\":6603:6605   */\n      0x60\n        /* \"#utility.yul\":6591:6600   */\n      dup5\n        /* \"#utility.yul\":6582:6589   */\n      dup7\n        /* \"#utility.yul\":6578:6601   */\n      sub\n        /* \"#utility.yul\":6574:6606   */\n      slt\n        /* \"#utility.yul\":6571:6690   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":6609:6688   */\n      tag_366\n      tag_223\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":6571:6690   */\n    tag_365:\n        /* \"#utility.yul\":6729:6730   */\n      0x00\n        /* \"#utility.yul\":6754:6807   */\n      tag_367\n        /* \"#utility.yul\":6799:6806   */\n      dup7\n        /* \"#utility.yul\":6790:6796   */\n      dup3\n        /* \"#utility.yul\":6779:6788   */\n      dup8\n        /* \"#utility.yul\":6775:6797   */\n      add\n        /* \"#utility.yul\":6754:6807   */\n      tag_237\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":6744:6807   */\n      swap4\n      pop\n        /* \"#utility.yul\":6700:6817   */\n      pop\n        /* \"#utility.yul\":6856:6858   */\n      0x20\n        /* \"#utility.yul\":6882:6935   */\n      tag_368\n        /* \"#utility.yul\":6927:6934   */\n      dup7\n        /* \"#utility.yul\":6918:6924   */\n      dup3\n        /* \"#utility.yul\":6907:6916   */\n      dup8\n        /* \"#utility.yul\":6903:6925   */\n      add\n        /* \"#utility.yul\":6882:6935   */\n      tag_240\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":6872:6935   */\n      swap3\n      pop\n        /* \"#utility.yul\":6827:6945   */\n      pop\n        /* \"#utility.yul\":7012:7014   */\n      0x40\n        /* \"#utility.yul\":7001:7010   */\n      dup5\n        /* \"#utility.yul\":6997:7015   */\n      add\n        /* \"#utility.yul\":6984:7016   */\n      calldataload\n        /* \"#utility.yul\":7043:7061   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7035:7041   */\n      dup2\n        /* \"#utility.yul\":7032:7062   */\n      gt\n        /* \"#utility.yul\":7029:7146   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":7065:7144   */\n      tag_370\n      tag_224\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":7029:7146   */\n    tag_369:\n        /* \"#utility.yul\":7170:7232   */\n      tag_371\n        /* \"#utility.yul\":7224:7231   */\n      dup7\n        /* \"#utility.yul\":7215:7221   */\n      dup3\n        /* \"#utility.yul\":7204:7213   */\n      dup8\n        /* \"#utility.yul\":7200:7222   */\n      add\n        /* \"#utility.yul\":7170:7232   */\n      tag_249\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":7160:7232   */\n      swap2\n      pop\n        /* \"#utility.yul\":6955:7242   */\n      pop\n        /* \"#utility.yul\":6452:7249   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7255:7563   */\n    tag_250:\n        /* \"#utility.yul\":7317:7321   */\n      0x00\n        /* \"#utility.yul\":7407:7425   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7399:7405   */\n      dup3\n        /* \"#utility.yul\":7396:7426   */\n      gt\n        /* \"#utility.yul\":7393:7449   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":7429:7447   */\n      tag_374\n      tag_201\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":7393:7449   */\n    tag_373:\n        /* \"#utility.yul\":7467:7496   */\n      tag_375\n        /* \"#utility.yul\":7489:7495   */\n      dup3\n        /* \"#utility.yul\":7467:7496   */\n      tag_243\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":7459:7496   */\n      swap1\n      pop\n        /* \"#utility.yul\":7551:7555   */\n      0x20\n        /* \"#utility.yul\":7545:7549   */\n      dup2\n        /* \"#utility.yul\":7541:7556   */\n      add\n        /* \"#utility.yul\":7533:7556   */\n      swap1\n      pop\n        /* \"#utility.yul\":7255:7563   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7569:7994   */\n    tag_251:\n        /* \"#utility.yul\":7647:7652   */\n      0x00\n        /* \"#utility.yul\":7672:7738   */\n      tag_377\n        /* \"#utility.yul\":7688:7737   */\n      tag_378\n        /* \"#utility.yul\":7730:7736   */\n      dup5\n        /* \"#utility.yul\":7688:7737   */\n      tag_250\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":7672:7738   */\n      tag_245\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":7663:7738   */\n      swap1\n      pop\n        /* \"#utility.yul\":7761:7767   */\n      dup3\n        /* \"#utility.yul\":7754:7759   */\n      dup2\n        /* \"#utility.yul\":7747:7768   */\n      mstore\n        /* \"#utility.yul\":7799:7803   */\n      0x20\n        /* \"#utility.yul\":7792:7797   */\n      dup2\n        /* \"#utility.yul\":7788:7804   */\n      add\n        /* \"#utility.yul\":7837:7840   */\n      dup5\n        /* \"#utility.yul\":7828:7834   */\n      dup5\n        /* \"#utility.yul\":7823:7826   */\n      dup5\n        /* \"#utility.yul\":7819:7835   */\n      add\n        /* \"#utility.yul\":7816:7841   */\n      gt\n        /* \"#utility.yul\":7813:7925   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":7844:7923   */\n      tag_380\n      tag_242\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":7813:7925   */\n    tag_379:\n        /* \"#utility.yul\":7934:7988   */\n      tag_381\n        /* \"#utility.yul\":7981:7987   */\n      dup5\n        /* \"#utility.yul\":7976:7979   */\n      dup3\n        /* \"#utility.yul\":7971:7974   */\n      dup6\n        /* \"#utility.yul\":7934:7988   */\n      tag_247\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":7653:7994   */\n      pop\n        /* \"#utility.yul\":7569:7994   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8014:8354   */\n    tag_252:\n        /* \"#utility.yul\":8070:8075   */\n      0x00\n        /* \"#utility.yul\":8119:8122   */\n      dup3\n        /* \"#utility.yul\":8112:8116   */\n      0x1f\n        /* \"#utility.yul\":8104:8110   */\n      dup4\n        /* \"#utility.yul\":8100:8117   */\n      add\n        /* \"#utility.yul\":8096:8123   */\n      slt\n        /* \"#utility.yul\":8086:8208   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":8127:8206   */\n      tag_384\n      tag_241\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":8086:8208   */\n    tag_383:\n        /* \"#utility.yul\":8244:8250   */\n      dup2\n        /* \"#utility.yul\":8231:8251   */\n      calldataload\n        /* \"#utility.yul\":8269:8348   */\n      tag_385\n        /* \"#utility.yul\":8344:8347   */\n      dup5\n        /* \"#utility.yul\":8336:8342   */\n      dup3\n        /* \"#utility.yul\":8329:8333   */\n      0x20\n        /* \"#utility.yul\":8321:8327   */\n      dup7\n        /* \"#utility.yul\":8317:8334   */\n      add\n        /* \"#utility.yul\":8269:8348   */\n      tag_251\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":8260:8348   */\n      swap2\n      pop\n        /* \"#utility.yul\":8076:8354   */\n      pop\n        /* \"#utility.yul\":8014:8354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8360:9955   */\n    tag_74:\n        /* \"#utility.yul\":8493:8499   */\n      0x00\n        /* \"#utility.yul\":8501:8507   */\n      dup1\n        /* \"#utility.yul\":8509:8515   */\n      0x00\n        /* \"#utility.yul\":8517:8523   */\n      dup1\n        /* \"#utility.yul\":8525:8531   */\n      0x00\n        /* \"#utility.yul\":8533:8539   */\n      dup1\n        /* \"#utility.yul\":8582:8585   */\n      0xc0\n        /* \"#utility.yul\":8570:8579   */\n      dup8\n        /* \"#utility.yul\":8561:8568   */\n      dup10\n        /* \"#utility.yul\":8557:8580   */\n      sub\n        /* \"#utility.yul\":8553:8586   */\n      slt\n        /* \"#utility.yul\":8550:8670   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":8589:8668   */\n      tag_388\n      tag_223\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":8550:8670   */\n    tag_387:\n        /* \"#utility.yul\":8709:8710   */\n      0x00\n        /* \"#utility.yul\":8734:8787   */\n      tag_389\n        /* \"#utility.yul\":8779:8786   */\n      dup10\n        /* \"#utility.yul\":8770:8776   */\n      dup3\n        /* \"#utility.yul\":8759:8768   */\n      dup11\n        /* \"#utility.yul\":8755:8777   */\n      add\n        /* \"#utility.yul\":8734:8787   */\n      tag_237\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":8724:8787   */\n      swap7\n      pop\n        /* \"#utility.yul\":8680:8797   */\n      pop\n        /* \"#utility.yul\":8864:8866   */\n      0x20\n        /* \"#utility.yul\":8853:8862   */\n      dup8\n        /* \"#utility.yul\":8849:8867   */\n      add\n        /* \"#utility.yul\":8836:8868   */\n      calldataload\n        /* \"#utility.yul\":8895:8913   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8887:8893   */\n      dup2\n        /* \"#utility.yul\":8884:8914   */\n      gt\n        /* \"#utility.yul\":8881:8998   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":8917:8996   */\n      tag_391\n      tag_224\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":8881:8998   */\n    tag_390:\n        /* \"#utility.yul\":9022:9085   */\n      tag_392\n        /* \"#utility.yul\":9077:9084   */\n      dup10\n        /* \"#utility.yul\":9068:9074   */\n      dup3\n        /* \"#utility.yul\":9057:9066   */\n      dup11\n        /* \"#utility.yul\":9053:9075   */\n      add\n        /* \"#utility.yul\":9022:9085   */\n      tag_252\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":9012:9085   */\n      swap6\n      pop\n        /* \"#utility.yul\":8807:9095   */\n      pop\n        /* \"#utility.yul\":9162:9164   */\n      0x40\n        /* \"#utility.yul\":9151:9160   */\n      dup8\n        /* \"#utility.yul\":9147:9165   */\n      add\n        /* \"#utility.yul\":9134:9166   */\n      calldataload\n        /* \"#utility.yul\":9193:9211   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9185:9191   */\n      dup2\n        /* \"#utility.yul\":9182:9212   */\n      gt\n        /* \"#utility.yul\":9179:9296   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":9215:9294   */\n      tag_394\n      tag_224\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":9179:9296   */\n    tag_393:\n        /* \"#utility.yul\":9320:9383   */\n      tag_395\n        /* \"#utility.yul\":9375:9382   */\n      dup10\n        /* \"#utility.yul\":9366:9372   */\n      dup3\n        /* \"#utility.yul\":9355:9364   */\n      dup11\n        /* \"#utility.yul\":9351:9373   */\n      add\n        /* \"#utility.yul\":9320:9383   */\n      tag_252\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":9310:9383   */\n      swap5\n      pop\n        /* \"#utility.yul\":9105:9393   */\n      pop\n        /* \"#utility.yul\":9432:9434   */\n      0x60\n        /* \"#utility.yul\":9458:9511   */\n      tag_396\n        /* \"#utility.yul\":9503:9510   */\n      dup10\n        /* \"#utility.yul\":9494:9500   */\n      dup3\n        /* \"#utility.yul\":9483:9492   */\n      dup11\n        /* \"#utility.yul\":9479:9501   */\n      add\n        /* \"#utility.yul\":9458:9511   */\n      tag_240\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":9448:9511   */\n      swap4\n      pop\n        /* \"#utility.yul\":9403:9521   */\n      pop\n        /* \"#utility.yul\":9560:9563   */\n      0x80\n        /* \"#utility.yul\":9587:9640   */\n      tag_397\n        /* \"#utility.yul\":9632:9639   */\n      dup10\n        /* \"#utility.yul\":9623:9629   */\n      dup3\n        /* \"#utility.yul\":9612:9621   */\n      dup11\n        /* \"#utility.yul\":9608:9630   */\n      add\n        /* \"#utility.yul\":9587:9640   */\n      tag_237\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":9577:9640   */\n      swap3\n      pop\n        /* \"#utility.yul\":9531:9650   */\n      pop\n        /* \"#utility.yul\":9717:9720   */\n      0xa0\n        /* \"#utility.yul\":9706:9715   */\n      dup8\n        /* \"#utility.yul\":9702:9721   */\n      add\n        /* \"#utility.yul\":9689:9722   */\n      calldataload\n        /* \"#utility.yul\":9749:9767   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9741:9747   */\n      dup2\n        /* \"#utility.yul\":9738:9768   */\n      gt\n        /* \"#utility.yul\":9735:9852   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":9771:9850   */\n      tag_399\n      tag_224\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":9735:9852   */\n    tag_398:\n        /* \"#utility.yul\":9876:9938   */\n      tag_400\n        /* \"#utility.yul\":9930:9937   */\n      dup10\n        /* \"#utility.yul\":9921:9927   */\n      dup3\n        /* \"#utility.yul\":9910:9919   */\n      dup11\n        /* \"#utility.yul\":9906:9928   */\n      add\n        /* \"#utility.yul\":9876:9938   */\n      tag_249\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":9866:9938   */\n      swap2\n      pop\n        /* \"#utility.yul\":9660:9948   */\n      pop\n        /* \"#utility.yul\":8360:9955   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":9961:10613   */\n    tag_87:\n        /* \"#utility.yul\":10038:10044   */\n      0x00\n        /* \"#utility.yul\":10046:10052   */\n      dup1\n        /* \"#utility.yul\":10095:10097   */\n      0x40\n        /* \"#utility.yul\":10083:10092   */\n      dup4\n        /* \"#utility.yul\":10074:10081   */\n      dup6\n        /* \"#utility.yul\":10070:10093   */\n      sub\n        /* \"#utility.yul\":10066:10098   */\n      slt\n        /* \"#utility.yul\":10063:10182   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":10101:10180   */\n      tag_403\n      tag_223\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":10063:10182   */\n    tag_402:\n        /* \"#utility.yul\":10221:10222   */\n      0x00\n        /* \"#utility.yul\":10246:10299   */\n      tag_404\n        /* \"#utility.yul\":10291:10298   */\n      dup6\n        /* \"#utility.yul\":10282:10288   */\n      dup3\n        /* \"#utility.yul\":10271:10280   */\n      dup7\n        /* \"#utility.yul\":10267:10289   */\n      add\n        /* \"#utility.yul\":10246:10299   */\n      tag_240\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":10236:10299   */\n      swap3\n      pop\n        /* \"#utility.yul\":10192:10309   */\n      pop\n        /* \"#utility.yul\":10376:10378   */\n      0x20\n        /* \"#utility.yul\":10365:10374   */\n      dup4\n        /* \"#utility.yul\":10361:10379   */\n      add\n        /* \"#utility.yul\":10348:10380   */\n      calldataload\n        /* \"#utility.yul\":10407:10425   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10399:10405   */\n      dup2\n        /* \"#utility.yul\":10396:10426   */\n      gt\n        /* \"#utility.yul\":10393:10510   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":10429:10508   */\n      tag_406\n      tag_224\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":10393:10510   */\n    tag_405:\n        /* \"#utility.yul\":10534:10596   */\n      tag_407\n        /* \"#utility.yul\":10588:10595   */\n      dup6\n        /* \"#utility.yul\":10579:10585   */\n      dup3\n        /* \"#utility.yul\":10568:10577   */\n      dup7\n        /* \"#utility.yul\":10564:10586   */\n      add\n        /* \"#utility.yul\":10534:10596   */\n      tag_249\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":10524:10596   */\n      swap2\n      pop\n        /* \"#utility.yul\":10319:10606   */\n      pop\n        /* \"#utility.yul\":9961:10613   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10619:10788   */\n    tag_253:\n        /* \"#utility.yul\":10703:10714   */\n      0x00\n        /* \"#utility.yul\":10737:10743   */\n      dup3\n        /* \"#utility.yul\":10732:10735   */\n      dup3\n        /* \"#utility.yul\":10725:10744   */\n      mstore\n        /* \"#utility.yul\":10777:10781   */\n      0x20\n        /* \"#utility.yul\":10772:10775   */\n      dup3\n        /* \"#utility.yul\":10768:10782   */\n      add\n        /* \"#utility.yul\":10753:10782   */\n      swap1\n      pop\n        /* \"#utility.yul\":10619:10788   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10794:11028   */\n    tag_254:\n        /* \"#utility.yul\":10934:10968   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":10930:10931   */\n      0x00\n        /* \"#utility.yul\":10922:10928   */\n      dup3\n        /* \"#utility.yul\":10918:10932   */\n      add\n        /* \"#utility.yul\":10911:10969   */\n      mstore\n        /* \"#utility.yul\":11003:11020   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":10998:11000   */\n      0x20\n        /* \"#utility.yul\":10990:10996   */\n      dup3\n        /* \"#utility.yul\":10986:11001   */\n      add\n        /* \"#utility.yul\":10979:11021   */\n      mstore\n        /* \"#utility.yul\":10794:11028   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11034:11400   */\n    tag_255:\n        /* \"#utility.yul\":11176:11179   */\n      0x00\n        /* \"#utility.yul\":11197:11264   */\n      tag_411\n        /* \"#utility.yul\":11261:11263   */\n      0x2f\n        /* \"#utility.yul\":11256:11259   */\n      dup4\n        /* \"#utility.yul\":11197:11264   */\n      tag_253\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":11190:11264   */\n      swap2\n      pop\n        /* \"#utility.yul\":11273:11366   */\n      tag_412\n        /* \"#utility.yul\":11362:11365   */\n      dup3\n        /* \"#utility.yul\":11273:11366   */\n      tag_254\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":11391:11393   */\n      0x40\n        /* \"#utility.yul\":11386:11389   */\n      dup3\n        /* \"#utility.yul\":11382:11394   */\n      add\n        /* \"#utility.yul\":11375:11394   */\n      swap1\n      pop\n        /* \"#utility.yul\":11034:11400   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11406:11825   */\n    tag_113:\n        /* \"#utility.yul\":11572:11576   */\n      0x00\n        /* \"#utility.yul\":11610:11612   */\n      0x20\n        /* \"#utility.yul\":11599:11608   */\n      dup3\n        /* \"#utility.yul\":11595:11613   */\n      add\n        /* \"#utility.yul\":11587:11613   */\n      swap1\n      pop\n        /* \"#utility.yul\":11659:11668   */\n      dup2\n        /* \"#utility.yul\":11653:11657   */\n      dup2\n        /* \"#utility.yul\":11649:11669   */\n      sub\n        /* \"#utility.yul\":11645:11646   */\n      0x00\n        /* \"#utility.yul\":11634:11643   */\n      dup4\n        /* \"#utility.yul\":11630:11647   */\n      add\n        /* \"#utility.yul\":11623:11670   */\n      mstore\n        /* \"#utility.yul\":11687:11818   */\n      tag_414\n        /* \"#utility.yul\":11813:11817   */\n      dup2\n        /* \"#utility.yul\":11687:11818   */\n      tag_255\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":11679:11818   */\n      swap1\n      pop\n        /* \"#utility.yul\":11406:11825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11831:11949   */\n    tag_256:\n        /* \"#utility.yul\":11918:11942   */\n      tag_416\n        /* \"#utility.yul\":11936:11941   */\n      dup2\n        /* \"#utility.yul\":11918:11942   */\n      tag_235\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":11913:11916   */\n      dup3\n        /* \"#utility.yul\":11906:11943   */\n      mstore\n        /* \"#utility.yul\":11831:11949   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11955:12073   */\n    tag_257:\n        /* \"#utility.yul\":12042:12066   */\n      tag_418\n        /* \"#utility.yul\":12060:12065   */\n      dup2\n        /* \"#utility.yul\":12042:12066   */\n      tag_238\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":12037:12040   */\n      dup3\n        /* \"#utility.yul\":12030:12067   */\n      mstore\n        /* \"#utility.yul\":11955:12073   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12079:12177   */\n    tag_258:\n        /* \"#utility.yul\":12130:12136   */\n      0x00\n        /* \"#utility.yul\":12164:12169   */\n      dup2\n        /* \"#utility.yul\":12158:12170   */\n      mload\n        /* \"#utility.yul\":12148:12170   */\n      swap1\n      pop\n        /* \"#utility.yul\":12079:12177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12183:12351   */\n    tag_259:\n        /* \"#utility.yul\":12266:12277   */\n      0x00\n        /* \"#utility.yul\":12300:12306   */\n      dup3\n        /* \"#utility.yul\":12295:12298   */\n      dup3\n        /* \"#utility.yul\":12288:12307   */\n      mstore\n        /* \"#utility.yul\":12340:12344   */\n      0x20\n        /* \"#utility.yul\":12335:12338   */\n      dup3\n        /* \"#utility.yul\":12331:12345   */\n      add\n        /* \"#utility.yul\":12316:12345   */\n      swap1\n      pop\n        /* \"#utility.yul\":12183:12351   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12357:12603   */\n    tag_260:\n        /* \"#utility.yul\":12438:12439   */\n      0x00\n        /* \"#utility.yul\":12448:12561   */\n    tag_422:\n        /* \"#utility.yul\":12462:12468   */\n      dup4\n        /* \"#utility.yul\":12459:12460   */\n      dup2\n        /* \"#utility.yul\":12456:12469   */\n      lt\n        /* \"#utility.yul\":12448:12561   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":12547:12548   */\n      dup1\n        /* \"#utility.yul\":12542:12545   */\n      dup3\n        /* \"#utility.yul\":12538:12549   */\n      add\n        /* \"#utility.yul\":12532:12550   */\n      mload\n        /* \"#utility.yul\":12528:12529   */\n      dup2\n        /* \"#utility.yul\":12523:12526   */\n      dup5\n        /* \"#utility.yul\":12519:12530   */\n      add\n        /* \"#utility.yul\":12512:12551   */\n      mstore\n        /* \"#utility.yul\":12484:12486   */\n      0x20\n        /* \"#utility.yul\":12481:12482   */\n      dup2\n        /* \"#utility.yul\":12477:12487   */\n      add\n        /* \"#utility.yul\":12472:12487   */\n      swap1\n      pop\n        /* \"#utility.yul\":12448:12561   */\n      jump(tag_422)\n    tag_424:\n        /* \"#utility.yul\":12595:12596   */\n      0x00\n        /* \"#utility.yul\":12586:12592   */\n      dup5\n        /* \"#utility.yul\":12581:12584   */\n      dup5\n        /* \"#utility.yul\":12577:12593   */\n      add\n        /* \"#utility.yul\":12570:12597   */\n      mstore\n        /* \"#utility.yul\":12419:12603   */\n      pop\n        /* \"#utility.yul\":12357:12603   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12609:12982   */\n    tag_261:\n        /* \"#utility.yul\":12695:12698   */\n      0x00\n        /* \"#utility.yul\":12723:12761   */\n      tag_426\n        /* \"#utility.yul\":12755:12760   */\n      dup3\n        /* \"#utility.yul\":12723:12761   */\n      tag_258\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":12777:12847   */\n      tag_427\n        /* \"#utility.yul\":12840:12846   */\n      dup2\n        /* \"#utility.yul\":12835:12838   */\n      dup6\n        /* \"#utility.yul\":12777:12847   */\n      tag_259\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":12770:12847   */\n      swap4\n      pop\n        /* \"#utility.yul\":12856:12921   */\n      tag_428\n        /* \"#utility.yul\":12914:12920   */\n      dup2\n        /* \"#utility.yul\":12909:12912   */\n      dup6\n        /* \"#utility.yul\":12902:12906   */\n      0x20\n        /* \"#utility.yul\":12895:12900   */\n      dup7\n        /* \"#utility.yul\":12891:12907   */\n      add\n        /* \"#utility.yul\":12856:12921   */\n      tag_260\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":12946:12975   */\n      tag_429\n        /* \"#utility.yul\":12968:12974   */\n      dup2\n        /* \"#utility.yul\":12946:12975   */\n      tag_243\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":12941:12944   */\n      dup5\n        /* \"#utility.yul\":12937:12976   */\n      add\n        /* \"#utility.yul\":12930:12976   */\n      swap2\n      pop\n        /* \"#utility.yul\":12699:12982   */\n      pop\n        /* \"#utility.yul\":12609:12982   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12988:13517   */\n    tag_161:\n        /* \"#utility.yul\":13155:13159   */\n      0x00\n        /* \"#utility.yul\":13193:13195   */\n      0x60\n        /* \"#utility.yul\":13182:13191   */\n      dup3\n        /* \"#utility.yul\":13178:13196   */\n      add\n        /* \"#utility.yul\":13170:13196   */\n      swap1\n      pop\n        /* \"#utility.yul\":13206:13277   */\n      tag_431\n        /* \"#utility.yul\":13274:13275   */\n      0x00\n        /* \"#utility.yul\":13263:13272   */\n      dup4\n        /* \"#utility.yul\":13259:13276   */\n      add\n        /* \"#utility.yul\":13250:13256   */\n      dup7\n        /* \"#utility.yul\":13206:13277   */\n      tag_256\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":13287:13359   */\n      tag_432\n        /* \"#utility.yul\":13355:13357   */\n      0x20\n        /* \"#utility.yul\":13344:13353   */\n      dup4\n        /* \"#utility.yul\":13340:13358   */\n      add\n        /* \"#utility.yul\":13331:13337   */\n      dup6\n        /* \"#utility.yul\":13287:13359   */\n      tag_257\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":13406:13415   */\n      dup2\n        /* \"#utility.yul\":13400:13404   */\n      dup2\n        /* \"#utility.yul\":13396:13416   */\n      sub\n        /* \"#utility.yul\":13391:13393   */\n      0x40\n        /* \"#utility.yul\":13380:13389   */\n      dup4\n        /* \"#utility.yul\":13376:13394   */\n      add\n        /* \"#utility.yul\":13369:13417   */\n      mstore\n        /* \"#utility.yul\":13434:13510   */\n      tag_433\n        /* \"#utility.yul\":13505:13509   */\n      dup2\n        /* \"#utility.yul\":13496:13502   */\n      dup5\n        /* \"#utility.yul\":13434:13510   */\n      tag_261\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":13426:13510   */\n      swap1\n      pop\n        /* \"#utility.yul\":12988:13517   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13523:13745   */\n    tag_167:\n        /* \"#utility.yul\":13616:13620   */\n      0x00\n        /* \"#utility.yul\":13654:13656   */\n      0x20\n        /* \"#utility.yul\":13643:13652   */\n      dup3\n        /* \"#utility.yul\":13639:13657   */\n      add\n        /* \"#utility.yul\":13631:13657   */\n      swap1\n      pop\n        /* \"#utility.yul\":13667:13738   */\n      tag_435\n        /* \"#utility.yul\":13735:13736   */\n      0x00\n        /* \"#utility.yul\":13724:13733   */\n      dup4\n        /* \"#utility.yul\":13720:13737   */\n      add\n        /* \"#utility.yul\":13711:13717   */\n      dup5\n        /* \"#utility.yul\":13667:13738   */\n      tag_256\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":13523:13745   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13751:13811   */\n    tag_262:\n        /* \"#utility.yul\":13779:13782   */\n      0x00\n        /* \"#utility.yul\":13800:13805   */\n      dup2\n        /* \"#utility.yul\":13793:13805   */\n      swap1\n      pop\n        /* \"#utility.yul\":13751:13811   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13817:13959   */\n    tag_263:\n        /* \"#utility.yul\":13867:13876   */\n      0x00\n        /* \"#utility.yul\":13900:13953   */\n      tag_438\n        /* \"#utility.yul\":13918:13952   */\n      tag_439\n        /* \"#utility.yul\":13927:13951   */\n      tag_440\n        /* \"#utility.yul\":13945:13950   */\n      dup5\n        /* \"#utility.yul\":13927:13951   */\n      tag_234\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":13918:13952   */\n      tag_262\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":13900:13953   */\n      tag_234\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":13887:13953   */\n      swap1\n      pop\n        /* \"#utility.yul\":13817:13959   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13965:14091   */\n    tag_264:\n        /* \"#utility.yul\":14015:14024   */\n      0x00\n        /* \"#utility.yul\":14048:14085   */\n      tag_442\n        /* \"#utility.yul\":14079:14084   */\n      dup3\n        /* \"#utility.yul\":14048:14085   */\n      tag_263\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":14035:14085   */\n      swap1\n      pop\n        /* \"#utility.yul\":13965:14091   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14097:14237   */\n    tag_265:\n        /* \"#utility.yul\":14161:14170   */\n      0x00\n        /* \"#utility.yul\":14194:14231   */\n      tag_444\n        /* \"#utility.yul\":14225:14230   */\n      dup3\n        /* \"#utility.yul\":14194:14231   */\n      tag_264\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":14181:14231   */\n      swap1\n      pop\n        /* \"#utility.yul\":14097:14237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14243:14402   */\n    tag_266:\n        /* \"#utility.yul\":14344:14395   */\n      tag_446\n        /* \"#utility.yul\":14389:14394   */\n      dup2\n        /* \"#utility.yul\":14344:14395   */\n      tag_265\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":14339:14342   */\n      dup3\n        /* \"#utility.yul\":14332:14396   */\n      mstore\n        /* \"#utility.yul\":14243:14402   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14408:14494   */\n    tag_267:\n        /* \"#utility.yul\":14454:14461   */\n      0x00\n        /* \"#utility.yul\":14483:14488   */\n      dup2\n        /* \"#utility.yul\":14472:14488   */\n      swap1\n      pop\n        /* \"#utility.yul\":14408:14494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14500:14586   */\n    tag_268:\n        /* \"#utility.yul\":14535:14542   */\n      0x00\n        /* \"#utility.yul\":14575:14579   */\n      0xff\n        /* \"#utility.yul\":14568:14573   */\n      dup3\n        /* \"#utility.yul\":14564:14580   */\n      and\n        /* \"#utility.yul\":14553:14580   */\n      swap1\n      pop\n        /* \"#utility.yul\":14500:14586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14592:14748   */\n    tag_269:\n        /* \"#utility.yul\":14649:14658   */\n      0x00\n        /* \"#utility.yul\":14682:14742   */\n      tag_450\n        /* \"#utility.yul\":14698:14741   */\n      tag_451\n        /* \"#utility.yul\":14707:14740   */\n      tag_452\n        /* \"#utility.yul\":14734:14739   */\n      dup5\n        /* \"#utility.yul\":14707:14740   */\n      tag_267\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":14698:14741   */\n      tag_262\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":14682:14742   */\n      tag_268\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":14669:14742   */\n      swap1\n      pop\n        /* \"#utility.yul\":14592:14748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14754:14899   */\n    tag_270:\n        /* \"#utility.yul\":14848:14892   */\n      tag_454\n        /* \"#utility.yul\":14886:14891   */\n      dup2\n        /* \"#utility.yul\":14848:14892   */\n      tag_269\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":14843:14846   */\n      dup3\n        /* \"#utility.yul\":14836:14893   */\n      mstore\n        /* \"#utility.yul\":14754:14899   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14905:15004   */\n    tag_271:\n        /* \"#utility.yul\":14957:14963   */\n      0x00\n        /* \"#utility.yul\":14991:14996   */\n      dup2\n        /* \"#utility.yul\":14985:14997   */\n      mload\n        /* \"#utility.yul\":14975:14997   */\n      swap1\n      pop\n        /* \"#utility.yul\":14905:15004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15010:15387   */\n    tag_272:\n        /* \"#utility.yul\":15098:15101   */\n      0x00\n        /* \"#utility.yul\":15126:15165   */\n      tag_457\n        /* \"#utility.yul\":15159:15164   */\n      dup3\n        /* \"#utility.yul\":15126:15165   */\n      tag_271\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":15181:15252   */\n      tag_458\n        /* \"#utility.yul\":15245:15251   */\n      dup2\n        /* \"#utility.yul\":15240:15243   */\n      dup6\n        /* \"#utility.yul\":15181:15252   */\n      tag_253\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":15174:15252   */\n      swap4\n      pop\n        /* \"#utility.yul\":15261:15326   */\n      tag_459\n        /* \"#utility.yul\":15319:15325   */\n      dup2\n        /* \"#utility.yul\":15314:15317   */\n      dup6\n        /* \"#utility.yul\":15307:15311   */\n      0x20\n        /* \"#utility.yul\":15300:15305   */\n      dup7\n        /* \"#utility.yul\":15296:15312   */\n      add\n        /* \"#utility.yul\":15261:15326   */\n      tag_260\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":15351:15380   */\n      tag_460\n        /* \"#utility.yul\":15373:15379   */\n      dup2\n        /* \"#utility.yul\":15351:15380   */\n      tag_243\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":15346:15349   */\n      dup5\n        /* \"#utility.yul\":15342:15381   */\n      add\n        /* \"#utility.yul\":15335:15381   */\n      swap2\n      pop\n        /* \"#utility.yul\":15102:15387   */\n      pop\n        /* \"#utility.yul\":15010:15387   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15393:16170   */\n    tag_172:\n        /* \"#utility.yul\":15631:15635   */\n      0x00\n        /* \"#utility.yul\":15669:15672   */\n      0x80\n        /* \"#utility.yul\":15658:15667   */\n      dup3\n        /* \"#utility.yul\":15654:15673   */\n      add\n        /* \"#utility.yul\":15646:15673   */\n      swap1\n      pop\n        /* \"#utility.yul\":15683:15768   */\n      tag_462\n        /* \"#utility.yul\":15765:15766   */\n      0x00\n        /* \"#utility.yul\":15754:15763   */\n      dup4\n        /* \"#utility.yul\":15750:15767   */\n      add\n        /* \"#utility.yul\":15741:15747   */\n      dup8\n        /* \"#utility.yul\":15683:15768   */\n      tag_266\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":15778:15857   */\n      tag_463\n        /* \"#utility.yul\":15853:15855   */\n      0x20\n        /* \"#utility.yul\":15842:15851   */\n      dup4\n        /* \"#utility.yul\":15838:15856   */\n      add\n        /* \"#utility.yul\":15829:15835   */\n      dup7\n        /* \"#utility.yul\":15778:15857   */\n      tag_270\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":15904:15913   */\n      dup2\n        /* \"#utility.yul\":15898:15902   */\n      dup2\n        /* \"#utility.yul\":15894:15914   */\n      sub\n        /* \"#utility.yul\":15889:15891   */\n      0x40\n        /* \"#utility.yul\":15878:15887   */\n      dup4\n        /* \"#utility.yul\":15874:15892   */\n      add\n        /* \"#utility.yul\":15867:15915   */\n      mstore\n        /* \"#utility.yul\":15932:16010   */\n      tag_464\n        /* \"#utility.yul\":16005:16009   */\n      dup2\n        /* \"#utility.yul\":15996:16002   */\n      dup6\n        /* \"#utility.yul\":15932:16010   */\n      tag_272\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":15924:16010   */\n      swap1\n      pop\n        /* \"#utility.yul\":16057:16066   */\n      dup2\n        /* \"#utility.yul\":16051:16055   */\n      dup2\n        /* \"#utility.yul\":16047:16067   */\n      sub\n        /* \"#utility.yul\":16042:16044   */\n      0x60\n        /* \"#utility.yul\":16031:16040   */\n      dup4\n        /* \"#utility.yul\":16027:16045   */\n      add\n        /* \"#utility.yul\":16020:16068   */\n      mstore\n        /* \"#utility.yul\":16085:16163   */\n      tag_465\n        /* \"#utility.yul\":16158:16162   */\n      dup2\n        /* \"#utility.yul\":16149:16155   */\n      dup5\n        /* \"#utility.yul\":16085:16163   */\n      tag_272\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":16077:16163   */\n      swap1\n      pop\n        /* \"#utility.yul\":15393:16170   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16176:16324   */\n    tag_273:\n        /* \"#utility.yul\":16278:16289   */\n      0x00\n        /* \"#utility.yul\":16315:16318   */\n      dup2\n        /* \"#utility.yul\":16300:16318   */\n      swap1\n      pop\n        /* \"#utility.yul\":16176:16324   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16330:16503   */\n    tag_274:\n        /* \"#utility.yul\":16470:16495   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":16466:16467   */\n      0x00\n        /* \"#utility.yul\":16458:16464   */\n      dup3\n        /* \"#utility.yul\":16454:16468   */\n      add\n        /* \"#utility.yul\":16447:16496   */\n      mstore\n        /* \"#utility.yul\":16330:16503   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16509:16911   */\n    tag_275:\n        /* \"#utility.yul\":16669:16672   */\n      0x00\n        /* \"#utility.yul\":16690:16775   */\n      tag_469\n        /* \"#utility.yul\":16772:16774   */\n      0x17\n        /* \"#utility.yul\":16767:16770   */\n      dup4\n        /* \"#utility.yul\":16690:16775   */\n      tag_273\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":16683:16775   */\n      swap2\n      pop\n        /* \"#utility.yul\":16784:16877   */\n      tag_470\n        /* \"#utility.yul\":16873:16876   */\n      dup3\n        /* \"#utility.yul\":16784:16877   */\n      tag_274\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":16902:16904   */\n      0x17\n        /* \"#utility.yul\":16897:16900   */\n      dup3\n        /* \"#utility.yul\":16893:16905   */\n      add\n        /* \"#utility.yul\":16886:16905   */\n      swap1\n      pop\n        /* \"#utility.yul\":16509:16911   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16917:17307   */\n    tag_276:\n        /* \"#utility.yul\":17023:17026   */\n      0x00\n        /* \"#utility.yul\":17051:17090   */\n      tag_472\n        /* \"#utility.yul\":17084:17089   */\n      dup3\n        /* \"#utility.yul\":17051:17090   */\n      tag_271\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":17106:17195   */\n      tag_473\n        /* \"#utility.yul\":17188:17194   */\n      dup2\n        /* \"#utility.yul\":17183:17186   */\n      dup6\n        /* \"#utility.yul\":17106:17195   */\n      tag_273\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":17099:17195   */\n      swap4\n      pop\n        /* \"#utility.yul\":17204:17269   */\n      tag_474\n        /* \"#utility.yul\":17262:17268   */\n      dup2\n        /* \"#utility.yul\":17257:17260   */\n      dup6\n        /* \"#utility.yul\":17250:17254   */\n      0x20\n        /* \"#utility.yul\":17243:17248   */\n      dup7\n        /* \"#utility.yul\":17239:17255   */\n      add\n        /* \"#utility.yul\":17204:17269   */\n      tag_260\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":17294:17300   */\n      dup1\n        /* \"#utility.yul\":17289:17292   */\n      dup5\n        /* \"#utility.yul\":17285:17301   */\n      add\n        /* \"#utility.yul\":17278:17301   */\n      swap2\n      pop\n        /* \"#utility.yul\":17027:17307   */\n      pop\n        /* \"#utility.yul\":16917:17307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17313:17480   */\n    tag_277:\n        /* \"#utility.yul\":17453:17472   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":17449:17450   */\n      0x00\n        /* \"#utility.yul\":17441:17447   */\n      dup3\n        /* \"#utility.yul\":17437:17451   */\n      add\n        /* \"#utility.yul\":17430:17473   */\n      mstore\n        /* \"#utility.yul\":17313:17480   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17486:17888   */\n    tag_278:\n        /* \"#utility.yul\":17646:17649   */\n      0x00\n        /* \"#utility.yul\":17667:17752   */\n      tag_477\n        /* \"#utility.yul\":17749:17751   */\n      0x11\n        /* \"#utility.yul\":17744:17747   */\n      dup4\n        /* \"#utility.yul\":17667:17752   */\n      tag_273\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":17660:17752   */\n      swap2\n      pop\n        /* \"#utility.yul\":17761:17854   */\n      tag_478\n        /* \"#utility.yul\":17850:17853   */\n      dup3\n        /* \"#utility.yul\":17761:17854   */\n      tag_277\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":17879:17881   */\n      0x11\n        /* \"#utility.yul\":17874:17877   */\n      dup3\n        /* \"#utility.yul\":17870:17882   */\n      add\n        /* \"#utility.yul\":17863:17882   */\n      swap1\n      pop\n        /* \"#utility.yul\":17486:17888   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17894:18861   */\n    tag_189:\n        /* \"#utility.yul\":18276:18279   */\n      0x00\n        /* \"#utility.yul\":18298:18446   */\n      tag_480\n        /* \"#utility.yul\":18442:18445   */\n      dup3\n        /* \"#utility.yul\":18298:18446   */\n      tag_275\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":18291:18446   */\n      swap2\n      pop\n        /* \"#utility.yul\":18463:18558   */\n      tag_481\n        /* \"#utility.yul\":18554:18557   */\n      dup3\n        /* \"#utility.yul\":18545:18551   */\n      dup6\n        /* \"#utility.yul\":18463:18558   */\n      tag_276\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":18456:18558   */\n      swap2\n      pop\n        /* \"#utility.yul\":18575:18723   */\n      tag_482\n        /* \"#utility.yul\":18719:18722   */\n      dup3\n        /* \"#utility.yul\":18575:18723   */\n      tag_278\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":18568:18723   */\n      swap2\n      pop\n        /* \"#utility.yul\":18740:18835   */\n      tag_483\n        /* \"#utility.yul\":18831:18834   */\n      dup3\n        /* \"#utility.yul\":18822:18828   */\n      dup5\n        /* \"#utility.yul\":18740:18835   */\n      tag_276\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":18733:18835   */\n      swap2\n      pop\n        /* \"#utility.yul\":18852:18855   */\n      dup2\n        /* \"#utility.yul\":18845:18855   */\n      swap1\n      pop\n        /* \"#utility.yul\":17894:18861   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18867:19180   */\n    tag_191:\n        /* \"#utility.yul\":18980:18984   */\n      0x00\n        /* \"#utility.yul\":19018:19020   */\n      0x20\n        /* \"#utility.yul\":19007:19016   */\n      dup3\n        /* \"#utility.yul\":19003:19021   */\n      add\n        /* \"#utility.yul\":18995:19021   */\n      swap1\n      pop\n        /* \"#utility.yul\":19067:19076   */\n      dup2\n        /* \"#utility.yul\":19061:19065   */\n      dup2\n        /* \"#utility.yul\":19057:19077   */\n      sub\n        /* \"#utility.yul\":19053:19054   */\n      0x00\n        /* \"#utility.yul\":19042:19051   */\n      dup4\n        /* \"#utility.yul\":19038:19055   */\n      add\n        /* \"#utility.yul\":19031:19078   */\n      mstore\n        /* \"#utility.yul\":19095:19173   */\n      tag_485\n        /* \"#utility.yul\":19168:19172   */\n      dup2\n        /* \"#utility.yul\":19159:19165   */\n      dup5\n        /* \"#utility.yul\":19095:19173   */\n      tag_272\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":19087:19173   */\n      swap1\n      pop\n        /* \"#utility.yul\":18867:19180   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19186:19366   */\n    tag_279:\n        /* \"#utility.yul\":19234:19311   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19231:19232   */\n      0x00\n        /* \"#utility.yul\":19224:19312   */\n      mstore\n        /* \"#utility.yul\":19331:19335   */\n      0x11\n        /* \"#utility.yul\":19328:19329   */\n      0x04\n        /* \"#utility.yul\":19321:19336   */\n      mstore\n        /* \"#utility.yul\":19355:19359   */\n      0x24\n        /* \"#utility.yul\":19352:19353   */\n      0x00\n        /* \"#utility.yul\":19345:19360   */\n      revert\n        /* \"#utility.yul\":19372:19782   */\n    tag_196:\n        /* \"#utility.yul\":19412:19419   */\n      0x00\n        /* \"#utility.yul\":19435:19455   */\n      tag_488\n        /* \"#utility.yul\":19453:19454   */\n      dup3\n        /* \"#utility.yul\":19435:19455   */\n      tag_238\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":19430:19455   */\n      swap2\n      pop\n        /* \"#utility.yul\":19469:19489   */\n      tag_489\n        /* \"#utility.yul\":19487:19488   */\n      dup4\n        /* \"#utility.yul\":19469:19489   */\n      tag_238\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":19464:19489   */\n      swap3\n      pop\n        /* \"#utility.yul\":19524:19525   */\n      dup3\n        /* \"#utility.yul\":19521:19522   */\n      dup3\n        /* \"#utility.yul\":19517:19526   */\n      mul\n        /* \"#utility.yul\":19546:19576   */\n      tag_490\n        /* \"#utility.yul\":19564:19575   */\n      dup2\n        /* \"#utility.yul\":19546:19576   */\n      tag_238\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":19535:19576   */\n      swap2\n      pop\n        /* \"#utility.yul\":19725:19726   */\n      dup3\n        /* \"#utility.yul\":19716:19723   */\n      dup3\n        /* \"#utility.yul\":19712:19727   */\n      div\n        /* \"#utility.yul\":19709:19710   */\n      dup5\n        /* \"#utility.yul\":19706:19728   */\n      eq\n        /* \"#utility.yul\":19686:19687   */\n      dup4\n        /* \"#utility.yul\":19679:19688   */\n      iszero\n        /* \"#utility.yul\":19659:19742   */\n      or\n        /* \"#utility.yul\":19636:19775   */\n      tag_491\n      jumpi\n        /* \"#utility.yul\":19755:19773   */\n      tag_492\n      tag_279\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":19636:19775   */\n    tag_491:\n        /* \"#utility.yul\":19420:19782   */\n      pop\n        /* \"#utility.yul\":19372:19782   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19788:19979   */\n    tag_198:\n        /* \"#utility.yul\":19828:19831   */\n      0x00\n        /* \"#utility.yul\":19847:19867   */\n      tag_494\n        /* \"#utility.yul\":19865:19866   */\n      dup3\n        /* \"#utility.yul\":19847:19867   */\n      tag_238\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":19842:19867   */\n      swap2\n      pop\n        /* \"#utility.yul\":19881:19901   */\n      tag_495\n        /* \"#utility.yul\":19899:19900   */\n      dup4\n        /* \"#utility.yul\":19881:19901   */\n      tag_238\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":19876:19901   */\n      swap3\n      pop\n        /* \"#utility.yul\":19924:19925   */\n      dup3\n        /* \"#utility.yul\":19921:19922   */\n      dup3\n        /* \"#utility.yul\":19917:19926   */\n      add\n        /* \"#utility.yul\":19910:19926   */\n      swap1\n      pop\n        /* \"#utility.yul\":19945:19948   */\n      dup1\n        /* \"#utility.yul\":19942:19943   */\n      dup3\n        /* \"#utility.yul\":19939:19949   */\n      gt\n        /* \"#utility.yul\":19936:19972   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":19952:19970   */\n      tag_497\n      tag_279\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":19936:19972   */\n    tag_496:\n        /* \"#utility.yul\":19788:19979   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19985:20165   */\n    tag_205:\n        /* \"#utility.yul\":20033:20110   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20030:20031   */\n      0x00\n        /* \"#utility.yul\":20023:20111   */\n      mstore\n        /* \"#utility.yul\":20130:20134   */\n      0x32\n        /* \"#utility.yul\":20127:20128   */\n      0x04\n        /* \"#utility.yul\":20120:20135   */\n      mstore\n        /* \"#utility.yul\":20154:20158   */\n      0x24\n        /* \"#utility.yul\":20151:20152   */\n      0x00\n        /* \"#utility.yul\":20144:20159   */\n      revert\n        /* \"#utility.yul\":20171:20342   */\n    tag_218:\n        /* \"#utility.yul\":20210:20213   */\n      0x00\n        /* \"#utility.yul\":20233:20257   */\n      tag_500\n        /* \"#utility.yul\":20251:20256   */\n      dup3\n        /* \"#utility.yul\":20233:20257   */\n      tag_238\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":20224:20257   */\n      swap2\n      pop\n        /* \"#utility.yul\":20279:20283   */\n      0x00\n        /* \"#utility.yul\":20272:20277   */\n      dup3\n        /* \"#utility.yul\":20269:20284   */\n      sub\n        /* \"#utility.yul\":20266:20307   */\n      tag_501\n      jumpi\n        /* \"#utility.yul\":20287:20305   */\n      tag_502\n      tag_279\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":20266:20307   */\n    tag_501:\n        /* \"#utility.yul\":20334:20335   */\n      0x01\n        /* \"#utility.yul\":20327:20332   */\n      dup3\n        /* \"#utility.yul\":20323:20336   */\n      sub\n        /* \"#utility.yul\":20316:20336   */\n      swap1\n      pop\n        /* \"#utility.yul\":20171:20342   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20348:20530   */\n    tag_280:\n        /* \"#utility.yul\":20488:20522   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":20484:20485   */\n      0x00\n        /* \"#utility.yul\":20476:20482   */\n      dup3\n        /* \"#utility.yul\":20472:20486   */\n      add\n        /* \"#utility.yul\":20465:20523   */\n      mstore\n        /* \"#utility.yul\":20348:20530   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20536:20902   */\n    tag_281:\n        /* \"#utility.yul\":20678:20681   */\n      0x00\n        /* \"#utility.yul\":20699:20766   */\n      tag_505\n        /* \"#utility.yul\":20763:20765   */\n      0x20\n        /* \"#utility.yul\":20758:20761   */\n      dup4\n        /* \"#utility.yul\":20699:20766   */\n      tag_253\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":20692:20766   */\n      swap2\n      pop\n        /* \"#utility.yul\":20775:20868   */\n      tag_506\n        /* \"#utility.yul\":20864:20867   */\n      dup3\n        /* \"#utility.yul\":20775:20868   */\n      tag_280\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":20893:20895   */\n      0x20\n        /* \"#utility.yul\":20888:20891   */\n      dup3\n        /* \"#utility.yul\":20884:20896   */\n      add\n        /* \"#utility.yul\":20877:20896   */\n      swap1\n      pop\n        /* \"#utility.yul\":20536:20902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20908:21327   */\n    tag_221:\n        /* \"#utility.yul\":21074:21078   */\n      0x00\n        /* \"#utility.yul\":21112:21114   */\n      0x20\n        /* \"#utility.yul\":21101:21110   */\n      dup3\n        /* \"#utility.yul\":21097:21115   */\n      add\n        /* \"#utility.yul\":21089:21115   */\n      swap1\n      pop\n        /* \"#utility.yul\":21161:21170   */\n      dup2\n        /* \"#utility.yul\":21155:21159   */\n      dup2\n        /* \"#utility.yul\":21151:21171   */\n      sub\n        /* \"#utility.yul\":21147:21148   */\n      0x00\n        /* \"#utility.yul\":21136:21145   */\n      dup4\n        /* \"#utility.yul\":21132:21149   */\n      add\n        /* \"#utility.yul\":21125:21172   */\n      mstore\n        /* \"#utility.yul\":21189:21320   */\n      tag_508\n        /* \"#utility.yul\":21315:21319   */\n      dup2\n        /* \"#utility.yul\":21189:21320   */\n      tag_281\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":21181:21320   */\n      swap1\n      pop\n        /* \"#utility.yul\":20908:21327   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220615c49b876318a61384928114e714201fdbd8a45d8fa3dad0ac83c4e7ce0a01664736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3915": {
									"entryPoint": null,
									"id": 3915,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_283": {
									"entryPoint": 67,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_693": {
									"entryPoint": 416,
									"id": 693,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setupRole_223": {
									"entryPoint": 45,
									"id": 223,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": 309,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50620000276000801b336200002d60201b60201c565b620001a8565b6200003f82826200004360201b60201c565b5050565b6200005582826200013560201b60201c565b620001315760016020600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620000d6620001a060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b60006020600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b6119de80620001b86000396000f3fe6080604052600436106100c65760003560e01c806391d148541161007f578063a6a0559811610059578063a6a0559814610290578063d5391393146102b9578063d547741f146102e4578063fe9d93031461030d576100d5565b806391d14854146101ff57806394d008ef1461023c578063a217fddf14610265576100d5565b806301ffc9a7146100df578063248a9ca31461011c578063282c51f3146101595780632f2ff15d1461018457806336568abe146101ad5780634a0687ef146101d6576100d5565b366100d5576100d3610336565b005b6100dd610336565b005b3480156100eb57600080fd5b5061010660048036038101906101019190610eb4565b610350565b6040516101139190610efc565b60405180910390f35b34801561012857600080fd5b50610143600480360381019061013e9190610f4d565b6103ca565b6040516101509190610f89565b60405180910390f35b34801561016557600080fd5b5061016e6103ea565b60405161017b9190610f89565b60405180910390f35b34801561019057600080fd5b506101ab60048036038101906101a69190611002565b61040e565b005b3480156101b957600080fd5b506101d460048036038101906101cf9190611002565b61042f565b005b3480156101e257600080fd5b506101fd60048036038101906101f89190611042565b6104b2565b005b34801561020b57600080fd5b5061022660048036038101906102219190611002565b6105ab565b6040516102339190610efc565b60405180910390f35b34801561024857600080fd5b50610263600480360381019061025e91906111eb565b610616565b005b34801561027157600080fd5b5061027a610651565b6040516102879190610f89565b60405180910390f35b34801561029c57600080fd5b506102b760048036038101906102b291906112fb565b610658565b005b3480156102c557600080fd5b506102ce610676565b6040516102db9190610f89565b60405180910390f35b3480156102f057600080fd5b5061030b60048036038101906103069190611002565b61069a565b005b34801561031957600080fd5b50610334600480360381019061032f91906113dc565b6106bb565b005b61033e6106f5565b61034e6103496106f7565b610720565b565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c357506103c282610746565b5b9050919050565b600060206000838152602001908152602001600020600101549050919050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b610417826103ca565b610420816107b0565b61042a83836107c4565b505050565b6104376108a5565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049b906114bb565b60405180910390fd5b6104ae82826108ad565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610518576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166105386106f7565b73ffffffffffffffffffffffffffffffffffffffff1614610585576040517f5daa87a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5550565b60006020600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610640816107b0565b61064b84848461098f565b50505050565b6000801b81565b610663868686610a03565b61066e82848361098f565b505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6106a3826103ca565b6106ac816107b0565b6106b683836108ad565b505050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8486106e5816107b0565b6106f0338484610ae6565b505050565b565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54905090565b3660008037600080366000845af43d6000803e8060008114610741573d6000f35b3d6000fd5b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6107c1816107bc6108a5565b610b5a565b50565b6107ce82826105ab565b6108a15760016020600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506108466108a5565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b6108b782826105ab565b1561098b5760006020600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506109306108a5565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b3073ffffffffffffffffffffffffffffffffffffffff1663c68d42838484846040518463ffffffff1660e01b81526004016109cc93929190611578565b600060405180830381600087803b1580156109e657600080fd5b505af11580156109fa573d6000803e3d6000fd5b50505050505050565b8273ffffffffffffffffffffffffffffffffffffffff1663d412d344306040518263ffffffff1660e01b8152600401610a3c91906115b6565b600060405180830381600087803b158015610a5657600080fd5b505af1158015610a6a573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff166342fe09806000601285856040518563ffffffff1660e01b8152600401610aaf94939291906116bc565b600060405180830381600087803b158015610ac957600080fd5b505af1158015610add573d6000803e3d6000fd5b50505050505050565b3073ffffffffffffffffffffffffffffffffffffffff16639d8767418484846040518463ffffffff1660e01b8152600401610b2393929190611578565b600060405180830381600087803b158015610b3d57600080fd5b505af1158015610b51573d6000803e3d6000fd5b50505050505050565b610b6482826105ab565b610bdb57610b7181610bdf565b610b7f8360001c6020610c0c565b604051602001610b909291906117e3565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd2919061181d565b60405180910390fd5b5050565b6060610c058273ffffffffffffffffffffffffffffffffffffffff16601460ff16610c0c565b9050919050565b606060006002836002610c1f919061186e565b610c2991906118b0565b67ffffffffffffffff811115610c4257610c416110c0565b5b6040519080825280601f01601f191660200182016040528015610c745781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610cac57610cab6118e4565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610d1057610d0f6118e4565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610d50919061186e565b610d5a91906118b0565b90505b6001811115610dfa577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610d9c57610d9b6118e4565b5b1a60f81b828281518110610db357610db26118e4565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610df390611913565b9050610d5d565b5060008414610e3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3590611988565b60405180910390fd5b8091505092915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610e9181610e5c565b8114610e9c57600080fd5b50565b600081359050610eae81610e88565b92915050565b600060208284031215610eca57610ec9610e52565b5b6000610ed884828501610e9f565b91505092915050565b60008115159050919050565b610ef681610ee1565b82525050565b6000602082019050610f116000830184610eed565b92915050565b6000819050919050565b610f2a81610f17565b8114610f3557600080fd5b50565b600081359050610f4781610f21565b92915050565b600060208284031215610f6357610f62610e52565b5b6000610f7184828501610f38565b91505092915050565b610f8381610f17565b82525050565b6000602082019050610f9e6000830184610f7a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fcf82610fa4565b9050919050565b610fdf81610fc4565b8114610fea57600080fd5b50565b600081359050610ffc81610fd6565b92915050565b6000806040838503121561101957611018610e52565b5b600061102785828601610f38565b925050602061103885828601610fed565b9150509250929050565b60006020828403121561105857611057610e52565b5b600061106684828501610fed565b91505092915050565b6000819050919050565b6110828161106f565b811461108d57600080fd5b50565b60008135905061109f81611079565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110f8826110af565b810181811067ffffffffffffffff82111715611117576111166110c0565b5b80604052505050565b600061112a610e48565b905061113682826110ef565b919050565b600067ffffffffffffffff821115611156576111556110c0565b5b61115f826110af565b9050602081019050919050565b82818337600083830152505050565b600061118e6111898461113b565b611120565b9050828152602081018484840111156111aa576111a96110aa565b5b6111b584828561116c565b509392505050565b600082601f8301126111d2576111d16110a5565b5b81356111e284826020860161117b565b91505092915050565b60008060006060848603121561120457611203610e52565b5b600061121286828701610fed565b935050602061122386828701611090565b925050604084013567ffffffffffffffff81111561124457611243610e57565b5b611250868287016111bd565b9150509250925092565b600067ffffffffffffffff821115611275576112746110c0565b5b61127e826110af565b9050602081019050919050565b600061129e6112998461125a565b611120565b9050828152602081018484840111156112ba576112b96110aa565b5b6112c584828561116c565b509392505050565b600082601f8301126112e2576112e16110a5565b5b81356112f284826020860161128b565b91505092915050565b60008060008060008060c0878903121561131857611317610e52565b5b600061132689828a01610fed565b965050602087013567ffffffffffffffff81111561134757611346610e57565b5b61135389828a016112cd565b955050604087013567ffffffffffffffff81111561137457611373610e57565b5b61138089828a016112cd565b945050606061139189828a01611090565b93505060806113a289828a01610fed565b92505060a087013567ffffffffffffffff8111156113c3576113c2610e57565b5b6113cf89828a016111bd565b9150509295509295509295565b600080604083850312156113f3576113f2610e52565b5b600061140185828601611090565b925050602083013567ffffffffffffffff81111561142257611421610e57565b5b61142e858286016111bd565b9150509250929050565b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b60006114a5602f83611438565b91506114b082611449565b604082019050919050565b600060208201905081810360008301526114d481611498565b9050919050565b6114e481610fc4565b82525050565b6114f38161106f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611533578082015181840152602081019050611518565b60008484015250505050565b600061154a826114f9565b6115548185611504565b9350611564818560208601611515565b61156d816110af565b840191505092915050565b600060608201905061158d60008301866114db565b61159a60208301856114ea565b81810360408301526115ac818461153f565b9050949350505050565b60006020820190506115cb60008301846114db565b92915050565b6000819050919050565b60006115f66115f16115ec84610fa4565b6115d1565b610fa4565b9050919050565b6000611608826115db565b9050919050565b600061161a826115fd565b9050919050565b61162a8161160f565b82525050565b6000819050919050565b600060ff82169050919050565b600061166261165d61165884611630565b6115d1565b61163a565b9050919050565b61167281611647565b82525050565b600081519050919050565b600061168e82611678565b6116988185611438565b93506116a8818560208601611515565b6116b1816110af565b840191505092915050565b60006080820190506116d16000830187611621565b6116de6020830186611669565b81810360408301526116f08185611683565b905081810360608301526117048184611683565b905095945050505050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b600061175060178361170f565b915061175b8261171a565b601782019050919050565b600061177182611678565b61177b818561170f565b935061178b818560208601611515565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b60006117cd60118361170f565b91506117d882611797565b601182019050919050565b60006117ee82611743565b91506117fa8285611766565b9150611805826117c0565b91506118118284611766565b91508190509392505050565b600060208201905081810360008301526118378184611683565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118798261106f565b91506118848361106f565b92508282026118928161106f565b915082820484148315176118a9576118a861183f565b5b5092915050565b60006118bb8261106f565b91506118c68361106f565b92508282019050808211156118de576118dd61183f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061191e8261106f565b9150600082036119315761193061183f565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611972602083611438565b915061197d8261193c565b602082019050919050565b600060208201905081810360008301526119a181611965565b905091905056fea2646970667358221220615c49b876318a61384928114e714201fdbd8a45d8fa3dad0ac83c4e7ce0a01664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x27 PUSH1 0x0 DUP1 SHL CALLER PUSH3 0x2D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1A8 JUMP JUMPDEST PUSH3 0x3F DUP3 DUP3 PUSH3 0x43 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x55 DUP3 DUP3 PUSH3 0x135 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x131 JUMPI PUSH1 0x1 PUSH1 0x20 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0xD6 PUSH3 0x1A0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x19DE DUP1 PUSH3 0x1B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA6A05598 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA6A05598 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xFE9D9303 EQ PUSH2 0x30D JUMPI PUSH2 0xD5 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x94D008EF EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x265 JUMPI PUSH2 0xD5 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x4A0687EF EQ PUSH2 0x1D6 JUMPI PUSH2 0xD5 JUMP JUMPDEST CALLDATASIZE PUSH2 0xD5 JUMPI PUSH2 0xD3 PUSH2 0x336 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDD PUSH2 0x336 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST PUSH2 0x350 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xF4D JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST PUSH2 0x42F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1042 JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x658 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x13DC JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33E PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0x34E PUSH2 0x349 PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x720 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C3 JUMPI POP PUSH2 0x3C2 DUP3 PUSH2 0x746 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0x417 DUP3 PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x420 DUP2 PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x42A DUP4 DUP4 PUSH2 0x7C4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x437 PUSH2 0x8A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49B SWAP1 PUSH2 0x14BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4AE DUP3 DUP3 PUSH2 0x8AD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x518 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x538 PUSH2 0x6F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x585 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5DAA87A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x640 DUP2 PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x64B DUP5 DUP5 DUP5 PUSH2 0x98F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x663 DUP7 DUP7 DUP7 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x66E DUP3 DUP5 DUP4 PUSH2 0x98F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x6A3 DUP3 PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x6AC DUP2 PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x6B6 DUP4 DUP4 PUSH2 0x8AD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x6E5 DUP2 PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x6F0 CALLER DUP5 DUP5 PUSH2 0xAE6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x741 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C1 DUP2 PUSH2 0x7BC PUSH2 0x8A5 JUMP JUMPDEST PUSH2 0xB5A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7CE DUP3 DUP3 PUSH2 0x5AB JUMP JUMPDEST PUSH2 0x8A1 JUMPI PUSH1 0x1 PUSH1 0x20 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x846 PUSH2 0x8A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8B7 DUP3 DUP3 PUSH2 0x5AB JUMP JUMPDEST ISZERO PUSH2 0x98B JUMPI PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x930 PUSH2 0x8A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC68D4283 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1578 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD412D344 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3C SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42FE0980 PUSH1 0x0 PUSH1 0x12 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16BC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9D876741 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB23 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1578 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB51 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB64 DUP3 DUP3 PUSH2 0x5AB JUMP JUMPDEST PUSH2 0xBDB JUMPI PUSH2 0xB71 DUP2 PUSH2 0xBDF JUMP JUMPDEST PUSH2 0xB7F DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0xC0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB90 SWAP3 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD2 SWAP2 SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC05 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0xC0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xC1F SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH2 0xC29 SWAP2 SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC42 JUMPI PUSH2 0xC41 PUSH2 0x10C0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC74 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xCAC JUMPI PUSH2 0xCAB PUSH2 0x18E4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xD10 JUMPI PUSH2 0xD0F PUSH2 0x18E4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xD50 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH2 0xD5A SWAP2 SWAP1 PUSH2 0x18B0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xDFA JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xD9C JUMPI PUSH2 0xD9B PUSH2 0x18E4 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xDB3 JUMPI PUSH2 0xDB2 PUSH2 0x18E4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xDF3 SWAP1 PUSH2 0x1913 JUMP JUMPDEST SWAP1 POP PUSH2 0xD5D JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0xE3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE35 SWAP1 PUSH2 0x1988 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE91 DUP2 PUSH2 0xE5C JUMP JUMPDEST DUP2 EQ PUSH2 0xE9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEAE DUP2 PUSH2 0xE88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECA JUMPI PUSH2 0xEC9 PUSH2 0xE52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xED8 DUP5 DUP3 DUP6 ADD PUSH2 0xE9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEF6 DUP2 PUSH2 0xEE1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF11 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF2A DUP2 PUSH2 0xF17 JUMP JUMPDEST DUP2 EQ PUSH2 0xF35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF47 DUP2 PUSH2 0xF21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF63 JUMPI PUSH2 0xF62 PUSH2 0xE52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF71 DUP5 DUP3 DUP6 ADD PUSH2 0xF38 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF83 DUP2 PUSH2 0xF17 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF9E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFCF DUP3 PUSH2 0xFA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFDF DUP2 PUSH2 0xFC4 JUMP JUMPDEST DUP2 EQ PUSH2 0xFEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFFC DUP2 PUSH2 0xFD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1019 JUMPI PUSH2 0x1018 PUSH2 0xE52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1027 DUP6 DUP3 DUP7 ADD PUSH2 0xF38 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1038 DUP6 DUP3 DUP7 ADD PUSH2 0xFED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1058 JUMPI PUSH2 0x1057 PUSH2 0xE52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1066 DUP5 DUP3 DUP6 ADD PUSH2 0xFED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1082 DUP2 PUSH2 0x106F JUMP JUMPDEST DUP2 EQ PUSH2 0x108D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x109F DUP2 PUSH2 0x1079 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x10F8 DUP3 PUSH2 0x10AF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1117 JUMPI PUSH2 0x1116 PUSH2 0x10C0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x112A PUSH2 0xE48 JUMP JUMPDEST SWAP1 POP PUSH2 0x1136 DUP3 DUP3 PUSH2 0x10EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1156 JUMPI PUSH2 0x1155 PUSH2 0x10C0 JUMP JUMPDEST JUMPDEST PUSH2 0x115F DUP3 PUSH2 0x10AF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118E PUSH2 0x1189 DUP5 PUSH2 0x113B JUMP JUMPDEST PUSH2 0x1120 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x11AA JUMPI PUSH2 0x11A9 PUSH2 0x10AA JUMP JUMPDEST JUMPDEST PUSH2 0x11B5 DUP5 DUP3 DUP6 PUSH2 0x116C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11D2 JUMPI PUSH2 0x11D1 PUSH2 0x10A5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11E2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x117B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1204 JUMPI PUSH2 0x1203 PUSH2 0xE52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1212 DUP7 DUP3 DUP8 ADD PUSH2 0xFED JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1223 DUP7 DUP3 DUP8 ADD PUSH2 0x1090 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1244 JUMPI PUSH2 0x1243 PUSH2 0xE57 JUMP JUMPDEST JUMPDEST PUSH2 0x1250 DUP7 DUP3 DUP8 ADD PUSH2 0x11BD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1275 JUMPI PUSH2 0x1274 PUSH2 0x10C0 JUMP JUMPDEST JUMPDEST PUSH2 0x127E DUP3 PUSH2 0x10AF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129E PUSH2 0x1299 DUP5 PUSH2 0x125A JUMP JUMPDEST PUSH2 0x1120 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x12BA JUMPI PUSH2 0x12B9 PUSH2 0x10AA JUMP JUMPDEST JUMPDEST PUSH2 0x12C5 DUP5 DUP3 DUP6 PUSH2 0x116C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12E2 JUMPI PUSH2 0x12E1 PUSH2 0x10A5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12F2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x128B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1318 JUMPI PUSH2 0x1317 PUSH2 0xE52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1326 DUP10 DUP3 DUP11 ADD PUSH2 0xFED JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1347 JUMPI PUSH2 0x1346 PUSH2 0xE57 JUMP JUMPDEST JUMPDEST PUSH2 0x1353 DUP10 DUP3 DUP11 ADD PUSH2 0x12CD JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1374 JUMPI PUSH2 0x1373 PUSH2 0xE57 JUMP JUMPDEST JUMPDEST PUSH2 0x1380 DUP10 DUP3 DUP11 ADD PUSH2 0x12CD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x1391 DUP10 DUP3 DUP11 ADD PUSH2 0x1090 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x13A2 DUP10 DUP3 DUP11 ADD PUSH2 0xFED JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13C3 JUMPI PUSH2 0x13C2 PUSH2 0xE57 JUMP JUMPDEST JUMPDEST PUSH2 0x13CF DUP10 DUP3 DUP11 ADD PUSH2 0x11BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F3 JUMPI PUSH2 0x13F2 PUSH2 0xE52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1401 DUP6 DUP3 DUP7 ADD PUSH2 0x1090 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1422 JUMPI PUSH2 0x1421 PUSH2 0xE57 JUMP JUMPDEST JUMPDEST PUSH2 0x142E DUP6 DUP3 DUP7 ADD PUSH2 0x11BD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A5 PUSH1 0x2F DUP4 PUSH2 0x1438 JUMP JUMPDEST SWAP2 POP PUSH2 0x14B0 DUP3 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14D4 DUP2 PUSH2 0x1498 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E4 DUP2 PUSH2 0xFC4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14F3 DUP2 PUSH2 0x106F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1533 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154A DUP3 PUSH2 0x14F9 JUMP JUMPDEST PUSH2 0x1554 DUP2 DUP6 PUSH2 0x1504 JUMP JUMPDEST SWAP4 POP PUSH2 0x1564 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1515 JUMP JUMPDEST PUSH2 0x156D DUP2 PUSH2 0x10AF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x158D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x159A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14EA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x15AC DUP2 DUP5 PUSH2 0x153F JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15CB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F6 PUSH2 0x15F1 PUSH2 0x15EC DUP5 PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0xFA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1608 DUP3 PUSH2 0x15DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161A DUP3 PUSH2 0x15FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x162A DUP2 PUSH2 0x160F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1662 PUSH2 0x165D PUSH2 0x1658 DUP5 PUSH2 0x1630 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x163A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1672 DUP2 PUSH2 0x1647 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168E DUP3 PUSH2 0x1678 JUMP JUMPDEST PUSH2 0x1698 DUP2 DUP6 PUSH2 0x1438 JUMP JUMPDEST SWAP4 POP PUSH2 0x16A8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1515 JUMP JUMPDEST PUSH2 0x16B1 DUP2 PUSH2 0x10AF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x16D1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1621 JUMP JUMPDEST PUSH2 0x16DE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1669 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x16F0 DUP2 DUP6 PUSH2 0x1683 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1704 DUP2 DUP5 PUSH2 0x1683 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1750 PUSH1 0x17 DUP4 PUSH2 0x170F JUMP JUMPDEST SWAP2 POP PUSH2 0x175B DUP3 PUSH2 0x171A JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1771 DUP3 PUSH2 0x1678 JUMP JUMPDEST PUSH2 0x177B DUP2 DUP6 PUSH2 0x170F JUMP JUMPDEST SWAP4 POP PUSH2 0x178B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1515 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17CD PUSH1 0x11 DUP4 PUSH2 0x170F JUMP JUMPDEST SWAP2 POP PUSH2 0x17D8 DUP3 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17EE DUP3 PUSH2 0x1743 JUMP JUMPDEST SWAP2 POP PUSH2 0x17FA DUP3 DUP6 PUSH2 0x1766 JUMP JUMPDEST SWAP2 POP PUSH2 0x1805 DUP3 PUSH2 0x17C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1811 DUP3 DUP5 PUSH2 0x1766 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1837 DUP2 DUP5 PUSH2 0x1683 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1879 DUP3 PUSH2 0x106F JUMP JUMPDEST SWAP2 POP PUSH2 0x1884 DUP4 PUSH2 0x106F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1892 DUP2 PUSH2 0x106F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18A9 JUMPI PUSH2 0x18A8 PUSH2 0x183F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BB DUP3 PUSH2 0x106F JUMP JUMPDEST SWAP2 POP PUSH2 0x18C6 DUP4 PUSH2 0x106F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x18DE JUMPI PUSH2 0x18DD PUSH2 0x183F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x191E DUP3 PUSH2 0x106F JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1931 JUMPI PUSH2 0x1930 PUSH2 0x183F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1972 PUSH1 0x20 DUP4 PUSH2 0x1438 JUMP JUMPDEST SWAP2 POP PUSH2 0x197D DUP3 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19A1 DUP2 PUSH2 0x1965 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x5C49 0xB8 PUSH23 0x318A61384928114E714201FDBD8A45D8FA3DAD0AC83C4E PUSH29 0xE0A01664736F6C63430008120033000000000000000000000000000000 ",
							"sourceMap": "328:1489:20:-:0;;;577:73;;;;;;;;;;601:42;2072:4:0;612:18:20;;632:10;601;;;:42;;:::i;:::-;328:1489;;6811:110:0;6889:25;6900:4;6906:7;6889:10;;;:25;;:::i;:::-;6811:110;;:::o;7461:233::-;7544:22;7552:4;7558:7;7544;;;:22;;:::i;:::-;7539:149;;7614:4;7582:6;:12;7589:4;7582:12;;;;;;;;;;;:20;;:29;7603:7;7582:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7664:12;:10;;;:12;;:::i;:::-;7637:40;;7655:7;7637:40;;7649:4;7637:40;;;;;;;;;;7539:149;7461:233;;:::o;2895:145::-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;328:1489:20:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BURNER_ROLE_3905": {
									"entryPoint": 1002,
									"id": 3905,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_27": {
									"entryPoint": 1617,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_3899": {
									"entryPoint": 1654,
									"id": 3899,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_434": {
									"entryPoint": null,
									"id": 434,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_beforeFallback_439": {
									"entryPoint": 1781,
									"id": 439,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_burn_4102": {
									"entryPoint": 2790,
									"id": 4102,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkRole_131": {
									"entryPoint": 2906,
									"id": 131,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_92": {
									"entryPoint": 1968,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_delegate_399": {
									"entryPoint": 1824,
									"id": 399,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_418": {
									"entryPoint": 822,
									"id": 418,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_283": {
									"entryPoint": 1988,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_implementation_4215": {
									"entryPoint": 1783,
									"id": 4215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initialize_4040": {
									"entryPoint": 2563,
									"id": 4040,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_4079": {
									"entryPoint": 2447,
									"id": 4079,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_693": {
									"entryPoint": 2213,
									"id": 693,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_314": {
									"entryPoint": 2221,
									"id": 314,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_3983": {
									"entryPoint": 1723,
									"id": 3983,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getRoleAdmin_146": {
									"entryPoint": 970,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_166": {
									"entryPoint": 1038,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": 1451,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initializeProxy_4206": {
									"entryPoint": 1202,
									"id": 4206,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@initialize_3944": {
									"entryPoint": 1624,
									"id": 3944,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@mint_3964": {
									"entryPoint": 1558,
									"id": 3964,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@renounceRole_209": {
									"entryPoint": 1071,
									"id": 209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_186": {
									"entryPoint": 1690,
									"id": 186,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_60": {
									"entryPoint": 848,
									"id": 60,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_901": {
									"entryPoint": 1862,
									"id": 901,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_857": {
									"entryPoint": 3084,
									"id": 857,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_877": {
									"entryPoint": 3039,
									"id": 877,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 4475,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 4747,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 3896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 3743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 4541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 4813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_bytes_memory_ptr": {
									"entryPoint": 4859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 4587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 3917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 4098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_bytes_memory_ptr": {
									"entryPoint": 5084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 3962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 5439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$518_to_t_address_fromStack": {
									"entryPoint": 5665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_18_by_1_to_t_uint8_fromStack": {
									"entryPoint": 5737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6115,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5496,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 3977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$518_t_rational_18_by_1_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_uint8_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5820,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 3656,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 4411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 4698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 5369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 5380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 3863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_18_by_1": {
									"entryPoint": 5680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$518_to_t_address": {
									"entryPoint": 5647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_18_by_1_to_t_uint8": {
									"entryPoint": 5703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 4460,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5397,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 6419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 5585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6207,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6372,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4288,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4261,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 4266,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3671,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3666,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 6460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 5914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 6039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 5193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 3873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 3720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:21330:24",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:24",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:24"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:24"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:24",
														"type": ""
													}
												],
												"src": "7:75:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:24",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:24"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:24",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:24"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:24",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:24",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:24"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:24"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:24",
														"type": ""
													}
												],
												"src": "334:149:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:24"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:24"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:24"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:24"
															},
															"nodeType": "YulIf",
															"src": "541:62:24"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:24",
														"type": ""
													}
												],
												"src": "489:120:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:24",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:24"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:24"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:24"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:24"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:24",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:24",
														"type": ""
													}
												],
												"src": "615:137:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:24"
															},
															"nodeType": "YulIf",
															"src": "833:119:24"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:24",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:24",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:24",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:24",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:24"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:24"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:24"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:24"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:24"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:24",
														"type": ""
													}
												],
												"src": "758:327:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:24"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:24"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:24"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:24",
														"type": ""
													}
												],
												"src": "1091:90:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:24"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:24"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:24",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:24",
														"type": ""
													}
												],
												"src": "1187:109:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:24",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:24"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:24"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:24",
														"type": ""
													}
												],
												"src": "1302:210:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:32:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:16:24",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1584:5:24"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:24"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1555:7:24",
														"type": ""
													}
												],
												"src": "1518:77:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1644:79:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1701:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:24"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:24"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:24"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1657:43:24"
															},
															"nodeType": "YulIf",
															"src": "1654:63:24"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1637:5:24",
														"type": ""
													}
												],
												"src": "1601:122:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1781:87:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1791:29:24",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:24"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:20:24"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:24"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1829:33:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:24"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1759:6:24",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1767:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1775:5:24",
														"type": ""
													}
												],
												"src": "1729:139:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1940:263:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1986:83:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1953:32:24"
															},
															"nodeType": "YulIf",
															"src": "1950:119:24"
														},
														{
															"nodeType": "YulBlock",
															"src": "2079:117:24",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:24",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:24",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:24",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2123:63:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:24"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:24"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:24"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:24"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:24"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1910:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1921:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1933:6:24",
														"type": ""
													}
												],
												"src": "1874:329:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2274:53:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2291:3:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2314:5:24"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "2296:17:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2296:24:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:37:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2284:37:24"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2262:5:24",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2269:3:24",
														"type": ""
													}
												],
												"src": "2209:118:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2431:124:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2441:26:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2453:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2464:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2449:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2449:18:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2441:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2521:6:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2534:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2545:1:24",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2530:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2530:17:24"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2477:43:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2477:71:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2477:71:24"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2403:9:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2415:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2426:4:24",
														"type": ""
													}
												],
												"src": "2333:222:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2606:81:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2616:65:24",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2631:5:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2638:42:24",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2627:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2627:54:24"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:24"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2588:5:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2598:7:24",
														"type": ""
													}
												],
												"src": "2561:126:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2738:51:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2748:35:24",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2777:5:24"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2759:17:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2759:24:24"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2748:7:24"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2720:5:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2730:7:24",
														"type": ""
													}
												],
												"src": "2693:96:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:79:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2895:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2904:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2907:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2897:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2897:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2861:5:24"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2886:5:24"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2868:17:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2868:24:24"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2858:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2858:35:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2851:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:43:24"
															},
															"nodeType": "YulIf",
															"src": "2848:63:24"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2831:5:24",
														"type": ""
													}
												],
												"src": "2795:122:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2975:87:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2985:29:24",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3007:6:24"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2994:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:20:24"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2985:5:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3050:5:24"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3023:26:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3023:33:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3023:33:24"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2953:6:24",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2961:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2969:5:24",
														"type": ""
													}
												],
												"src": "2923:139:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3151:391:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3197:83:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3199:77:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3199:79:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3199:79:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3172:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3181:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3168:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3168:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3193:2:24",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3164:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3164:32:24"
															},
															"nodeType": "YulIf",
															"src": "3161:119:24"
														},
														{
															"nodeType": "YulBlock",
															"src": "3290:117:24",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3305:15:24",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3319:1:24",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3309:6:24",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3334:63:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3369:9:24"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3380:6:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3365:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3365:22:24"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3389:7:24"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3344:20:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3344:53:24"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:24"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3417:118:24",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3432:16:24",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3446:2:24",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3436:6:24",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3462:63:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:24"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:24"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:24"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:24"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:24"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3113:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3124:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3136:6:24",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3144:6:24",
														"type": ""
													}
												],
												"src": "3068:474:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:263:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3660:83:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3662:77:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3662:79:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3662:79:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3635:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3644:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3631:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3631:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3656:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3627:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:32:24"
															},
															"nodeType": "YulIf",
															"src": "3624:119:24"
														},
														{
															"nodeType": "YulBlock",
															"src": "3753:117:24",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3768:15:24",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3782:1:24",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3772:6:24",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3797:63:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3832:9:24"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3843:6:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3828:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3828:22:24"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3852:7:24"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3807:20:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3807:53:24"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3797:6:24"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3584:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3595:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3607:6:24",
														"type": ""
													}
												],
												"src": "3548:329:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3928:32:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3938:16:24",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3949:5:24"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3938:7:24"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3910:5:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3920:7:24",
														"type": ""
													}
												],
												"src": "3883:77:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4009:79:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4066:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4075:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4078:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4068:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4068:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4068:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4032:5:24"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4057:5:24"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4039:17:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4039:24:24"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4029:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4029:35:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4022:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4022:43:24"
															},
															"nodeType": "YulIf",
															"src": "4019:63:24"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4002:5:24",
														"type": ""
													}
												],
												"src": "3966:122:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4146:87:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4156:29:24",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4178:6:24"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4165:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4165:20:24"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4156:5:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4221:5:24"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4194:26:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4194:33:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4194:33:24"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4124:6:24",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4132:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4140:5:24",
														"type": ""
													}
												],
												"src": "4094:139:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4328:28:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4345:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4348:1:24",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4338:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4338:12:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4338:12:24"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4239:117:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4451:28:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4468:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4471:1:24",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4461:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:12:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4461:12:24"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "4362:117:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4533:54:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4543:38:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4561:5:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4568:2:24",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4557:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4557:14:24"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4577:2:24",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4573:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4573:7:24"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4553:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4553:28:24"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4543:6:24"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4516:5:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4526:6:24",
														"type": ""
													}
												],
												"src": "4485:102:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4621:152:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4638:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4641:77:24",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4631:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4631:88:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4631:88:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4735:1:24",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4738:4:24",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4728:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4728:15:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4728:15:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4759:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4762:4:24",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4752:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4752:15:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4752:15:24"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "4593:180:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4822:238:24",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4832:58:24",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4854:6:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "4884:4:24"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "4862:21:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4862:27:24"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4850:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4850:40:24"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4836:10:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5001:22:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5003:16:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5003:18:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5003:18:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4944:10:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4956:18:24",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4941:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4941:34:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4980:10:24"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4992:6:24"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4977:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4977:22:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4938:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4938:62:24"
															},
															"nodeType": "YulIf",
															"src": "4935:88:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5039:2:24",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5043:10:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5032:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5032:22:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5032:22:24"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4808:6:24",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4816:4:24",
														"type": ""
													}
												],
												"src": "4779:281:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5107:88:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5117:30:24",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5127:18:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5127:20:24"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5117:6:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5176:6:24"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5184:4:24"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5156:19:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5156:33:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5156:33:24"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5091:4:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5100:6:24",
														"type": ""
													}
												],
												"src": "5066:129:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5267:241:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5372:22:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5374:16:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5374:18:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5374:18:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5344:6:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5352:18:24",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5341:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5341:30:24"
															},
															"nodeType": "YulIf",
															"src": "5338:56:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5404:37:24",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5434:6:24"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "5412:21:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5412:29:24"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5404:4:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5478:23:24",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5490:4:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5496:4:24",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5486:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5486:15:24"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5478:4:24"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5251:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5262:4:24",
														"type": ""
													}
												],
												"src": "5201:307:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5578:82:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5601:3:24"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5606:3:24"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5611:6:24"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "5588:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5588:30:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5588:30:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5638:3:24"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5643:6:24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5634:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5634:16:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5652:1:24",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5627:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5627:27:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5627:27:24"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5560:3:24",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "5565:3:24",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5570:6:24",
														"type": ""
													}
												],
												"src": "5514:146:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5749:340:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5759:74:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5825:6:24"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5784:40:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5784:48:24"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5768:15:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5768:65:24"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5759:5:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "5849:5:24"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5856:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5842:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5842:21:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5842:21:24"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5872:27:24",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "5887:5:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5894:4:24",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5883:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5883:16:24"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5876:3:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5937:83:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "5939:77:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5939:79:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5939:79:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5918:3:24"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5923:6:24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5914:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5914:16:24"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5932:3:24"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5911:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5911:25:24"
															},
															"nodeType": "YulIf",
															"src": "5908:112:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6066:3:24"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6071:3:24"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6076:6:24"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "6029:36:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6029:54:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6029:54:24"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5722:3:24",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5727:6:24",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5735:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5743:5:24",
														"type": ""
													}
												],
												"src": "5666:423:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6169:277:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6218:83:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "6220:77:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6220:79:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6220:79:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6197:6:24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6205:4:24",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6193:17:24"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6212:3:24"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6189:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6189:27:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6182:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6182:35:24"
															},
															"nodeType": "YulIf",
															"src": "6179:122:24"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6310:34:24",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6337:6:24"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6324:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6324:20:24"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6314:6:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6353:87:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6413:6:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6421:4:24",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6409:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6409:17:24"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6428:6:24"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6436:3:24"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6362:46:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6362:78:24"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6353:5:24"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6147:6:24",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6155:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6163:5:24",
														"type": ""
													}
												],
												"src": "6108:338:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6561:688:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6607:83:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6609:77:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6609:79:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6609:79:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6582:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6591:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6578:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6578:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6603:2:24",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6574:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6574:32:24"
															},
															"nodeType": "YulIf",
															"src": "6571:119:24"
														},
														{
															"nodeType": "YulBlock",
															"src": "6700:117:24",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6715:15:24",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6729:1:24",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6719:6:24",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6744:63:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6779:9:24"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6790:6:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6775:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6775:22:24"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6799:7:24"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6754:20:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6754:53:24"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6744:6:24"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6827:118:24",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6842:16:24",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6856:2:24",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6846:6:24",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6872:63:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6907:9:24"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6918:6:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6903:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6903:22:24"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6927:7:24"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6882:20:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6882:53:24"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6872:6:24"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6955:287:24",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6970:46:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7001:9:24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7012:2:24",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6997:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6997:18:24"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6984:12:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6984:32:24"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6974:6:24",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7063:83:24",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7065:77:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7065:79:24"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7065:79:24"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7035:6:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7043:18:24",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7032:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7032:30:24"
																	},
																	"nodeType": "YulIf",
																	"src": "7029:117:24"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7160:72:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7204:9:24"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7215:6:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7200:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7200:22:24"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7224:7:24"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7170:29:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7170:62:24"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "7160:6:24"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6515:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6526:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6538:6:24",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6546:6:24",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6554:6:24",
														"type": ""
													}
												],
												"src": "6452:797:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7322:241:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7427:22:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7429:16:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7429:18:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7429:18:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7399:6:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7407:18:24",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7396:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7396:30:24"
															},
															"nodeType": "YulIf",
															"src": "7393:56:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7459:37:24",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7489:6:24"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "7467:21:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7467:29:24"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7459:4:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7533:23:24",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7545:4:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7551:4:24",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7541:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7541:15:24"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7533:4:24"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7306:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7317:4:24",
														"type": ""
													}
												],
												"src": "7255:308:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7653:341:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7663:75:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7730:6:24"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7688:41:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7688:49:24"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7672:15:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7672:66:24"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7663:5:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7754:5:24"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7761:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7747:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7747:21:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7747:21:24"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7777:27:24",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7792:5:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7799:4:24",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7788:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7788:16:24"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "7781:3:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7842:83:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "7844:77:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7844:79:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7844:79:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "7823:3:24"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7828:6:24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7819:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7819:16:24"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7837:3:24"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7816:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7816:25:24"
															},
															"nodeType": "YulIf",
															"src": "7813:112:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7971:3:24"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7976:3:24"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7981:6:24"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7934:36:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7934:54:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7934:54:24"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7626:3:24",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7631:6:24",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7639:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7647:5:24",
														"type": ""
													}
												],
												"src": "7569:425:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8076:278:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8125:83:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8127:77:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8127:79:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8127:79:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8104:6:24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8112:4:24",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8100:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8100:17:24"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8119:3:24"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8096:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8096:27:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8089:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "8089:35:24"
															},
															"nodeType": "YulIf",
															"src": "8086:122:24"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8217:34:24",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8244:6:24"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8231:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "8231:20:24"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8221:6:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8260:88:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8321:6:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8329:4:24",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8317:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8317:17:24"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8336:6:24"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8344:3:24"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8269:47:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "8269:79:24"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8260:5:24"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8054:6:24",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8062:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8070:5:24",
														"type": ""
													}
												],
												"src": "8014:340:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8540:1415:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8587:83:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8589:77:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8589:79:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8589:79:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8561:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8570:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8557:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8557:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8582:3:24",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8553:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "8553:33:24"
															},
															"nodeType": "YulIf",
															"src": "8550:120:24"
														},
														{
															"nodeType": "YulBlock",
															"src": "8680:117:24",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8695:15:24",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8709:1:24",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8699:6:24",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8724:63:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8759:9:24"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8770:6:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8755:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8755:22:24"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8779:7:24"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8734:20:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8734:53:24"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8724:6:24"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8807:288:24",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8822:46:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8853:9:24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8864:2:24",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8849:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8849:18:24"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8836:12:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8836:32:24"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8826:6:24",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8915:83:24",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8917:77:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8917:79:24"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8917:79:24"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8887:6:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8895:18:24",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8884:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8884:30:24"
																	},
																	"nodeType": "YulIf",
																	"src": "8881:117:24"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9012:73:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9057:9:24"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9068:6:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9053:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9053:22:24"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9077:7:24"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9022:30:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9022:63:24"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9012:6:24"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9105:288:24",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9120:46:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9151:9:24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9162:2:24",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9147:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9147:18:24"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9134:12:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9134:32:24"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9124:6:24",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9213:83:24",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9215:77:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9215:79:24"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9215:79:24"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9185:6:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9193:18:24",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9182:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9182:30:24"
																	},
																	"nodeType": "YulIf",
																	"src": "9179:117:24"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9310:73:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9355:9:24"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9366:6:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9351:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9351:22:24"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9375:7:24"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9320:30:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9320:63:24"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9310:6:24"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9403:118:24",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9418:16:24",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9432:2:24",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9422:6:24",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9448:63:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9483:9:24"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9494:6:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9479:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9479:22:24"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9503:7:24"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9458:20:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9458:53:24"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9448:6:24"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9531:119:24",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9546:17:24",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9560:3:24",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9550:6:24",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9577:63:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9612:9:24"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9623:6:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9608:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9608:22:24"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9632:7:24"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9587:20:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9587:53:24"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "9577:6:24"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9660:288:24",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9675:47:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9706:9:24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9717:3:24",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9702:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9702:19:24"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9689:12:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9689:33:24"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9679:6:24",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9769:83:24",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9771:77:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9771:79:24"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9771:79:24"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9741:6:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9749:18:24",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9738:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9738:30:24"
																	},
																	"nodeType": "YulIf",
																	"src": "9735:117:24"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9866:72:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9910:9:24"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9921:6:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9906:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9906:22:24"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9930:7:24"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9876:29:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9876:62:24"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "9866:6:24"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8470:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8481:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8493:6:24",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8501:6:24",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8509:6:24",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8517:6:24",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8525:6:24",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "8533:6:24",
														"type": ""
													}
												],
												"src": "8360:1595:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10053:560:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10099:83:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10101:77:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10101:79:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10101:79:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10074:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10083:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10070:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10070:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10095:2:24",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10066:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "10066:32:24"
															},
															"nodeType": "YulIf",
															"src": "10063:119:24"
														},
														{
															"nodeType": "YulBlock",
															"src": "10192:117:24",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10207:15:24",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10221:1:24",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10211:6:24",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10236:63:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10271:9:24"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10282:6:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10267:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10267:22:24"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10291:7:24"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10246:20:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10246:53:24"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10236:6:24"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10319:287:24",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10334:46:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10365:9:24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10376:2:24",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10361:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10361:18:24"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10348:12:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10348:32:24"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10338:6:24",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10427:83:24",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "10429:77:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10429:79:24"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10429:79:24"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10399:6:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10407:18:24",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10396:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10396:30:24"
																	},
																	"nodeType": "YulIf",
																	"src": "10393:117:24"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10524:72:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10568:9:24"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10579:6:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10564:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10564:22:24"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10588:7:24"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10534:29:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10534:62:24"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10524:6:24"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10015:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10026:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10038:6:24",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10046:6:24",
														"type": ""
													}
												],
												"src": "9961:652:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10715:73:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10732:3:24"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10737:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10725:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "10725:19:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10725:19:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10753:29:24",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10772:3:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10777:4:24",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10768:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "10768:14:24"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10753:11:24"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10687:3:24",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10692:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10703:11:24",
														"type": ""
													}
												],
												"src": "10619:169:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10900:128:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10922:6:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10930:1:24",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10918:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10918:14:24"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10934:34:24",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10911:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "10911:58:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10911:58:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10990:6:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10998:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10986:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10986:15:24"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11003:17:24",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10979:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "10979:42:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10979:42:24"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10892:6:24",
														"type": ""
													}
												],
												"src": "10794:234:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11180:220:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11190:74:24",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11256:3:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11261:2:24",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11197:58:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "11197:67:24"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11190:3:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11362:3:24"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nodeType": "YulIdentifier",
																	"src": "11273:88:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "11273:93:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11273:93:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11375:19:24",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11386:3:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11391:2:24",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11382:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "11382:12:24"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11375:3:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11168:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11176:3:24",
														"type": ""
													}
												],
												"src": "11034:366:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11577:248:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11587:26:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11599:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11610:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11595:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "11595:18:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11587:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11634:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11645:1:24",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11630:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11630:17:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11653:4:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11659:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11649:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11649:20:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11623:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "11623:47:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11623:47:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11679:139:24",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11813:4:24"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11687:124:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "11687:131:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11679:4:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11557:9:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11572:4:24",
														"type": ""
													}
												],
												"src": "11406:419:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11896:53:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11913:3:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11936:5:24"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11918:17:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11918:24:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11906:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "11906:37:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11906:37:24"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11884:5:24",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11891:3:24",
														"type": ""
													}
												],
												"src": "11831:118:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12020:53:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12037:3:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12060:5:24"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12042:17:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12042:24:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12030:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "12030:37:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12030:37:24"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12008:5:24",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12015:3:24",
														"type": ""
													}
												],
												"src": "11955:118:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12137:40:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12148:22:24",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12164:5:24"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12158:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "12158:12:24"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12148:6:24"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12120:5:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12130:6:24",
														"type": ""
													}
												],
												"src": "12079:98:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12278:73:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12295:3:24"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12300:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12288:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "12288:19:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12288:19:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12316:29:24",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12335:3:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12340:4:24",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12331:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "12331:14:24"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12316:11:24"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12250:3:24",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12255:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12266:11:24",
														"type": ""
													}
												],
												"src": "12183:168:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12419:184:24",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12429:10:24",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12438:1:24",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "12433:1:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12498:63:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12523:3:24"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "12528:1:24"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12519:3:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12519:11:24"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "12542:3:24"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "12547:1:24"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12538:3:24"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12538:11:24"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "12532:5:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12532:18:24"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12512:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12512:39:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12512:39:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12459:1:24"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12462:6:24"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12456:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "12456:13:24"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12470:19:24",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12472:15:24",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12481:1:24"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12484:2:24",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12477:3:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12477:10:24"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12472:1:24"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12452:3:24",
																"statements": []
															},
															"src": "12448:113:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "12581:3:24"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12586:6:24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12577:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12577:16:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12595:1:24",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12570:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "12570:27:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12570:27:24"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "12401:3:24",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "12406:3:24",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12411:6:24",
														"type": ""
													}
												],
												"src": "12357:246:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12699:283:24",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12709:52:24",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12755:5:24"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12723:31:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "12723:38:24"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12713:6:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12770:77:24",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12835:3:24"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12840:6:24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12777:57:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "12777:70:24"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12770:3:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12895:5:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12902:4:24",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12891:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12891:16:24"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12909:3:24"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12914:6:24"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "12856:34:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "12856:65:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12856:65:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12930:46:24",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12941:3:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12968:6:24"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12946:21:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12946:29:24"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12937:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "12937:39:24"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12930:3:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12680:5:24",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12687:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12695:3:24",
														"type": ""
													}
												],
												"src": "12609:373:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13160:357:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13170:26:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13182:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13193:2:24",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13178:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "13178:18:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13170:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13250:6:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13263:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13274:1:24",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13259:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13259:17:24"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13206:43:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "13206:71:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13206:71:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13331:6:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13344:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13355:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13340:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13340:18:24"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13287:43:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "13287:72:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13287:72:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13380:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13391:2:24",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13376:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13376:18:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13400:4:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13406:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13396:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13396:20:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13369:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "13369:48:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13369:48:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13426:84:24",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13496:6:24"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13505:4:24"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13434:61:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "13434:76:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13426:4:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13116:9:24",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13128:6:24",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13136:6:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13144:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13155:4:24",
														"type": ""
													}
												],
												"src": "12988:529:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13621:124:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13631:26:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13643:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13654:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13639:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "13639:18:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13631:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13711:6:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13724:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13735:1:24",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13720:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13720:17:24"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13667:43:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "13667:71:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13667:71:24"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13593:9:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13605:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13616:4:24",
														"type": ""
													}
												],
												"src": "13523:222:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13783:28:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13793:12:24",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13800:5:24"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "13793:3:24"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13769:5:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13779:3:24",
														"type": ""
													}
												],
												"src": "13751:60:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13877:82:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13887:66:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13945:5:24"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "13927:17:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13927:24:24"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "13918:8:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13918:34:24"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "13900:17:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "13900:53:24"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "13887:9:24"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13857:5:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "13867:9:24",
														"type": ""
													}
												],
												"src": "13817:142:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14025:66:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14035:50:24",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14079:5:24"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "14048:30:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "14048:37:24"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "14035:9:24"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14005:5:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "14015:9:24",
														"type": ""
													}
												],
												"src": "13965:126:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14171:66:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14181:50:24",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14225:5:24"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "14194:30:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "14194:37:24"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "14181:9:24"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$518_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14151:5:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "14161:9:24",
														"type": ""
													}
												],
												"src": "14097:140:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14322:80:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14339:3:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14389:5:24"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$518_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "14344:44:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14344:51:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14332:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "14332:64:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14332:64:24"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$518_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14310:5:24",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14317:3:24",
														"type": ""
													}
												],
												"src": "14243:159:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14462:32:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14472:16:24",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14483:5:24"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14472:7:24"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_18_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14444:5:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14454:7:24",
														"type": ""
													}
												],
												"src": "14408:86:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14543:43:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14553:27:24",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14568:5:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14575:4:24",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14564:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "14564:16:24"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14553:7:24"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14525:5:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14535:7:24",
														"type": ""
													}
												],
												"src": "14500:86:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14659:89:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14669:73:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14734:5:24"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_18_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "14707:26:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14707:33:24"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "14698:8:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14698:43:24"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "14682:15:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "14682:60:24"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "14669:9:24"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_18_by_1_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14639:5:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "14649:9:24",
														"type": ""
													}
												],
												"src": "14592:156:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14826:73:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14843:3:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14886:5:24"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_18_by_1_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "14848:37:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14848:44:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14836:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "14836:57:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14836:57:24"
														}
													]
												},
												"name": "abi_encode_t_rational_18_by_1_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14814:5:24",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14821:3:24",
														"type": ""
													}
												],
												"src": "14754:145:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14964:40:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14975:22:24",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14991:5:24"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14985:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "14985:12:24"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14975:6:24"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14947:5:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14957:6:24",
														"type": ""
													}
												],
												"src": "14905:99:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15102:285:24",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15112:53:24",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15159:5:24"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15126:32:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "15126:39:24"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15116:6:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15174:78:24",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15240:3:24"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15245:6:24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15181:58:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "15181:71:24"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15174:3:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15300:5:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15307:4:24",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15296:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15296:16:24"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15314:3:24"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15319:6:24"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "15261:34:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "15261:65:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15261:65:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15335:46:24",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15346:3:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15373:6:24"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "15351:21:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15351:29:24"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15342:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "15342:39:24"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15335:3:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15083:5:24",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15090:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15098:3:24",
														"type": ""
													}
												],
												"src": "15010:377:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15636:534:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15646:27:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15658:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15669:3:24",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15654:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "15654:19:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15646:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15741:6:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15754:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15765:1:24",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15750:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15750:17:24"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$518_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15683:57:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "15683:85:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15683:85:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15829:6:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15842:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15853:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15838:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15838:18:24"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_18_by_1_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15778:50:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "15778:79:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15778:79:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15878:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15889:2:24",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15874:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15874:18:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15898:4:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15904:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15894:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15894:20:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15867:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "15867:48:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15867:48:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15924:86:24",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15996:6:24"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16005:4:24"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15932:63:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "15932:78:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15924:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16031:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16042:2:24",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16027:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16027:18:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16051:4:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16057:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16047:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16047:20:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16020:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "16020:48:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16020:48:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16077:86:24",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16149:6:24"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16158:4:24"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16085:63:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "16085:78:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16077:4:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$518_t_rational_18_by_1_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_uint8_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15584:9:24",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15596:6:24",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15604:6:24",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15612:6:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15620:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15631:4:24",
														"type": ""
													}
												],
												"src": "15393:777:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16290:34:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16300:18:24",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16315:3:24"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "16300:11:24"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16262:3:24",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16267:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "16278:11:24",
														"type": ""
													}
												],
												"src": "16176:148:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16436:67:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16458:6:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16466:1:24",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16454:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16454:14:24"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16470:25:24",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16447:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "16447:49:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16447:49:24"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16428:6:24",
														"type": ""
													}
												],
												"src": "16330:173:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16673:238:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16683:92:24",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16767:3:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16772:2:24",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16690:76:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "16690:85:24"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16683:3:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16873:3:24"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nodeType": "YulIdentifier",
																	"src": "16784:88:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "16784:93:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16784:93:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16886:19:24",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16897:3:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16902:2:24",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16893:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "16893:12:24"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16886:3:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16661:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16669:3:24",
														"type": ""
													}
												],
												"src": "16509:402:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17027:280:24",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17037:53:24",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17084:5:24"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "17051:32:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "17051:39:24"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "17041:6:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17099:96:24",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17183:3:24"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17188:6:24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17106:76:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "17106:89:24"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17099:3:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17243:5:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17250:4:24",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17239:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17239:16:24"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17257:3:24"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17262:6:24"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "17204:34:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "17204:65:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17204:65:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17278:23:24",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17289:3:24"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17294:6:24"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17285:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "17285:16:24"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17278:3:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17008:5:24",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17015:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17023:3:24",
														"type": ""
													}
												],
												"src": "16917:390:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17419:61:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17441:6:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17449:1:24",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17437:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17437:14:24"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17453:19:24",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17430:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "17430:43:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17430:43:24"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17411:6:24",
														"type": ""
													}
												],
												"src": "17313:167:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17650:238:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17660:92:24",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17744:3:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17749:2:24",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17667:76:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "17667:85:24"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17660:3:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17850:3:24"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nodeType": "YulIdentifier",
																	"src": "17761:88:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "17761:93:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17761:93:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17863:19:24",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17874:3:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17879:2:24",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17870:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "17870:12:24"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17863:3:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17638:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17646:3:24",
														"type": ""
													}
												],
												"src": "17486:402:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18280:581:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18291:155:24",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18442:3:24"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18298:142:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "18298:148:24"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18291:3:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18456:102:24",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18545:6:24"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18554:3:24"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18463:81:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "18463:95:24"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18456:3:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18568:155:24",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18719:3:24"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18575:142:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "18575:148:24"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18568:3:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18733:102:24",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18822:6:24"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18831:3:24"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18740:81:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "18740:95:24"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18733:3:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18845:10:24",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "18852:3:24"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18845:3:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18251:3:24",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18257:6:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18265:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18276:3:24",
														"type": ""
													}
												],
												"src": "17894:967:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18985:195:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18995:26:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19007:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19018:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19003:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "19003:18:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18995:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19042:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19053:1:24",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19038:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19038:17:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19061:4:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19067:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19057:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19057:20:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19031:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "19031:47:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19031:47:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19087:86:24",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19159:6:24"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19168:4:24"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19095:63:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "19095:78:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19087:4:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18957:9:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18969:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18980:4:24",
														"type": ""
													}
												],
												"src": "18867:313:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19214:152:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19231:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19234:77:24",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19224:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "19224:88:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19224:88:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19328:1:24",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19331:4:24",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19321:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "19321:15:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19321:15:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19352:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19355:4:24",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19345:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "19345:15:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19345:15:24"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "19186:180:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19420:362:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19430:25:24",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19453:1:24"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19435:17:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "19435:20:24"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19430:1:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19464:25:24",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19487:1:24"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19469:17:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "19469:20:24"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19464:1:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19498:28:24",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19521:1:24"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19524:1:24"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "19517:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "19517:9:24"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "19502:11:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19535:41:24",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "19564:11:24"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19546:17:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "19546:30:24"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "19535:7:24"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19753:22:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19755:16:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19755:18:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19755:18:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "19686:1:24"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "19679:6:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19679:9:24"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "19709:1:24"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "19716:7:24"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "19725:1:24"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "19712:3:24"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "19712:15:24"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "19706:2:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19706:22:24"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "19659:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19659:83:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19639:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "19639:113:24"
															},
															"nodeType": "YulIf",
															"src": "19636:139:24"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19403:1:24",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19406:1:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "19412:7:24",
														"type": ""
													}
												],
												"src": "19372:410:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19832:147:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19842:25:24",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19865:1:24"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19847:17:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "19847:20:24"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19842:1:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19876:25:24",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19899:1:24"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19881:17:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "19881:20:24"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19876:1:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19910:16:24",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19921:1:24"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19924:1:24"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19917:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "19917:9:24"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "19910:3:24"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19950:22:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19952:16:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19952:18:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19952:18:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19942:1:24"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "19945:3:24"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19939:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "19939:10:24"
															},
															"nodeType": "YulIf",
															"src": "19936:36:24"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19819:1:24",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19822:1:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "19828:3:24",
														"type": ""
													}
												],
												"src": "19788:191:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20013:152:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20030:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20033:77:24",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20023:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "20023:88:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20023:88:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20127:1:24",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20130:4:24",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20120:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "20120:15:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20120:15:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20151:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20154:4:24",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20144:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "20144:15:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20144:15:24"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "19985:180:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20214:128:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20224:33:24",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20251:5:24"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20233:17:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "20233:24:24"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20224:5:24"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20285:22:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20287:16:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20287:18:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20287:18:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20272:5:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20279:4:24",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20269:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "20269:15:24"
															},
															"nodeType": "YulIf",
															"src": "20266:41:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20316:20:24",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20327:5:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20334:1:24",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "20323:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "20323:13:24"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20316:3:24"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20200:5:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20210:3:24",
														"type": ""
													}
												],
												"src": "20171:171:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20454:76:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20476:6:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20484:1:24",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20472:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20472:14:24"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20488:34:24",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20465:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "20465:58:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20465:58:24"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20446:6:24",
														"type": ""
													}
												],
												"src": "20348:182:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20682:220:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20692:74:24",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20758:3:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20763:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20699:58:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "20699:67:24"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20692:3:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20864:3:24"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nodeType": "YulIdentifier",
																	"src": "20775:88:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "20775:93:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20775:93:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20877:19:24",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20888:3:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20893:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20884:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "20884:12:24"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20877:3:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20670:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20678:3:24",
														"type": ""
													}
												],
												"src": "20536:366:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21079:248:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21089:26:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21101:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21112:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21097:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "21097:18:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21089:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21136:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21147:1:24",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21132:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21132:17:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21155:4:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21161:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21151:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21151:20:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21125:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "21125:47:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21125:47:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21181:139:24",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21315:4:24"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21189:124:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "21189:131:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21181:4:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21059:9:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21074:4:24",
														"type": ""
													}
												],
												"src": "20908:419:24"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$518_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$518_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$518_to_t_address(value))\n    }\n\n    function cleanup_t_rational_18_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_rational_18_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_18_by_1(value)))\n    }\n\n    function abi_encode_t_rational_18_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_18_by_1_to_t_uint8(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$518_t_rational_18_by_1_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_uint8_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IERC20_$518_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_18_by_1_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 24,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100c65760003560e01c806391d148541161007f578063a6a0559811610059578063a6a0559814610290578063d5391393146102b9578063d547741f146102e4578063fe9d93031461030d576100d5565b806391d14854146101ff57806394d008ef1461023c578063a217fddf14610265576100d5565b806301ffc9a7146100df578063248a9ca31461011c578063282c51f3146101595780632f2ff15d1461018457806336568abe146101ad5780634a0687ef146101d6576100d5565b366100d5576100d3610336565b005b6100dd610336565b005b3480156100eb57600080fd5b5061010660048036038101906101019190610eb4565b610350565b6040516101139190610efc565b60405180910390f35b34801561012857600080fd5b50610143600480360381019061013e9190610f4d565b6103ca565b6040516101509190610f89565b60405180910390f35b34801561016557600080fd5b5061016e6103ea565b60405161017b9190610f89565b60405180910390f35b34801561019057600080fd5b506101ab60048036038101906101a69190611002565b61040e565b005b3480156101b957600080fd5b506101d460048036038101906101cf9190611002565b61042f565b005b3480156101e257600080fd5b506101fd60048036038101906101f89190611042565b6104b2565b005b34801561020b57600080fd5b5061022660048036038101906102219190611002565b6105ab565b6040516102339190610efc565b60405180910390f35b34801561024857600080fd5b50610263600480360381019061025e91906111eb565b610616565b005b34801561027157600080fd5b5061027a610651565b6040516102879190610f89565b60405180910390f35b34801561029c57600080fd5b506102b760048036038101906102b291906112fb565b610658565b005b3480156102c557600080fd5b506102ce610676565b6040516102db9190610f89565b60405180910390f35b3480156102f057600080fd5b5061030b60048036038101906103069190611002565b61069a565b005b34801561031957600080fd5b50610334600480360381019061032f91906113dc565b6106bb565b005b61033e6106f5565b61034e6103496106f7565b610720565b565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c357506103c282610746565b5b9050919050565b600060206000838152602001908152602001600020600101549050919050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b610417826103ca565b610420816107b0565b61042a83836107c4565b505050565b6104376108a5565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049b906114bb565b60405180910390fd5b6104ae82826108ad565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610518576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166105386106f7565b73ffffffffffffffffffffffffffffffffffffffff1614610585576040517f5daa87a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5550565b60006020600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610640816107b0565b61064b84848461098f565b50505050565b6000801b81565b610663868686610a03565b61066e82848361098f565b505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6106a3826103ca565b6106ac816107b0565b6106b683836108ad565b505050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8486106e5816107b0565b6106f0338484610ae6565b505050565b565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54905090565b3660008037600080366000845af43d6000803e8060008114610741573d6000f35b3d6000fd5b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6107c1816107bc6108a5565b610b5a565b50565b6107ce82826105ab565b6108a15760016020600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506108466108a5565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b6108b782826105ab565b1561098b5760006020600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506109306108a5565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b3073ffffffffffffffffffffffffffffffffffffffff1663c68d42838484846040518463ffffffff1660e01b81526004016109cc93929190611578565b600060405180830381600087803b1580156109e657600080fd5b505af11580156109fa573d6000803e3d6000fd5b50505050505050565b8273ffffffffffffffffffffffffffffffffffffffff1663d412d344306040518263ffffffff1660e01b8152600401610a3c91906115b6565b600060405180830381600087803b158015610a5657600080fd5b505af1158015610a6a573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff166342fe09806000601285856040518563ffffffff1660e01b8152600401610aaf94939291906116bc565b600060405180830381600087803b158015610ac957600080fd5b505af1158015610add573d6000803e3d6000fd5b50505050505050565b3073ffffffffffffffffffffffffffffffffffffffff16639d8767418484846040518463ffffffff1660e01b8152600401610b2393929190611578565b600060405180830381600087803b158015610b3d57600080fd5b505af1158015610b51573d6000803e3d6000fd5b50505050505050565b610b6482826105ab565b610bdb57610b7181610bdf565b610b7f8360001c6020610c0c565b604051602001610b909291906117e3565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd2919061181d565b60405180910390fd5b5050565b6060610c058273ffffffffffffffffffffffffffffffffffffffff16601460ff16610c0c565b9050919050565b606060006002836002610c1f919061186e565b610c2991906118b0565b67ffffffffffffffff811115610c4257610c416110c0565b5b6040519080825280601f01601f191660200182016040528015610c745781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610cac57610cab6118e4565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610d1057610d0f6118e4565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610d50919061186e565b610d5a91906118b0565b90505b6001811115610dfa577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610d9c57610d9b6118e4565b5b1a60f81b828281518110610db357610db26118e4565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610df390611913565b9050610d5d565b5060008414610e3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3590611988565b60405180910390fd5b8091505092915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610e9181610e5c565b8114610e9c57600080fd5b50565b600081359050610eae81610e88565b92915050565b600060208284031215610eca57610ec9610e52565b5b6000610ed884828501610e9f565b91505092915050565b60008115159050919050565b610ef681610ee1565b82525050565b6000602082019050610f116000830184610eed565b92915050565b6000819050919050565b610f2a81610f17565b8114610f3557600080fd5b50565b600081359050610f4781610f21565b92915050565b600060208284031215610f6357610f62610e52565b5b6000610f7184828501610f38565b91505092915050565b610f8381610f17565b82525050565b6000602082019050610f9e6000830184610f7a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fcf82610fa4565b9050919050565b610fdf81610fc4565b8114610fea57600080fd5b50565b600081359050610ffc81610fd6565b92915050565b6000806040838503121561101957611018610e52565b5b600061102785828601610f38565b925050602061103885828601610fed565b9150509250929050565b60006020828403121561105857611057610e52565b5b600061106684828501610fed565b91505092915050565b6000819050919050565b6110828161106f565b811461108d57600080fd5b50565b60008135905061109f81611079565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110f8826110af565b810181811067ffffffffffffffff82111715611117576111166110c0565b5b80604052505050565b600061112a610e48565b905061113682826110ef565b919050565b600067ffffffffffffffff821115611156576111556110c0565b5b61115f826110af565b9050602081019050919050565b82818337600083830152505050565b600061118e6111898461113b565b611120565b9050828152602081018484840111156111aa576111a96110aa565b5b6111b584828561116c565b509392505050565b600082601f8301126111d2576111d16110a5565b5b81356111e284826020860161117b565b91505092915050565b60008060006060848603121561120457611203610e52565b5b600061121286828701610fed565b935050602061122386828701611090565b925050604084013567ffffffffffffffff81111561124457611243610e57565b5b611250868287016111bd565b9150509250925092565b600067ffffffffffffffff821115611275576112746110c0565b5b61127e826110af565b9050602081019050919050565b600061129e6112998461125a565b611120565b9050828152602081018484840111156112ba576112b96110aa565b5b6112c584828561116c565b509392505050565b600082601f8301126112e2576112e16110a5565b5b81356112f284826020860161128b565b91505092915050565b60008060008060008060c0878903121561131857611317610e52565b5b600061132689828a01610fed565b965050602087013567ffffffffffffffff81111561134757611346610e57565b5b61135389828a016112cd565b955050604087013567ffffffffffffffff81111561137457611373610e57565b5b61138089828a016112cd565b945050606061139189828a01611090565b93505060806113a289828a01610fed565b92505060a087013567ffffffffffffffff8111156113c3576113c2610e57565b5b6113cf89828a016111bd565b9150509295509295509295565b600080604083850312156113f3576113f2610e52565b5b600061140185828601611090565b925050602083013567ffffffffffffffff81111561142257611421610e57565b5b61142e858286016111bd565b9150509250929050565b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b60006114a5602f83611438565b91506114b082611449565b604082019050919050565b600060208201905081810360008301526114d481611498565b9050919050565b6114e481610fc4565b82525050565b6114f38161106f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611533578082015181840152602081019050611518565b60008484015250505050565b600061154a826114f9565b6115548185611504565b9350611564818560208601611515565b61156d816110af565b840191505092915050565b600060608201905061158d60008301866114db565b61159a60208301856114ea565b81810360408301526115ac818461153f565b9050949350505050565b60006020820190506115cb60008301846114db565b92915050565b6000819050919050565b60006115f66115f16115ec84610fa4565b6115d1565b610fa4565b9050919050565b6000611608826115db565b9050919050565b600061161a826115fd565b9050919050565b61162a8161160f565b82525050565b6000819050919050565b600060ff82169050919050565b600061166261165d61165884611630565b6115d1565b61163a565b9050919050565b61167281611647565b82525050565b600081519050919050565b600061168e82611678565b6116988185611438565b93506116a8818560208601611515565b6116b1816110af565b840191505092915050565b60006080820190506116d16000830187611621565b6116de6020830186611669565b81810360408301526116f08185611683565b905081810360608301526117048184611683565b905095945050505050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b600061175060178361170f565b915061175b8261171a565b601782019050919050565b600061177182611678565b61177b818561170f565b935061178b818560208601611515565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b60006117cd60118361170f565b91506117d882611797565b601182019050919050565b60006117ee82611743565b91506117fa8285611766565b9150611805826117c0565b91506118118284611766565b91508190509392505050565b600060208201905081810360008301526118378184611683565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118798261106f565b91506118848361106f565b92508282026118928161106f565b915082820484148315176118a9576118a861183f565b5b5092915050565b60006118bb8261106f565b91506118c68361106f565b92508282019050808211156118de576118dd61183f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061191e8261106f565b9150600082036119315761193061183f565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611972602083611438565b915061197d8261193c565b602082019050919050565b600060208201905081810360008301526119a181611965565b905091905056fea2646970667358221220615c49b876318a61384928114e714201fdbd8a45d8fa3dad0ac83c4e7ce0a01664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA6A05598 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA6A05598 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xFE9D9303 EQ PUSH2 0x30D JUMPI PUSH2 0xD5 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x94D008EF EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x265 JUMPI PUSH2 0xD5 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x4A0687EF EQ PUSH2 0x1D6 JUMPI PUSH2 0xD5 JUMP JUMPDEST CALLDATASIZE PUSH2 0xD5 JUMPI PUSH2 0xD3 PUSH2 0x336 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDD PUSH2 0x336 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST PUSH2 0x350 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xF4D JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST PUSH2 0x42F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1042 JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x658 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x13DC JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33E PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0x34E PUSH2 0x349 PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x720 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C3 JUMPI POP PUSH2 0x3C2 DUP3 PUSH2 0x746 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0x417 DUP3 PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x420 DUP2 PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x42A DUP4 DUP4 PUSH2 0x7C4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x437 PUSH2 0x8A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49B SWAP1 PUSH2 0x14BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4AE DUP3 DUP3 PUSH2 0x8AD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x518 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x538 PUSH2 0x6F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x585 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5DAA87A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x640 DUP2 PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x64B DUP5 DUP5 DUP5 PUSH2 0x98F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x663 DUP7 DUP7 DUP7 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x66E DUP3 DUP5 DUP4 PUSH2 0x98F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x6A3 DUP3 PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x6AC DUP2 PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x6B6 DUP4 DUP4 PUSH2 0x8AD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x6E5 DUP2 PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x6F0 CALLER DUP5 DUP5 PUSH2 0xAE6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x741 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C1 DUP2 PUSH2 0x7BC PUSH2 0x8A5 JUMP JUMPDEST PUSH2 0xB5A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7CE DUP3 DUP3 PUSH2 0x5AB JUMP JUMPDEST PUSH2 0x8A1 JUMPI PUSH1 0x1 PUSH1 0x20 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x846 PUSH2 0x8A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8B7 DUP3 DUP3 PUSH2 0x5AB JUMP JUMPDEST ISZERO PUSH2 0x98B JUMPI PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x930 PUSH2 0x8A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC68D4283 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1578 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD412D344 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3C SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42FE0980 PUSH1 0x0 PUSH1 0x12 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16BC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9D876741 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB23 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1578 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB51 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB64 DUP3 DUP3 PUSH2 0x5AB JUMP JUMPDEST PUSH2 0xBDB JUMPI PUSH2 0xB71 DUP2 PUSH2 0xBDF JUMP JUMPDEST PUSH2 0xB7F DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0xC0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB90 SWAP3 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD2 SWAP2 SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC05 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0xC0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xC1F SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH2 0xC29 SWAP2 SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC42 JUMPI PUSH2 0xC41 PUSH2 0x10C0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC74 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xCAC JUMPI PUSH2 0xCAB PUSH2 0x18E4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xD10 JUMPI PUSH2 0xD0F PUSH2 0x18E4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xD50 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH2 0xD5A SWAP2 SWAP1 PUSH2 0x18B0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xDFA JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xD9C JUMPI PUSH2 0xD9B PUSH2 0x18E4 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xDB3 JUMPI PUSH2 0xDB2 PUSH2 0x18E4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xDF3 SWAP1 PUSH2 0x1913 JUMP JUMPDEST SWAP1 POP PUSH2 0xD5D JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0xE3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE35 SWAP1 PUSH2 0x1988 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE91 DUP2 PUSH2 0xE5C JUMP JUMPDEST DUP2 EQ PUSH2 0xE9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEAE DUP2 PUSH2 0xE88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECA JUMPI PUSH2 0xEC9 PUSH2 0xE52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xED8 DUP5 DUP3 DUP6 ADD PUSH2 0xE9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEF6 DUP2 PUSH2 0xEE1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF11 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF2A DUP2 PUSH2 0xF17 JUMP JUMPDEST DUP2 EQ PUSH2 0xF35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF47 DUP2 PUSH2 0xF21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF63 JUMPI PUSH2 0xF62 PUSH2 0xE52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF71 DUP5 DUP3 DUP6 ADD PUSH2 0xF38 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF83 DUP2 PUSH2 0xF17 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF9E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFCF DUP3 PUSH2 0xFA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFDF DUP2 PUSH2 0xFC4 JUMP JUMPDEST DUP2 EQ PUSH2 0xFEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFFC DUP2 PUSH2 0xFD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1019 JUMPI PUSH2 0x1018 PUSH2 0xE52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1027 DUP6 DUP3 DUP7 ADD PUSH2 0xF38 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1038 DUP6 DUP3 DUP7 ADD PUSH2 0xFED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1058 JUMPI PUSH2 0x1057 PUSH2 0xE52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1066 DUP5 DUP3 DUP6 ADD PUSH2 0xFED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1082 DUP2 PUSH2 0x106F JUMP JUMPDEST DUP2 EQ PUSH2 0x108D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x109F DUP2 PUSH2 0x1079 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x10F8 DUP3 PUSH2 0x10AF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1117 JUMPI PUSH2 0x1116 PUSH2 0x10C0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x112A PUSH2 0xE48 JUMP JUMPDEST SWAP1 POP PUSH2 0x1136 DUP3 DUP3 PUSH2 0x10EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1156 JUMPI PUSH2 0x1155 PUSH2 0x10C0 JUMP JUMPDEST JUMPDEST PUSH2 0x115F DUP3 PUSH2 0x10AF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118E PUSH2 0x1189 DUP5 PUSH2 0x113B JUMP JUMPDEST PUSH2 0x1120 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x11AA JUMPI PUSH2 0x11A9 PUSH2 0x10AA JUMP JUMPDEST JUMPDEST PUSH2 0x11B5 DUP5 DUP3 DUP6 PUSH2 0x116C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11D2 JUMPI PUSH2 0x11D1 PUSH2 0x10A5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11E2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x117B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1204 JUMPI PUSH2 0x1203 PUSH2 0xE52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1212 DUP7 DUP3 DUP8 ADD PUSH2 0xFED JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1223 DUP7 DUP3 DUP8 ADD PUSH2 0x1090 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1244 JUMPI PUSH2 0x1243 PUSH2 0xE57 JUMP JUMPDEST JUMPDEST PUSH2 0x1250 DUP7 DUP3 DUP8 ADD PUSH2 0x11BD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1275 JUMPI PUSH2 0x1274 PUSH2 0x10C0 JUMP JUMPDEST JUMPDEST PUSH2 0x127E DUP3 PUSH2 0x10AF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129E PUSH2 0x1299 DUP5 PUSH2 0x125A JUMP JUMPDEST PUSH2 0x1120 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x12BA JUMPI PUSH2 0x12B9 PUSH2 0x10AA JUMP JUMPDEST JUMPDEST PUSH2 0x12C5 DUP5 DUP3 DUP6 PUSH2 0x116C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12E2 JUMPI PUSH2 0x12E1 PUSH2 0x10A5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12F2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x128B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1318 JUMPI PUSH2 0x1317 PUSH2 0xE52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1326 DUP10 DUP3 DUP11 ADD PUSH2 0xFED JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1347 JUMPI PUSH2 0x1346 PUSH2 0xE57 JUMP JUMPDEST JUMPDEST PUSH2 0x1353 DUP10 DUP3 DUP11 ADD PUSH2 0x12CD JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1374 JUMPI PUSH2 0x1373 PUSH2 0xE57 JUMP JUMPDEST JUMPDEST PUSH2 0x1380 DUP10 DUP3 DUP11 ADD PUSH2 0x12CD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x1391 DUP10 DUP3 DUP11 ADD PUSH2 0x1090 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x13A2 DUP10 DUP3 DUP11 ADD PUSH2 0xFED JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13C3 JUMPI PUSH2 0x13C2 PUSH2 0xE57 JUMP JUMPDEST JUMPDEST PUSH2 0x13CF DUP10 DUP3 DUP11 ADD PUSH2 0x11BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F3 JUMPI PUSH2 0x13F2 PUSH2 0xE52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1401 DUP6 DUP3 DUP7 ADD PUSH2 0x1090 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1422 JUMPI PUSH2 0x1421 PUSH2 0xE57 JUMP JUMPDEST JUMPDEST PUSH2 0x142E DUP6 DUP3 DUP7 ADD PUSH2 0x11BD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A5 PUSH1 0x2F DUP4 PUSH2 0x1438 JUMP JUMPDEST SWAP2 POP PUSH2 0x14B0 DUP3 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14D4 DUP2 PUSH2 0x1498 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E4 DUP2 PUSH2 0xFC4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14F3 DUP2 PUSH2 0x106F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1533 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154A DUP3 PUSH2 0x14F9 JUMP JUMPDEST PUSH2 0x1554 DUP2 DUP6 PUSH2 0x1504 JUMP JUMPDEST SWAP4 POP PUSH2 0x1564 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1515 JUMP JUMPDEST PUSH2 0x156D DUP2 PUSH2 0x10AF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x158D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x159A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14EA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x15AC DUP2 DUP5 PUSH2 0x153F JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15CB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F6 PUSH2 0x15F1 PUSH2 0x15EC DUP5 PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0xFA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1608 DUP3 PUSH2 0x15DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161A DUP3 PUSH2 0x15FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x162A DUP2 PUSH2 0x160F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1662 PUSH2 0x165D PUSH2 0x1658 DUP5 PUSH2 0x1630 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x163A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1672 DUP2 PUSH2 0x1647 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168E DUP3 PUSH2 0x1678 JUMP JUMPDEST PUSH2 0x1698 DUP2 DUP6 PUSH2 0x1438 JUMP JUMPDEST SWAP4 POP PUSH2 0x16A8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1515 JUMP JUMPDEST PUSH2 0x16B1 DUP2 PUSH2 0x10AF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x16D1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1621 JUMP JUMPDEST PUSH2 0x16DE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1669 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x16F0 DUP2 DUP6 PUSH2 0x1683 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1704 DUP2 DUP5 PUSH2 0x1683 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1750 PUSH1 0x17 DUP4 PUSH2 0x170F JUMP JUMPDEST SWAP2 POP PUSH2 0x175B DUP3 PUSH2 0x171A JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1771 DUP3 PUSH2 0x1678 JUMP JUMPDEST PUSH2 0x177B DUP2 DUP6 PUSH2 0x170F JUMP JUMPDEST SWAP4 POP PUSH2 0x178B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1515 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17CD PUSH1 0x11 DUP4 PUSH2 0x170F JUMP JUMPDEST SWAP2 POP PUSH2 0x17D8 DUP3 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17EE DUP3 PUSH2 0x1743 JUMP JUMPDEST SWAP2 POP PUSH2 0x17FA DUP3 DUP6 PUSH2 0x1766 JUMP JUMPDEST SWAP2 POP PUSH2 0x1805 DUP3 PUSH2 0x17C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1811 DUP3 DUP5 PUSH2 0x1766 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1837 DUP2 DUP5 PUSH2 0x1683 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1879 DUP3 PUSH2 0x106F JUMP JUMPDEST SWAP2 POP PUSH2 0x1884 DUP4 PUSH2 0x106F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1892 DUP2 PUSH2 0x106F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18A9 JUMPI PUSH2 0x18A8 PUSH2 0x183F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BB DUP3 PUSH2 0x106F JUMP JUMPDEST SWAP2 POP PUSH2 0x18C6 DUP4 PUSH2 0x106F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x18DE JUMPI PUSH2 0x18DD PUSH2 0x183F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x191E DUP3 PUSH2 0x106F JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1931 JUMPI PUSH2 0x1930 PUSH2 0x183F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1972 PUSH1 0x20 DUP4 PUSH2 0x1438 JUMP JUMPDEST SWAP2 POP PUSH2 0x197D DUP3 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19A1 DUP2 PUSH2 0x1965 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x5C49 0xB8 PUSH23 0x318A61384928114E714201FDBD8A45D8FA3DAD0AC83C4E PUSH29 0xE0A01664736F6C63430008120033000000000000000000000000000000 ",
							"sourceMap": "328:1489:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2898:11:2;:9;:11::i;:::-;328:1489:20;;2675:11:2;:9;:11::i;:::-;328:1489:20;2606:202:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4378:129;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;508:62:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4803:145:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5912:214;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1049:246:23;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2895:145:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1455:152:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2027:49:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1064:253:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;417:62;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5228:147:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1683:132:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2322:110:2;2370:17;:15;:17::i;:::-;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;2606:202:0:-;2691:4;2729:32;2714:47;;;:11;:47;;;;:87;;;;2765:36;2789:11;2765:23;:36::i;:::-;2714:87;2707:94;;2606:202;;;:::o;4378:129::-;4452:7;4478:6;:12;4485:4;4478:12;;;;;;;;;;;:22;;;4471:29;;4378:129;;;:::o;508:62:20:-;546:24;508:62;:::o;4803:145:0:-;4886:18;4899:4;4886:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;4916:25:::1;4927:4;4933:7;4916:10;:25::i;:::-;4803:145:::0;;;:::o;5912:214::-;6018:12;:10;:12::i;:::-;6007:23;;:7;:23;;;5999:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6093:26;6105:4;6111:7;6093:11;:26::i;:::-;5912:214;;:::o;1049:246:23:-;1141:1;1115:28;;:14;:28;;;1111:54;;1152:13;;;;;;;;;;;;;;1111:54;1202:1;1173:31;;:17;:15;:17::i;:::-;:31;;;1169:57;;1213:13;;;;;;;;;;;;;;1169:57;1273:14;1251:20;1244:44;1049:246;:::o;2895:145:0:-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;1455:152:20:-;455:24;2505:16:0;2516:4;2505:10;:16::i;:::-;1570:33:20::1;1576:8;1586:6;1594:8;1570:5;:33::i;:::-;1455:152:::0;;;;:::o;2027:49:0:-;2072:4;2027:49;;;:::o;1064:253:20:-;1235:34;1247:7;1256:4;1262:6;1235:11;:34::i;:::-;1273:40;1279:8;1289:13;1304:8;1273:5;:40::i;:::-;1064:253;;;;;;:::o;417:62::-;455:24;417:62;:::o;5228:147:0:-;5312:18;5325:4;5312:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;5342:26:::1;5354:4;5360:7;5342:11;:26::i;:::-;5228:147:::0;;;:::o;1683:132:20:-;546:24;2505:16:0;2516:4;2505:10;:16::i;:::-;1776:35:20::1;1782:10;1794:6;1802:8;1776:5;:35::i;:::-;1683:132:::0;;;:::o;3198:46:2:-;:::o;1395:152:23:-;1472:12;1519:20;1513:27;1505:35;;1395:152;:::o;948:895:2:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1686:1;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;829:155:7;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;3334:103:0:-;3400:30;3411:4;3417:12;:10;:12::i;:::-;3400:10;:30::i;:::-;3334:103;:::o;7461:233::-;7544:22;7552:4;7558:7;7544;:22::i;:::-;7539:149;;7614:4;7582:6;:12;7589:4;7582:12;;;;;;;;;;;:20;;:29;7603:7;7582:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7664:12;:10;:12::i;:::-;7637:40;;7655:7;7637:40;;7649:4;7637:40;;;;;;;;;;7539:149;7461:233;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;7865:234:0:-;7948:22;7956:4;7962:7;7948;:22::i;:::-;7944:149;;;8018:5;7986:6;:12;7993:4;7986:12;;;;;;;;;;;:20;;:29;8007:7;7986:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8069:12;:10;:12::i;:::-;8042:40;;8060:7;8042:40;;8054:4;8042:40;;;;;;;;;;7944:149;7865:234;;:::o;1676:150:21:-;1780:4;1760:35;;;1796:7;1805:6;1813:8;1760:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1676:150;;;:::o;1021:245::-;1133:7;1114:54;;;1177:4;1114:69;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1207:4;1187:37;;;1240:1;1245:2;1249:4;1255:6;1187:75;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1021:245;;;:::o;2055:144::-;2156:4;2136:35;;;2172:4;2178:6;2186:8;2136:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2055:144;;;:::o;3718:479:0:-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:390;;3989:28;4009:7;3989:19;:28::i;:::-;4088:38;4116:4;4108:13;;4123:2;4088:19;:38::i;:::-;3896:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3844:336;;;;;;;;;;;:::i;:::-;;;;;;;;3801:390;3718:479;;:::o;2102:149:6:-;2160:13;2192:52;2220:4;2204:22;;311:2;2192:52;;:11;:52::i;:::-;2185:59;;2102:149;;;:::o;1513:437::-;1588:13;1613:19;1658:1;1649:6;1645:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:47;;1670:15;:6;1677:1;1670:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1695;:6;1702:1;1695:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1725:9;1750:1;1741:6;1737:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;1791:8;1808:3;1800:5;:11;1791:21;;;;;;;:::i;:::-;;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;1836:1;1826:11;;;;;1760:3;;;;:::i;:::-;;;1720:128;;;;1874:1;1865:5;:10;1857:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1936:6;1922:21;;;1513:437;;;;:::o;7:75:24:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:118::-;2296:24;2314:5;2296:24;:::i;:::-;2291:3;2284:37;2209:118;;:::o;2333:222::-;2426:4;2464:2;2453:9;2449:18;2441:26;;2477:71;2545:1;2534:9;2530:17;2521:6;2477:71;:::i;:::-;2333:222;;;;:::o;2561:126::-;2598:7;2638:42;2631:5;2627:54;2616:65;;2561:126;;;:::o;2693:96::-;2730:7;2759:24;2777:5;2759:24;:::i;:::-;2748:35;;2693:96;;;:::o;2795:122::-;2868:24;2886:5;2868:24;:::i;:::-;2861:5;2858:35;2848:63;;2907:1;2904;2897:12;2848:63;2795:122;:::o;2923:139::-;2969:5;3007:6;2994:20;2985:29;;3023:33;3050:5;3023:33;:::i;:::-;2923:139;;;;:::o;3068:474::-;3136:6;3144;3193:2;3181:9;3172:7;3168:23;3164:32;3161:119;;;3199:79;;:::i;:::-;3161:119;3319:1;3344:53;3389:7;3380:6;3369:9;3365:22;3344:53;:::i;:::-;3334:63;;3290:117;3446:2;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3417:118;3068:474;;;;;:::o;3548:329::-;3607:6;3656:2;3644:9;3635:7;3631:23;3627:32;3624:119;;;3662:79;;:::i;:::-;3624:119;3782:1;3807:53;3852:7;3843:6;3832:9;3828:22;3807:53;:::i;:::-;3797:63;;3753:117;3548:329;;;;:::o;3883:77::-;3920:7;3949:5;3938:16;;3883:77;;;:::o;3966:122::-;4039:24;4057:5;4039:24;:::i;:::-;4032:5;4029:35;4019:63;;4078:1;4075;4068:12;4019:63;3966:122;:::o;4094:139::-;4140:5;4178:6;4165:20;4156:29;;4194:33;4221:5;4194:33;:::i;:::-;4094:139;;;;:::o;4239:117::-;4348:1;4345;4338:12;4362:117;4471:1;4468;4461:12;4485:102;4526:6;4577:2;4573:7;4568:2;4561:5;4557:14;4553:28;4543:38;;4485:102;;;:::o;4593:180::-;4641:77;4638:1;4631:88;4738:4;4735:1;4728:15;4762:4;4759:1;4752:15;4779:281;4862:27;4884:4;4862:27;:::i;:::-;4854:6;4850:40;4992:6;4980:10;4977:22;4956:18;4944:10;4941:34;4938:62;4935:88;;;5003:18;;:::i;:::-;4935:88;5043:10;5039:2;5032:22;4822:238;4779:281;;:::o;5066:129::-;5100:6;5127:20;;:::i;:::-;5117:30;;5156:33;5184:4;5176:6;5156:33;:::i;:::-;5066:129;;;:::o;5201:307::-;5262:4;5352:18;5344:6;5341:30;5338:56;;;5374:18;;:::i;:::-;5338:56;5412:29;5434:6;5412:29;:::i;:::-;5404:37;;5496:4;5490;5486:15;5478:23;;5201:307;;;:::o;5514:146::-;5611:6;5606:3;5601;5588:30;5652:1;5643:6;5638:3;5634:16;5627:27;5514:146;;;:::o;5666:423::-;5743:5;5768:65;5784:48;5825:6;5784:48;:::i;:::-;5768:65;:::i;:::-;5759:74;;5856:6;5849:5;5842:21;5894:4;5887:5;5883:16;5932:3;5923:6;5918:3;5914:16;5911:25;5908:112;;;5939:79;;:::i;:::-;5908:112;6029:54;6076:6;6071:3;6066;6029:54;:::i;:::-;5749:340;5666:423;;;;;:::o;6108:338::-;6163:5;6212:3;6205:4;6197:6;6193:17;6189:27;6179:122;;6220:79;;:::i;:::-;6179:122;6337:6;6324:20;6362:78;6436:3;6428:6;6421:4;6413:6;6409:17;6362:78;:::i;:::-;6353:87;;6169:277;6108:338;;;;:::o;6452:797::-;6538:6;6546;6554;6603:2;6591:9;6582:7;6578:23;6574:32;6571:119;;;6609:79;;:::i;:::-;6571:119;6729:1;6754:53;6799:7;6790:6;6779:9;6775:22;6754:53;:::i;:::-;6744:63;;6700:117;6856:2;6882:53;6927:7;6918:6;6907:9;6903:22;6882:53;:::i;:::-;6872:63;;6827:118;7012:2;7001:9;6997:18;6984:32;7043:18;7035:6;7032:30;7029:117;;;7065:79;;:::i;:::-;7029:117;7170:62;7224:7;7215:6;7204:9;7200:22;7170:62;:::i;:::-;7160:72;;6955:287;6452:797;;;;;:::o;7255:308::-;7317:4;7407:18;7399:6;7396:30;7393:56;;;7429:18;;:::i;:::-;7393:56;7467:29;7489:6;7467:29;:::i;:::-;7459:37;;7551:4;7545;7541:15;7533:23;;7255:308;;;:::o;7569:425::-;7647:5;7672:66;7688:49;7730:6;7688:49;:::i;:::-;7672:66;:::i;:::-;7663:75;;7761:6;7754:5;7747:21;7799:4;7792:5;7788:16;7837:3;7828:6;7823:3;7819:16;7816:25;7813:112;;;7844:79;;:::i;:::-;7813:112;7934:54;7981:6;7976:3;7971;7934:54;:::i;:::-;7653:341;7569:425;;;;;:::o;8014:340::-;8070:5;8119:3;8112:4;8104:6;8100:17;8096:27;8086:122;;8127:79;;:::i;:::-;8086:122;8244:6;8231:20;8269:79;8344:3;8336:6;8329:4;8321:6;8317:17;8269:79;:::i;:::-;8260:88;;8076:278;8014:340;;;;:::o;8360:1595::-;8493:6;8501;8509;8517;8525;8533;8582:3;8570:9;8561:7;8557:23;8553:33;8550:120;;;8589:79;;:::i;:::-;8550:120;8709:1;8734:53;8779:7;8770:6;8759:9;8755:22;8734:53;:::i;:::-;8724:63;;8680:117;8864:2;8853:9;8849:18;8836:32;8895:18;8887:6;8884:30;8881:117;;;8917:79;;:::i;:::-;8881:117;9022:63;9077:7;9068:6;9057:9;9053:22;9022:63;:::i;:::-;9012:73;;8807:288;9162:2;9151:9;9147:18;9134:32;9193:18;9185:6;9182:30;9179:117;;;9215:79;;:::i;:::-;9179:117;9320:63;9375:7;9366:6;9355:9;9351:22;9320:63;:::i;:::-;9310:73;;9105:288;9432:2;9458:53;9503:7;9494:6;9483:9;9479:22;9458:53;:::i;:::-;9448:63;;9403:118;9560:3;9587:53;9632:7;9623:6;9612:9;9608:22;9587:53;:::i;:::-;9577:63;;9531:119;9717:3;9706:9;9702:19;9689:33;9749:18;9741:6;9738:30;9735:117;;;9771:79;;:::i;:::-;9735:117;9876:62;9930:7;9921:6;9910:9;9906:22;9876:62;:::i;:::-;9866:72;;9660:288;8360:1595;;;;;;;;:::o;9961:652::-;10038:6;10046;10095:2;10083:9;10074:7;10070:23;10066:32;10063:119;;;10101:79;;:::i;:::-;10063:119;10221:1;10246:53;10291:7;10282:6;10271:9;10267:22;10246:53;:::i;:::-;10236:63;;10192:117;10376:2;10365:9;10361:18;10348:32;10407:18;10399:6;10396:30;10393:117;;;10429:79;;:::i;:::-;10393:117;10534:62;10588:7;10579:6;10568:9;10564:22;10534:62;:::i;:::-;10524:72;;10319:287;9961:652;;;;;:::o;10619:169::-;10703:11;10737:6;10732:3;10725:19;10777:4;10772:3;10768:14;10753:29;;10619:169;;;;:::o;10794:234::-;10934:34;10930:1;10922:6;10918:14;10911:58;11003:17;10998:2;10990:6;10986:15;10979:42;10794:234;:::o;11034:366::-;11176:3;11197:67;11261:2;11256:3;11197:67;:::i;:::-;11190:74;;11273:93;11362:3;11273:93;:::i;:::-;11391:2;11386:3;11382:12;11375:19;;11034:366;;;:::o;11406:419::-;11572:4;11610:2;11599:9;11595:18;11587:26;;11659:9;11653:4;11649:20;11645:1;11634:9;11630:17;11623:47;11687:131;11813:4;11687:131;:::i;:::-;11679:139;;11406:419;;;:::o;11831:118::-;11918:24;11936:5;11918:24;:::i;:::-;11913:3;11906:37;11831:118;;:::o;11955:::-;12042:24;12060:5;12042:24;:::i;:::-;12037:3;12030:37;11955:118;;:::o;12079:98::-;12130:6;12164:5;12158:12;12148:22;;12079:98;;;:::o;12183:168::-;12266:11;12300:6;12295:3;12288:19;12340:4;12335:3;12331:14;12316:29;;12183:168;;;;:::o;12357:246::-;12438:1;12448:113;12462:6;12459:1;12456:13;12448:113;;;12547:1;12542:3;12538:11;12532:18;12528:1;12523:3;12519:11;12512:39;12484:2;12481:1;12477:10;12472:15;;12448:113;;;12595:1;12586:6;12581:3;12577:16;12570:27;12419:184;12357:246;;;:::o;12609:373::-;12695:3;12723:38;12755:5;12723:38;:::i;:::-;12777:70;12840:6;12835:3;12777:70;:::i;:::-;12770:77;;12856:65;12914:6;12909:3;12902:4;12895:5;12891:16;12856:65;:::i;:::-;12946:29;12968:6;12946:29;:::i;:::-;12941:3;12937:39;12930:46;;12699:283;12609:373;;;;:::o;12988:529::-;13155:4;13193:2;13182:9;13178:18;13170:26;;13206:71;13274:1;13263:9;13259:17;13250:6;13206:71;:::i;:::-;13287:72;13355:2;13344:9;13340:18;13331:6;13287:72;:::i;:::-;13406:9;13400:4;13396:20;13391:2;13380:9;13376:18;13369:48;13434:76;13505:4;13496:6;13434:76;:::i;:::-;13426:84;;12988:529;;;;;;:::o;13523:222::-;13616:4;13654:2;13643:9;13639:18;13631:26;;13667:71;13735:1;13724:9;13720:17;13711:6;13667:71;:::i;:::-;13523:222;;;;:::o;13751:60::-;13779:3;13800:5;13793:12;;13751:60;;;:::o;13817:142::-;13867:9;13900:53;13918:34;13927:24;13945:5;13927:24;:::i;:::-;13918:34;:::i;:::-;13900:53;:::i;:::-;13887:66;;13817:142;;;:::o;13965:126::-;14015:9;14048:37;14079:5;14048:37;:::i;:::-;14035:50;;13965:126;;;:::o;14097:140::-;14161:9;14194:37;14225:5;14194:37;:::i;:::-;14181:50;;14097:140;;;:::o;14243:159::-;14344:51;14389:5;14344:51;:::i;:::-;14339:3;14332:64;14243:159;;:::o;14408:86::-;14454:7;14483:5;14472:16;;14408:86;;;:::o;14500:::-;14535:7;14575:4;14568:5;14564:16;14553:27;;14500:86;;;:::o;14592:156::-;14649:9;14682:60;14698:43;14707:33;14734:5;14707:33;:::i;:::-;14698:43;:::i;:::-;14682:60;:::i;:::-;14669:73;;14592:156;;;:::o;14754:145::-;14848:44;14886:5;14848:44;:::i;:::-;14843:3;14836:57;14754:145;;:::o;14905:99::-;14957:6;14991:5;14985:12;14975:22;;14905:99;;;:::o;15010:377::-;15098:3;15126:39;15159:5;15126:39;:::i;:::-;15181:71;15245:6;15240:3;15181:71;:::i;:::-;15174:78;;15261:65;15319:6;15314:3;15307:4;15300:5;15296:16;15261:65;:::i;:::-;15351:29;15373:6;15351:29;:::i;:::-;15346:3;15342:39;15335:46;;15102:285;15010:377;;;;:::o;15393:777::-;15631:4;15669:3;15658:9;15654:19;15646:27;;15683:85;15765:1;15754:9;15750:17;15741:6;15683:85;:::i;:::-;15778:79;15853:2;15842:9;15838:18;15829:6;15778:79;:::i;:::-;15904:9;15898:4;15894:20;15889:2;15878:9;15874:18;15867:48;15932:78;16005:4;15996:6;15932:78;:::i;:::-;15924:86;;16057:9;16051:4;16047:20;16042:2;16031:9;16027:18;16020:48;16085:78;16158:4;16149:6;16085:78;:::i;:::-;16077:86;;15393:777;;;;;;;:::o;16176:148::-;16278:11;16315:3;16300:18;;16176:148;;;;:::o;16330:173::-;16470:25;16466:1;16458:6;16454:14;16447:49;16330:173;:::o;16509:402::-;16669:3;16690:85;16772:2;16767:3;16690:85;:::i;:::-;16683:92;;16784:93;16873:3;16784:93;:::i;:::-;16902:2;16897:3;16893:12;16886:19;;16509:402;;;:::o;16917:390::-;17023:3;17051:39;17084:5;17051:39;:::i;:::-;17106:89;17188:6;17183:3;17106:89;:::i;:::-;17099:96;;17204:65;17262:6;17257:3;17250:4;17243:5;17239:16;17204:65;:::i;:::-;17294:6;17289:3;17285:16;17278:23;;17027:280;16917:390;;;;:::o;17313:167::-;17453:19;17449:1;17441:6;17437:14;17430:43;17313:167;:::o;17486:402::-;17646:3;17667:85;17749:2;17744:3;17667:85;:::i;:::-;17660:92;;17761:93;17850:3;17761:93;:::i;:::-;17879:2;17874:3;17870:12;17863:19;;17486:402;;;:::o;17894:967::-;18276:3;18298:148;18442:3;18298:148;:::i;:::-;18291:155;;18463:95;18554:3;18545:6;18463:95;:::i;:::-;18456:102;;18575:148;18719:3;18575:148;:::i;:::-;18568:155;;18740:95;18831:3;18822:6;18740:95;:::i;:::-;18733:102;;18852:3;18845:10;;17894:967;;;;;:::o;18867:313::-;18980:4;19018:2;19007:9;19003:18;18995:26;;19067:9;19061:4;19057:20;19053:1;19042:9;19038:17;19031:47;19095:78;19168:4;19159:6;19095:78;:::i;:::-;19087:86;;18867:313;;;;:::o;19186:180::-;19234:77;19231:1;19224:88;19331:4;19328:1;19321:15;19355:4;19352:1;19345:15;19372:410;19412:7;19435:20;19453:1;19435:20;:::i;:::-;19430:25;;19469:20;19487:1;19469:20;:::i;:::-;19464:25;;19524:1;19521;19517:9;19546:30;19564:11;19546:30;:::i;:::-;19535:41;;19725:1;19716:7;19712:15;19709:1;19706:22;19686:1;19679:9;19659:83;19636:139;;19755:18;;:::i;:::-;19636:139;19420:362;19372:410;;;;:::o;19788:191::-;19828:3;19847:20;19865:1;19847:20;:::i;:::-;19842:25;;19881:20;19899:1;19881:20;:::i;:::-;19876:25;;19924:1;19921;19917:9;19910:16;;19945:3;19942:1;19939:10;19936:36;;;19952:18;;:::i;:::-;19936:36;19788:191;;;;:::o;19985:180::-;20033:77;20030:1;20023:88;20130:4;20127:1;20120:15;20154:4;20151:1;20144:15;20171:171;20210:3;20233:24;20251:5;20233:24;:::i;:::-;20224:33;;20279:4;20272:5;20269:15;20266:41;;20287:18;;:::i;:::-;20266:41;20334:1;20327:5;20323:13;20316:20;;20171:171;;;:::o;20348:182::-;20488:34;20484:1;20476:6;20472:14;20465:58;20348:182;:::o;20536:366::-;20678:3;20699:67;20763:2;20758:3;20699:67;:::i;:::-;20692:74;;20775:93;20864:3;20775:93;:::i;:::-;20893:2;20888:3;20884:12;20877:19;;20536:366;;;:::o;20908:419::-;21074:4;21112:2;21101:9;21097:18;21089:26;;21161:9;21155:4;21151:20;21147:1;21136:9;21132:17;21125:47;21189:131;21315:4;21189:131;:::i;:::-;21181:139;;20908:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1324400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"BURNER_ROLE()": "374",
								"DEFAULT_ADMIN_ROLE()": "402",
								"MINTER_ROLE()": "373",
								"burn(uint256,bytes)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3163",
								"initialize(address,string,string,uint256,address,bytes)": "infinite",
								"initializeProxy(address)": "24877",
								"mint(address,uint256,bytes)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "728"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 328,
									"end": 1817,
									"name": "PUSH",
									"source": 20,
									"value": "80"
								},
								{
									"begin": 328,
									"end": 1817,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 328,
									"end": 1817,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 577,
									"end": 650,
									"name": "CALLVALUE",
									"source": 20
								},
								{
									"begin": 577,
									"end": 650,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 577,
									"end": 650,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 577,
									"end": 650,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 577,
									"end": 650,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 577,
									"end": 650,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 577,
									"end": 650,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 577,
									"end": 650,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 577,
									"end": 650,
									"name": "tag",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 577,
									"end": 650,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 577,
									"end": 650,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 601,
									"end": 643,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 630,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 612,
									"end": 630,
									"name": "SHL",
									"source": 20
								},
								{
									"begin": 632,
									"end": 642,
									"name": "CALLER",
									"source": 20
								},
								{
									"begin": 601,
									"end": 611,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "5"
								},
								{
									"begin": 601,
									"end": 611,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 601,
									"end": 611,
									"name": "SHL",
									"source": 20
								},
								{
									"begin": 601,
									"end": 643,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 601,
									"end": 643,
									"name": "SHR",
									"source": 20
								},
								{
									"begin": 601,
									"end": 643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 601,
									"end": 643,
									"name": "tag",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 601,
									"end": 643,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 328,
									"end": 1817,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "6"
								},
								{
									"begin": 328,
									"end": 1817,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6811,
									"end": 6921,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6811,
									"end": 6921,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6889,
									"end": 6914,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6900,
									"end": 6904,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6906,
									"end": 6913,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6889,
									"end": 6899,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6889,
									"end": 6899,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6889,
									"end": 6899,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6889,
									"end": 6914,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6889,
									"end": 6914,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6889,
									"end": 6914,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6889,
									"end": 6914,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6889,
									"end": 6914,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6811,
									"end": 6921,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6811,
									"end": 6921,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6811,
									"end": 6921,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 7552,
									"end": 7556,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7558,
									"end": 7565,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7544,
									"end": 7566,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7614,
									"end": 7618,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7582,
									"end": 7588,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7589,
									"end": 7593,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7602,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7602,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7603,
									"end": 7610,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 7664,
									"end": 7674,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 7664,
									"end": 7674,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7664,
									"end": 7674,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7664,
									"end": 7676,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7655,
									"end": 7662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7649,
									"end": 7653,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7461,
									"end": 7694,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2981,
									"end": 2985,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3011,
									"end": 3015,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3024,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3024,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3025,
									"end": 3032,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2997,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2997,
									"end": 3033,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 328,
									"end": 1817,
									"name": "tag",
									"source": 20,
									"value": "6"
								},
								{
									"begin": 328,
									"end": 1817,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 328,
									"end": 1817,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 328,
									"end": 1817,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 328,
									"end": 1817,
									"name": "PUSH [$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 328,
									"end": 1817,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 328,
									"end": 1817,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 328,
									"end": 1817,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 328,
									"end": 1817,
									"name": "RETURN",
									"source": 20
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220615c49b876318a61384928114e714201fdbd8a45d8fa3dad0ac83c4e7ce0a01664736f6c63430008120033",
									".code": [
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "SHR",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH",
											"source": 20,
											"value": "91D14854"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "16"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH",
											"source": 20,
											"value": "A6A05598"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "17"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH",
											"source": 20,
											"value": "A6A05598"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "12"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH",
											"source": 20,
											"value": "D5391393"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "13"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH",
											"source": 20,
											"value": "D547741F"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "14"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH",
											"source": 20,
											"value": "FE9D9303"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "15"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "tag",
											"source": 20,
											"value": "17"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH",
											"source": 20,
											"value": "91D14854"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH",
											"source": 20,
											"value": "94D008EF"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "10"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH",
											"source": 20,
											"value": "A217FDDF"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "tag",
											"source": 20,
											"value": "16"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH",
											"source": 20,
											"value": "1FFC9A7"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH",
											"source": 20,
											"value": "248A9CA3"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH",
											"source": 20,
											"value": "282C51F3"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "5"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH",
											"source": 20,
											"value": "2F2FF15D"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "6"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH",
											"source": 20,
											"value": "36568ABE"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "7"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH",
											"source": 20,
											"value": "4A0687EF"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "8"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "tag",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2898,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "tag",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2675,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2675,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 328,
											"end": 1817,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 508,
											"end": 570,
											"name": "tag",
											"source": 20,
											"value": "5"
										},
										{
											"begin": 508,
											"end": 570,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "39"
										},
										{
											"begin": 508,
											"end": 570,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 570,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"name": "tag",
											"source": 20,
											"value": "39"
										},
										{
											"begin": 508,
											"end": 570,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 508,
											"end": 570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"name": "tag",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 570,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 570,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "42"
										},
										{
											"begin": 508,
											"end": 570,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "38"
										},
										{
											"begin": 508,
											"end": 570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"name": "tag",
											"source": 20,
											"value": "42"
										},
										{
											"begin": 508,
											"end": 570,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 570,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"name": "RETURN",
											"source": 20
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4803,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4803,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5912,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5912,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 23,
											"value": "8"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "CALLVALUE",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "52"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 23,
											"value": "52"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "53"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "CALLDATASIZE",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "54"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "55"
										},
										{
											"begin": 1049,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 23,
											"value": "54"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "56"
										},
										{
											"begin": 1049,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 23,
											"value": "53"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "STOP",
											"source": 23
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "tag",
											"source": 20,
											"value": "10"
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "62"
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "tag",
											"source": 20,
											"value": "62"
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "63"
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "65"
										},
										{
											"begin": 1455,
											"end": 1607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "tag",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "66"
										},
										{
											"begin": 1455,
											"end": 1607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "tag",
											"source": 20,
											"value": "63"
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "tag",
											"source": 20,
											"value": "12"
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "71"
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "tag",
											"source": 20,
											"value": "71"
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "72"
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "73"
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "74"
										},
										{
											"begin": 1064,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "tag",
											"source": 20,
											"value": "73"
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "75"
										},
										{
											"begin": 1064,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "tag",
											"source": 20,
											"value": "72"
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "tag",
											"source": 20,
											"value": "13"
										},
										{
											"begin": 417,
											"end": 479,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "76"
										},
										{
											"begin": 417,
											"end": 479,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 479,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "tag",
											"source": 20,
											"value": "76"
										},
										{
											"begin": 417,
											"end": 479,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "77"
										},
										{
											"begin": 417,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "78"
										},
										{
											"begin": 417,
											"end": 479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "tag",
											"source": 20,
											"value": "77"
										},
										{
											"begin": 417,
											"end": 479,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 417,
											"end": 479,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "79"
										},
										{
											"begin": 417,
											"end": 479,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "38"
										},
										{
											"begin": 417,
											"end": 479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "tag",
											"source": 20,
											"value": "79"
										},
										{
											"begin": 417,
											"end": 479,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 417,
											"end": 479,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "RETURN",
											"source": 20
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5228,
											"end": 5375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5228,
											"end": 5375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "tag",
											"source": 20,
											"value": "15"
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "84"
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "tag",
											"source": 20,
											"value": "84"
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "85"
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "86"
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "87"
										},
										{
											"begin": 1683,
											"end": 1815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "tag",
											"source": 20,
											"value": "86"
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "88"
										},
										{
											"begin": 1683,
											"end": 1815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "tag",
											"source": 20,
											"value": "85"
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2370,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2370,
											"end": 2387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2407,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2407,
											"end": 2424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2397,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2789,
											"end": 2800,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2765,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4452,
											"end": 4459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4471,
											"end": 4500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4471,
											"end": 4500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 508,
											"end": 570,
											"name": "tag",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 508,
											"end": 570,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 546,
											"end": 570,
											"name": "PUSH",
											"source": 20,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 508,
											"end": 570,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 508,
											"end": 570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4899,
											"end": 4903,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4886,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4886,
											"end": 4904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4916,
											"end": 4941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4927,
											"end": 4931,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4940,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4916,
											"end": 4926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4916,
											"end": 4941,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4916,
											"end": 4941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4916,
											"end": 4941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6018,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6018,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 6018,
											"end": 6030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6018,
											"end": 6030,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6018,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5999,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6093,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6105,
											"end": 6109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6111,
											"end": 6118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6093,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 6093,
											"end": 6119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6093,
											"end": 6119,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6093,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 23,
											"value": "56"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1141,
											"end": 1142,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1115,
											"end": 1143,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1115,
											"end": 1143,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 1115,
											"end": 1129,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1115,
											"end": 1143,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1115,
											"end": 1143,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 1115,
											"end": 1143,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 1111,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "117"
										},
										{
											"begin": 1111,
											"end": 1165,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 23,
											"value": "D92E233D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 1111,
											"end": 1165,
											"name": "tag",
											"source": 23,
											"value": "117"
										},
										{
											"begin": 1111,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1202,
											"end": 1203,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1204,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1173,
											"end": 1204,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 1173,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "118"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "94"
										},
										{
											"begin": 1173,
											"end": 1190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1173,
											"end": 1190,
											"name": "tag",
											"source": 23,
											"value": "118"
										},
										{
											"begin": 1173,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1173,
											"end": 1204,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1173,
											"end": 1204,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 1173,
											"end": 1204,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 1169,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "119"
										},
										{
											"begin": 1169,
											"end": 1226,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "PUSH",
											"source": 23,
											"value": "5DAA87A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 1169,
											"end": 1226,
											"name": "tag",
											"source": 23,
											"value": "119"
										},
										{
											"begin": 1169,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1273,
											"end": 1287,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1251,
											"end": 1271,
											"name": "PUSH",
											"source": 23,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1244,
											"end": 1288,
											"name": "SSTORE",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3015,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3032,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "tag",
											"source": 20,
											"value": "66"
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 455,
											"end": 479,
											"name": "PUSH",
											"source": 20,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "124"
										},
										{
											"begin": 1576,
											"end": 1584,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1586,
											"end": 1592,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1594,
											"end": 1602,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "125"
										},
										{
											"begin": 1570,
											"end": 1603,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1603,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "124"
										},
										{
											"begin": 1570,
											"end": 1603,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1455,
											"end": 1607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "tag",
											"source": 20,
											"value": "75"
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1235,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "127"
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 1256,
											"end": 1260,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 1262,
											"end": 1268,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 1235,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "128"
										},
										{
											"begin": 1235,
											"end": 1269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1235,
											"end": 1269,
											"name": "tag",
											"source": 20,
											"value": "127"
										},
										{
											"begin": 1235,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1273,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "129"
										},
										{
											"begin": 1279,
											"end": 1287,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1289,
											"end": 1302,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1304,
											"end": 1312,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1273,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "125"
										},
										{
											"begin": 1273,
											"end": 1313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1273,
											"end": 1313,
											"name": "tag",
											"source": 20,
											"value": "129"
										},
										{
											"begin": 1273,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"name": "tag",
											"source": 20,
											"value": "78"
										},
										{
											"begin": 417,
											"end": 479,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 455,
											"end": 479,
											"name": "PUSH",
											"source": 20,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 417,
											"end": 479,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 417,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5325,
											"end": 5329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5312,
											"end": 5330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5342,
											"end": 5368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5354,
											"end": 5358,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5360,
											"end": 5367,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5342,
											"end": 5353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5342,
											"end": 5368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5342,
											"end": 5368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5342,
											"end": 5368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "tag",
											"source": 20,
											"value": "88"
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 546,
											"end": 570,
											"name": "PUSH",
											"source": 20,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "138"
										},
										{
											"begin": 1782,
											"end": 1792,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1794,
											"end": 1800,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1802,
											"end": 1810,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1776,
											"end": 1781,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "139"
										},
										{
											"begin": 1776,
											"end": 1811,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1776,
											"end": 1811,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "138"
										},
										{
											"begin": 1776,
											"end": 1811,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3198,
											"end": 3244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1547,
											"name": "tag",
											"source": 23,
											"value": "94"
										},
										{
											"begin": 1395,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1472,
											"end": 1484,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1539,
											"name": "PUSH",
											"source": 23,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1513,
											"end": 1540,
											"name": "SLOAD",
											"source": 23
										},
										{
											"begin": 1505,
											"end": 1540,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1505,
											"end": 1540,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1395,
											"end": 1547,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1395,
											"end": 1547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1267,
											"end": 1301,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1481,
											"end": 1495,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1478,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1455,
											"end": 1460,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1502,
											"name": "DELEGATECALL",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1592,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1574,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1571,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1555,
											"end": 1593,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1687,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1813,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1732,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1733,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3417,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3417,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3400,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 7552,
											"end": 7556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7558,
											"end": 7565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7544,
											"end": 7566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7614,
											"end": 7618,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7589,
											"end": 7593,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7603,
											"end": 7610,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7664,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 7664,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 7664,
											"end": 7676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7664,
											"end": 7676,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 7664,
											"end": 7676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7655,
											"end": 7662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7649,
											"end": 7653,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7956,
											"end": 7960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7962,
											"end": 7969,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7948,
											"end": 7970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7992,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7993,
											"end": 7997,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8007,
											"end": 8014,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 8069,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 8069,
											"end": 8081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 8099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1826,
											"name": "tag",
											"source": 21,
											"value": "125"
										},
										{
											"begin": 1676,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1780,
											"end": 1784,
											"name": "ADDRESS",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1795,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1795,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1795,
											"name": "PUSH",
											"source": 21,
											"value": "C68D4283"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1813,
											"end": 1821,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "160"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "161"
										},
										{
											"begin": 1760,
											"end": 1822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "tag",
											"source": 21,
											"value": "160"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "EXTCODESIZE",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "162"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "tag",
											"source": 21,
											"value": "162"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "GAS",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "CALL",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "164"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "RETURNDATACOPY",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "tag",
											"source": 21,
											"value": "164"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1676,
											"end": 1826,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1676,
											"end": 1826,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1676,
											"end": 1826,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1676,
											"end": 1826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1021,
											"end": 1266,
											"name": "tag",
											"source": 21,
											"value": "128"
										},
										{
											"begin": 1021,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1133,
											"end": 1140,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1168,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1114,
											"end": 1168,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1168,
											"name": "PUSH",
											"source": 21,
											"value": "D412D344"
										},
										{
											"begin": 1177,
											"end": 1181,
											"name": "ADDRESS",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "166"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "167"
										},
										{
											"begin": 1114,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "tag",
											"source": 21,
											"value": "166"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "EXTCODESIZE",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "168"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "tag",
											"source": 21,
											"value": "168"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "GAS",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "CALL",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "170"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "RETURNDATACOPY",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "tag",
											"source": 21,
											"value": "170"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1207,
											"end": 1211,
											"name": "ADDRESS",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1224,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1187,
											"end": 1224,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1224,
											"name": "PUSH",
											"source": 21,
											"value": "42FE0980"
										},
										{
											"begin": 1240,
											"end": 1241,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1247,
											"name": "PUSH",
											"source": 21,
											"value": "12"
										},
										{
											"begin": 1249,
											"end": 1253,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 1255,
											"end": 1261,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "171"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "172"
										},
										{
											"begin": 1187,
											"end": 1262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "tag",
											"source": 21,
											"value": "171"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "EXTCODESIZE",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "173"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "tag",
											"source": 21,
											"value": "173"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "GAS",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "CALL",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "175"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "RETURNDATACOPY",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "tag",
											"source": 21,
											"value": "175"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1021,
											"end": 1266,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1021,
											"end": 1266,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1021,
											"end": 1266,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1021,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2055,
											"end": 2199,
											"name": "tag",
											"source": 21,
											"value": "139"
										},
										{
											"begin": 2055,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2156,
											"end": 2160,
											"name": "ADDRESS",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2171,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2136,
											"end": 2171,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2171,
											"name": "PUSH",
											"source": 21,
											"value": "9D876741"
										},
										{
											"begin": 2172,
											"end": 2176,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2178,
											"end": 2184,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2186,
											"end": 2194,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "177"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "161"
										},
										{
											"begin": 2136,
											"end": 2195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "tag",
											"source": 21,
											"value": "177"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "EXTCODESIZE",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "178"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "tag",
											"source": 21,
											"value": "178"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "GAS",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "CALL",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "180"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "RETURNDATACOPY",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "tag",
											"source": 21,
											"value": "180"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2055,
											"end": 2199,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2055,
											"end": 2199,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2055,
											"end": 2199,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2055,
											"end": 2199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3820,
											"end": 3827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3806,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 4009,
											"end": 4016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3989,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4088,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 4116,
											"end": 4120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4088,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 4088,
											"end": 4126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4088,
											"end": 4126,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 4088,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 3896,
											"end": 4148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 3844,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2220,
											"end": 2224,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2226,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2204,
											"end": 2226,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 311,
											"end": 313,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2192,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1601,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1613,
											"end": 1632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1659,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1649,
											"end": 1655,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1645,
											"end": 1655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1645,
											"end": 1659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 1635,
											"end": 1660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1613,
											"end": 1660,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1613,
											"end": 1660,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 6,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1670,
											"end": 1676,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1670,
											"end": 1679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 6,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1695,
											"end": 1701,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1695,
											"end": 1704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1734,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1738,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1737,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1737,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1757,
											"end": 1758,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1753,
											"end": 1754,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1758,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1799,
											"name": "PUSH",
											"source": 6,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 1800,
											"end": 1805,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1791,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH",
											"source": 6,
											"value": "F8"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1779,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1836,
											"end": 1837,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1760,
											"end": 1763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1875,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1870,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1865,
											"end": 1875,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 1857,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1942,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 1943,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 1943,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 1943,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 24,
											"value": "222"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 24,
											"value": "223"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 24,
											"value": "224"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 24,
											"value": "225"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 24,
											"value": "226"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "288"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "225"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 24,
											"value": "288"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "289"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 24,
											"value": "289"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 24,
											"value": "227"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "291"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "226"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 24,
											"value": "291"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 24,
											"value": "28"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "293"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "294"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "223"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 24,
											"value": "294"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 24,
											"value": "293"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "295"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "227"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 24,
											"value": "295"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 24,
											"value": "228"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 24,
											"value": "229"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "298"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "228"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 24,
											"value": "298"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 24,
											"value": "31"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "300"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "229"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 24,
											"value": "300"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 24,
											"value": "230"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 24,
											"value": "231"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "303"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "230"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 24,
											"value": "303"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "304"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 24,
											"value": "304"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 24,
											"value": "232"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "306"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "231"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 24,
											"value": "306"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 24,
											"value": "35"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "308"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "309"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "223"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 24,
											"value": "309"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 24,
											"value": "308"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "310"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "232"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 24,
											"value": "310"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "tag",
											"source": 24,
											"value": "233"
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "312"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "230"
										},
										{
											"begin": 2296,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "tag",
											"source": 24,
											"value": "312"
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2291,
											"end": 2294,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2284,
											"end": 2321,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2209,
											"end": 2327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "tag",
											"source": 24,
											"value": "38"
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2426,
											"end": 2430,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2462,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "314"
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "233"
										},
										{
											"begin": 2477,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "tag",
											"source": 24,
											"value": "314"
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2333,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "tag",
											"source": 24,
											"value": "234"
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2680,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2631,
											"end": 2636,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2627,
											"end": 2681,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2561,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "tag",
											"source": 24,
											"value": "235"
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "317"
										},
										{
											"begin": 2777,
											"end": 2782,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "234"
										},
										{
											"begin": 2759,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "tag",
											"source": 24,
											"value": "317"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2693,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "tag",
											"source": 24,
											"value": "236"
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "319"
										},
										{
											"begin": 2886,
											"end": 2891,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "235"
										},
										{
											"begin": 2868,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "tag",
											"source": 24,
											"value": "319"
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2858,
											"end": 2893,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "320"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2907,
											"end": 2908,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2905,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2897,
											"end": 2909,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "tag",
											"source": 24,
											"value": "320"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2795,
											"end": 2917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "tag",
											"source": 24,
											"value": "237"
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2994,
											"end": 3014,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "322"
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "236"
										},
										{
											"begin": 3023,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "tag",
											"source": 24,
											"value": "322"
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2923,
											"end": 3062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "tag",
											"source": 24,
											"value": "46"
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3136,
											"end": 3142,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3150,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 3193,
											"end": 3195,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 3181,
											"end": 3190,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 3172,
											"end": 3179,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 3168,
											"end": 3191,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 3164,
											"end": 3196,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "324"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "325"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "223"
										},
										{
											"begin": 3199,
											"end": 3278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "tag",
											"source": 24,
											"value": "325"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "tag",
											"source": 24,
											"value": "324"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3319,
											"end": 3320,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "326"
										},
										{
											"begin": 3389,
											"end": 3396,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 3380,
											"end": 3386,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3369,
											"end": 3378,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 3365,
											"end": 3387,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "232"
										},
										{
											"begin": 3344,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "tag",
											"source": 24,
											"value": "326"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3290,
											"end": 3407,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3446,
											"end": 3448,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "327"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "237"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 24,
											"value": "327"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3417,
											"end": 3535,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3068,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "tag",
											"source": 24,
											"value": "55"
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3607,
											"end": 3613,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3656,
											"end": 3658,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 3644,
											"end": 3653,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3635,
											"end": 3642,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 3631,
											"end": 3654,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 3627,
											"end": 3659,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "329"
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "330"
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "223"
										},
										{
											"begin": 3662,
											"end": 3741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "tag",
											"source": 24,
											"value": "330"
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "tag",
											"source": 24,
											"value": "329"
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "331"
										},
										{
											"begin": 3852,
											"end": 3859,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3832,
											"end": 3841,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 3828,
											"end": 3850,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "237"
										},
										{
											"begin": 3807,
											"end": 3860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "tag",
											"source": 24,
											"value": "331"
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3797,
											"end": 3860,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 3797,
											"end": 3860,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3753,
											"end": 3870,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3548,
											"end": 3877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3883,
											"end": 3960,
											"name": "tag",
											"source": 24,
											"value": "238"
										},
										{
											"begin": 3883,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3920,
											"end": 3927,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3954,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 3938,
											"end": 3954,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 3938,
											"end": 3954,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3883,
											"end": 3960,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 3883,
											"end": 3960,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 3883,
											"end": 3960,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3883,
											"end": 3960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3966,
											"end": 4088,
											"name": "tag",
											"source": 24,
											"value": "239"
										},
										{
											"begin": 3966,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 4039,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "334"
										},
										{
											"begin": 4057,
											"end": 4062,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 4039,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "238"
										},
										{
											"begin": 4039,
											"end": 4063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 4039,
											"end": 4063,
											"name": "tag",
											"source": 24,
											"value": "334"
										},
										{
											"begin": 4039,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 4032,
											"end": 4037,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 4029,
											"end": 4064,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 4019,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "335"
										},
										{
											"begin": 4019,
											"end": 4082,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 4078,
											"end": 4079,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 4075,
											"end": 4076,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 4068,
											"end": 4080,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 4019,
											"end": 4082,
											"name": "tag",
											"source": 24,
											"value": "335"
										},
										{
											"begin": 4019,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3966,
											"end": 4088,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3966,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 4094,
											"end": 4233,
											"name": "tag",
											"source": 24,
											"value": "240"
										},
										{
											"begin": 4094,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 4140,
											"end": 4145,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 4178,
											"end": 4184,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 4165,
											"end": 4185,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 4156,
											"end": 4185,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 4156,
											"end": 4185,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "337"
										},
										{
											"begin": 4221,
											"end": 4226,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "239"
										},
										{
											"begin": 4194,
											"end": 4227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "tag",
											"source": 24,
											"value": "337"
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 4094,
											"end": 4233,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 4094,
											"end": 4233,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 4094,
											"end": 4233,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 4094,
											"end": 4233,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 4094,
											"end": 4233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 4239,
											"end": 4356,
											"name": "tag",
											"source": 24,
											"value": "241"
										},
										{
											"begin": 4239,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 4345,
											"end": 4346,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 4338,
											"end": 4350,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 4362,
											"end": 4479,
											"name": "tag",
											"source": 24,
											"value": "242"
										},
										{
											"begin": 4362,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 4471,
											"end": 4472,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4469,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 4461,
											"end": 4473,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 4485,
											"end": 4587,
											"name": "tag",
											"source": 24,
											"value": "243"
										},
										{
											"begin": 4485,
											"end": 4587,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 4526,
											"end": 4532,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 4577,
											"end": 4579,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 4573,
											"end": 4580,
											"name": "NOT",
											"source": 24
										},
										{
											"begin": 4568,
											"end": 4570,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 4561,
											"end": 4566,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 4557,
											"end": 4571,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 4553,
											"end": 4581,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 4543,
											"end": 4581,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 4543,
											"end": 4581,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 4485,
											"end": 4587,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 4485,
											"end": 4587,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 4485,
											"end": 4587,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 4485,
											"end": 4587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 4593,
											"end": 4773,
											"name": "tag",
											"source": 24,
											"value": "201"
										},
										{
											"begin": 4593,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 4641,
											"end": 4718,
											"name": "PUSH",
											"source": 24,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4638,
											"end": 4639,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 4631,
											"end": 4719,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 4738,
											"end": 4742,
											"name": "PUSH",
											"source": 24,
											"value": "41"
										},
										{
											"begin": 4735,
											"end": 4736,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 4728,
											"end": 4743,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 4762,
											"end": 4766,
											"name": "PUSH",
											"source": 24,
											"value": "24"
										},
										{
											"begin": 4759,
											"end": 4760,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 4752,
											"end": 4767,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 4779,
											"end": 5060,
											"name": "tag",
											"source": 24,
											"value": "244"
										},
										{
											"begin": 4779,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 4862,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "343"
										},
										{
											"begin": 4884,
											"end": 4888,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 4862,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "243"
										},
										{
											"begin": 4862,
											"end": 4889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 4862,
											"end": 4889,
											"name": "tag",
											"source": 24,
											"value": "343"
										},
										{
											"begin": 4862,
											"end": 4889,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 4854,
											"end": 4860,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 4850,
											"end": 4890,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 4992,
											"end": 4998,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 4980,
											"end": 4990,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 4977,
											"end": 4999,
											"name": "LT",
											"source": 24
										},
										{
											"begin": 4956,
											"end": 4974,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4944,
											"end": 4954,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 4941,
											"end": 4975,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 4938,
											"end": 5000,
											"name": "OR",
											"source": 24
										},
										{
											"begin": 4935,
											"end": 5023,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 4935,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "344"
										},
										{
											"begin": 4935,
											"end": 5023,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 5003,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "345"
										},
										{
											"begin": 5003,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "201"
										},
										{
											"begin": 5003,
											"end": 5021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 5003,
											"end": 5021,
											"name": "tag",
											"source": 24,
											"value": "345"
										},
										{
											"begin": 5003,
											"end": 5021,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 4935,
											"end": 5023,
											"name": "tag",
											"source": 24,
											"value": "344"
										},
										{
											"begin": 4935,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5043,
											"end": 5053,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 5039,
											"end": 5041,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 5032,
											"end": 5054,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 4822,
											"end": 5060,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 4779,
											"end": 5060,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 4779,
											"end": 5060,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 4779,
											"end": 5060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 5066,
											"end": 5195,
											"name": "tag",
											"source": 24,
											"value": "245"
										},
										{
											"begin": 5066,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5100,
											"end": 5106,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 5127,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "347"
										},
										{
											"begin": 5127,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "222"
										},
										{
											"begin": 5127,
											"end": 5147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 5127,
											"end": 5147,
											"name": "tag",
											"source": 24,
											"value": "347"
										},
										{
											"begin": 5127,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5117,
											"end": 5147,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 5117,
											"end": 5147,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 5156,
											"end": 5189,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "348"
										},
										{
											"begin": 5184,
											"end": 5188,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 5176,
											"end": 5182,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 5156,
											"end": 5189,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "244"
										},
										{
											"begin": 5156,
											"end": 5189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 5156,
											"end": 5189,
											"name": "tag",
											"source": 24,
											"value": "348"
										},
										{
											"begin": 5156,
											"end": 5189,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5066,
											"end": 5195,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 5066,
											"end": 5195,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 5066,
											"end": 5195,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 5066,
											"end": 5195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 5201,
											"end": 5508,
											"name": "tag",
											"source": 24,
											"value": "246"
										},
										{
											"begin": 5201,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5262,
											"end": 5266,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 5352,
											"end": 5370,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5344,
											"end": 5350,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 5341,
											"end": 5371,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 5338,
											"end": 5394,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 5338,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "350"
										},
										{
											"begin": 5338,
											"end": 5394,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 5374,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "351"
										},
										{
											"begin": 5374,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "201"
										},
										{
											"begin": 5374,
											"end": 5392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 5374,
											"end": 5392,
											"name": "tag",
											"source": 24,
											"value": "351"
										},
										{
											"begin": 5374,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5338,
											"end": 5394,
											"name": "tag",
											"source": 24,
											"value": "350"
										},
										{
											"begin": 5338,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5412,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "352"
										},
										{
											"begin": 5434,
											"end": 5440,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 5412,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "243"
										},
										{
											"begin": 5412,
											"end": 5441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 5412,
											"end": 5441,
											"name": "tag",
											"source": 24,
											"value": "352"
										},
										{
											"begin": 5412,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5404,
											"end": 5441,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 5404,
											"end": 5441,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 5496,
											"end": 5500,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 5490,
											"end": 5494,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 5486,
											"end": 5501,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5478,
											"end": 5501,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 5478,
											"end": 5501,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 5201,
											"end": 5508,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 5201,
											"end": 5508,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 5201,
											"end": 5508,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 5201,
											"end": 5508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 5514,
											"end": 5660,
											"name": "tag",
											"source": 24,
											"value": "247"
										},
										{
											"begin": 5514,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5611,
											"end": 5617,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 5606,
											"end": 5609,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 5601,
											"end": 5604,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 5588,
											"end": 5618,
											"name": "CALLDATACOPY",
											"source": 24
										},
										{
											"begin": 5652,
											"end": 5653,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 5643,
											"end": 5649,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 5638,
											"end": 5641,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 5634,
											"end": 5650,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5627,
											"end": 5654,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 5514,
											"end": 5660,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 5514,
											"end": 5660,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 5514,
											"end": 5660,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 5514,
											"end": 5660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 5666,
											"end": 6089,
											"name": "tag",
											"source": 24,
											"value": "248"
										},
										{
											"begin": 5666,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5743,
											"end": 5748,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 5768,
											"end": 5833,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "355"
										},
										{
											"begin": 5784,
											"end": 5832,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "356"
										},
										{
											"begin": 5825,
											"end": 5831,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 5784,
											"end": 5832,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "246"
										},
										{
											"begin": 5784,
											"end": 5832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 5784,
											"end": 5832,
											"name": "tag",
											"source": 24,
											"value": "356"
										},
										{
											"begin": 5784,
											"end": 5832,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5768,
											"end": 5833,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "245"
										},
										{
											"begin": 5768,
											"end": 5833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 5768,
											"end": 5833,
											"name": "tag",
											"source": 24,
											"value": "355"
										},
										{
											"begin": 5768,
											"end": 5833,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5759,
											"end": 5833,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 5759,
											"end": 5833,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 5856,
											"end": 5862,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 5849,
											"end": 5854,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 5842,
											"end": 5863,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 5894,
											"end": 5898,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 5887,
											"end": 5892,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 5883,
											"end": 5899,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5932,
											"end": 5935,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 5923,
											"end": 5929,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 5918,
											"end": 5921,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 5914,
											"end": 5930,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5911,
											"end": 5936,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 5908,
											"end": 6020,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 5908,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "357"
										},
										{
											"begin": 5908,
											"end": 6020,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 5939,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "358"
										},
										{
											"begin": 5939,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "242"
										},
										{
											"begin": 5939,
											"end": 6018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 5939,
											"end": 6018,
											"name": "tag",
											"source": 24,
											"value": "358"
										},
										{
											"begin": 5939,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5908,
											"end": 6020,
											"name": "tag",
											"source": 24,
											"value": "357"
										},
										{
											"begin": 5908,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 6029,
											"end": 6083,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "359"
										},
										{
											"begin": 6076,
											"end": 6082,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 6071,
											"end": 6074,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 6066,
											"end": 6069,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 6029,
											"end": 6083,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "247"
										},
										{
											"begin": 6029,
											"end": 6083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 6029,
											"end": 6083,
											"name": "tag",
											"source": 24,
											"value": "359"
										},
										{
											"begin": 6029,
											"end": 6083,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5749,
											"end": 6089,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 5666,
											"end": 6089,
											"name": "SWAP4",
											"source": 24
										},
										{
											"begin": 5666,
											"end": 6089,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 5666,
											"end": 6089,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 5666,
											"end": 6089,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 5666,
											"end": 6089,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 5666,
											"end": 6089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 6108,
											"end": 6446,
											"name": "tag",
											"source": 24,
											"value": "249"
										},
										{
											"begin": 6108,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 6163,
											"end": 6168,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 6212,
											"end": 6215,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 6205,
											"end": 6209,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 6197,
											"end": 6203,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 6193,
											"end": 6210,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 6189,
											"end": 6216,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 6179,
											"end": 6301,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "361"
										},
										{
											"begin": 6179,
											"end": 6301,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 6220,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "362"
										},
										{
											"begin": 6220,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "241"
										},
										{
											"begin": 6220,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 6220,
											"end": 6299,
											"name": "tag",
											"source": 24,
											"value": "362"
										},
										{
											"begin": 6220,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 6179,
											"end": 6301,
											"name": "tag",
											"source": 24,
											"value": "361"
										},
										{
											"begin": 6179,
											"end": 6301,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 6337,
											"end": 6343,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 6324,
											"end": 6344,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 6362,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "363"
										},
										{
											"begin": 6436,
											"end": 6439,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 6428,
											"end": 6434,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 6421,
											"end": 6425,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 6413,
											"end": 6419,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 6409,
											"end": 6426,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 6362,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "248"
										},
										{
											"begin": 6362,
											"end": 6440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 6362,
											"end": 6440,
											"name": "tag",
											"source": 24,
											"value": "363"
										},
										{
											"begin": 6362,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 6353,
											"end": 6440,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 6353,
											"end": 6440,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 6169,
											"end": 6446,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 6108,
											"end": 6446,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 6108,
											"end": 6446,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 6108,
											"end": 6446,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 6108,
											"end": 6446,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 6108,
											"end": 6446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 6452,
											"end": 7249,
											"name": "tag",
											"source": 24,
											"value": "65"
										},
										{
											"begin": 6452,
											"end": 7249,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 6538,
											"end": 6544,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 6546,
											"end": 6552,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 6554,
											"end": 6560,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 6603,
											"end": 6605,
											"name": "PUSH",
											"source": 24,
											"value": "60"
										},
										{
											"begin": 6591,
											"end": 6600,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 6582,
											"end": 6589,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 6578,
											"end": 6601,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 6574,
											"end": 6606,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 6571,
											"end": 6690,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 6571,
											"end": 6690,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "365"
										},
										{
											"begin": 6571,
											"end": 6690,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 6609,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "366"
										},
										{
											"begin": 6609,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "223"
										},
										{
											"begin": 6609,
											"end": 6688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 6609,
											"end": 6688,
											"name": "tag",
											"source": 24,
											"value": "366"
										},
										{
											"begin": 6609,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 6571,
											"end": 6690,
											"name": "tag",
											"source": 24,
											"value": "365"
										},
										{
											"begin": 6571,
											"end": 6690,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 6729,
											"end": 6730,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 6754,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "367"
										},
										{
											"begin": 6799,
											"end": 6806,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 6779,
											"end": 6788,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 6775,
											"end": 6797,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 6754,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "237"
										},
										{
											"begin": 6754,
											"end": 6807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 6754,
											"end": 6807,
											"name": "tag",
											"source": 24,
											"value": "367"
										},
										{
											"begin": 6754,
											"end": 6807,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 6744,
											"end": 6807,
											"name": "SWAP4",
											"source": 24
										},
										{
											"begin": 6744,
											"end": 6807,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 6700,
											"end": 6817,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 6856,
											"end": 6858,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 6882,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "368"
										},
										{
											"begin": 6927,
											"end": 6934,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 6918,
											"end": 6924,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 6907,
											"end": 6916,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 6903,
											"end": 6925,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 6882,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "240"
										},
										{
											"begin": 6882,
											"end": 6935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 6882,
											"end": 6935,
											"name": "tag",
											"source": 24,
											"value": "368"
										},
										{
											"begin": 6882,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 6872,
											"end": 6935,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 6872,
											"end": 6935,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 6827,
											"end": 6945,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 7001,
											"end": 7010,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 6997,
											"end": 7015,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 6984,
											"end": 7016,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 7043,
											"end": 7061,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7035,
											"end": 7041,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 7032,
											"end": 7062,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 7029,
											"end": 7146,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 7029,
											"end": 7146,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "369"
										},
										{
											"begin": 7029,
											"end": 7146,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 7065,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "370"
										},
										{
											"begin": 7065,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "224"
										},
										{
											"begin": 7065,
											"end": 7144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 7065,
											"end": 7144,
											"name": "tag",
											"source": 24,
											"value": "370"
										},
										{
											"begin": 7065,
											"end": 7144,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 7029,
											"end": 7146,
											"name": "tag",
											"source": 24,
											"value": "369"
										},
										{
											"begin": 7029,
											"end": 7146,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 7170,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "371"
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 7215,
											"end": 7221,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 7204,
											"end": 7213,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 7200,
											"end": 7222,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 7170,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "249"
										},
										{
											"begin": 7170,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 7170,
											"end": 7232,
											"name": "tag",
											"source": 24,
											"value": "371"
										},
										{
											"begin": 7170,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 7160,
											"end": 7232,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 7160,
											"end": 7232,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 6955,
											"end": 7242,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 6452,
											"end": 7249,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 6452,
											"end": 7249,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 6452,
											"end": 7249,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 6452,
											"end": 7249,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 6452,
											"end": 7249,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 6452,
											"end": 7249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 7255,
											"end": 7563,
											"name": "tag",
											"source": 24,
											"value": "250"
										},
										{
											"begin": 7255,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 7317,
											"end": 7321,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 7407,
											"end": 7425,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7399,
											"end": 7405,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 7396,
											"end": 7426,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 7393,
											"end": 7449,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 7393,
											"end": 7449,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "373"
										},
										{
											"begin": 7393,
											"end": 7449,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 7429,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "374"
										},
										{
											"begin": 7429,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "201"
										},
										{
											"begin": 7429,
											"end": 7447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 7429,
											"end": 7447,
											"name": "tag",
											"source": 24,
											"value": "374"
										},
										{
											"begin": 7429,
											"end": 7447,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 7393,
											"end": 7449,
											"name": "tag",
											"source": 24,
											"value": "373"
										},
										{
											"begin": 7393,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 7467,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "375"
										},
										{
											"begin": 7489,
											"end": 7495,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 7467,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "243"
										},
										{
											"begin": 7467,
											"end": 7496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 7467,
											"end": 7496,
											"name": "tag",
											"source": 24,
											"value": "375"
										},
										{
											"begin": 7467,
											"end": 7496,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 7459,
											"end": 7496,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 7459,
											"end": 7496,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 7551,
											"end": 7555,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 7541,
											"end": 7556,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 7533,
											"end": 7556,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 7533,
											"end": 7556,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 7255,
											"end": 7563,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 7255,
											"end": 7563,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 7255,
											"end": 7563,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 7255,
											"end": 7563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 7569,
											"end": 7994,
											"name": "tag",
											"source": 24,
											"value": "251"
										},
										{
											"begin": 7569,
											"end": 7994,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 7647,
											"end": 7652,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 7672,
											"end": 7738,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "377"
										},
										{
											"begin": 7688,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "378"
										},
										{
											"begin": 7730,
											"end": 7736,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 7688,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "250"
										},
										{
											"begin": 7688,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 7688,
											"end": 7737,
											"name": "tag",
											"source": 24,
											"value": "378"
										},
										{
											"begin": 7688,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 7672,
											"end": 7738,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "245"
										},
										{
											"begin": 7672,
											"end": 7738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 7672,
											"end": 7738,
											"name": "tag",
											"source": 24,
											"value": "377"
										},
										{
											"begin": 7672,
											"end": 7738,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 7663,
											"end": 7738,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 7663,
											"end": 7738,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 7761,
											"end": 7767,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 7754,
											"end": 7759,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 7747,
											"end": 7768,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 7799,
											"end": 7803,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 7792,
											"end": 7797,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 7788,
											"end": 7804,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 7837,
											"end": 7840,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 7828,
											"end": 7834,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 7823,
											"end": 7826,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 7819,
											"end": 7835,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 7816,
											"end": 7841,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 7813,
											"end": 7925,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 7813,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "379"
										},
										{
											"begin": 7813,
											"end": 7925,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 7844,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "380"
										},
										{
											"begin": 7844,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "242"
										},
										{
											"begin": 7844,
											"end": 7923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 7844,
											"end": 7923,
											"name": "tag",
											"source": 24,
											"value": "380"
										},
										{
											"begin": 7844,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 7813,
											"end": 7925,
											"name": "tag",
											"source": 24,
											"value": "379"
										},
										{
											"begin": 7813,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 7934,
											"end": 7988,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "381"
										},
										{
											"begin": 7981,
											"end": 7987,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 7976,
											"end": 7979,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 7971,
											"end": 7974,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 7934,
											"end": 7988,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "247"
										},
										{
											"begin": 7934,
											"end": 7988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 7934,
											"end": 7988,
											"name": "tag",
											"source": 24,
											"value": "381"
										},
										{
											"begin": 7934,
											"end": 7988,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 7653,
											"end": 7994,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 7569,
											"end": 7994,
											"name": "SWAP4",
											"source": 24
										},
										{
											"begin": 7569,
											"end": 7994,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 7569,
											"end": 7994,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 7569,
											"end": 7994,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 7569,
											"end": 7994,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 7569,
											"end": 7994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 8014,
											"end": 8354,
											"name": "tag",
											"source": 24,
											"value": "252"
										},
										{
											"begin": 8014,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 8070,
											"end": 8075,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 8119,
											"end": 8122,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 8112,
											"end": 8116,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 8104,
											"end": 8110,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 8100,
											"end": 8117,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 8096,
											"end": 8123,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 8086,
											"end": 8208,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "383"
										},
										{
											"begin": 8086,
											"end": 8208,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 8127,
											"end": 8206,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "384"
										},
										{
											"begin": 8127,
											"end": 8206,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "241"
										},
										{
											"begin": 8127,
											"end": 8206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 8127,
											"end": 8206,
											"name": "tag",
											"source": 24,
											"value": "384"
										},
										{
											"begin": 8127,
											"end": 8206,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 8086,
											"end": 8208,
											"name": "tag",
											"source": 24,
											"value": "383"
										},
										{
											"begin": 8086,
											"end": 8208,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 8244,
											"end": 8250,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 8231,
											"end": 8251,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 8269,
											"end": 8348,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "385"
										},
										{
											"begin": 8344,
											"end": 8347,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 8336,
											"end": 8342,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 8329,
											"end": 8333,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 8321,
											"end": 8327,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 8317,
											"end": 8334,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 8269,
											"end": 8348,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "251"
										},
										{
											"begin": 8269,
											"end": 8348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 8269,
											"end": 8348,
											"name": "tag",
											"source": 24,
											"value": "385"
										},
										{
											"begin": 8269,
											"end": 8348,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 8260,
											"end": 8348,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 8260,
											"end": 8348,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 8076,
											"end": 8354,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 8014,
											"end": 8354,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 8014,
											"end": 8354,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 8014,
											"end": 8354,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 8014,
											"end": 8354,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 8014,
											"end": 8354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 8360,
											"end": 9955,
											"name": "tag",
											"source": 24,
											"value": "74"
										},
										{
											"begin": 8360,
											"end": 9955,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 8493,
											"end": 8499,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 8501,
											"end": 8507,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 8509,
											"end": 8515,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 8517,
											"end": 8523,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 8525,
											"end": 8531,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 8533,
											"end": 8539,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 8582,
											"end": 8585,
											"name": "PUSH",
											"source": 24,
											"value": "C0"
										},
										{
											"begin": 8570,
											"end": 8579,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 8561,
											"end": 8568,
											"name": "DUP10",
											"source": 24
										},
										{
											"begin": 8557,
											"end": 8580,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 8553,
											"end": 8586,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 8550,
											"end": 8670,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 8550,
											"end": 8670,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "387"
										},
										{
											"begin": 8550,
											"end": 8670,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 8589,
											"end": 8668,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "388"
										},
										{
											"begin": 8589,
											"end": 8668,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "223"
										},
										{
											"begin": 8589,
											"end": 8668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 8589,
											"end": 8668,
											"name": "tag",
											"source": 24,
											"value": "388"
										},
										{
											"begin": 8589,
											"end": 8668,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 8550,
											"end": 8670,
											"name": "tag",
											"source": 24,
											"value": "387"
										},
										{
											"begin": 8550,
											"end": 8670,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 8709,
											"end": 8710,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 8734,
											"end": 8787,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "389"
										},
										{
											"begin": 8779,
											"end": 8786,
											"name": "DUP10",
											"source": 24
										},
										{
											"begin": 8770,
											"end": 8776,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 8759,
											"end": 8768,
											"name": "DUP11",
											"source": 24
										},
										{
											"begin": 8755,
											"end": 8777,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 8734,
											"end": 8787,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "237"
										},
										{
											"begin": 8734,
											"end": 8787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 8734,
											"end": 8787,
											"name": "tag",
											"source": 24,
											"value": "389"
										},
										{
											"begin": 8734,
											"end": 8787,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 8724,
											"end": 8787,
											"name": "SWAP7",
											"source": 24
										},
										{
											"begin": 8724,
											"end": 8787,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 8680,
											"end": 8797,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 8864,
											"end": 8866,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 8853,
											"end": 8862,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 8849,
											"end": 8867,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 8895,
											"end": 8913,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8887,
											"end": 8893,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 8884,
											"end": 8914,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 8881,
											"end": 8998,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 8881,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "390"
										},
										{
											"begin": 8881,
											"end": 8998,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 8917,
											"end": 8996,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "391"
										},
										{
											"begin": 8917,
											"end": 8996,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "224"
										},
										{
											"begin": 8917,
											"end": 8996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 8917,
											"end": 8996,
											"name": "tag",
											"source": 24,
											"value": "391"
										},
										{
											"begin": 8917,
											"end": 8996,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 8881,
											"end": 8998,
											"name": "tag",
											"source": 24,
											"value": "390"
										},
										{
											"begin": 8881,
											"end": 8998,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 9022,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "392"
										},
										{
											"begin": 9077,
											"end": 9084,
											"name": "DUP10",
											"source": 24
										},
										{
											"begin": 9068,
											"end": 9074,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 9057,
											"end": 9066,
											"name": "DUP11",
											"source": 24
										},
										{
											"begin": 9053,
											"end": 9075,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 9022,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "252"
										},
										{
											"begin": 9022,
											"end": 9085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 9022,
											"end": 9085,
											"name": "tag",
											"source": 24,
											"value": "392"
										},
										{
											"begin": 9022,
											"end": 9085,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 9012,
											"end": 9085,
											"name": "SWAP6",
											"source": 24
										},
										{
											"begin": 9012,
											"end": 9085,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 8807,
											"end": 9095,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 9162,
											"end": 9164,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 9151,
											"end": 9160,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 9147,
											"end": 9165,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 9134,
											"end": 9166,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 9193,
											"end": 9211,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9185,
											"end": 9191,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 9182,
											"end": 9212,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 9179,
											"end": 9296,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 9179,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "393"
										},
										{
											"begin": 9179,
											"end": 9296,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 9215,
											"end": 9294,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "394"
										},
										{
											"begin": 9215,
											"end": 9294,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "224"
										},
										{
											"begin": 9215,
											"end": 9294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 9215,
											"end": 9294,
											"name": "tag",
											"source": 24,
											"value": "394"
										},
										{
											"begin": 9215,
											"end": 9294,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 9179,
											"end": 9296,
											"name": "tag",
											"source": 24,
											"value": "393"
										},
										{
											"begin": 9179,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 9320,
											"end": 9383,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "395"
										},
										{
											"begin": 9375,
											"end": 9382,
											"name": "DUP10",
											"source": 24
										},
										{
											"begin": 9366,
											"end": 9372,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 9355,
											"end": 9364,
											"name": "DUP11",
											"source": 24
										},
										{
											"begin": 9351,
											"end": 9373,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 9320,
											"end": 9383,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "252"
										},
										{
											"begin": 9320,
											"end": 9383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 9320,
											"end": 9383,
											"name": "tag",
											"source": 24,
											"value": "395"
										},
										{
											"begin": 9320,
											"end": 9383,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 9310,
											"end": 9383,
											"name": "SWAP5",
											"source": 24
										},
										{
											"begin": 9310,
											"end": 9383,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 9105,
											"end": 9393,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 9432,
											"end": 9434,
											"name": "PUSH",
											"source": 24,
											"value": "60"
										},
										{
											"begin": 9458,
											"end": 9511,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "396"
										},
										{
											"begin": 9503,
											"end": 9510,
											"name": "DUP10",
											"source": 24
										},
										{
											"begin": 9494,
											"end": 9500,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 9483,
											"end": 9492,
											"name": "DUP11",
											"source": 24
										},
										{
											"begin": 9479,
											"end": 9501,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 9458,
											"end": 9511,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "240"
										},
										{
											"begin": 9458,
											"end": 9511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 9458,
											"end": 9511,
											"name": "tag",
											"source": 24,
											"value": "396"
										},
										{
											"begin": 9458,
											"end": 9511,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "SWAP4",
											"source": 24
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 9403,
											"end": 9521,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 9560,
											"end": 9563,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 9587,
											"end": 9640,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "397"
										},
										{
											"begin": 9632,
											"end": 9639,
											"name": "DUP10",
											"source": 24
										},
										{
											"begin": 9623,
											"end": 9629,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 9612,
											"end": 9621,
											"name": "DUP11",
											"source": 24
										},
										{
											"begin": 9608,
											"end": 9630,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 9587,
											"end": 9640,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "237"
										},
										{
											"begin": 9587,
											"end": 9640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 9587,
											"end": 9640,
											"name": "tag",
											"source": 24,
											"value": "397"
										},
										{
											"begin": 9587,
											"end": 9640,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 9577,
											"end": 9640,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 9577,
											"end": 9640,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 9531,
											"end": 9650,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 9717,
											"end": 9720,
											"name": "PUSH",
											"source": 24,
											"value": "A0"
										},
										{
											"begin": 9706,
											"end": 9715,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 9702,
											"end": 9721,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 9689,
											"end": 9722,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 9749,
											"end": 9767,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9741,
											"end": 9747,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 9738,
											"end": 9768,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 9735,
											"end": 9852,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 9735,
											"end": 9852,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "398"
										},
										{
											"begin": 9735,
											"end": 9852,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 9771,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "399"
										},
										{
											"begin": 9771,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "224"
										},
										{
											"begin": 9771,
											"end": 9850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 9771,
											"end": 9850,
											"name": "tag",
											"source": 24,
											"value": "399"
										},
										{
											"begin": 9771,
											"end": 9850,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 9735,
											"end": 9852,
											"name": "tag",
											"source": 24,
											"value": "398"
										},
										{
											"begin": 9735,
											"end": 9852,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 9876,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "400"
										},
										{
											"begin": 9930,
											"end": 9937,
											"name": "DUP10",
											"source": 24
										},
										{
											"begin": 9921,
											"end": 9927,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 9910,
											"end": 9919,
											"name": "DUP11",
											"source": 24
										},
										{
											"begin": 9906,
											"end": 9928,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 9876,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "249"
										},
										{
											"begin": 9876,
											"end": 9938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 9876,
											"end": 9938,
											"name": "tag",
											"source": 24,
											"value": "400"
										},
										{
											"begin": 9876,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 9866,
											"end": 9938,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 9866,
											"end": 9938,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 9660,
											"end": 9948,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 8360,
											"end": 9955,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 8360,
											"end": 9955,
											"name": "SWAP6",
											"source": 24
										},
										{
											"begin": 8360,
											"end": 9955,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 8360,
											"end": 9955,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 8360,
											"end": 9955,
											"name": "SWAP6",
											"source": 24
										},
										{
											"begin": 8360,
											"end": 9955,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 8360,
											"end": 9955,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 8360,
											"end": 9955,
											"name": "SWAP6",
											"source": 24
										},
										{
											"begin": 8360,
											"end": 9955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 9961,
											"end": 10613,
											"name": "tag",
											"source": 24,
											"value": "87"
										},
										{
											"begin": 9961,
											"end": 10613,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 10038,
											"end": 10044,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 10046,
											"end": 10052,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 10095,
											"end": 10097,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 10083,
											"end": 10092,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 10074,
											"end": 10081,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 10070,
											"end": 10093,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 10066,
											"end": 10098,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 10063,
											"end": 10182,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 10063,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "402"
										},
										{
											"begin": 10063,
											"end": 10182,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 10101,
											"end": 10180,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "403"
										},
										{
											"begin": 10101,
											"end": 10180,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "223"
										},
										{
											"begin": 10101,
											"end": 10180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 10101,
											"end": 10180,
											"name": "tag",
											"source": 24,
											"value": "403"
										},
										{
											"begin": 10101,
											"end": 10180,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 10063,
											"end": 10182,
											"name": "tag",
											"source": 24,
											"value": "402"
										},
										{
											"begin": 10063,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 10221,
											"end": 10222,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 10246,
											"end": 10299,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "404"
										},
										{
											"begin": 10291,
											"end": 10298,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 10282,
											"end": 10288,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 10271,
											"end": 10280,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 10267,
											"end": 10289,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 10246,
											"end": 10299,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "240"
										},
										{
											"begin": 10246,
											"end": 10299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 10246,
											"end": 10299,
											"name": "tag",
											"source": 24,
											"value": "404"
										},
										{
											"begin": 10246,
											"end": 10299,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 10236,
											"end": 10299,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 10236,
											"end": 10299,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 10192,
											"end": 10309,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 10376,
											"end": 10378,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 10365,
											"end": 10374,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 10361,
											"end": 10379,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 10348,
											"end": 10380,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 10407,
											"end": 10425,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10399,
											"end": 10405,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 10396,
											"end": 10426,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 10393,
											"end": 10510,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 10393,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "405"
										},
										{
											"begin": 10393,
											"end": 10510,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 10429,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "406"
										},
										{
											"begin": 10429,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "224"
										},
										{
											"begin": 10429,
											"end": 10508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 10429,
											"end": 10508,
											"name": "tag",
											"source": 24,
											"value": "406"
										},
										{
											"begin": 10429,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 10393,
											"end": 10510,
											"name": "tag",
											"source": 24,
											"value": "405"
										},
										{
											"begin": 10393,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 10534,
											"end": 10596,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "407"
										},
										{
											"begin": 10588,
											"end": 10595,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 10579,
											"end": 10585,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 10568,
											"end": 10577,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 10564,
											"end": 10586,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 10534,
											"end": 10596,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "249"
										},
										{
											"begin": 10534,
											"end": 10596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 10534,
											"end": 10596,
											"name": "tag",
											"source": 24,
											"value": "407"
										},
										{
											"begin": 10534,
											"end": 10596,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 10524,
											"end": 10596,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 10524,
											"end": 10596,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 10319,
											"end": 10606,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 9961,
											"end": 10613,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 9961,
											"end": 10613,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 9961,
											"end": 10613,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 9961,
											"end": 10613,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 9961,
											"end": 10613,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 9961,
											"end": 10613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 10619,
											"end": 10788,
											"name": "tag",
											"source": 24,
											"value": "253"
										},
										{
											"begin": 10619,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 10703,
											"end": 10714,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 10737,
											"end": 10743,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 10732,
											"end": 10735,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 10725,
											"end": 10744,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 10777,
											"end": 10781,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 10772,
											"end": 10775,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 10768,
											"end": 10782,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 10753,
											"end": 10782,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 10753,
											"end": 10782,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 10619,
											"end": 10788,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 10619,
											"end": 10788,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 10619,
											"end": 10788,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 10619,
											"end": 10788,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 10619,
											"end": 10788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 10794,
											"end": 11028,
											"name": "tag",
											"source": 24,
											"value": "254"
										},
										{
											"begin": 10794,
											"end": 11028,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 10934,
											"end": 10968,
											"name": "PUSH",
											"source": 24,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 10930,
											"end": 10931,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 10922,
											"end": 10928,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 10918,
											"end": 10932,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 10911,
											"end": 10969,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 11003,
											"end": 11020,
											"name": "PUSH",
											"source": 24,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 10998,
											"end": 11000,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 10990,
											"end": 10996,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 10986,
											"end": 11001,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 10979,
											"end": 11021,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 10794,
											"end": 11028,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 10794,
											"end": 11028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 11034,
											"end": 11400,
											"name": "tag",
											"source": 24,
											"value": "255"
										},
										{
											"begin": 11034,
											"end": 11400,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 11176,
											"end": 11179,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 11197,
											"end": 11264,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "411"
										},
										{
											"begin": 11261,
											"end": 11263,
											"name": "PUSH",
											"source": 24,
											"value": "2F"
										},
										{
											"begin": 11256,
											"end": 11259,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 11197,
											"end": 11264,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "253"
										},
										{
											"begin": 11197,
											"end": 11264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 11197,
											"end": 11264,
											"name": "tag",
											"source": 24,
											"value": "411"
										},
										{
											"begin": 11197,
											"end": 11264,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 11190,
											"end": 11264,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 11190,
											"end": 11264,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 11273,
											"end": 11366,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "412"
										},
										{
											"begin": 11362,
											"end": 11365,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 11273,
											"end": 11366,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "254"
										},
										{
											"begin": 11273,
											"end": 11366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 11273,
											"end": 11366,
											"name": "tag",
											"source": 24,
											"value": "412"
										},
										{
											"begin": 11273,
											"end": 11366,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 11391,
											"end": 11393,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 11386,
											"end": 11389,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 11382,
											"end": 11394,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 11375,
											"end": 11394,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 11375,
											"end": 11394,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 11034,
											"end": 11400,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 11034,
											"end": 11400,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 11034,
											"end": 11400,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 11034,
											"end": 11400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 11406,
											"end": 11825,
											"name": "tag",
											"source": 24,
											"value": "113"
										},
										{
											"begin": 11406,
											"end": 11825,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 11572,
											"end": 11576,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 11610,
											"end": 11612,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 11599,
											"end": 11608,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 11595,
											"end": 11613,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 11587,
											"end": 11613,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 11587,
											"end": 11613,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 11659,
											"end": 11668,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 11653,
											"end": 11657,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 11649,
											"end": 11669,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 11645,
											"end": 11646,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 11634,
											"end": 11643,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 11630,
											"end": 11647,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 11623,
											"end": 11670,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 11687,
											"end": 11818,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "414"
										},
										{
											"begin": 11813,
											"end": 11817,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 11687,
											"end": 11818,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "255"
										},
										{
											"begin": 11687,
											"end": 11818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 11687,
											"end": 11818,
											"name": "tag",
											"source": 24,
											"value": "414"
										},
										{
											"begin": 11687,
											"end": 11818,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 11679,
											"end": 11818,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 11679,
											"end": 11818,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 11406,
											"end": 11825,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 11406,
											"end": 11825,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 11406,
											"end": 11825,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 11406,
											"end": 11825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 11831,
											"end": 11949,
											"name": "tag",
											"source": 24,
											"value": "256"
										},
										{
											"begin": 11831,
											"end": 11949,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 11918,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "416"
										},
										{
											"begin": 11936,
											"end": 11941,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 11918,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "235"
										},
										{
											"begin": 11918,
											"end": 11942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 11918,
											"end": 11942,
											"name": "tag",
											"source": 24,
											"value": "416"
										},
										{
											"begin": 11918,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 11913,
											"end": 11916,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 11906,
											"end": 11943,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 11831,
											"end": 11949,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 11831,
											"end": 11949,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 11831,
											"end": 11949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 11955,
											"end": 12073,
											"name": "tag",
											"source": 24,
											"value": "257"
										},
										{
											"begin": 11955,
											"end": 12073,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 12042,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "418"
										},
										{
											"begin": 12060,
											"end": 12065,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 12042,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "238"
										},
										{
											"begin": 12042,
											"end": 12066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 12042,
											"end": 12066,
											"name": "tag",
											"source": 24,
											"value": "418"
										},
										{
											"begin": 12042,
											"end": 12066,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 12037,
											"end": 12040,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 12030,
											"end": 12067,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 11955,
											"end": 12073,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 11955,
											"end": 12073,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 11955,
											"end": 12073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 12079,
											"end": 12177,
											"name": "tag",
											"source": 24,
											"value": "258"
										},
										{
											"begin": 12079,
											"end": 12177,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 12130,
											"end": 12136,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 12164,
											"end": 12169,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 12158,
											"end": 12170,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 12148,
											"end": 12170,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 12148,
											"end": 12170,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 12079,
											"end": 12177,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 12079,
											"end": 12177,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 12079,
											"end": 12177,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 12079,
											"end": 12177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 12183,
											"end": 12351,
											"name": "tag",
											"source": 24,
											"value": "259"
										},
										{
											"begin": 12183,
											"end": 12351,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 12266,
											"end": 12277,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 12300,
											"end": 12306,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 12295,
											"end": 12298,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 12288,
											"end": 12307,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 12340,
											"end": 12344,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 12335,
											"end": 12338,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 12331,
											"end": 12345,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 12316,
											"end": 12345,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 12316,
											"end": 12345,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 12183,
											"end": 12351,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 12183,
											"end": 12351,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 12183,
											"end": 12351,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 12183,
											"end": 12351,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 12183,
											"end": 12351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 12357,
											"end": 12603,
											"name": "tag",
											"source": 24,
											"value": "260"
										},
										{
											"begin": 12357,
											"end": 12603,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 12438,
											"end": 12439,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 12448,
											"end": 12561,
											"name": "tag",
											"source": 24,
											"value": "422"
										},
										{
											"begin": 12448,
											"end": 12561,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 12462,
											"end": 12468,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 12459,
											"end": 12460,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 12456,
											"end": 12469,
											"name": "LT",
											"source": 24
										},
										{
											"begin": 12448,
											"end": 12561,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 12448,
											"end": 12561,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "424"
										},
										{
											"begin": 12448,
											"end": 12561,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 12547,
											"end": 12548,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 12542,
											"end": 12545,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 12538,
											"end": 12549,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 12532,
											"end": 12550,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 12528,
											"end": 12529,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 12523,
											"end": 12526,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 12519,
											"end": 12530,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 12512,
											"end": 12551,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 12484,
											"end": 12486,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 12481,
											"end": 12482,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 12477,
											"end": 12487,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 12472,
											"end": 12487,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 12472,
											"end": 12487,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 12448,
											"end": 12561,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "422"
										},
										{
											"begin": 12448,
											"end": 12561,
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 12448,
											"end": 12561,
											"name": "tag",
											"source": 24,
											"value": "424"
										},
										{
											"begin": 12448,
											"end": 12561,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 12595,
											"end": 12596,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 12586,
											"end": 12592,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 12581,
											"end": 12584,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 12577,
											"end": 12593,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 12419,
											"end": 12603,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 12357,
											"end": 12603,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 12357,
											"end": 12603,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 12357,
											"end": 12603,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 12357,
											"end": 12603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 12609,
											"end": 12982,
											"name": "tag",
											"source": 24,
											"value": "261"
										},
										{
											"begin": 12609,
											"end": 12982,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 12695,
											"end": 12698,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 12723,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "426"
										},
										{
											"begin": 12755,
											"end": 12760,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 12723,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "258"
										},
										{
											"begin": 12723,
											"end": 12761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 12723,
											"end": 12761,
											"name": "tag",
											"source": 24,
											"value": "426"
										},
										{
											"begin": 12723,
											"end": 12761,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 12777,
											"end": 12847,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "427"
										},
										{
											"begin": 12840,
											"end": 12846,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 12835,
											"end": 12838,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 12777,
											"end": 12847,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "259"
										},
										{
											"begin": 12777,
											"end": 12847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 12777,
											"end": 12847,
											"name": "tag",
											"source": 24,
											"value": "427"
										},
										{
											"begin": 12777,
											"end": 12847,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 12770,
											"end": 12847,
											"name": "SWAP4",
											"source": 24
										},
										{
											"begin": 12770,
											"end": 12847,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 12856,
											"end": 12921,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "428"
										},
										{
											"begin": 12914,
											"end": 12920,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 12909,
											"end": 12912,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 12902,
											"end": 12906,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 12895,
											"end": 12900,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 12891,
											"end": 12907,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 12856,
											"end": 12921,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "260"
										},
										{
											"begin": 12856,
											"end": 12921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 12856,
											"end": 12921,
											"name": "tag",
											"source": 24,
											"value": "428"
										},
										{
											"begin": 12856,
											"end": 12921,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 12946,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "429"
										},
										{
											"begin": 12968,
											"end": 12974,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 12946,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "243"
										},
										{
											"begin": 12946,
											"end": 12975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 12946,
											"end": 12975,
											"name": "tag",
											"source": 24,
											"value": "429"
										},
										{
											"begin": 12946,
											"end": 12975,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 12941,
											"end": 12944,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 12937,
											"end": 12976,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 12930,
											"end": 12976,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 12930,
											"end": 12976,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 12699,
											"end": 12982,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 12609,
											"end": 12982,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 12609,
											"end": 12982,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 12609,
											"end": 12982,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 12609,
											"end": 12982,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 12609,
											"end": 12982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 12988,
											"end": 13517,
											"name": "tag",
											"source": 24,
											"value": "161"
										},
										{
											"begin": 12988,
											"end": 13517,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 13155,
											"end": 13159,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 13193,
											"end": 13195,
											"name": "PUSH",
											"source": 24,
											"value": "60"
										},
										{
											"begin": 13182,
											"end": 13191,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 13178,
											"end": 13196,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 13170,
											"end": 13196,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 13170,
											"end": 13196,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 13206,
											"end": 13277,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "431"
										},
										{
											"begin": 13274,
											"end": 13275,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 13263,
											"end": 13272,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 13259,
											"end": 13276,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 13250,
											"end": 13256,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 13206,
											"end": 13277,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "256"
										},
										{
											"begin": 13206,
											"end": 13277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 13206,
											"end": 13277,
											"name": "tag",
											"source": 24,
											"value": "431"
										},
										{
											"begin": 13206,
											"end": 13277,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 13287,
											"end": 13359,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "432"
										},
										{
											"begin": 13355,
											"end": 13357,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 13344,
											"end": 13353,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 13340,
											"end": 13358,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 13331,
											"end": 13337,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 13287,
											"end": 13359,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "257"
										},
										{
											"begin": 13287,
											"end": 13359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 13287,
											"end": 13359,
											"name": "tag",
											"source": 24,
											"value": "432"
										},
										{
											"begin": 13287,
											"end": 13359,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 13406,
											"end": 13415,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 13400,
											"end": 13404,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 13396,
											"end": 13416,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 13391,
											"end": 13393,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 13380,
											"end": 13389,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 13376,
											"end": 13394,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 13369,
											"end": 13417,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 13434,
											"end": 13510,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "433"
										},
										{
											"begin": 13505,
											"end": 13509,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 13496,
											"end": 13502,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 13434,
											"end": 13510,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "261"
										},
										{
											"begin": 13434,
											"end": 13510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 13434,
											"end": 13510,
											"name": "tag",
											"source": 24,
											"value": "433"
										},
										{
											"begin": 13434,
											"end": 13510,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 13426,
											"end": 13510,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 13426,
											"end": 13510,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 12988,
											"end": 13517,
											"name": "SWAP5",
											"source": 24
										},
										{
											"begin": 12988,
											"end": 13517,
											"name": "SWAP4",
											"source": 24
										},
										{
											"begin": 12988,
											"end": 13517,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 12988,
											"end": 13517,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 12988,
											"end": 13517,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 12988,
											"end": 13517,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 12988,
											"end": 13517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 13523,
											"end": 13745,
											"name": "tag",
											"source": 24,
											"value": "167"
										},
										{
											"begin": 13523,
											"end": 13745,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 13616,
											"end": 13620,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 13654,
											"end": 13656,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 13643,
											"end": 13652,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 13639,
											"end": 13657,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 13631,
											"end": 13657,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 13631,
											"end": 13657,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 13667,
											"end": 13738,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "435"
										},
										{
											"begin": 13735,
											"end": 13736,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 13724,
											"end": 13733,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 13720,
											"end": 13737,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 13711,
											"end": 13717,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 13667,
											"end": 13738,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "256"
										},
										{
											"begin": 13667,
											"end": 13738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 13667,
											"end": 13738,
											"name": "tag",
											"source": 24,
											"value": "435"
										},
										{
											"begin": 13667,
											"end": 13738,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 13523,
											"end": 13745,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 13523,
											"end": 13745,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 13523,
											"end": 13745,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 13523,
											"end": 13745,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 13523,
											"end": 13745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 13751,
											"end": 13811,
											"name": "tag",
											"source": 24,
											"value": "262"
										},
										{
											"begin": 13751,
											"end": 13811,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 13779,
											"end": 13782,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 13800,
											"end": 13805,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 13793,
											"end": 13805,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 13793,
											"end": 13805,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 13751,
											"end": 13811,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 13751,
											"end": 13811,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 13751,
											"end": 13811,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 13751,
											"end": 13811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 13817,
											"end": 13959,
											"name": "tag",
											"source": 24,
											"value": "263"
										},
										{
											"begin": 13817,
											"end": 13959,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 13867,
											"end": 13876,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 13900,
											"end": 13953,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "438"
										},
										{
											"begin": 13918,
											"end": 13952,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "439"
										},
										{
											"begin": 13927,
											"end": 13951,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "440"
										},
										{
											"begin": 13945,
											"end": 13950,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 13927,
											"end": 13951,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "234"
										},
										{
											"begin": 13927,
											"end": 13951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 13927,
											"end": 13951,
											"name": "tag",
											"source": 24,
											"value": "440"
										},
										{
											"begin": 13927,
											"end": 13951,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 13918,
											"end": 13952,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "262"
										},
										{
											"begin": 13918,
											"end": 13952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 13918,
											"end": 13952,
											"name": "tag",
											"source": 24,
											"value": "439"
										},
										{
											"begin": 13918,
											"end": 13952,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 13900,
											"end": 13953,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "234"
										},
										{
											"begin": 13900,
											"end": 13953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 13900,
											"end": 13953,
											"name": "tag",
											"source": 24,
											"value": "438"
										},
										{
											"begin": 13900,
											"end": 13953,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 13887,
											"end": 13953,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 13887,
											"end": 13953,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 13817,
											"end": 13959,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 13817,
											"end": 13959,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 13817,
											"end": 13959,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 13817,
											"end": 13959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 13965,
											"end": 14091,
											"name": "tag",
											"source": 24,
											"value": "264"
										},
										{
											"begin": 13965,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 14015,
											"end": 14024,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 14048,
											"end": 14085,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "442"
										},
										{
											"begin": 14079,
											"end": 14084,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 14048,
											"end": 14085,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "263"
										},
										{
											"begin": 14048,
											"end": 14085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 14048,
											"end": 14085,
											"name": "tag",
											"source": 24,
											"value": "442"
										},
										{
											"begin": 14048,
											"end": 14085,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 14035,
											"end": 14085,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 14035,
											"end": 14085,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 13965,
											"end": 14091,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 13965,
											"end": 14091,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 13965,
											"end": 14091,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 13965,
											"end": 14091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 14097,
											"end": 14237,
											"name": "tag",
											"source": 24,
											"value": "265"
										},
										{
											"begin": 14097,
											"end": 14237,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 14161,
											"end": 14170,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 14194,
											"end": 14231,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "444"
										},
										{
											"begin": 14225,
											"end": 14230,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 14194,
											"end": 14231,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "264"
										},
										{
											"begin": 14194,
											"end": 14231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 14194,
											"end": 14231,
											"name": "tag",
											"source": 24,
											"value": "444"
										},
										{
											"begin": 14194,
											"end": 14231,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 14181,
											"end": 14231,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 14181,
											"end": 14231,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 14097,
											"end": 14237,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 14097,
											"end": 14237,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 14097,
											"end": 14237,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 14097,
											"end": 14237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 14243,
											"end": 14402,
											"name": "tag",
											"source": 24,
											"value": "266"
										},
										{
											"begin": 14243,
											"end": 14402,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 14344,
											"end": 14395,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "446"
										},
										{
											"begin": 14389,
											"end": 14394,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 14344,
											"end": 14395,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "265"
										},
										{
											"begin": 14344,
											"end": 14395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 14344,
											"end": 14395,
											"name": "tag",
											"source": 24,
											"value": "446"
										},
										{
											"begin": 14344,
											"end": 14395,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 14339,
											"end": 14342,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 14332,
											"end": 14396,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 14243,
											"end": 14402,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 14243,
											"end": 14402,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 14243,
											"end": 14402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 14408,
											"end": 14494,
											"name": "tag",
											"source": 24,
											"value": "267"
										},
										{
											"begin": 14408,
											"end": 14494,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 14454,
											"end": 14461,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 14483,
											"end": 14488,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 14472,
											"end": 14488,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 14472,
											"end": 14488,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 14408,
											"end": 14494,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 14408,
											"end": 14494,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 14408,
											"end": 14494,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 14408,
											"end": 14494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 14500,
											"end": 14586,
											"name": "tag",
											"source": 24,
											"value": "268"
										},
										{
											"begin": 14500,
											"end": 14586,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 14535,
											"end": 14542,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 14575,
											"end": 14579,
											"name": "PUSH",
											"source": 24,
											"value": "FF"
										},
										{
											"begin": 14568,
											"end": 14573,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 14564,
											"end": 14580,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 14500,
											"end": 14586,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 14500,
											"end": 14586,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 14500,
											"end": 14586,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 14500,
											"end": 14586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 14592,
											"end": 14748,
											"name": "tag",
											"source": 24,
											"value": "269"
										},
										{
											"begin": 14592,
											"end": 14748,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 14649,
											"end": 14658,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 14682,
											"end": 14742,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "450"
										},
										{
											"begin": 14698,
											"end": 14741,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "451"
										},
										{
											"begin": 14707,
											"end": 14740,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "452"
										},
										{
											"begin": 14734,
											"end": 14739,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 14707,
											"end": 14740,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "267"
										},
										{
											"begin": 14707,
											"end": 14740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 14707,
											"end": 14740,
											"name": "tag",
											"source": 24,
											"value": "452"
										},
										{
											"begin": 14707,
											"end": 14740,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 14698,
											"end": 14741,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "262"
										},
										{
											"begin": 14698,
											"end": 14741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 14698,
											"end": 14741,
											"name": "tag",
											"source": 24,
											"value": "451"
										},
										{
											"begin": 14698,
											"end": 14741,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 14682,
											"end": 14742,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "268"
										},
										{
											"begin": 14682,
											"end": 14742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 14682,
											"end": 14742,
											"name": "tag",
											"source": 24,
											"value": "450"
										},
										{
											"begin": 14682,
											"end": 14742,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 14669,
											"end": 14742,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 14669,
											"end": 14742,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 14592,
											"end": 14748,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 14592,
											"end": 14748,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 14592,
											"end": 14748,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 14592,
											"end": 14748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 14754,
											"end": 14899,
											"name": "tag",
											"source": 24,
											"value": "270"
										},
										{
											"begin": 14754,
											"end": 14899,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 14848,
											"end": 14892,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "454"
										},
										{
											"begin": 14886,
											"end": 14891,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 14848,
											"end": 14892,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "269"
										},
										{
											"begin": 14848,
											"end": 14892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 14848,
											"end": 14892,
											"name": "tag",
											"source": 24,
											"value": "454"
										},
										{
											"begin": 14848,
											"end": 14892,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 14843,
											"end": 14846,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 14836,
											"end": 14893,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 14754,
											"end": 14899,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 14754,
											"end": 14899,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 14754,
											"end": 14899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 14905,
											"end": 15004,
											"name": "tag",
											"source": 24,
											"value": "271"
										},
										{
											"begin": 14905,
											"end": 15004,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 14957,
											"end": 14963,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 14991,
											"end": 14996,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 14985,
											"end": 14997,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 14975,
											"end": 14997,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 14975,
											"end": 14997,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 14905,
											"end": 15004,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 14905,
											"end": 15004,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 14905,
											"end": 15004,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 14905,
											"end": 15004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 15010,
											"end": 15387,
											"name": "tag",
											"source": 24,
											"value": "272"
										},
										{
											"begin": 15010,
											"end": 15387,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 15098,
											"end": 15101,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 15126,
											"end": 15165,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "457"
										},
										{
											"begin": 15159,
											"end": 15164,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 15126,
											"end": 15165,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "271"
										},
										{
											"begin": 15126,
											"end": 15165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 15126,
											"end": 15165,
											"name": "tag",
											"source": 24,
											"value": "457"
										},
										{
											"begin": 15126,
											"end": 15165,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 15181,
											"end": 15252,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "458"
										},
										{
											"begin": 15245,
											"end": 15251,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 15240,
											"end": 15243,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 15181,
											"end": 15252,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "253"
										},
										{
											"begin": 15181,
											"end": 15252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 15181,
											"end": 15252,
											"name": "tag",
											"source": 24,
											"value": "458"
										},
										{
											"begin": 15181,
											"end": 15252,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 15174,
											"end": 15252,
											"name": "SWAP4",
											"source": 24
										},
										{
											"begin": 15174,
											"end": 15252,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 15261,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "459"
										},
										{
											"begin": 15319,
											"end": 15325,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 15314,
											"end": 15317,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 15307,
											"end": 15311,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 15300,
											"end": 15305,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 15296,
											"end": 15312,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 15261,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "260"
										},
										{
											"begin": 15261,
											"end": 15326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 15261,
											"end": 15326,
											"name": "tag",
											"source": 24,
											"value": "459"
										},
										{
											"begin": 15261,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 15351,
											"end": 15380,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "460"
										},
										{
											"begin": 15373,
											"end": 15379,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 15351,
											"end": 15380,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "243"
										},
										{
											"begin": 15351,
											"end": 15380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 15351,
											"end": 15380,
											"name": "tag",
											"source": 24,
											"value": "460"
										},
										{
											"begin": 15351,
											"end": 15380,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 15346,
											"end": 15349,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 15342,
											"end": 15381,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 15335,
											"end": 15381,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 15335,
											"end": 15381,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 15102,
											"end": 15387,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 15010,
											"end": 15387,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 15010,
											"end": 15387,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 15010,
											"end": 15387,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 15010,
											"end": 15387,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 15010,
											"end": 15387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 15393,
											"end": 16170,
											"name": "tag",
											"source": 24,
											"value": "172"
										},
										{
											"begin": 15393,
											"end": 16170,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 15631,
											"end": 15635,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 15669,
											"end": 15672,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 15658,
											"end": 15667,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 15654,
											"end": 15673,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 15646,
											"end": 15673,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 15646,
											"end": 15673,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 15683,
											"end": 15768,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "462"
										},
										{
											"begin": 15765,
											"end": 15766,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 15754,
											"end": 15763,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 15750,
											"end": 15767,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 15741,
											"end": 15747,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 15683,
											"end": 15768,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "266"
										},
										{
											"begin": 15683,
											"end": 15768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 15683,
											"end": 15768,
											"name": "tag",
											"source": 24,
											"value": "462"
										},
										{
											"begin": 15683,
											"end": 15768,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 15778,
											"end": 15857,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "463"
										},
										{
											"begin": 15853,
											"end": 15855,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 15842,
											"end": 15851,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 15838,
											"end": 15856,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 15829,
											"end": 15835,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 15778,
											"end": 15857,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "270"
										},
										{
											"begin": 15778,
											"end": 15857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 15778,
											"end": 15857,
											"name": "tag",
											"source": 24,
											"value": "463"
										},
										{
											"begin": 15778,
											"end": 15857,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 15904,
											"end": 15913,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 15898,
											"end": 15902,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 15889,
											"end": 15891,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 15878,
											"end": 15887,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 15867,
											"end": 15915,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 15932,
											"end": 16010,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "464"
										},
										{
											"begin": 16005,
											"end": 16009,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 15996,
											"end": 16002,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 15932,
											"end": 16010,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "272"
										},
										{
											"begin": 15932,
											"end": 16010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 15932,
											"end": 16010,
											"name": "tag",
											"source": 24,
											"value": "464"
										},
										{
											"begin": 15932,
											"end": 16010,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 15924,
											"end": 16010,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 15924,
											"end": 16010,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 16057,
											"end": 16066,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 16051,
											"end": 16055,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 16047,
											"end": 16067,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 16042,
											"end": 16044,
											"name": "PUSH",
											"source": 24,
											"value": "60"
										},
										{
											"begin": 16031,
											"end": 16040,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 16027,
											"end": 16045,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 16020,
											"end": 16068,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 16085,
											"end": 16163,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "465"
										},
										{
											"begin": 16158,
											"end": 16162,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 16149,
											"end": 16155,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 16085,
											"end": 16163,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "272"
										},
										{
											"begin": 16085,
											"end": 16163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 16085,
											"end": 16163,
											"name": "tag",
											"source": 24,
											"value": "465"
										},
										{
											"begin": 16085,
											"end": 16163,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 16077,
											"end": 16163,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 16077,
											"end": 16163,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 15393,
											"end": 16170,
											"name": "SWAP6",
											"source": 24
										},
										{
											"begin": 15393,
											"end": 16170,
											"name": "SWAP5",
											"source": 24
										},
										{
											"begin": 15393,
											"end": 16170,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 15393,
											"end": 16170,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 15393,
											"end": 16170,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 15393,
											"end": 16170,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 15393,
											"end": 16170,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 15393,
											"end": 16170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 16176,
											"end": 16324,
											"name": "tag",
											"source": 24,
											"value": "273"
										},
										{
											"begin": 16176,
											"end": 16324,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 16278,
											"end": 16289,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 16315,
											"end": 16318,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 16300,
											"end": 16318,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 16300,
											"end": 16318,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 16176,
											"end": 16324,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 16176,
											"end": 16324,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 16176,
											"end": 16324,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 16176,
											"end": 16324,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 16176,
											"end": 16324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 16330,
											"end": 16503,
											"name": "tag",
											"source": 24,
											"value": "274"
										},
										{
											"begin": 16330,
											"end": 16503,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 16470,
											"end": 16495,
											"name": "PUSH",
											"source": 24,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 16466,
											"end": 16467,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 16458,
											"end": 16464,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 16454,
											"end": 16468,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 16447,
											"end": 16496,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 16330,
											"end": 16503,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 16330,
											"end": 16503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 16509,
											"end": 16911,
											"name": "tag",
											"source": 24,
											"value": "275"
										},
										{
											"begin": 16509,
											"end": 16911,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 16669,
											"end": 16672,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 16690,
											"end": 16775,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "469"
										},
										{
											"begin": 16772,
											"end": 16774,
											"name": "PUSH",
											"source": 24,
											"value": "17"
										},
										{
											"begin": 16767,
											"end": 16770,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 16690,
											"end": 16775,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "273"
										},
										{
											"begin": 16690,
											"end": 16775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 16690,
											"end": 16775,
											"name": "tag",
											"source": 24,
											"value": "469"
										},
										{
											"begin": 16690,
											"end": 16775,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 16683,
											"end": 16775,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 16683,
											"end": 16775,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 16784,
											"end": 16877,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "470"
										},
										{
											"begin": 16873,
											"end": 16876,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 16784,
											"end": 16877,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "274"
										},
										{
											"begin": 16784,
											"end": 16877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 16784,
											"end": 16877,
											"name": "tag",
											"source": 24,
											"value": "470"
										},
										{
											"begin": 16784,
											"end": 16877,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 16902,
											"end": 16904,
											"name": "PUSH",
											"source": 24,
											"value": "17"
										},
										{
											"begin": 16897,
											"end": 16900,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 16893,
											"end": 16905,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 16886,
											"end": 16905,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 16886,
											"end": 16905,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 16509,
											"end": 16911,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 16509,
											"end": 16911,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 16509,
											"end": 16911,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 16509,
											"end": 16911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 16917,
											"end": 17307,
											"name": "tag",
											"source": 24,
											"value": "276"
										},
										{
											"begin": 16917,
											"end": 17307,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 17023,
											"end": 17026,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 17051,
											"end": 17090,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "472"
										},
										{
											"begin": 17084,
											"end": 17089,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 17051,
											"end": 17090,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "271"
										},
										{
											"begin": 17051,
											"end": 17090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 17051,
											"end": 17090,
											"name": "tag",
											"source": 24,
											"value": "472"
										},
										{
											"begin": 17051,
											"end": 17090,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 17106,
											"end": 17195,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "473"
										},
										{
											"begin": 17188,
											"end": 17194,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 17183,
											"end": 17186,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 17106,
											"end": 17195,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "273"
										},
										{
											"begin": 17106,
											"end": 17195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 17106,
											"end": 17195,
											"name": "tag",
											"source": 24,
											"value": "473"
										},
										{
											"begin": 17106,
											"end": 17195,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 17099,
											"end": 17195,
											"name": "SWAP4",
											"source": 24
										},
										{
											"begin": 17099,
											"end": 17195,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 17204,
											"end": 17269,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "474"
										},
										{
											"begin": 17262,
											"end": 17268,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 17257,
											"end": 17260,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 17250,
											"end": 17254,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 17243,
											"end": 17248,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 17239,
											"end": 17255,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 17204,
											"end": 17269,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "260"
										},
										{
											"begin": 17204,
											"end": 17269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 17204,
											"end": 17269,
											"name": "tag",
											"source": 24,
											"value": "474"
										},
										{
											"begin": 17204,
											"end": 17269,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 17294,
											"end": 17300,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 17289,
											"end": 17292,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 17285,
											"end": 17301,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 17278,
											"end": 17301,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 17278,
											"end": 17301,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 17027,
											"end": 17307,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 16917,
											"end": 17307,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 16917,
											"end": 17307,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 16917,
											"end": 17307,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 16917,
											"end": 17307,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 16917,
											"end": 17307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 17313,
											"end": 17480,
											"name": "tag",
											"source": 24,
											"value": "277"
										},
										{
											"begin": 17313,
											"end": 17480,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 17453,
											"end": 17472,
											"name": "PUSH",
											"source": 24,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 17449,
											"end": 17450,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 17441,
											"end": 17447,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 17437,
											"end": 17451,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 17430,
											"end": 17473,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 17313,
											"end": 17480,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 17313,
											"end": 17480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 17486,
											"end": 17888,
											"name": "tag",
											"source": 24,
											"value": "278"
										},
										{
											"begin": 17486,
											"end": 17888,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 17646,
											"end": 17649,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 17667,
											"end": 17752,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "477"
										},
										{
											"begin": 17749,
											"end": 17751,
											"name": "PUSH",
											"source": 24,
											"value": "11"
										},
										{
											"begin": 17744,
											"end": 17747,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 17667,
											"end": 17752,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "273"
										},
										{
											"begin": 17667,
											"end": 17752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 17667,
											"end": 17752,
											"name": "tag",
											"source": 24,
											"value": "477"
										},
										{
											"begin": 17667,
											"end": 17752,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 17660,
											"end": 17752,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 17660,
											"end": 17752,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 17761,
											"end": 17854,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "478"
										},
										{
											"begin": 17850,
											"end": 17853,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 17761,
											"end": 17854,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "277"
										},
										{
											"begin": 17761,
											"end": 17854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 17761,
											"end": 17854,
											"name": "tag",
											"source": 24,
											"value": "478"
										},
										{
											"begin": 17761,
											"end": 17854,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 17879,
											"end": 17881,
											"name": "PUSH",
											"source": 24,
											"value": "11"
										},
										{
											"begin": 17874,
											"end": 17877,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 17870,
											"end": 17882,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 17863,
											"end": 17882,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 17863,
											"end": 17882,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 17486,
											"end": 17888,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 17486,
											"end": 17888,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 17486,
											"end": 17888,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 17486,
											"end": 17888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 17894,
											"end": 18861,
											"name": "tag",
											"source": 24,
											"value": "189"
										},
										{
											"begin": 17894,
											"end": 18861,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 18276,
											"end": 18279,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 18298,
											"end": 18446,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "480"
										},
										{
											"begin": 18442,
											"end": 18445,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 18298,
											"end": 18446,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "275"
										},
										{
											"begin": 18298,
											"end": 18446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 18298,
											"end": 18446,
											"name": "tag",
											"source": 24,
											"value": "480"
										},
										{
											"begin": 18298,
											"end": 18446,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 18291,
											"end": 18446,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 18291,
											"end": 18446,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 18463,
											"end": 18558,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "481"
										},
										{
											"begin": 18554,
											"end": 18557,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 18545,
											"end": 18551,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 18463,
											"end": 18558,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "276"
										},
										{
											"begin": 18463,
											"end": 18558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 18463,
											"end": 18558,
											"name": "tag",
											"source": 24,
											"value": "481"
										},
										{
											"begin": 18463,
											"end": 18558,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 18456,
											"end": 18558,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 18456,
											"end": 18558,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 18575,
											"end": 18723,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "482"
										},
										{
											"begin": 18719,
											"end": 18722,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 18575,
											"end": 18723,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "278"
										},
										{
											"begin": 18575,
											"end": 18723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 18575,
											"end": 18723,
											"name": "tag",
											"source": 24,
											"value": "482"
										},
										{
											"begin": 18575,
											"end": 18723,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 18568,
											"end": 18723,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 18568,
											"end": 18723,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 18740,
											"end": 18835,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "483"
										},
										{
											"begin": 18831,
											"end": 18834,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 18822,
											"end": 18828,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 18740,
											"end": 18835,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "276"
										},
										{
											"begin": 18740,
											"end": 18835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 18740,
											"end": 18835,
											"name": "tag",
											"source": 24,
											"value": "483"
										},
										{
											"begin": 18740,
											"end": 18835,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 18733,
											"end": 18835,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 18733,
											"end": 18835,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 18852,
											"end": 18855,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 18845,
											"end": 18855,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 18845,
											"end": 18855,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 17894,
											"end": 18861,
											"name": "SWAP4",
											"source": 24
										},
										{
											"begin": 17894,
											"end": 18861,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 17894,
											"end": 18861,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 17894,
											"end": 18861,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 17894,
											"end": 18861,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 17894,
											"end": 18861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 18867,
											"end": 19180,
											"name": "tag",
											"source": 24,
											"value": "191"
										},
										{
											"begin": 18867,
											"end": 19180,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 18980,
											"end": 18984,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 19018,
											"end": 19020,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 19007,
											"end": 19016,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 19003,
											"end": 19021,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 18995,
											"end": 19021,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 18995,
											"end": 19021,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 19067,
											"end": 19076,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 19061,
											"end": 19065,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 19057,
											"end": 19077,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 19053,
											"end": 19054,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 19042,
											"end": 19051,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 19038,
											"end": 19055,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 19031,
											"end": 19078,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 19095,
											"end": 19173,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "485"
										},
										{
											"begin": 19168,
											"end": 19172,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 19159,
											"end": 19165,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 19095,
											"end": 19173,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "272"
										},
										{
											"begin": 19095,
											"end": 19173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 19095,
											"end": 19173,
											"name": "tag",
											"source": 24,
											"value": "485"
										},
										{
											"begin": 19095,
											"end": 19173,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 19087,
											"end": 19173,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 19087,
											"end": 19173,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 18867,
											"end": 19180,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 18867,
											"end": 19180,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 18867,
											"end": 19180,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 18867,
											"end": 19180,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 18867,
											"end": 19180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 19186,
											"end": 19366,
											"name": "tag",
											"source": 24,
											"value": "279"
										},
										{
											"begin": 19186,
											"end": 19366,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 19234,
											"end": 19311,
											"name": "PUSH",
											"source": 24,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19231,
											"end": 19232,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 19224,
											"end": 19312,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 19331,
											"end": 19335,
											"name": "PUSH",
											"source": 24,
											"value": "11"
										},
										{
											"begin": 19328,
											"end": 19329,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 19321,
											"end": 19336,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 19355,
											"end": 19359,
											"name": "PUSH",
											"source": 24,
											"value": "24"
										},
										{
											"begin": 19352,
											"end": 19353,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 19345,
											"end": 19360,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 19372,
											"end": 19782,
											"name": "tag",
											"source": 24,
											"value": "196"
										},
										{
											"begin": 19372,
											"end": 19782,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 19412,
											"end": 19419,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 19435,
											"end": 19455,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "488"
										},
										{
											"begin": 19453,
											"end": 19454,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 19435,
											"end": 19455,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "238"
										},
										{
											"begin": 19435,
											"end": 19455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 19435,
											"end": 19455,
											"name": "tag",
											"source": 24,
											"value": "488"
										},
										{
											"begin": 19435,
											"end": 19455,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 19430,
											"end": 19455,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 19430,
											"end": 19455,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 19469,
											"end": 19489,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "489"
										},
										{
											"begin": 19487,
											"end": 19488,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 19469,
											"end": 19489,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "238"
										},
										{
											"begin": 19469,
											"end": 19489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 19469,
											"end": 19489,
											"name": "tag",
											"source": 24,
											"value": "489"
										},
										{
											"begin": 19469,
											"end": 19489,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 19464,
											"end": 19489,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 19464,
											"end": 19489,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 19524,
											"end": 19525,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 19521,
											"end": 19522,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 19517,
											"end": 19526,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 19546,
											"end": 19576,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "490"
										},
										{
											"begin": 19564,
											"end": 19575,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 19546,
											"end": 19576,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "238"
										},
										{
											"begin": 19546,
											"end": 19576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 19546,
											"end": 19576,
											"name": "tag",
											"source": 24,
											"value": "490"
										},
										{
											"begin": 19546,
											"end": 19576,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 19535,
											"end": 19576,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 19535,
											"end": 19576,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 19725,
											"end": 19726,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 19716,
											"end": 19723,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 19712,
											"end": 19727,
											"name": "DIV",
											"source": 24
										},
										{
											"begin": 19709,
											"end": 19710,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 19706,
											"end": 19728,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 19686,
											"end": 19687,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 19679,
											"end": 19688,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 19659,
											"end": 19742,
											"name": "OR",
											"source": 24
										},
										{
											"begin": 19636,
											"end": 19775,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "491"
										},
										{
											"begin": 19636,
											"end": 19775,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 19755,
											"end": 19773,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "492"
										},
										{
											"begin": 19755,
											"end": 19773,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "279"
										},
										{
											"begin": 19755,
											"end": 19773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 19755,
											"end": 19773,
											"name": "tag",
											"source": 24,
											"value": "492"
										},
										{
											"begin": 19755,
											"end": 19773,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 19636,
											"end": 19775,
											"name": "tag",
											"source": 24,
											"value": "491"
										},
										{
											"begin": 19636,
											"end": 19775,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 19420,
											"end": 19782,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 19372,
											"end": 19782,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 19372,
											"end": 19782,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 19372,
											"end": 19782,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 19372,
											"end": 19782,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 19372,
											"end": 19782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 19788,
											"end": 19979,
											"name": "tag",
											"source": 24,
											"value": "198"
										},
										{
											"begin": 19788,
											"end": 19979,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 19828,
											"end": 19831,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 19847,
											"end": 19867,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "494"
										},
										{
											"begin": 19865,
											"end": 19866,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 19847,
											"end": 19867,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "238"
										},
										{
											"begin": 19847,
											"end": 19867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 19847,
											"end": 19867,
											"name": "tag",
											"source": 24,
											"value": "494"
										},
										{
											"begin": 19847,
											"end": 19867,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 19842,
											"end": 19867,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 19842,
											"end": 19867,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 19881,
											"end": 19901,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "495"
										},
										{
											"begin": 19899,
											"end": 19900,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 19881,
											"end": 19901,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "238"
										},
										{
											"begin": 19881,
											"end": 19901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 19881,
											"end": 19901,
											"name": "tag",
											"source": 24,
											"value": "495"
										},
										{
											"begin": 19881,
											"end": 19901,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 19876,
											"end": 19901,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 19876,
											"end": 19901,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 19924,
											"end": 19925,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 19921,
											"end": 19922,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 19917,
											"end": 19926,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 19910,
											"end": 19926,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 19910,
											"end": 19926,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 19945,
											"end": 19948,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 19942,
											"end": 19943,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 19939,
											"end": 19949,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 19936,
											"end": 19972,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 19936,
											"end": 19972,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "496"
										},
										{
											"begin": 19936,
											"end": 19972,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 19952,
											"end": 19970,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "497"
										},
										{
											"begin": 19952,
											"end": 19970,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "279"
										},
										{
											"begin": 19952,
											"end": 19970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 19952,
											"end": 19970,
											"name": "tag",
											"source": 24,
											"value": "497"
										},
										{
											"begin": 19952,
											"end": 19970,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 19936,
											"end": 19972,
											"name": "tag",
											"source": 24,
											"value": "496"
										},
										{
											"begin": 19936,
											"end": 19972,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 19788,
											"end": 19979,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 19788,
											"end": 19979,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 19788,
											"end": 19979,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 19788,
											"end": 19979,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 19788,
											"end": 19979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 19985,
											"end": 20165,
											"name": "tag",
											"source": 24,
											"value": "205"
										},
										{
											"begin": 19985,
											"end": 20165,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 20033,
											"end": 20110,
											"name": "PUSH",
											"source": 24,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20030,
											"end": 20031,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 20023,
											"end": 20111,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 20130,
											"end": 20134,
											"name": "PUSH",
											"source": 24,
											"value": "32"
										},
										{
											"begin": 20127,
											"end": 20128,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 20120,
											"end": 20135,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 20154,
											"end": 20158,
											"name": "PUSH",
											"source": 24,
											"value": "24"
										},
										{
											"begin": 20151,
											"end": 20152,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 20144,
											"end": 20159,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 20171,
											"end": 20342,
											"name": "tag",
											"source": 24,
											"value": "218"
										},
										{
											"begin": 20171,
											"end": 20342,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 20210,
											"end": 20213,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 20233,
											"end": 20257,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "500"
										},
										{
											"begin": 20251,
											"end": 20256,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 20233,
											"end": 20257,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "238"
										},
										{
											"begin": 20233,
											"end": 20257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 20233,
											"end": 20257,
											"name": "tag",
											"source": 24,
											"value": "500"
										},
										{
											"begin": 20233,
											"end": 20257,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 20224,
											"end": 20257,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 20224,
											"end": 20257,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 20279,
											"end": 20283,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 20272,
											"end": 20277,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 20269,
											"end": 20284,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 20266,
											"end": 20307,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "501"
										},
										{
											"begin": 20266,
											"end": 20307,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 20287,
											"end": 20305,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "502"
										},
										{
											"begin": 20287,
											"end": 20305,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "279"
										},
										{
											"begin": 20287,
											"end": 20305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 20287,
											"end": 20305,
											"name": "tag",
											"source": 24,
											"value": "502"
										},
										{
											"begin": 20287,
											"end": 20305,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 20266,
											"end": 20307,
											"name": "tag",
											"source": 24,
											"value": "501"
										},
										{
											"begin": 20266,
											"end": 20307,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 20334,
											"end": 20335,
											"name": "PUSH",
											"source": 24,
											"value": "1"
										},
										{
											"begin": 20327,
											"end": 20332,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 20323,
											"end": 20336,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 20316,
											"end": 20336,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 20316,
											"end": 20336,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 20171,
											"end": 20342,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 20171,
											"end": 20342,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 20171,
											"end": 20342,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 20171,
											"end": 20342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 20348,
											"end": 20530,
											"name": "tag",
											"source": 24,
											"value": "280"
										},
										{
											"begin": 20348,
											"end": 20530,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 20488,
											"end": 20522,
											"name": "PUSH",
											"source": 24,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 20484,
											"end": 20485,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 20476,
											"end": 20482,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 20472,
											"end": 20486,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 20465,
											"end": 20523,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 20348,
											"end": 20530,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 20348,
											"end": 20530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 20536,
											"end": 20902,
											"name": "tag",
											"source": 24,
											"value": "281"
										},
										{
											"begin": 20536,
											"end": 20902,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 20678,
											"end": 20681,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 20699,
											"end": 20766,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "505"
										},
										{
											"begin": 20763,
											"end": 20765,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 20758,
											"end": 20761,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 20699,
											"end": 20766,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "253"
										},
										{
											"begin": 20699,
											"end": 20766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 20699,
											"end": 20766,
											"name": "tag",
											"source": 24,
											"value": "505"
										},
										{
											"begin": 20699,
											"end": 20766,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 20692,
											"end": 20766,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 20692,
											"end": 20766,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 20775,
											"end": 20868,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "506"
										},
										{
											"begin": 20864,
											"end": 20867,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 20775,
											"end": 20868,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "280"
										},
										{
											"begin": 20775,
											"end": 20868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 20775,
											"end": 20868,
											"name": "tag",
											"source": 24,
											"value": "506"
										},
										{
											"begin": 20775,
											"end": 20868,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 20893,
											"end": 20895,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 20888,
											"end": 20891,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 20884,
											"end": 20896,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 20877,
											"end": 20896,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 20877,
											"end": 20896,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 20536,
											"end": 20902,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 20536,
											"end": 20902,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 20536,
											"end": 20902,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 20536,
											"end": 20902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 20908,
											"end": 21327,
											"name": "tag",
											"source": 24,
											"value": "221"
										},
										{
											"begin": 20908,
											"end": 21327,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 21074,
											"end": 21078,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 21112,
											"end": 21114,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 21101,
											"end": 21110,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 21097,
											"end": 21115,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 21089,
											"end": 21115,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 21089,
											"end": 21115,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 21161,
											"end": 21170,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 21155,
											"end": 21159,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 21151,
											"end": 21171,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 21147,
											"end": 21148,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 21136,
											"end": 21145,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 21132,
											"end": 21149,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 21125,
											"end": 21172,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 21189,
											"end": 21320,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "508"
										},
										{
											"begin": 21315,
											"end": 21319,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 21189,
											"end": 21320,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "281"
										},
										{
											"begin": 21189,
											"end": 21320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 21189,
											"end": 21320,
											"name": "tag",
											"source": 24,
											"value": "508"
										},
										{
											"begin": 21189,
											"end": 21320,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 21181,
											"end": 21320,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 21181,
											"end": 21320,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 20908,
											"end": 21327,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 20908,
											"end": 21327,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 20908,
											"end": 21327,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 20908,
											"end": 21327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC777/IERC777.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
								"contracts/BurnMintSuperToken.sol",
								"contracts/base/SuperTokenBase.sol",
								"contracts/base/SuperTokenStorage.sol",
								"contracts/base/UUPSProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BURNER_ROLE()": "282c51f3",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"burn(uint256,bytes)": "fe9d9303",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"initialize(address,string,string,uint256,address,bytes)": "a6a05598",
							"initializeProxy(address)": "4a0687ef",
							"mint(address,uint256,bytes)": "94d008ef",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Initialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAddress\",\"type\":\"address\"}],\"name\":\"initializeProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"jtriley.eth\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"burn(uint256,bytes)\":{\"params\":{\"amount\":\"Amount to burn\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,string,string,uint256,address,bytes)\":{\"details\":\"We MUST mint here, there is no other way to mint tokens\",\"params\":{\"factory\":\"Super Token factory for initialization\",\"initialSupply\":\"Initial token supply to pre-mint\",\"name\":\"Name of Super Token\",\"receiver\":\"Receiver of pre-mint\",\"symbol\":\"Symbol of Super Token\",\"userData\":\"Arbitrary user data for pre-mint\"}},\"initializeProxy(address)\":{\"details\":\"Called by the SuperTokenFactory contract on upgrade\",\"params\":{\"initialAddress\":\"logic contract address\"}},\"mint(address,uint256,bytes)\":{\"params\":{\"amount\":\"Amount to mint\",\"receiver\":\"Receiver of minted tokens\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"Burnable and Mintable Pure Super Token\",\"version\":1},\"userdoc\":{\"errors\":{\"Initialized()\":[{\"notice\":\"Thrown when the logic contract has been set\"}],\"ZeroAddress()\":[{\"notice\":\"Thrown when the logic contract address is zero\"}]},\"kind\":\"user\",\"methods\":{\"BURNER_ROLE()\":{\"notice\":\"Burner Role\"},\"MINTER_ROLE()\":{\"notice\":\"Minter Role\"},\"burn(uint256,bytes)\":{\"notice\":\"Burns from message sender\"},\"initialize(address,string,string,uint256,address,bytes)\":{\"notice\":\"Initializer, used AFTER factory upgrade\"},\"initializeProxy(address)\":{\"notice\":\"Stores the logic contract address only once.\"},\"mint(address,uint256,bytes)\":{\"notice\":\"Mints tokens, only the owner may do this\"}},\"notice\":\"This does not perform checks when burning\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BurnMintSuperToken.sol\":\"BurnMintSuperToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x6cc4b0724d977190c7441dfc3be6c6e48b43b555c3370af32ef5b6600f15f53f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3e89c944642772a42429f21a11017b57deb98a9198f8e4f8749f00aaee71299e\",\"dweb:/ipfs/QmaSv9GvqikcGHJ3tcwATDHSpQw6mfnHPDtcfqcZSS7LF6\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0x2ccec11f964b165f64e453192793991bf28e1054069b6f709a39849a8286aeb4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://edbaf6db0b9c6803dcdb7c91a2ddbdba503a41ecc5cecf9c27a43643669bfff1\",\"dweb:/ipfs/QmYpf7XFKrnB2ZAPf8cDqfvZDfyoxMHA1x2FQSYzDFE3KZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x316aa6cd16167569d5ee47fb2e4673b1def2117c7ea56969290ab6aec97cd263\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a5eb13acce613a227c2c2b3da2b88ad6361c9e541ca59ccee0bb5cf42cffccc6\",\"dweb:/ipfs/QmceA9RWHL1BWk4cPnYY55FjAdsEi1LfXrC11RbF8Wb8eW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64\",\"dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229\",\"dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]},\"contracts/BurnMintSuperToken.sol\":{\"keccak256\":\"0x7787b64e97d31d157e4aab8b422f0ea202b4648bb2bc2419e59df419d487668a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://825f21931d504896da526b1c1d2afc68914ab02ab1133c5121cbf1b172c9cc99\",\"dweb:/ipfs/QmdmCPKzwTirs5BwSsdgSjF4fHYd4AUiRbT4qAVCWN385D\"]},\"contracts/base/SuperTokenBase.sol\":{\"keccak256\":\"0x20ad0c53399cd71f9e2af49c7f2f99a423bacdf7da4c64dfa65e5aca40dac571\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://1c6ab8fe1ae02242871cf5d805fbd8b753f5a1df9515658802cdea7b44c3914c\",\"dweb:/ipfs/QmfWFs8zVLnpDMZBRQTTLgmT9VdSmEchZhR2SoAzrdygzq\"]},\"contracts/base/SuperTokenStorage.sol\":{\"keccak256\":\"0x8e08c8b78f0e7fbdbcd378bf2fa2d518deba7d9591d20a9457571fceb9f95687\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5f0323df5e91e7fafd940ea9a8f808c61b5cd6f30974d6d071b25b350ce1ef26\",\"dweb:/ipfs/Qmd5qFWZsW8NGuswNJW3dLkiktNu1MymbZ26VjVRypy3A8\"]},\"contracts/base/UUPSProxy.sol\":{\"keccak256\":\"0xd3e51b5fc04238364c4ed9068e31e88bd44e20546089e4fb76422ea1c2eac1ca\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://041548f8c5c4bf62fcf02677272196f953f320774ff784a7a93351e4c45956aa\",\"dweb:/ipfs/QmPvKxXbCFrWcHnwbTbSdEa96j4No8DHeuzXG1ftKPHwf1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4159,
								"contract": "contracts/BurnMintSuperToken.sol:BurnMintSuperToken",
								"label": "_storagePaddings",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_uint256)32_storage"
							},
							{
								"astId": 24,
								"contract": "contracts/BurnMintSuperToken.sol:BurnMintSuperToken",
								"label": "_roles",
								"offset": 0,
								"slot": "32",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)32_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[32]",
								"numberOfBytes": "1024"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "contracts/BurnMintSuperToken.sol:BurnMintSuperToken",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "contracts/BurnMintSuperToken.sol:BurnMintSuperToken",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"Initialized()": [
								{
									"notice": "Thrown when the logic contract has been set"
								}
							],
							"ZeroAddress()": [
								{
									"notice": "Thrown when the logic contract address is zero"
								}
							]
						},
						"kind": "user",
						"methods": {
							"BURNER_ROLE()": {
								"notice": "Burner Role"
							},
							"MINTER_ROLE()": {
								"notice": "Minter Role"
							},
							"burn(uint256,bytes)": {
								"notice": "Burns from message sender"
							},
							"initialize(address,string,string,uint256,address,bytes)": {
								"notice": "Initializer, used AFTER factory upgrade"
							},
							"initializeProxy(address)": {
								"notice": "Stores the logic contract address only once."
							},
							"mint(address,uint256,bytes)": {
								"notice": "Mints tokens, only the owner may do this"
							}
						},
						"notice": "This does not perform checks when burning",
						"version": 1
					}
				}
			},
			"contracts/base/SuperTokenBase.sol": {
				"SuperTokenBase": {
					"abi": [
						{
							"inputs": [],
							"name": "Initialized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialAddress",
									"type": "address"
								}
							],
							"name": "initializeProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"author": "jtriley.eth",
						"details": "The initial supply may be zero, in the event the token is mintable. Inheriting contracts MUST have an initializer calling this function!",
						"kind": "dev",
						"methods": {
							"initializeProxy(address)": {
								"details": "Called by the SuperTokenFactory contract on upgrade",
								"params": {
									"initialAddress": "logic contract address"
								}
							}
						},
						"title": "Abstract contract containing a thin layer of abstraction for aux logic.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"initializeProxy(address)": "4a0687ef"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Initialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAddress\",\"type\":\"address\"}],\"name\":\"initializeProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"jtriley.eth\",\"details\":\"The initial supply may be zero, in the event the token is mintable. Inheriting contracts MUST have an initializer calling this function!\",\"kind\":\"dev\",\"methods\":{\"initializeProxy(address)\":{\"details\":\"Called by the SuperTokenFactory contract on upgrade\",\"params\":{\"initialAddress\":\"logic contract address\"}}},\"title\":\"Abstract contract containing a thin layer of abstraction for aux logic.\",\"version\":1},\"userdoc\":{\"errors\":{\"Initialized()\":[{\"notice\":\"Thrown when the logic contract has been set\"}],\"ZeroAddress()\":[{\"notice\":\"Thrown when the logic contract address is zero\"}]},\"kind\":\"user\",\"methods\":{\"initializeProxy(address)\":{\"notice\":\"Stores the logic contract address only once.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/SuperTokenBase.sol\":\"SuperTokenBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x6cc4b0724d977190c7441dfc3be6c6e48b43b555c3370af32ef5b6600f15f53f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3e89c944642772a42429f21a11017b57deb98a9198f8e4f8749f00aaee71299e\",\"dweb:/ipfs/QmaSv9GvqikcGHJ3tcwATDHSpQw6mfnHPDtcfqcZSS7LF6\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0x2ccec11f964b165f64e453192793991bf28e1054069b6f709a39849a8286aeb4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://edbaf6db0b9c6803dcdb7c91a2ddbdba503a41ecc5cecf9c27a43643669bfff1\",\"dweb:/ipfs/QmYpf7XFKrnB2ZAPf8cDqfvZDfyoxMHA1x2FQSYzDFE3KZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x316aa6cd16167569d5ee47fb2e4673b1def2117c7ea56969290ab6aec97cd263\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a5eb13acce613a227c2c2b3da2b88ad6361c9e541ca59ccee0bb5cf42cffccc6\",\"dweb:/ipfs/QmceA9RWHL1BWk4cPnYY55FjAdsEi1LfXrC11RbF8Wb8eW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64\",\"dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229\",\"dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]},\"contracts/base/SuperTokenBase.sol\":{\"keccak256\":\"0x20ad0c53399cd71f9e2af49c7f2f99a423bacdf7da4c64dfa65e5aca40dac571\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://1c6ab8fe1ae02242871cf5d805fbd8b753f5a1df9515658802cdea7b44c3914c\",\"dweb:/ipfs/QmfWFs8zVLnpDMZBRQTTLgmT9VdSmEchZhR2SoAzrdygzq\"]},\"contracts/base/SuperTokenStorage.sol\":{\"keccak256\":\"0x8e08c8b78f0e7fbdbcd378bf2fa2d518deba7d9591d20a9457571fceb9f95687\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5f0323df5e91e7fafd940ea9a8f808c61b5cd6f30974d6d071b25b350ce1ef26\",\"dweb:/ipfs/Qmd5qFWZsW8NGuswNJW3dLkiktNu1MymbZ26VjVRypy3A8\"]},\"contracts/base/UUPSProxy.sol\":{\"keccak256\":\"0xd3e51b5fc04238364c4ed9068e31e88bd44e20546089e4fb76422ea1c2eac1ca\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://041548f8c5c4bf62fcf02677272196f953f320774ff784a7a93351e4c45956aa\",\"dweb:/ipfs/QmPvKxXbCFrWcHnwbTbSdEa96j4No8DHeuzXG1ftKPHwf1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4159,
								"contract": "contracts/base/SuperTokenBase.sol:SuperTokenBase",
								"label": "_storagePaddings",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_uint256)32_storage"
							}
						],
						"types": {
							"t_array(t_uint256)32_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[32]",
								"numberOfBytes": "1024"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"Initialized()": [
								{
									"notice": "Thrown when the logic contract has been set"
								}
							],
							"ZeroAddress()": [
								{
									"notice": "Thrown when the logic contract address is zero"
								}
							]
						},
						"kind": "user",
						"methods": {
							"initializeProxy(address)": {
								"notice": "Stores the logic contract address only once."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/base/SuperTokenStorage.sol": {
				"SuperTokenStorage": {
					"abi": [],
					"devdoc": {
						"author": "Superfluid",
						"details": "MUST be the FIRST contract inherited to pad the first 32 slots. The slots are padded to ensure the implementation contract (SuperToken.sol) does not override any auxiliary state variables. For more info see `./docs/StorageLayout.md`.",
						"kind": "dev",
						"methods": {},
						"title": "Abstract Storage Contract to pad the first 32 slots of storage",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"MUST be the FIRST contract inherited to pad the first 32 slots. The slots are padded to ensure the implementation contract (SuperToken.sol) does not override any auxiliary state variables. For more info see `./docs/StorageLayout.md`.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Abstract Storage Contract to pad the first 32 slots of storage\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/SuperTokenStorage.sol\":\"SuperTokenStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/base/SuperTokenStorage.sol\":{\"keccak256\":\"0x8e08c8b78f0e7fbdbcd378bf2fa2d518deba7d9591d20a9457571fceb9f95687\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5f0323df5e91e7fafd940ea9a8f808c61b5cd6f30974d6d071b25b350ce1ef26\",\"dweb:/ipfs/Qmd5qFWZsW8NGuswNJW3dLkiktNu1MymbZ26VjVRypy3A8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4159,
								"contract": "contracts/base/SuperTokenStorage.sol:SuperTokenStorage",
								"label": "_storagePaddings",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_uint256)32_storage"
							}
						],
						"types": {
							"t_array(t_uint256)32_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[32]",
								"numberOfBytes": "1024"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/base/UUPSProxy.sol": {
				"UUPSProxy": {
					"abi": [
						{
							"inputs": [],
							"name": "Initialized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialAddress",
									"type": "address"
								}
							],
							"name": "initializeProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"author": "jtriley.eth",
						"details": "`initializeProxy(address)` is called by the Super Token Factory The call to the factory should be in the same transaction to avoid being front run",
						"kind": "dev",
						"methods": {
							"initializeProxy(address)": {
								"details": "Called by the SuperTokenFactory contract on upgrade",
								"params": {
									"initialAddress": "logic contract address"
								}
							}
						},
						"title": "UUPS Proxy implementation contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/base/UUPSProxy.sol\":434:1549  contract UUPSProxy is Proxy {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/base/UUPSProxy.sol\":434:1549  contract UUPSProxy is Proxy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4a0687ef\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2898:2909  _fallback() */\n      tag_6\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2898:2907  _fallback */\n      tag_7\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2898:2909  _fallback() */\n      jump\t// in\n    tag_6:\n        /* \"contracts/base/UUPSProxy.sol\":434:1549  contract UUPSProxy is Proxy {... */\n      stop\n    tag_2:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2675:2686  _fallback() */\n      tag_10\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2675:2684  _fallback */\n      tag_7\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2675:2686  _fallback() */\n      jump\t// in\n    tag_10:\n        /* \"contracts/base/UUPSProxy.sol\":434:1549  contract UUPSProxy is Proxy {... */\n      stop\n        /* \"contracts/base/UUPSProxy.sol\":1049:1295  function initializeProxy(address initialAddress) external {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2370:2387  _beforeFallback() */\n      tag_17\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2370:2385  _beforeFallback */\n      tag_18\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2370:2387  _beforeFallback() */\n      jump\t// in\n    tag_17:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      tag_19\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2407:2424  _implementation() */\n      tag_20\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2407:2422  _implementation */\n      tag_21\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2407:2424  _implementation() */\n      jump\t// in\n    tag_20:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2397:2406  _delegate */\n      tag_22\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      jump\t// in\n    tag_19:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"contracts/base/UUPSProxy.sol\":1049:1295  function initializeProxy(address initialAddress) external {... */\n    tag_15:\n        /* \"contracts/base/UUPSProxy.sol\":1141:1142  0 */\n      0x00\n        /* \"contracts/base/UUPSProxy.sol\":1115:1143  initialAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/base/UUPSProxy.sol\":1115:1129  initialAddress */\n      dup2\n        /* \"contracts/base/UUPSProxy.sol\":1115:1143  initialAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/base/UUPSProxy.sol\":1111:1165  if (initialAddress == address(0)) revert ZeroAddress() */\n      tag_24\n      jumpi\n        /* \"contracts/base/UUPSProxy.sol\":1152:1165  ZeroAddress() */\n      mload(0x40)\n      0xd92e233d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/base/UUPSProxy.sol\":1111:1165  if (initialAddress == address(0)) revert ZeroAddress() */\n    tag_24:\n        /* \"contracts/base/UUPSProxy.sol\":1202:1203  0 */\n      0x00\n        /* \"contracts/base/UUPSProxy.sol\":1173:1204  _implementation() != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/base/UUPSProxy.sol\":1173:1190  _implementation() */\n      tag_25\n        /* \"contracts/base/UUPSProxy.sol\":1173:1188  _implementation */\n      tag_21\n        /* \"contracts/base/UUPSProxy.sol\":1173:1190  _implementation() */\n      jump\t// in\n    tag_25:\n        /* \"contracts/base/UUPSProxy.sol\":1173:1204  _implementation() != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/base/UUPSProxy.sol\":1169:1226  if (_implementation() != address(0)) revert Initialized() */\n      tag_26\n      jumpi\n        /* \"contracts/base/UUPSProxy.sol\":1213:1226  Initialized() */\n      mload(0x40)\n      0x5daa87a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/base/UUPSProxy.sol\":1169:1226  if (_implementation() != address(0)) revert Initialized() */\n    tag_26:\n        /* \"contracts/base/UUPSProxy.sol\":1273:1287  initialAddress */\n      dup1\n        /* \"contracts/base/UUPSProxy.sol\":1251:1271  _IMPLEMENTATION_SLOT */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/base/UUPSProxy.sol\":1244:1288  sstore(_IMPLEMENTATION_SLOT, initialAddress) */\n      sstore\n        /* \"contracts/base/UUPSProxy.sol\":1049:1295  function initializeProxy(address initialAddress) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":3198:3244  function _beforeFallback() internal virtual {} */\n    tag_18:\n      jump\t// out\n        /* \"contracts/base/UUPSProxy.sol\":1395:1547  function _implementation()... */\n    tag_21:\n        /* \"contracts/base/UUPSProxy.sol\":1472:1484  address impl */\n      0x00\n        /* \"contracts/base/UUPSProxy.sol\":1519:1539  _IMPLEMENTATION_SLOT */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/base/UUPSProxy.sol\":1513:1540  sload(_IMPLEMENTATION_SLOT) */\n      sload\n        /* \"contracts/base/UUPSProxy.sol\":1505:1540  impl := sload(_IMPLEMENTATION_SLOT) */\n      swap1\n      pop\n        /* \"contracts/base/UUPSProxy.sol\":1395:1547  function _implementation()... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":948:1843  function _delegate(address implementation) internal virtual {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1286:1300  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1283:1284  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1280:1281  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1267:1301  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1500:1501  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1497:1498  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1481:1495  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1478:1479  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1462:1476  implementation */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1455:1460  gas() */\n      gas\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1442:1502  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1576:1592  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1573:1574  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1570:1571  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1555:1593  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1614:1620  result */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1686:1687  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1681:1747  case 0 {... */\n      dup2\n      eq\n      tag_31\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1796:1812  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1793:1794  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1786:1813  return(0, returndatasize()) */\n      return\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1681:1747  case 0 {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1716:1732  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1713:1714  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1706:1733  revert(0, returndatasize()) */\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_33:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_35:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_36:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_45\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_35\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_37:\n        /* \"#utility.yul\":641:665   */\n      tag_47\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_36\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_48\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_48:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_38:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_50\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_37\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_14:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_53\n      tag_33\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":917:1036   */\n    tag_52:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_54\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_38\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122080a137255c6ffc8a4d4838fe8a7bcf014ae8796438aec993b2aaa206ce78697964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061028e806100206000396000f3fe6080604052600436106100225760003560e01c80634a0687ef1461003b57610031565b366100315761002f610064565b005b610039610064565b005b34801561004757600080fd5b50610062600480360381019061005d919061022b565b61007e565b005b61006c610177565b61007c610077610179565b6101a2565b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100e4576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16610104610179565b73ffffffffffffffffffffffffffffffffffffffff1614610151576040517f5daa87a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5550565b565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54905090565b3660008037600080366000845af43d6000803e80600081146101c3573d6000f35b3d6000fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f8826101cd565b9050919050565b610208816101ed565b811461021357600080fd5b50565b600081359050610225816101ff565b92915050565b600060208284031215610241576102406101c8565b5b600061024f84828501610216565b9150509291505056fea264697066735822122080a137255c6ffc8a4d4838fe8a7bcf014ae8796438aec993b2aaa206ce78697964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4A0687EF EQ PUSH2 0x3B JUMPI PUSH2 0x31 JUMP JUMPDEST CALLDATASIZE PUSH2 0x31 JUMPI PUSH2 0x2F PUSH2 0x64 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39 PUSH2 0x64 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D SWAP2 SWAP1 PUSH2 0x22B JUMP JUMPDEST PUSH2 0x7E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6C PUSH2 0x177 JUMP JUMPDEST PUSH2 0x7C PUSH2 0x77 PUSH2 0x179 JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x104 PUSH2 0x179 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x151 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5DAA87A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C3 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8 DUP3 PUSH2 0x1CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x208 DUP2 PUSH2 0x1ED JUMP JUMPDEST DUP2 EQ PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x225 DUP2 PUSH2 0x1FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x241 JUMPI PUSH2 0x240 PUSH2 0x1C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24F DUP5 DUP3 DUP6 ADD PUSH2 0x216 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 LOG1 CALLDATACOPY 0x25 0x5C PUSH16 0xFC8A4D4838FE8A7BCF014AE8796438AE 0xC9 SWAP4 0xB2 0xAA LOG2 MOD 0xCE PUSH25 0x697964736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "434:1115:23:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_434": {
									"entryPoint": null,
									"id": 434,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_beforeFallback_439": {
									"entryPoint": 375,
									"id": 439,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_399": {
									"entryPoint": 418,
									"id": 399,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_418": {
									"entryPoint": 100,
									"id": 418,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_implementation_4215": {
									"entryPoint": 377,
									"id": 4215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initializeProxy_4206": {
									"entryPoint": 126,
									"id": 4206,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 456,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1173:24",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:24",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:24"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:24"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:24",
														"type": ""
													}
												],
												"src": "7:75:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:24",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:24"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:24",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:24"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:24",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:24",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:24"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:24"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:24",
														"type": ""
													}
												],
												"src": "334:126:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:24",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:24"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:24"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:24"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:24",
														"type": ""
													}
												],
												"src": "466:96:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:24"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:24"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:24"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:24"
															},
															"nodeType": "YulIf",
															"src": "621:63:24"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:24",
														"type": ""
													}
												],
												"src": "568:122:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:24",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:24"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:24"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:24"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:24"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:24",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:24",
														"type": ""
													}
												],
												"src": "696:139:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:24"
															},
															"nodeType": "YulIf",
															"src": "917:119:24"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:24",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:24",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:24",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:24",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:24",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:24"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:24"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:24"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:24"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:24"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:24",
														"type": ""
													}
												],
												"src": "841:329:24"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 24,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100225760003560e01c80634a0687ef1461003b57610031565b366100315761002f610064565b005b610039610064565b005b34801561004757600080fd5b50610062600480360381019061005d919061022b565b61007e565b005b61006c610177565b61007c610077610179565b6101a2565b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100e4576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16610104610179565b73ffffffffffffffffffffffffffffffffffffffff1614610151576040517f5daa87a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5550565b565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54905090565b3660008037600080366000845af43d6000803e80600081146101c3573d6000f35b3d6000fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f8826101cd565b9050919050565b610208816101ed565b811461021357600080fd5b50565b600081359050610225816101ff565b92915050565b600060208284031215610241576102406101c8565b5b600061024f84828501610216565b9150509291505056fea264697066735822122080a137255c6ffc8a4d4838fe8a7bcf014ae8796438aec993b2aaa206ce78697964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4A0687EF EQ PUSH2 0x3B JUMPI PUSH2 0x31 JUMP JUMPDEST CALLDATASIZE PUSH2 0x31 JUMPI PUSH2 0x2F PUSH2 0x64 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39 PUSH2 0x64 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D SWAP2 SWAP1 PUSH2 0x22B JUMP JUMPDEST PUSH2 0x7E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6C PUSH2 0x177 JUMP JUMPDEST PUSH2 0x7C PUSH2 0x77 PUSH2 0x179 JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x104 PUSH2 0x179 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x151 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5DAA87A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C3 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8 DUP3 PUSH2 0x1CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x208 DUP2 PUSH2 0x1ED JUMP JUMPDEST DUP2 EQ PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x225 DUP2 PUSH2 0x1FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x241 JUMPI PUSH2 0x240 PUSH2 0x1C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24F DUP5 DUP3 DUP6 ADD PUSH2 0x216 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 LOG1 CALLDATACOPY 0x25 0x5C PUSH16 0xFC8A4D4838FE8A7BCF014AE8796438AE 0xC9 SWAP4 0xB2 0xAA LOG2 MOD 0xCE PUSH25 0x697964736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "434:1115:23:-:0;;;;;;;;;;;;;;;;;;;;;;;2898:11:2;:9;:11::i;:::-;434:1115:23;;2675:11:2;:9;:11::i;:::-;434:1115:23;1049:246;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2322:110:2;2370:17;:15;:17::i;:::-;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;1049:246:23:-;1141:1;1115:28;;:14;:28;;;1111:54;;1152:13;;;;;;;;;;;;;;1111:54;1202:1;1173:31;;:17;:15;:17::i;:::-;:31;;;1169:57;;1213:13;;;;;;;;;;;;;;1169:57;1273:14;1251:20;1244:44;1049:246;:::o;3198:46:2:-;:::o;1395:152:23:-;1472:12;1519:20;1513:27;1505:35;;1395:152;:::o;948:895:2:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1686:1;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;88:117:24;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "130800",
								"executionCost": "177",
								"totalCost": "130977"
							},
							"external": {
								"": "infinite",
								"initializeProxy(address)": "24744"
							},
							"internal": {
								"_implementation()": "2123"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 434,
									"end": 1549,
									"name": "PUSH",
									"source": 23,
									"value": "80"
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "PUSH",
									"source": 23,
									"value": "40"
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "CALLVALUE",
									"source": 23
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "tag",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "PUSH #[$]",
									"source": 23,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "PUSH [$]",
									"source": 23,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "CODECOPY",
									"source": 23
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "RETURN",
									"source": 23
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122080a137255c6ffc8a4d4838fe8a7bcf014ae8796438aec993b2aaa206ce78697964736f6c63430008120033",
									".code": [
										{
											"begin": 434,
											"end": 1549,
											"name": "PUSH",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "CALLDATASIZE",
											"source": 23
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "LT",
											"source": 23
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "1"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "PUSH",
											"source": 23,
											"value": "E0"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "SHR",
											"source": 23
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "PUSH",
											"source": 23,
											"value": "4A0687EF"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "3"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "2"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "tag",
											"source": 23,
											"value": "1"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "CALLDATASIZE",
											"source": 23
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "2"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2898,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "STOP",
											"source": 23
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "tag",
											"source": 23,
											"value": "2"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2675,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2675,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "STOP",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 23,
											"value": "3"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "CALLVALUE",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "11"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 23,
											"value": "11"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "12"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "CALLDATASIZE",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "13"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "14"
										},
										{
											"begin": 1049,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 23,
											"value": "13"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "15"
										},
										{
											"begin": 1049,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 23,
											"value": "12"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "STOP",
											"source": 23
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2370,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2370,
											"end": 2387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2407,
											"end": 2424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2397,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 23,
											"value": "15"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1141,
											"end": 1142,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1115,
											"end": 1143,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1115,
											"end": 1143,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 1115,
											"end": 1129,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1115,
											"end": 1143,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1115,
											"end": 1143,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 1115,
											"end": 1143,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 1111,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 1111,
											"end": 1165,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 23,
											"value": "D92E233D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 1111,
											"end": 1165,
											"name": "tag",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 1111,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1202,
											"end": 1203,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1204,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1173,
											"end": 1204,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 1173,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "25"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "21"
										},
										{
											"begin": 1173,
											"end": 1190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1173,
											"end": 1190,
											"name": "tag",
											"source": 23,
											"value": "25"
										},
										{
											"begin": 1173,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1173,
											"end": 1204,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1173,
											"end": 1204,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 1173,
											"end": 1204,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 1169,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "26"
										},
										{
											"begin": 1169,
											"end": 1226,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "PUSH",
											"source": 23,
											"value": "5DAA87A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 1169,
											"end": 1226,
											"name": "tag",
											"source": 23,
											"value": "26"
										},
										{
											"begin": 1169,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1273,
											"end": 1287,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1251,
											"end": 1271,
											"name": "PUSH",
											"source": 23,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1244,
											"end": 1288,
											"name": "SSTORE",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1049,
											"end": 1295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3198,
											"end": 3244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1547,
											"name": "tag",
											"source": 23,
											"value": "21"
										},
										{
											"begin": 1395,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1472,
											"end": 1484,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1539,
											"name": "PUSH",
											"source": 23,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1513,
											"end": 1540,
											"name": "SLOAD",
											"source": 23
										},
										{
											"begin": 1505,
											"end": 1540,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1505,
											"end": 1540,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1395,
											"end": 1547,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1395,
											"end": 1547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1267,
											"end": 1301,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1481,
											"end": 1495,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1478,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1455,
											"end": 1460,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1502,
											"name": "DELEGATECALL",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1592,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1574,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1571,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1555,
											"end": 1593,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1687,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1813,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1732,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1733,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 24,
											"value": "33"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 24,
											"value": "35"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 24,
											"value": "36"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "45"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "35"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 24,
											"value": "45"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 24,
											"value": "37"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "47"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "36"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 24,
											"value": "47"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "48"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 24,
											"value": "48"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 24,
											"value": "38"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "50"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "37"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 24,
											"value": "50"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 24,
											"value": "14"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "52"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "53"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "33"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 24,
											"value": "53"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 24,
											"value": "52"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "54"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "38"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 24,
											"value": "54"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC777/IERC777.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
								"contracts/BurnMintSuperToken.sol",
								"contracts/base/SuperTokenBase.sol",
								"contracts/base/SuperTokenStorage.sol",
								"contracts/base/UUPSProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"initializeProxy(address)": "4a0687ef"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Initialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAddress\",\"type\":\"address\"}],\"name\":\"initializeProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"jtriley.eth\",\"details\":\"`initializeProxy(address)` is called by the Super Token Factory The call to the factory should be in the same transaction to avoid being front run\",\"kind\":\"dev\",\"methods\":{\"initializeProxy(address)\":{\"details\":\"Called by the SuperTokenFactory contract on upgrade\",\"params\":{\"initialAddress\":\"logic contract address\"}}},\"title\":\"UUPS Proxy implementation contract\",\"version\":1},\"userdoc\":{\"errors\":{\"Initialized()\":[{\"notice\":\"Thrown when the logic contract has been set\"}],\"ZeroAddress()\":[{\"notice\":\"Thrown when the logic contract address is zero\"}]},\"kind\":\"user\",\"methods\":{\"initializeProxy(address)\":{\"notice\":\"Stores the logic contract address only once.\"}},\"notice\":\"Stores the logic contract's address at the _IMPLEMENTATION_SLOT\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/UUPSProxy.sol\":\"UUPSProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"contracts/base/UUPSProxy.sol\":{\"keccak256\":\"0xd3e51b5fc04238364c4ed9068e31e88bd44e20546089e4fb76422ea1c2eac1ca\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://041548f8c5c4bf62fcf02677272196f953f320774ff784a7a93351e4c45956aa\",\"dweb:/ipfs/QmPvKxXbCFrWcHnwbTbSdEa96j4No8DHeuzXG1ftKPHwf1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"Initialized()": [
								{
									"notice": "Thrown when the logic contract has been set"
								}
							],
							"ZeroAddress()": [
								{
									"notice": "Thrown when the logic contract address is zero"
								}
							]
						},
						"kind": "user",
						"methods": {
							"initializeProxy(address)": {
								"notice": "Stores the logic contract address only once."
							}
						},
						"notice": "Stores the logic contract's address at the _IMPLEMENTATION_SLOT",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [315],
						"Context": [703],
						"ERC165": [902],
						"IAccessControl": [388],
						"IERC165": [914],
						"Math": [1779],
						"Strings": [878]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 389,
							"src": "133:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 704,
							"src": "164:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 879,
							"src": "195:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 903,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nameLocations": ["1841:7:0"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 703,
										"src": "1841:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1841:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nameLocations": ["1850:14:0"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 388,
										"src": "1850:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1850:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nameLocations": ["1866:6:0"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 902,
										"src": "1866:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1866:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "271:1534:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 315,
							"linearizedBaseContracts": [
								315, 902, 914, 388, 703
							],
							"name": "AccessControl",
							"nameLocation": "1824:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1930:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1905:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1905:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1955:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1947:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1947:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1886:8:0",
									"nodeType": "StructDefinition",
									"scope": 315,
									"src": "1879:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2014:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 315,
									"src": "1977:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1985:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1977:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nameLocations": ["1996:8:0"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "1996:8:0"
											},
											"referencedDeclaration": 19,
											"src": "1996:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2051:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 315,
									"src": "2027:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2027:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2072:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2495:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2516:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92, 131
														],
														"referencedDeclaration": 92,
														"src": "2505:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2505:16:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2083:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 38,
									"name": "onlyRole",
									"nameLocation": "2472:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2489:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:14:0"
									},
									"src": "2463:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [901],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2697:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 47,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2714:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 49,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "2734:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$388_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$388_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 48,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2729:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2729:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$388",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2750:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2729:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2714:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "2789:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 53,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2765:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$315_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2771:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 901,
															"src": "2765:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2765:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 58,
												"nodeType": "Return",
												"src": "2707:94:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2545:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2615:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 43,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2673:8:0"
									},
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2640:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2633:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 40,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2633:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:20:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2691:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2691:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:6:0"
									},
									"scope": 315,
									"src": "2606:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [355],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "2987:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 71,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "3004:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"id": 72,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3011:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3004:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3017:7:0",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "3004:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 76,
													"indexExpression": {
														"id": 75,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3025:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3004:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 77,
												"nodeType": "Return",
												"src": "2997:36:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2814:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2904:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2963:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2920:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2912:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2934:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2926:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:31:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2981:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2981:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2980:6:0"
									},
									"scope": 315,
									"src": "2895:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3390:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3411:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 87,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "3417:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3417:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92, 131
														],
														"referencedDeclaration": 131,
														"src": "3400:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "3400:30:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3046:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3343:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3362:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3354:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3353:14:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:0"
									},
									"scope": 315,
									"src": "3334:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3791:406:0",
										"statements": [
											{
												"condition": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3805:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 101,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3814:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 102,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3820:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 100,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3806:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3806:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "3801:390:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "3830:361:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3938:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 113,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 97,
																								"src": "4009:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 111,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 878,
																								"src": "3989:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$878_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3997:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 877,
																							"src": "3989:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 114,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3989:28:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 115,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4043:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 120,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 95,
																										"src": "4116:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 119,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4108:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 118,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4108:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 121,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4108:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 122,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4123:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 116,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 878,
																								"src": "4088:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$878_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 117,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4096:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 857,
																							"src": "4088:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 123,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4088:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 108,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3896:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "3900:12:0",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3896:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3896:252:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3868:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 106,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3868:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3868:298:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 105,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3844:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3844:336:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 127,
															"nodeType": "ExpressionStatement",
															"src": "3844:336:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3443:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3727:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3746:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3738:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3760:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3737:31:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:0"
									},
									"scope": 315,
									"src": "3718:479:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [363],
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "4461:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 140,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4478:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 142,
														"indexExpression": {
															"id": 141,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4485:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4478:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4491:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4478:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 139,
												"id": 144,
												"nodeType": "Return",
												"src": "4471:29:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4203:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4387:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 136,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4434:8:0"
									},
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4408:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4400:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 133,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4399:14:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4452:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4451:9:0"
									},
									"scope": 315,
									"src": "4378:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [371],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4906:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "4927:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4933:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "4916:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4916:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4916:25:0"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "4513:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "4899:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "4886:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4886:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": ["4877:8:0"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "4877:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4877:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4812:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 153,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4868:8:0"
									},
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4830:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4822:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 148,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4844:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4836:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4821:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4906:0:0"
									},
									"scope": 315,
									"src": "4803:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [379],
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "5332:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 181,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5354:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 182,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5360:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 180,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "5342:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "5342:26:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4954:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 176,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5325:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 175,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "5312:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5312:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 174,
												"name": "onlyRole",
												"nameLocations": ["5303:8:0"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5303:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5303:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5237:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 173,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5294:8:0"
									},
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5256:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5248:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5270:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5262:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5247:31:0"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5332:0:0"
									},
									"scope": 315,
									"src": "5228:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [387],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "5989:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 196,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "6007:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 197,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "6018:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6018:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6007:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6032:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5999:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5999:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "5999:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "6105:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 205,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "6111:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "6093:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6093:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "6093:26:0"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "5381:526:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5921:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 193,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5980:8:0"
									},
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5942:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5934:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 188,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5934:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5956:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5948:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5933:31:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5989:0:0"
									},
									"scope": 315,
									"src": "5912:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "6879:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 218,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6900:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 219,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6906:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 217,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "6889:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6889:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "6889:25:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6132:674:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6820:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6839:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6831:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6853:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6845:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6830:31:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6879:0:0"
									},
									"scope": 315,
									"src": "6811:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "7119:174:0",
										"statements": [
											{
												"assignments": [232],
												"declarations": [
													{
														"constant": false,
														"id": 232,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7137:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 250,
														"src": "7129:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 231,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7129:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"arguments": [
														{
															"id": 234,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7170:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 233,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "7157:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7157:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7129:46:0"
											},
											{
												"expression": {
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 237,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7185:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 239,
															"indexExpression": {
																"id": 238,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "7192:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7185:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7198:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "7185:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 241,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "7210:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7185:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "7185:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 245,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7251:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 246,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7257:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 247,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "7276:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 244,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "7234:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7234:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "EmitStatement",
												"src": "7229:57:0"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "6927:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7055:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7077:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7069:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 225,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7091:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7083:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 227,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7068:33:0"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7119:0:0"
									},
									"scope": 315,
									"src": "7046:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "7529:165:0",
										"statements": [
											{
												"condition": {
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7543:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 260,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "7552:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 261,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "7558:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 259,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7544:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7544:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 281,
												"nodeType": "IfStatement",
												"src": "7539:149:0",
												"trueBody": {
													"id": 280,
													"nodeType": "Block",
													"src": "7568:120:0",
													"statements": [
														{
															"expression": {
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 264,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7582:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 266,
																			"indexExpression": {
																				"id": 265,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 254,
																				"src": "7589:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7582:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 267,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7595:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7582:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 269,
																	"indexExpression": {
																		"id": 268,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "7603:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7582:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7614:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7582:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 272,
															"nodeType": "ExpressionStatement",
															"src": "7582:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 274,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "7649:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "7655:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 276,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 693,
																			"src": "7664:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7664:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 273,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "7637:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7637:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 279,
															"nodeType": "EmitStatement",
															"src": "7632:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "7299:157:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7470:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7489:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 253,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7495:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7495:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7480:31:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7529:0:0"
									},
									"scope": 315,
									"src": "7461:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "7934:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 292,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "7956:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 293,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "7962:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 291,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "7948:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7948:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 312,
												"nodeType": "IfStatement",
												"src": "7944:149:0",
												"trueBody": {
													"id": 311,
													"nodeType": "Block",
													"src": "7972:121:0",
													"statements": [
														{
															"expression": {
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 295,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7986:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 297,
																			"indexExpression": {
																				"id": 296,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 286,
																				"src": "7993:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7986:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7999:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7986:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 300,
																	"indexExpression": {
																		"id": 299,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "8007:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7986:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8018:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7986:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 303,
															"nodeType": "ExpressionStatement",
															"src": "7986:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 305,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "8054:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 306,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "8060:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 307,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 693,
																			"src": "8069:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8069:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 304,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "8042:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8042:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 310,
															"nodeType": "EmitStatement",
															"src": "8037:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "7700:160:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7874:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7894:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "7886:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 285,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7908:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "7900:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7885:31:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7934:0:0"
									},
									"scope": 315,
									"src": "7865:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 316,
							"src": "1806:6295:0",
							"usedErrors": []
						}
					],
					"src": "108:7994:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [388]
					},
					"id": 389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 318,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 388,
							"linearizedBaseContracts": [388],
							"name": "IAccessControl",
							"nameLocation": "219:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 327,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "560:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "582:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "617:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:1"
									},
									"src": "537:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 336,
									"name": "RoleGranted",
									"nameLocation": "876:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "888:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "910:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "935:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:1"
									},
									"src": "870:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 345,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1285:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1310:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:1"
									},
									"src": "1245:89:1"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1438:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1452:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:1"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1492:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:1"
									},
									"scope": 388,
									"src": "1421:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 357,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:1"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1752:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:1"
									},
									"scope": 388,
									"src": "1693:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 365,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:1"
									},
									"scope": 388,
									"src": "2011:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2324:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 373,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:1"
									},
									"scope": 388,
									"src": "2304:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2877:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 381,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2891:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:1"
									},
									"scope": 388,
									"src": "2855:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 389,
							"src": "209:2710:1",
							"usedErrors": []
						}
					],
					"src": "94:2826:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [440]
					},
					"id": 441,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 390,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "99:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 391,
								"nodeType": "StructuredDocumentation",
								"src": "124:598:2",
								"text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 440,
							"linearizedBaseContracts": [440],
							"name": "Proxy",
							"nameLocation": "741:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "1008:835:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1027:810:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1283:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1286:12:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1286:14:2"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1267:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1267:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1267:34:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1428:74:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1455:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1455:5:2"
																	},
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "1462:14:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1478:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1481:12:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1481:14:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1497:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1500:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "1442:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:60:2"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "1432:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1570:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1576:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1576:16:2"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1555:14:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1555:38:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1555:38:2"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1688:59:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1713:1:2",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1716:14:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1716:16:2"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1706:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1706:27:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1706:27:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1681:66:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:1:2",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1768:59:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1793:1:2",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1796:14:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1796:16:2"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "1786:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1786:27:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1786:27:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1760:67:2",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "1614:6:2"
															},
															"nodeType": "YulSwitch",
															"src": "1607:220:2"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 394,
														"isOffset": false,
														"isSlot": false,
														"src": "1462:14:2",
														"valueSize": 1
													}
												],
												"id": 397,
												"nodeType": "InlineAssembly",
												"src": "1018:819:2"
											}
										]
									},
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "753:190:2",
										"text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "957:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "975:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "967:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:24:2"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:0:2"
									},
									"scope": 440,
									"src": "948:895:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "1849:173:2",
										"text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n and {_fallback} should delegate."
									},
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2036:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:2:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "2085:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2085:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2084:9:2"
									},
									"scope": 440,
									"src": "2027:67:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "2360:72:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 409,
														"name": "_beforeFallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "2370:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "2370:17:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 413,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "2407:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2407:17:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 412,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "2397:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2397:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2397:28:2"
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "2100:217:2",
										"text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "2331:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2340:2:2"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2360:0:2"
									},
									"scope": 440,
									"src": "2322:110:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "2665:28:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 422,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "2675:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2675:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "2675:11:2"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "2438:186:2",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
									},
									"id": 426,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2637:2:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2665:0:2"
									},
									"scope": 440,
									"src": "2629:64:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "2888:28:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 430,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "2898:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "2898:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2699:149:2",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."
									},
									"id": 434,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:2:2"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2888:0:2"
									},
									"scope": 440,
									"src": "2853:63:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "3242:2:2",
										"statements": []
									},
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "2922:271:2",
										"text": " @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overridden should call `super._beforeFallback()`."
									},
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeFallback",
									"nameLocation": "3207:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3222:2:2"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3242:0:2"
									},
									"scope": 440,
									"src": "3198:46:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 441,
							"src": "723:2523:2",
							"usedErrors": []
						}
					],
					"src": "99:3148:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [518]
					},
					"id": 519,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 442,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 443,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 518,
							"linearizedBaseContracts": [518],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 452,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 461,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 518,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 518,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 482,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 518,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 495,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 518,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 502,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 518,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "2677:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "2699:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "2719:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:3"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "2758:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 514,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:3"
									},
									"scope": 518,
									"src": "2646:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 519,
							"src": "202:2564:3",
							"usedErrors": []
						}
					],
					"src": "106:2661:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC777/IERC777.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
					"exportedSymbols": {
						"IERC777": [681]
					},
					"id": 682,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 520,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "108:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC777",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 521,
								"nodeType": "StructuredDocumentation",
								"src": "133:372:4",
								"text": " @dev Interface of the ERC777Token standard as defined in the EIP.\n This contract uses the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n token holders and recipients react to token movements by using setting implementers\n for the associated interfaces in said registry. See {IERC1820Registry} and\n {ERC1820Implementer}."
							},
							"fullyImplemented": false,
							"id": 681,
							"linearizedBaseContracts": [681],
							"name": "IERC777",
							"nameLocation": "516:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "530:199:4",
										"text": " @dev Emitted when `amount` tokens are created by `operator` and assigned to `to`.\n Note that some additional user `data` and `operatorData` can be logged in the event."
									},
									"eventSelector": "2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d",
									"id": 534,
									"name": "Minted",
									"nameLocation": "740:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "763:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "747:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "789:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "773:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "801:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "815:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "809:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 529,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "827:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "821:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 531,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "821:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:94:4"
									},
									"src": "734:107:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "847:187:4",
										"text": " @dev Emitted when `operator` destroys `amount` tokens from `account`.\n Note that some additional user `data` and `operatorData` can be logged in the event."
									},
									"eventSelector": "a78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a4098",
									"id": 547,
									"name": "Burned",
									"nameLocation": "1045:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1068:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "1052:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1094:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "1078:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1108:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "1100:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1100:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1122:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "1116:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 542,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1116:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "1134:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "1128:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 544,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1128:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1051:96:4"
									},
									"src": "1039:109:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "1154:83:4",
										"text": " @dev Emitted when `operator` is made operator for `tokenHolder`."
									},
									"eventSelector": "f4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f9",
									"id": 554,
									"name": "AuthorizedOperator",
									"nameLocation": "1248:18:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1283:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1267:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "1309:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1293:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1293:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:55:4"
									},
									"src": "1242:80:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "1328:97:4",
										"text": " @dev Emitted when `operator` is revoked its operator status for `tokenHolder`."
									},
									"eventSelector": "50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa1",
									"id": 561,
									"name": "RevokedOperator",
									"nameLocation": "1436:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1468:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "1452:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "1494:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "1478:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1478:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:55:4"
									},
									"src": "1430:77:4"
								},
								{
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "1513:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1581:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1585:2:4"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1611:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 564,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1611:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1610:15:4"
									},
									"scope": 681,
									"src": "1572:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "1632:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 573,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1748:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1754:2:4"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "1780:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1780:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:15:4"
									},
									"scope": 681,
									"src": "1739:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "1801:287:4",
										"text": " @dev Returns the smallest part of the token that is not divisible. This\n means all token operations (creation, movement and destruction) must have\n amounts that are a multiple of this number.\n For most token contracts, this value will equal 1."
									},
									"functionSelector": "556f0dc7",
									"id": 579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "granularity",
									"nameLocation": "2102:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2113:2:4"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2139:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2138:9:4"
									},
									"scope": 681,
									"src": "2093:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "2154:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2234:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2245:2:4"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2271:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2270:9:4"
									},
									"scope": 681,
									"src": "2225:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "2286:83:4",
										"text": " @dev Returns the amount of tokens owned by an account (`owner`)."
									},
									"functionSelector": "70a08231",
									"id": 593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2383:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2401:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "2393:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2393:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2392:15:4"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "2431:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:9:4"
									},
									"scope": 681,
									"src": "2374:66:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "2446:585:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n If send or receive hooks are registered for the caller and `recipient`,\n the corresponding functions will be called with `data` and empty\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - the caller must have at least `amount` tokens.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"functionSelector": "9bd9bbc6",
									"id": 603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "3045:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3067:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "3059:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3059:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3094:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "3086:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3125:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "3110:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 599,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3110:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:86:4"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3144:0:4"
									},
									"scope": 681,
									"src": "3036:109:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "3151:404:4",
										"text": " @dev Destroys `amount` tokens from the caller's account, reducing the\n total supply.\n If a send hook is registered for the caller, the corresponding function\n will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - the caller must have at least `amount` tokens."
									},
									"functionSelector": "fe9d9303",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3569:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3582:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "3574:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3574:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3605:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "3590:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 607,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3590:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3573:37:4"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3619:0:4"
									},
									"scope": 681,
									"src": "3560:60:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "3626:249:4",
										"text": " @dev Returns true if an account is an operator of `tokenHolder`.\n Operators can send and burn tokens on behalf of their owners. All\n accounts are their own operator.\n See {operatorSend} and {operatorBurn}."
									},
									"functionSelector": "d95b6371",
									"id": 621,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOperatorFor",
									"nameLocation": "3889:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3911:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "3903:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "3929:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "3921:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3921:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3902:39:4"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "3965:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 618,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3965:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3964:6:4"
									},
									"scope": 681,
									"src": "3880:91:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "3977:233:4",
										"text": " @dev Make an account an operator of the caller.\n See {isOperatorFor}.\n Emits an {AuthorizedOperator} event.\n Requirements\n - `operator` cannot be calling address."
									},
									"functionSelector": "959b8c3f",
									"id": 627,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "authorizeOperator",
									"nameLocation": "4224:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4250:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4242:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4242:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4241:18:4"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4268:0:4"
									},
									"scope": 681,
									"src": "4215:54:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "4275:261:4",
										"text": " @dev Revoke an account's operator status for the caller.\n See {isOperatorFor} and {defaultOperators}.\n Emits a {RevokedOperator} event.\n Requirements\n - `operator` cannot be calling address."
									},
									"functionSelector": "fad8b32a",
									"id": 633,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeOperator",
									"nameLocation": "4550:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4573:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4565:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4565:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:18:4"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4591:0:4"
									},
									"scope": 681,
									"src": "4541:51:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "4598:338:4",
										"text": " @dev Returns the list of default operators. These accounts are operators\n for all token holders, even if {authorizeOperator} was never called on\n them.\n This list is immutable, but individual holders may revoke these via\n {revokeOperator}, in which case {isOperatorFor} will return false."
									},
									"functionSelector": "06e48538",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "defaultOperators",
									"nameLocation": "4950:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4966:2:4"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "4992:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 636,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4992:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 637,
													"nodeType": "ArrayTypeName",
													"src": "4992:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4991:18:4"
									},
									"scope": 681,
									"src": "4941:69:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "5016:714:4",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n be an operator of `sender`.\n If send or receive hooks are registered for `sender` and `recipient`,\n the corresponding functions will be called with `data` and\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - `sender` cannot be the zero address.\n - `sender` must have at least `amount` tokens.\n - the caller must be an operator for `sender`.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"functionSelector": "62ad1b83",
									"id": 654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operatorSend",
									"nameLocation": "5744:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5774:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "5766:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5766:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5798:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "5790:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5825:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "5817:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5817:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "5841:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5841:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "5885:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "5870:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 650,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5870:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5756:147:4"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5912:0:4"
									},
									"scope": 681,
									"src": "5735:178:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "5919:532:4",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the total supply.\n The caller must be an operator of `account`.\n If a send hook is registered for `account`, the corresponding function\n will be called with `data` and `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n - the caller must be an operator for `account`."
									},
									"functionSelector": "fc673c4f",
									"id": 666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operatorBurn",
									"nameLocation": "6465:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6495:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "6487:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6487:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6520:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "6512:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6512:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6551:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "6536:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 660,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6536:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "6580:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "6565:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 662,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6565:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6477:121:4"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6607:0:4"
									},
									"scope": 681,
									"src": "6456:152:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987",
									"id": 680,
									"name": "Sent",
									"nameLocation": "6620:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6650:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "6634:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6684:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "6668:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6714:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "6698:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6698:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6734:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "6726:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6726:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6756:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "6750:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6750:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "6776:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "6770:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 677,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6770:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6624:170:4"
									},
									"src": "6614:181:4"
								}
							],
							"scope": 682,
							"src": "506:6291:4",
							"usedErrors": []
						}
					],
					"src": "108:6690:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [703]
					},
					"id": 704,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 683,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 684,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 703,
							"linearizedBaseContracts": [703],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 689,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 688,
												"id": 691,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 703,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 698,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 697,
												"id": 700,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 695,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 703,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 704,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [1779],
						"Strings": [878]
					},
					"id": 879,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 705,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 706,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 879,
							"sourceUnit": 1780,
							"src": "126:25:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 707,
								"nodeType": "StructuredDocumentation",
								"src": "153:34:6",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 878,
							"linearizedBaseContracts": [878],
							"name": "Strings",
							"nameLocation": "196:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 710,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "235:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 878,
									"src": "210:54:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 708,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 709,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "246:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 713,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "293:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 878,
									"src": "270:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 711,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "270:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 712,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "486:625:6",
										"statements": [
											{
												"id": 759,
												"nodeType": "UncheckedBlock",
												"src": "496:609:6",
												"statements": [
													{
														"assignments": [722],
														"declarations": [
															{
																"constant": false,
																"id": 722,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "528:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 759,
																"src": "520:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 721,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "520:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 729,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 725,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 716,
																		"src": "548:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 723,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "537:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1779_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "542:5:6",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1616,
																	"src": "537:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "537:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "557:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "537:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "520:38:6"
													},
													{
														"assignments": [731],
														"declarations": [
															{
																"constant": false,
																"id": 731,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "586:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 759,
																"src": "572:20:6",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 730,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "572:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 736,
														"initialValue": {
															"arguments": [
																{
																	"id": 734,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "606:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "595:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 732,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "599:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "595:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "572:41:6"
													},
													{
														"assignments": [738],
														"declarations": [
															{
																"constant": false,
																"id": 738,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "635:3:6",
																"nodeType": "VariableDeclaration",
																"scope": 759,
																"src": "627:11:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 737,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "627:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 739,
														"nodeType": "VariableDeclarationStatement",
														"src": "627:11:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "708:67:6",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "726:35:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "749:2:6",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "753:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "745:15:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "733:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "733:28:6"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:6"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 731,
																"isOffset": false,
																"isSlot": false,
																"src": "737:6:6",
																"valueSize": 1
															},
															{
																"declaration": 722,
																"isOffset": false,
																"isSlot": false,
																"src": "753:6:6",
																"valueSize": 1
															},
															{
																"declaration": 738,
																"isOffset": false,
																"isSlot": false,
																"src": "726:3:6",
																"valueSize": 1
															}
														],
														"id": 740,
														"nodeType": "InlineAssembly",
														"src": "699:76:6"
													},
													{
														"body": {
															"id": 755,
															"nodeType": "Block",
															"src": "801:267:6",
															"statements": [
																{
																	"expression": {
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "819:5:6",
																		"subExpression": {
																			"id": 742,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 738,
																			"src": "819:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 744,
																	"nodeType": "ExpressionStatement",
																	"src": "819:5:6"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "902:84:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "932:3:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "946:5:6"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "953:2:6",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "942:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "942:14:6"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "958:8:6"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "937:4:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "937:30:6"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "924:7:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "924:44:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "924:44:6"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 710,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "958:8:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 738,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "932:3:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 716,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "946:5:6",
																			"valueSize": 1
																		}
																	],
																	"id": 745,
																	"nodeType": "InlineAssembly",
																	"src": "893:93:6"
																},
																{
																	"expression": {
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 746,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 716,
																			"src": "1003:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1012:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1003:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 749,
																	"nodeType": "ExpressionStatement",
																	"src": "1003:11:6"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 750,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 716,
																			"src": "1036:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1036:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 754,
																	"nodeType": "IfStatement",
																	"src": "1032:21:6",
																	"trueBody": {
																		"id": 753,
																		"nodeType": "Break",
																		"src": "1048:5:6"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "795:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 756,
														"nodeType": "WhileStatement",
														"src": "788:280:6"
													},
													{
														"expression": {
															"id": 757,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "1088:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 720,
														"id": 758,
														"nodeType": "Return",
														"src": "1081:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "320:90:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "424:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "441:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "433:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:15:6"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "471:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 718,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:15:6"
									},
									"scope": 878,
									"src": "415:696:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "1290:100:6",
										"statements": [
											{
												"id": 779,
												"nodeType": "UncheckedBlock",
												"src": "1300:84:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 764,
																	"src": "1343:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 773,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 764,
																				"src": "1362:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 771,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1779,
																				"src": "1350:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1779_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1355:6:6",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1739,
																			"src": "1350:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1350:18:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1371:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1350:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 769,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	781, 857,
																	877
																],
																"referencedDeclaration": 857,
																"src": "1331:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:42:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 768,
														"id": 778,
														"nodeType": "Return",
														"src": "1324:49:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "1117:94:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1225:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1245:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "1237:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:6"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "1275:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 766,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1275:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:15:6"
									},
									"scope": 878,
									"src": "1216:174:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "1603:347:6",
										"statements": [
											{
												"assignments": [792],
												"declarations": [
													{
														"constant": false,
														"id": 792,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1626:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 856,
														"src": "1613:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 791,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1613:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 801,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1645:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 796,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "1649:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1645:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1658:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1645:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1635:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 793,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1639:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:47:6"
											},
											{
												"expression": {
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 802,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "1670:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 804,
														"indexExpression": {
															"hexValue": "30",
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1677:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1670:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 805,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1682:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1670:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "1670:15:6"
											},
											{
												"expression": {
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 808,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "1695:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 810,
														"indexExpression": {
															"hexValue": "31",
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1695:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1707:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1695:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "1695:15:6"
											},
											{
												"body": {
													"id": 842,
													"nodeType": "Block",
													"src": "1765:83:6",
													"statements": [
														{
															"expression": {
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 828,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 792,
																		"src": "1779:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 830,
																	"indexExpression": {
																		"id": 829,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 815,
																		"src": "1786:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1779:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 831,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 710,
																		"src": "1791:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 835,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 832,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 784,
																			"src": "1800:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1808:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1800:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1791:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1779:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 837,
															"nodeType": "ExpressionStatement",
															"src": "1779:33:6"
														},
														{
															"expression": {
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 838,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 784,
																	"src": "1826:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1836:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1826:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 841,
															"nodeType": "ExpressionStatement",
															"src": "1826:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 822,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "1753:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 823,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1753:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 843,
												"initializationExpression": {
													"assignments": [815],
													"declarations": [
														{
															"constant": false,
															"id": 815,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1733:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 843,
															"src": "1725:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 814,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1725:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 821,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1737:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 817,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "1741:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1737:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1750:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1737:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1725:26:6"
												},
												"loopExpression": {
													"expression": {
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1760:3:6",
														"subExpression": {
															"id": 825,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "1762:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 827,
													"nodeType": "ExpressionStatement",
													"src": "1760:3:6"
												},
												"nodeType": "ForStatement",
												"src": "1720:128:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 845,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "1865:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1874:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1865:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 844,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1857:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "1857:55:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 853,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "1936:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1929:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 851,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1929:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 790,
												"id": 855,
												"nodeType": "Return",
												"src": "1922:21:6"
											}
										]
									},
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "1396:112:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1522:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1542:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "1534:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1557:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "1549:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:31:6"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "1588:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 788,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:15:6"
									},
									"scope": 878,
									"src": "1513:437:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "2175:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 870,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 860,
																			"src": "2220:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2212:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 868,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2212:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2212:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2204:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 866,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2204:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2204:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 873,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "2228:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 865,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															781, 857, 877
														],
														"referencedDeclaration": 857,
														"src": "2192:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 864,
												"id": 875,
												"nodeType": "Return",
												"src": "2185:59:6"
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "1956:141:6",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2111:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2131:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "2123:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:14:6"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "2160:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 862,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2160:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:15:6"
									},
									"scope": 878,
									"src": "2102:149:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 879,
							"src": "188:2065:6",
							"usedErrors": []
						}
					],
					"src": "101:2153:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [902],
						"IERC165": [914]
					},
					"id": 903,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 880,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "99:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 903,
							"sourceUnit": 915,
							"src": "124:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC165",
										"nameLocations": ["754:7:7"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 914,
										"src": "754:7:7"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 902,
							"linearizedBaseContracts": [902, 914],
							"name": "ERC165",
							"nameLocation": "744:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [913],
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "920:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 893,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "937:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 895,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "957:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$914_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$914_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 894,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$914",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 897,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 892,
												"id": 899,
												"nodeType": "Return",
												"src": "930:47:7"
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 889,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:7"
									},
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "856:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 886,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:7"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "914:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 890,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:7"
									},
									"scope": 902,
									"src": "829:155:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 903,
							"src": "726:260:7",
							"usedErrors": []
						}
					],
					"src": "99:888:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [914]
					},
					"id": 915,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 904,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 905,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 914,
							"linearizedBaseContracts": [914],
							"name": "IERC165",
							"nameLocation": "415:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 913,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 907,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 910,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 914,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 915,
							"src": "405:447:8",
							"usedErrors": []
						}
					],
					"src": "100:753:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [1779]
					},
					"id": 1780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 916,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "103:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 917,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:9",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1779,
							"linearizedBaseContracts": [1779],
							"name": "Math",
							"nameLocation": "210:4:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 921,
									"members": [
										{
											"id": 918,
											"name": "Down",
											"nameLocation": "245:4:9",
											"nodeType": "EnumValue",
											"src": "245:4:9"
										},
										{
											"id": 919,
											"name": "Up",
											"nameLocation": "287:2:9",
											"nodeType": "EnumValue",
											"src": "287:2:9"
										},
										{
											"id": 920,
											"name": "Zero",
											"nameLocation": "318:4:9",
											"nodeType": "EnumValue",
											"src": "318:4:9"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:9",
									"nodeType": "EnumDefinition",
									"src": "221:122:9"
								},
								{
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "480:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 931,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "497:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 932,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "501:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 935,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "509:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:9",
													"trueExpression": {
														"id": 934,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "505:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 930,
												"id": 937,
												"nodeType": "Return",
												"src": "490:20:9"
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:9",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "426:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "437:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:9"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "471:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:9"
									},
									"scope": 1779,
									"src": "413:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "655:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 949,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "672:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 950,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "676:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 953,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "684:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:9",
													"trueExpression": {
														"id": 952,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "680:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 948,
												"id": 955,
												"nodeType": "Return",
												"src": "665:20:9"
											}
										]
									},
									"documentation": {
										"id": 940,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:9",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "601:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "612:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:9"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "646:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:9"
									},
									"scope": 1779,
									"src": "588:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "876:82:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 967,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "931:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 968,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "935:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 970,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 971,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "941:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 972,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 962,
																		"src": "945:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 974,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 966,
												"id": 978,
												"nodeType": "Return",
												"src": "923:28:9"
											}
										]
									},
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:9",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "822:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "833:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:9"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "867:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:9"
									},
									"scope": 1779,
									"src": "805:153:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "1228:123:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 990,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "1316:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 994,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 983,
																			"src": "1330:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 997,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 998,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "1339:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:9",
													"trueExpression": {
														"hexValue": "30",
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 989,
												"id": 1003,
												"nodeType": "Return",
												"src": "1309:35:9"
											}
										]
									},
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:9",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1174:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1185:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:9"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1219:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:9"
									},
									"scope": 1779,
									"src": "1157:194:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "1795:3797:9",
										"statements": [
											{
												"id": 1125,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:9",
												"statements": [
													{
														"assignments": [1018],
														"declarations": [
															{
																"constant": false,
																"id": 1018,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 1125,
																"src": "2126:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1017,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1019,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:9"
													},
													{
														"assignments": [1021],
														"declarations": [
															{
																"constant": false,
																"id": 1021,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 1125,
																"src": "2198:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1020,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1022,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:9"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2278:157:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:9"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:9"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2343:18:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:9"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:9"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2378:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:9"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:9"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:9"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:9"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1018,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1018,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1018,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1021,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1008,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1008,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1010,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1010,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:9",
																"valueSize": 1
															}
														],
														"id": 1023,
														"nodeType": "InlineAssembly",
														"src": "2269:166:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1024,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1021,
																"src": "2516:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1032,
														"nodeType": "IfStatement",
														"src": "2512:75:9",
														"trueBody": {
															"id": 1031,
															"nodeType": "Block",
															"src": "2528:59:9",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1027,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1018,
																			"src": "2553:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1028,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1012,
																			"src": "2561:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1016,
																	"id": 1030,
																	"nodeType": "Return",
																	"src": "2546:26:9"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1034,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "2697:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1035,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1021,
																		"src": "2711:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1033,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1038,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:9"
													},
													{
														"assignments": [1040],
														"declarations": [
															{
																"constant": false,
																"id": 1040,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:9",
																"nodeType": "VariableDeclaration",
																"scope": 1125,
																"src": "2973:17:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1039,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1041,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:9"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3013:291:9",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3082:38:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:9"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:9"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:9"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:9"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3202:41:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:9"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:9"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:9"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3260:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:9"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1012,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1018,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1018,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1018,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1021,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1021,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1040,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1040,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1040,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1008,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1010,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:9",
																"valueSize": 1
															}
														],
														"id": 1042,
														"nodeType": "InlineAssembly",
														"src": "3004:300:9"
													},
													{
														"assignments": [1044],
														"declarations": [
															{
																"constant": false,
																"id": 1044,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:9",
																"nodeType": "VariableDeclaration",
																"scope": 1125,
																"src": "3611:12:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1043,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1052,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1045,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "3626:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:9",
																			"subExpression": {
																				"id": 1046,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1012,
																				"src": "3642:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1050,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:9"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3681:362:9",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3746:37:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:9"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:9"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:9"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3850:25:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:9"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:9"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3990:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:9",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:9"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:9"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:9"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1012,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1012,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1018,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1018,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1044,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1044,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1044,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1044,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1044,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:9",
																"valueSize": 1
															}
														],
														"id": 1053,
														"nodeType": "InlineAssembly",
														"src": "3672:371:9"
													},
													{
														"expression": {
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1054,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "4109:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1055,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "4118:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1056,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "4126:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1059,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:9"
													},
													{
														"assignments": [1061],
														"declarations": [
															{
																"constant": false,
																"id": 1061,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:9",
																"nodeType": "VariableDeclaration",
																"scope": 1125,
																"src": "4448:15:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1060,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1068,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1063,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1012,
																			"src": "4471:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1065,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:9"
													},
													{
														"expression": {
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1069,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "4704:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1071,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "4719:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1072,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "4733:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1076,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:9"
													},
													{
														"expression": {
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1077,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "4773:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1079,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "4788:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1080,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "4802:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1084,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:9"
													},
													{
														"expression": {
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1085,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "4843:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1087,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "4858:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1088,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "4872:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1092,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:9"
													},
													{
														"expression": {
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1093,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "4913:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1095,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "4928:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1096,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "4942:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1100,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:9"
													},
													{
														"expression": {
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1101,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "4983:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1103,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "4998:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1104,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "5012:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1108,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:9"
													},
													{
														"expression": {
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1109,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "5054:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1111,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "5069:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1112,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "5083:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1116,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:9"
													},
													{
														"expression": {
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1117,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1015,
																"src": "5524:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1118,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "5533:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1119,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1061,
																	"src": "5541:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1122,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:9"
													},
													{
														"expression": {
															"id": 1123,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "5569:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1016,
														"id": 1124,
														"nodeType": "Return",
														"src": "5562:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:9",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1692:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1711:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1730:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:9"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1779:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:9"
									},
									"scope": 1779,
									"src": "1667:3925:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "5872:189:9",
										"statements": [
											{
												"assignments": [1143],
												"declarations": [
													{
														"constant": false,
														"id": 1143,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1170,
														"src": "5882:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1142,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1149,
												"initialValue": {
													"arguments": [
														{
															"id": 1145,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "5906:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1146,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "5909:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1147,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "5912:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1144,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1127, 1171
														],
														"referencedDeclaration": 1127,
														"src": "5899:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$921",
															"typeString": "enum Math.Rounding"
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1150,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "5938:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$921",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1151,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "5950:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$921_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5959:2:9",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 919,
															"src": "5950:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$921",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1155,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1130,
																	"src": "5972:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1156,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "5975:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1157,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "5978:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1154,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1167,
												"nodeType": "IfStatement",
												"src": "5934:98:9",
												"trueBody": {
													"id": 1166,
													"nodeType": "Block",
													"src": "5996:36:9",
													"statements": [
														{
															"expression": {
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1162,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1143,
																	"src": "6010:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1165,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1168,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1143,
													"src": "6048:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1141,
												"id": 1169,
												"nodeType": "Return",
												"src": "6041:13:9"
											}
										]
									},
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:9",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "5749:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "5768:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "5787:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "5816:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$921",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1136,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1135,
														"name": "Rounding",
														"nameLocations": [
															"5816:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 921,
														"src": "5816:8:9"
													},
													"referencedDeclaration": 921,
													"src": "5816:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$921",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:9"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "5863:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:9"
									},
									"scope": 1779,
									"src": "5724:337:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "6337:1585:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1179,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "6351:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1185,
												"nodeType": "IfStatement",
												"src": "6347:45:9",
												"trueBody": {
													"id": 1184,
													"nodeType": "Block",
													"src": "6359:33:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1178,
															"id": 1183,
															"nodeType": "Return",
															"src": "6373:8:9"
														}
													]
												}
											},
											{
												"assignments": [1187],
												"declarations": [
													{
														"constant": false,
														"id": 1187,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1282,
														"src": "7071:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1186,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1196,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1190,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1174,
																			"src": "7099:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1189,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1451,
																			1487
																		],
																		"referencedDeclaration": 1451,
																		"src": "7094:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1194,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:9"
											},
											{
												"id": 1281,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:9",
												"statements": [
													{
														"expression": {
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1197,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "7532:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1198,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "7542:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1201,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1199,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1174,
																					"src": "7551:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1200,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "7555:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1203,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1207,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:9"
													},
													{
														"expression": {
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1208,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "7581:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1209,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "7591:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1212,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1210,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1174,
																					"src": "7600:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1211,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "7604:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1214,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1218,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:9"
													},
													{
														"expression": {
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1219,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "7630:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1220,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "7640:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1223,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1221,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1174,
																					"src": "7649:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1222,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "7653:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1225,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1229,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:9"
													},
													{
														"expression": {
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1230,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "7679:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1231,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "7689:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1234,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1232,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1174,
																					"src": "7698:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1233,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "7702:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1236,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1240,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:9"
													},
													{
														"expression": {
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1241,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "7728:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1242,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "7738:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1243,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1174,
																					"src": "7747:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1244,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "7751:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1247,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1251,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:9"
													},
													{
														"expression": {
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1252,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "7777:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1253,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "7787:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1254,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1174,
																					"src": "7796:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1255,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "7800:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1258,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1262,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:9"
													},
													{
														"expression": {
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1263,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "7826:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1264,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "7836:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1267,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1265,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1174,
																					"src": "7845:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1266,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "7849:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1269,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1273,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:9"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1275,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "7886:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1276,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1174,
																		"src": "7894:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1277,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "7898:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1274,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "7882:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1178,
														"id": 1280,
														"nodeType": "Return",
														"src": "7875:30:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:9",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "6294:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:9"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "6328:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:9"
									},
									"scope": 1779,
									"src": "6280:1642:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "8098:161:9",
										"statements": [
											{
												"id": 1317,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:9",
												"statements": [
													{
														"assignments": [1295],
														"declarations": [
															{
																"constant": false,
																"id": 1295,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1317,
																"src": "8132:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1294,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1299,
														"initialValue": {
															"arguments": [
																{
																	"id": 1297,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "8154:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1296,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1283, 1319
																],
																"referencedDeclaration": 1283,
																"src": "8149:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1300,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "8177:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$921",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1304,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1301,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1289,
																					"src": "8187:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$921",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1302,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 921,
																						"src": "8199:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$921_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1303,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8208:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 919,
																					"src": "8199:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$921",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1307,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1305,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1295,
																						"src": "8214:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1306,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1295,
																						"src": "8223:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1308,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1286,
																					"src": "8232:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1314,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1293,
														"id": 1316,
														"nodeType": "Return",
														"src": "8170:72:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:9",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "8036:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "8047:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$921",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1288,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1287,
														"name": "Rounding",
														"nameLocations": [
															"8047:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 921,
														"src": "8047:8:9"
													},
													"referencedDeclaration": 921,
													"src": "8047:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$921",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:9"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "8089:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:9"
									},
									"scope": 1779,
									"src": "8022:237:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1450,
										"nodeType": "Block",
										"src": "8444:922:9",
										"statements": [
											{
												"assignments": [1328],
												"declarations": [
													{
														"constant": false,
														"id": 1328,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1450,
														"src": "8454:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1327,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1330,
												"initialValue": {
													"hexValue": "30",
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:9"
											},
											{
												"id": 1447,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1331,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "8510:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1345,
														"nodeType": "IfStatement",
														"src": "8506:99:9",
														"trueBody": {
															"id": 1344,
															"nodeType": "Block",
															"src": "8528:77:9",
															"statements": [
																{
																	"expression": {
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1336,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1322,
																			"src": "8546:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1339,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:9"
																},
																{
																	"expression": {
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1340,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "8577:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1343,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1346,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "8622:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1360,
														"nodeType": "IfStatement",
														"src": "8618:96:9",
														"trueBody": {
															"id": 1359,
															"nodeType": "Block",
															"src": "8639:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 1353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1351,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1322,
																			"src": "8657:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1354,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:9"
																},
																{
																	"expression": {
																		"id": 1357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1355,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "8687:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1358,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1361,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "8731:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1375,
														"nodeType": "IfStatement",
														"src": "8727:96:9",
														"trueBody": {
															"id": 1374,
															"nodeType": "Block",
															"src": "8748:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1366,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1322,
																			"src": "8766:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1369,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:9"
																},
																{
																	"expression": {
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1370,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "8796:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1373,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1376,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "8840:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1390,
														"nodeType": "IfStatement",
														"src": "8836:96:9",
														"trueBody": {
															"id": 1389,
															"nodeType": "Block",
															"src": "8857:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1381,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1322,
																			"src": "8875:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1384,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:9"
																},
																{
																	"expression": {
																		"id": 1387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1385,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "8905:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1388,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1391,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "8949:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1405,
														"nodeType": "IfStatement",
														"src": "8945:93:9",
														"trueBody": {
															"id": 1404,
															"nodeType": "Block",
															"src": "8965:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 1398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1396,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1322,
																			"src": "8983:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1399,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:9"
																},
																{
																	"expression": {
																		"id": 1402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1400,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "9012:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1403,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1406,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "9055:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1420,
														"nodeType": "IfStatement",
														"src": "9051:93:9",
														"trueBody": {
															"id": 1419,
															"nodeType": "Block",
															"src": "9071:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1411,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1322,
																			"src": "9089:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1414,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:9"
																},
																{
																	"expression": {
																		"id": 1417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1415,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "9118:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1418,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1421,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "9161:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1435,
														"nodeType": "IfStatement",
														"src": "9157:93:9",
														"trueBody": {
															"id": 1434,
															"nodeType": "Block",
															"src": "9177:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 1428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1426,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1322,
																			"src": "9195:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1429,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:9"
																},
																{
																	"expression": {
																		"id": 1432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1430,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "9224:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1433,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1436,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "9267:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1446,
														"nodeType": "IfStatement",
														"src": "9263:64:9",
														"trueBody": {
															"id": 1445,
															"nodeType": "Block",
															"src": "9283:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 1443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1441,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "9301:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1444,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1448,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1328,
													"src": "9353:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1326,
												"id": 1449,
												"nodeType": "Return",
												"src": "9346:13:9"
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:9",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "8397:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:9"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "8435:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:9"
									},
									"scope": 1779,
									"src": "8383:983:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1486,
										"nodeType": "Block",
										"src": "9599:165:9",
										"statements": [
											{
												"id": 1485,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:9",
												"statements": [
													{
														"assignments": [1463],
														"declarations": [
															{
																"constant": false,
																"id": 1463,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1485,
																"src": "9633:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1462,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1467,
														"initialValue": {
															"arguments": [
																{
																	"id": 1465,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1454,
																	"src": "9655:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1464,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1451, 1487
																],
																"referencedDeclaration": 1451,
																"src": "9650:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1468,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "9682:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$921",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1469,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1457,
																					"src": "9692:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$921",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1470,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 921,
																						"src": "9704:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$921_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1471,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9713:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 919,
																					"src": "9704:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$921",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1477,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1475,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1473,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1474,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1463,
																						"src": "9724:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1476,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1454,
																					"src": "9733:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1482,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1461,
														"id": 1484,
														"nodeType": "Return",
														"src": "9675:72:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1452,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:9",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "9533:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "9548:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$921",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1456,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1455,
														"name": "Rounding",
														"nameLocations": [
															"9548:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 921,
														"src": "9548:8:9"
													},
													"referencedDeclaration": 921,
													"src": "9548:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$921",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:9"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "9590:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:9"
									},
									"scope": 1779,
									"src": "9519:245:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "9951:828:9",
										"statements": [
											{
												"assignments": [1496],
												"declarations": [
													{
														"constant": false,
														"id": 1496,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1615,
														"src": "9961:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1495,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1498,
												"initialValue": {
													"hexValue": "30",
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:9"
											},
											{
												"id": 1612,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1499,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "10017:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1515,
														"nodeType": "IfStatement",
														"src": "10013:99:9",
														"trueBody": {
															"id": 1514,
															"nodeType": "Block",
															"src": "10034:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 1508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1504,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1490,
																			"src": "10052:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1509,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:9"
																},
																{
																	"expression": {
																		"id": 1512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1510,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1496,
																			"src": "10085:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1513,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1516,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "10129:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1532,
														"nodeType": "IfStatement",
														"src": "10125:99:9",
														"trueBody": {
															"id": 1531,
															"nodeType": "Block",
															"src": "10146:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1521,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1490,
																			"src": "10164:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1522,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1526,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:9"
																},
																{
																	"expression": {
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1527,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1496,
																			"src": "10197:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1530,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1533,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "10241:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1549,
														"nodeType": "IfStatement",
														"src": "10237:99:9",
														"trueBody": {
															"id": 1548,
															"nodeType": "Block",
															"src": "10258:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 1542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1538,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1490,
																			"src": "10276:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1543,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:9"
																},
																{
																	"expression": {
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1544,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1496,
																			"src": "10309:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1547,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1550,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "10353:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1566,
														"nodeType": "IfStatement",
														"src": "10349:96:9",
														"trueBody": {
															"id": 1565,
															"nodeType": "Block",
															"src": "10369:76:9",
															"statements": [
																{
																	"expression": {
																		"id": 1559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1555,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1490,
																			"src": "10387:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1560,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:9"
																},
																{
																	"expression": {
																		"id": 1563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1561,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1496,
																			"src": "10419:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1564,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1567,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "10462:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1583,
														"nodeType": "IfStatement",
														"src": "10458:96:9",
														"trueBody": {
															"id": 1582,
															"nodeType": "Block",
															"src": "10478:76:9",
															"statements": [
																{
																	"expression": {
																		"id": 1576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1572,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1490,
																			"src": "10496:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1573,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1577,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:9"
																},
																{
																	"expression": {
																		"id": 1580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1578,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1496,
																			"src": "10528:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1581,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1584,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "10571:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1600,
														"nodeType": "IfStatement",
														"src": "10567:96:9",
														"trueBody": {
															"id": 1599,
															"nodeType": "Block",
															"src": "10587:76:9",
															"statements": [
																{
																	"expression": {
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1589,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1490,
																			"src": "10605:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1590,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1594,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:9"
																},
																{
																	"expression": {
																		"id": 1597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1595,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1496,
																			"src": "10637:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1598,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1601,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "10680:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1611,
														"nodeType": "IfStatement",
														"src": "10676:64:9",
														"trueBody": {
															"id": 1610,
															"nodeType": "Block",
															"src": "10696:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 1608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1606,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1496,
																			"src": "10714:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1609,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1613,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1496,
													"src": "10766:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1494,
												"id": 1614,
												"nodeType": "Return",
												"src": "10759:13:9"
											}
										]
									},
									"documentation": {
										"id": 1488,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:9",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "9904:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:9"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "9942:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:9"
									},
									"scope": 1779,
									"src": "9889:890:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1651,
										"nodeType": "Block",
										"src": "11014:165:9",
										"statements": [
											{
												"id": 1650,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:9",
												"statements": [
													{
														"assignments": [1628],
														"declarations": [
															{
																"constant": false,
																"id": 1628,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1650,
																"src": "11048:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1627,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1632,
														"initialValue": {
															"arguments": [
																{
																	"id": 1630,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "11071:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1629,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1616, 1652
																],
																"referencedDeclaration": 1616,
																"src": "11065:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1633,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1628,
																"src": "11098:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$921",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1637,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1634,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1622,
																					"src": "11108:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$921",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1635,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 921,
																						"src": "11120:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$921_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1636,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11129:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 919,
																					"src": "11120:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$921",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1640,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1638,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1639,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1628,
																						"src": "11139:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1619,
																					"src": "11148:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1647,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1626,
														"id": 1649,
														"nodeType": "Return",
														"src": "11091:71:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1617,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:9",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "10948:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "10963:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$921",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1621,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1620,
														"name": "Rounding",
														"nameLocations": [
															"10963:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 921,
														"src": "10963:8:9"
													},
													"referencedDeclaration": 921,
													"src": "10963:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$921",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:9"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "11005:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:9"
									},
									"scope": 1779,
									"src": "10933:246:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "11493:600:9",
										"statements": [
											{
												"assignments": [1661],
												"declarations": [
													{
														"constant": false,
														"id": 1661,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1738,
														"src": "11503:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1660,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1663,
												"initialValue": {
													"hexValue": "30",
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:9"
											},
											{
												"id": 1735,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1664,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1655,
																	"src": "11559:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1678,
														"nodeType": "IfStatement",
														"src": "11555:98:9",
														"trueBody": {
															"id": 1677,
															"nodeType": "Block",
															"src": "11577:76:9",
															"statements": [
																{
																	"expression": {
																		"id": 1671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1669,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1655,
																			"src": "11595:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1672,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:9"
																},
																{
																	"expression": {
																		"id": 1675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1673,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "11626:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1676,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1679,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1655,
																	"src": "11670:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1693,
														"nodeType": "IfStatement",
														"src": "11666:95:9",
														"trueBody": {
															"id": 1692,
															"nodeType": "Block",
															"src": "11687:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 1686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1684,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1655,
																			"src": "11705:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1687,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:9"
																},
																{
																	"expression": {
																		"id": 1690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1688,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "11735:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1691,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1694,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1655,
																	"src": "11778:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1708,
														"nodeType": "IfStatement",
														"src": "11774:95:9",
														"trueBody": {
															"id": 1707,
															"nodeType": "Block",
															"src": "11795:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 1701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1699,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1655,
																			"src": "11813:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1702,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:9"
																},
																{
																	"expression": {
																		"id": 1705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1703,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "11843:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1706,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1709,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1655,
																	"src": "11886:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1723,
														"nodeType": "IfStatement",
														"src": "11882:95:9",
														"trueBody": {
															"id": 1722,
															"nodeType": "Block",
															"src": "11903:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1714,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1655,
																			"src": "11921:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1717,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:9"
																},
																{
																	"expression": {
																		"id": 1720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1718,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "11951:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1721,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1724,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1655,
																	"src": "11994:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1734,
														"nodeType": "IfStatement",
														"src": "11990:64:9",
														"trueBody": {
															"id": 1733,
															"nodeType": "Block",
															"src": "12010:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1729,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "12028:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1732,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1736,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1661,
													"src": "12080:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1659,
												"id": 1737,
												"nodeType": "Return",
												"src": "12073:13:9"
											}
										]
									},
									"documentation": {
										"id": 1653,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:9",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "11446:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:9"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "11484:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:9"
									},
									"scope": 1779,
									"src": "11430:663:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1777,
										"nodeType": "Block",
										"src": "12329:173:9",
										"statements": [
											{
												"id": 1776,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:9",
												"statements": [
													{
														"assignments": [1751],
														"declarations": [
															{
																"constant": false,
																"id": 1751,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1776,
																"src": "12363:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1750,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1755,
														"initialValue": {
															"arguments": [
																{
																	"id": 1753,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1742,
																	"src": "12387:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1752,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1739, 1778
																],
																"referencedDeclaration": 1739,
																"src": "12380:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1756,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1751,
																"src": "12414:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$921",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1760,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1757,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1745,
																					"src": "12424:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$921",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1758,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 921,
																						"src": "12436:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$921_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1759,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12445:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 919,
																					"src": "12436:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$921",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1768,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1766,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1761,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1764,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1762,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1751,
																									"src": "12457:6:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1763,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1765,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1767,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1742,
																					"src": "12471:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1773,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1749,
														"id": 1775,
														"nodeType": "Return",
														"src": "12407:78:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1740,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:9",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "12263:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "12278:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$921",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1744,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1743,
														"name": "Rounding",
														"nameLocations": [
															"12278:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 921,
														"src": "12278:8:9"
													},
													"referencedDeclaration": 921,
													"src": "12278:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$921",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:9"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "12320:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:9"
									},
									"scope": 1779,
									"src": "12247:255:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1780,
							"src": "202:12302:9",
							"usedErrors": []
						}
					],
					"src": "103:12402:9"
				},
				"id": 9
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
				"ast": {
					"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
					"exportedSymbols": {
						"BatchOperation": [2139],
						"ContextDefinitions": [2018],
						"FlowOperatorDefinitions": [2105],
						"SuperAppDefinitions": [1942],
						"SuperfluidGovernanceConfigs": [2240]
					},
					"id": 2241,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1781,
							"literals": ["solidity", ">=", "0.8", ".4"],
							"nodeType": "PragmaDirective",
							"src": "35:25:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SuperAppDefinitions",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1782,
								"nodeType": "StructuredDocumentation",
								"src": "62:69:10",
								"text": " @title Super app definitions library\n @author Superfluid"
							},
							"fullyImplemented": true,
							"id": 1942,
							"linearizedBaseContracts": [1942],
							"name": "SuperAppDefinitions",
							"nameLocation": "140:19:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1785,
									"mutability": "constant",
									"name": "APP_LEVEL_MASK",
									"nameLocation": "615:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "589:47:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1783,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "589:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30784646",
										"id": 1784,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "632:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0xFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1790,
									"mutability": "constant",
									"name": "APP_LEVEL_FINAL",
									"nameLocation": "760:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "734:50:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1786,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "734:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"id": 1789,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 1787,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "778:1:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "30",
											"id": 1788,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "783:1:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "778:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1795,
									"mutability": "constant",
									"name": "APP_LEVEL_SECOND",
									"nameLocation": "915:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "889:51:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1791,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "889:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"id": 1794,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 1792,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "934:1:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "31",
											"id": 1793,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "939:1:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "934:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1809,
										"nodeType": "Block",
										"src": "1026:58:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1804,
																"name": "configWord",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1797,
																"src": "1049:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1805,
																"name": "APP_LEVEL_MASK",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "1062:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1049:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1043:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 1802,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1043:5:10",
															"typeDescriptions": {}
														}
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1043:34:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1801,
												"id": 1808,
												"nodeType": "Return",
												"src": "1036:41:10"
											}
										]
									},
									"id": 1810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAppCallbackLevel",
									"nameLocation": "956:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "configWord",
												"nameLocation": "984:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "976:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:20:10"
									},
									"returnParameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "1019:5:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1799,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1019:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:7:10"
									},
									"scope": 1942,
									"src": "947:137:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1815,
									"mutability": "constant",
									"name": "APP_JAIL_BIT",
									"nameLocation": "1116:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "1090:48:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1811,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1090:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_32768_by_1",
											"typeString": "int_const 32768"
										},
										"id": 1814,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 1812,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1131:1:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "3135",
											"id": 1813,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1136:2:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_15_by_1",
												"typeString": "int_const 15"
											},
											"value": "15"
										},
										"src": "1131:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32768_by_1",
											"typeString": "int_const 32768"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1830,
										"nodeType": "Block",
										"src": "1214:75:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1822,
																	"name": "configWord",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1817,
																	"src": "1232:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"expression": {
																		"id": 1823,
																		"name": "SuperAppDefinitions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "1245:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SuperAppDefinitions_$1942_$",
																			"typeString": "type(library SuperAppDefinitions)"
																		}
																	},
																	"id": 1824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1265:12:10",
																	"memberName": "APP_JAIL_BIT",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1815,
																	"src": "1245:32:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1232:45:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1826,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1231:47:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1281:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1231:51:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1821,
												"id": 1829,
												"nodeType": "Return",
												"src": "1224:58:10"
											}
										]
									},
									"id": 1831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAppJailed",
									"nameLocation": "1153:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "configWord",
												"nameLocation": "1173:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "1165:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1165:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1164:20:10"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "1208:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1819,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1208:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1207:6:10"
									},
									"scope": 1942,
									"src": "1144:145:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1836,
									"mutability": "constant",
									"name": "AGREEMENT_CALLBACK_NOOP_BITMASKS",
									"nameLocation": "1522:32:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "1496:71:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1832,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1496:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1095216660480_by_1",
											"typeString": "int_const 1095216660480"
										},
										"id": 1835,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "30784646",
											"id": 1833,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1557:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_255_by_1",
												"typeString": "int_const 255"
											},
											"value": "0xFF"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "3332",
											"id": 1834,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1565:2:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_32_by_1",
												"typeString": "int_const 32"
											},
											"value": "32"
										},
										"src": "1557:10:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1095216660480_by_1",
											"typeString": "int_const 1095216660480"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1844,
									"mutability": "constant",
									"name": "BEFORE_AGREEMENT_CREATED_NOOP",
									"nameLocation": "1599:29:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "1573:71:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1837,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1573:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_4294967296_by_1",
											"typeString": "int_const 4294967296"
										},
										"id": 1843,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 1838,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1631:1:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_32_by_1",
														"typeString": "int_const 32"
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3332",
														"id": 1839,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1637:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "30",
														"id": 1840,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1642:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1637:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_32_by_1",
														"typeString": "int_const 32"
													}
												}
											],
											"id": 1842,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1636:8:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_32_by_1",
												"typeString": "int_const 32"
											}
										},
										"src": "1631:13:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4294967296_by_1",
											"typeString": "int_const 4294967296"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1852,
									"mutability": "constant",
									"name": "AFTER_AGREEMENT_CREATED_NOOP",
									"nameLocation": "1676:28:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "1650:70:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1845,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1650:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_8589934592_by_1",
											"typeString": "int_const 8589934592"
										},
										"id": 1851,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 1846,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1707:1:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_33_by_1",
														"typeString": "int_const 33"
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3332",
														"id": 1847,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1713:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 1848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1718:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1713:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_33_by_1",
														"typeString": "int_const 33"
													}
												}
											],
											"id": 1850,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1712:8:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_33_by_1",
												"typeString": "int_const 33"
											}
										},
										"src": "1707:13:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8589934592_by_1",
											"typeString": "int_const 8589934592"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1860,
									"mutability": "constant",
									"name": "BEFORE_AGREEMENT_UPDATED_NOOP",
									"nameLocation": "1752:29:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "1726:71:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1853,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1726:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_17179869184_by_1",
											"typeString": "int_const 17179869184"
										},
										"id": 1859,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 1854,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1784:1:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_34_by_1",
														"typeString": "int_const 34"
													},
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3332",
														"id": 1855,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1790:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "32",
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1795:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1790:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_34_by_1",
														"typeString": "int_const 34"
													}
												}
											],
											"id": 1858,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1789:8:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_34_by_1",
												"typeString": "int_const 34"
											}
										},
										"src": "1784:13:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17179869184_by_1",
											"typeString": "int_const 17179869184"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1868,
									"mutability": "constant",
									"name": "AFTER_AGREEMENT_UPDATED_NOOP",
									"nameLocation": "1829:28:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "1803:70:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1861,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1803:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_34359738368_by_1",
											"typeString": "int_const 34359738368"
										},
										"id": 1867,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 1862,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1860:1:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_35_by_1",
														"typeString": "int_const 35"
													},
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3332",
														"id": 1863,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1866:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "33",
														"id": 1864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1871:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1866:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_35_by_1",
														"typeString": "int_const 35"
													}
												}
											],
											"id": 1866,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1865:8:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_35_by_1",
												"typeString": "int_const 35"
											}
										},
										"src": "1860:13:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_34359738368_by_1",
											"typeString": "int_const 34359738368"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1876,
									"mutability": "constant",
									"name": "BEFORE_AGREEMENT_TERMINATED_NOOP",
									"nameLocation": "1905:32:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "1879:74:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1869,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1879:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_68719476736_by_1",
											"typeString": "int_const 68719476736"
										},
										"id": 1875,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 1870,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1940:1:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_36_by_1",
														"typeString": "int_const 36"
													},
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3332",
														"id": 1871,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1946:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "34",
														"id": 1872,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1951:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "1946:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_36_by_1",
														"typeString": "int_const 36"
													}
												}
											],
											"id": 1874,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1945:8:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_36_by_1",
												"typeString": "int_const 36"
											}
										},
										"src": "1940:13:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_68719476736_by_1",
											"typeString": "int_const 68719476736"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1884,
									"mutability": "constant",
									"name": "AFTER_AGREEMENT_TERMINATED_NOOP",
									"nameLocation": "1985:31:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "1959:73:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1877,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1959:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_137438953472_by_1",
											"typeString": "int_const 137438953472"
										},
										"id": 1883,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 1878,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2019:1:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_37_by_1",
														"typeString": "int_const 37"
													},
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3332",
														"id": 1879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2025:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "35",
														"id": 1880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2030:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "2025:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_37_by_1",
														"typeString": "int_const 37"
													}
												}
											],
											"id": 1882,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2024:8:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_37_by_1",
												"typeString": "int_const 37"
											}
										},
										"src": "2019:13:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_137438953472_by_1",
											"typeString": "int_const 137438953472"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1887,
									"mutability": "constant",
									"name": "APP_RULE_REGISTRATION_ONLY_IN_CONSTRUCTOR",
									"nameLocation": "2250:41:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "2224:71:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1885,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2224:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1886,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2294:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1890,
									"mutability": "constant",
									"name": "APP_RULE_NO_REGISTRATION_FOR_EOA",
									"nameLocation": "2327:32:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "2301:62:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1888,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2301:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1889,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2362:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1893,
									"mutability": "constant",
									"name": "APP_RULE_NO_REVERT_ON_TERMINATION_CALLBACK",
									"nameLocation": "2395:42:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "2369:73:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1891,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2369:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1892,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2440:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1896,
									"mutability": "constant",
									"name": "APP_RULE_NO_CRITICAL_SENDER_ACCOUNT",
									"nameLocation": "2474:35:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "2448:66:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1894,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2448:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3131",
										"id": 1895,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2512:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_11_by_1",
											"typeString": "int_const 11"
										},
										"value": "11"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1899,
									"mutability": "constant",
									"name": "APP_RULE_NO_CRITICAL_RECEIVER_ACCOUNT",
									"nameLocation": "2546:37:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "2520:68:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1897,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2520:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3132",
										"id": 1898,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2586:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_12_by_1",
											"typeString": "int_const 12"
										},
										"value": "12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1902,
									"mutability": "constant",
									"name": "APP_RULE_CTX_IS_READONLY",
									"nameLocation": "2620:24:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "2594:55:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1900,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2594:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1901,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2647:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1905,
									"mutability": "constant",
									"name": "APP_RULE_CTX_IS_NOT_CLEAN",
									"nameLocation": "2681:25:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "2655:56:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1903,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2655:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3231",
										"id": 1904,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2709:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_21_by_1",
											"typeString": "int_const 21"
										},
										"value": "21"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1908,
									"mutability": "constant",
									"name": "APP_RULE_CTX_IS_MALFORMATED",
									"nameLocation": "2743:27:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "2717:58:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1906,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2717:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3232",
										"id": 1907,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2773:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_22_by_1",
											"typeString": "int_const 22"
										},
										"value": "22"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1911,
									"mutability": "constant",
									"name": "APP_RULE_COMPOSITE_APP_IS_NOT_WHITELISTED",
									"nameLocation": "2807:41:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "2781:72:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1909,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2781:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 1910,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2851:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										},
										"value": "30"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1914,
									"mutability": "constant",
									"name": "APP_RULE_COMPOSITE_APP_IS_JAILED",
									"nameLocation": "2885:32:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "2859:63:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1912,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2859:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3331",
										"id": 1913,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2920:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31_by_1",
											"typeString": "int_const 31"
										},
										"value": "31"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1917,
									"mutability": "constant",
									"name": "APP_RULE_MAX_APP_LEVEL_REACHED",
									"nameLocation": "2954:30:10",
									"nodeType": "VariableDeclaration",
									"scope": 1942,
									"src": "2928:61:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1915,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2928:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3430",
										"id": 1916,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2987:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_40_by_1",
											"typeString": "int_const 40"
										},
										"value": "40"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1940,
										"nodeType": "Block",
										"src": "3182:120:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1924,
																	"name": "configWord",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1919,
																	"src": "3200:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "~",
																	"prefix": true,
																	"src": "3213:67:10",
																	"subExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1929,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1927,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1925,
																						"name": "APP_LEVEL_MASK",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1785,
																						"src": "3215:14:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 1926,
																						"name": "APP_JAIL_BIT",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1815,
																						"src": "3232:12:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3215:29:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "|",
																				"rightExpression": {
																					"id": 1928,
																					"name": "AGREEMENT_CALLBACK_NOOP_BITMASKS",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1836,
																					"src": "3247:32:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3215:64:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1930,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3214:66:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3200:80:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1933,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3199:82:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3293:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3285:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1934,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3285:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3285:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3199:96:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1923,
												"id": 1939,
												"nodeType": "Return",
												"src": "3192:103:10"
											}
										]
									},
									"id": 1941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isConfigWordClean",
									"nameLocation": "3115:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "configWord",
												"nameLocation": "3141:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "3133:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3133:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3132:20:10"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "3176:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1921,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3176:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3175:6:10"
									},
									"scope": 1942,
									"src": "3106:196:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2241,
							"src": "132:3172:10",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ContextDefinitions",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1943,
								"nodeType": "StructuredDocumentation",
								"src": "3306:67:10",
								"text": " @title Context definitions library\n @author Superfluid"
							},
							"fullyImplemented": true,
							"id": 2018,
							"linearizedBaseContracts": [2018],
							"name": "ContextDefinitions",
							"nameLocation": "3382:18:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1946,
									"mutability": "constant",
									"name": "CALL_INFO_APP_LEVEL_MASK",
									"nameLocation": "3629:24:10",
									"nodeType": "VariableDeclaration",
									"scope": 2018,
									"src": "3603:57:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1944,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3603:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30784646",
										"id": 1945,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3656:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0xFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1949,
									"mutability": "constant",
									"name": "CALL_INFO_CALL_TYPE_SHIFT",
									"nameLocation": "3710:25:10",
									"nodeType": "VariableDeclaration",
									"scope": 2018,
									"src": "3684:56:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1947,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3684:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3332",
										"id": 1948,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3738:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1954,
									"mutability": "constant",
									"name": "CALL_INFO_CALL_TYPE_MASK",
									"nameLocation": "3772:24:10",
									"nodeType": "VariableDeclaration",
									"scope": 2018,
									"src": "3746:85:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1950,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3746:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1953,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "307846",
											"id": 1951,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3799:3:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_15_by_1",
												"typeString": "int_const 15"
											},
											"value": "0xF"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"id": 1952,
											"name": "CALL_INFO_CALL_TYPE_SHIFT",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1949,
											"src": "3806:25:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3799:32:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1957,
									"mutability": "constant",
									"name": "CALL_INFO_CALL_TYPE_AGREEMENT",
									"nameLocation": "3861:29:10",
									"nodeType": "VariableDeclaration",
									"scope": 2018,
									"src": "3837:57:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1955,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3837:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1956,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3893:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1960,
									"mutability": "constant",
									"name": "CALL_INFO_CALL_TYPE_APP_ACTION",
									"nameLocation": "3924:30:10",
									"nodeType": "VariableDeclaration",
									"scope": 2018,
									"src": "3900:58:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1958,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3900:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1959,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3957:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1963,
									"mutability": "constant",
									"name": "CALL_INFO_CALL_TYPE_APP_CALLBACK",
									"nameLocation": "3988:32:10",
									"nodeType": "VariableDeclaration",
									"scope": 2018,
									"src": "3964:60:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1961,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3964:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 1962,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4023:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1993,
										"nodeType": "Block",
										"src": "4156:172:10",
										"statements": [
											{
												"expression": {
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1972,
														"name": "appCallbackLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "4166:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1975,
																	"name": "callInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1965,
																	"src": "4191:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1976,
																	"name": "CALL_INFO_APP_LEVEL_MASK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1946,
																	"src": "4202:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4191:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4185:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 1973,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "4185:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 1978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4185:42:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4166:61:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1980,
												"nodeType": "ExpressionStatement",
												"src": "4166:61:10"
											},
											{
												"expression": {
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1981,
														"name": "callType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1970,
														"src": "4237:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1984,
																				"name": "callInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1965,
																				"src": "4255:8:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"id": 1985,
																				"name": "CALL_INFO_CALL_TYPE_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1954,
																				"src": "4266:24:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4255:35:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1987,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4254:37:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1988,
																	"name": "CALL_INFO_CALL_TYPE_SHIFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1949,
																	"src": "4295:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4254:66:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4248:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 1982,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "4248:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 1990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4248:73:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4237:84:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1992,
												"nodeType": "ExpressionStatement",
												"src": "4237:84:10"
											}
										]
									},
									"id": 1994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeCallInfo",
									"nameLocation": "4040:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "callInfo",
												"nameLocation": "4063:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "4055:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4055:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4054:18:10"
									},
									"returnParameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "appCallbackLevel",
												"nameLocation": "4118:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "4112:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1967,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4112:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "callType",
												"nameLocation": "4142:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "4136:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1969,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4136:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4111:40:10"
									},
									"scope": 2018,
									"src": "4031:297:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2016,
										"nodeType": "Block",
										"src": "4459:100:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2005,
																"name": "appCallbackLevel",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1996,
																"src": "4484:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 2004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4476:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2003,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4476:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 2006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4476:25:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "|",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2009,
																			"name": "callType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1998,
																			"src": "4513:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 2008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4505:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2007,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4505:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4505:17:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"id": 2011,
																	"name": "CALL_INFO_CALL_TYPE_SHIFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1949,
																	"src": "4526:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4505:46:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2013,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4504:48:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4476:76:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2002,
												"id": 2015,
												"nodeType": "Return",
												"src": "4469:83:10"
											}
										]
									},
									"id": 2017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encodeCallInfo",
									"nameLocation": "4343:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "appCallbackLevel",
												"nameLocation": "4364:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "4358:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1995,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4358:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "callType",
												"nameLocation": "4388:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "4382:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1997,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4382:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4357:40:10"
									},
									"returnParameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "callInfo",
												"nameLocation": "4445:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "4437:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4437:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4436:18:10"
									},
									"scope": 2018,
									"src": "4334:225:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2241,
							"src": "3374:1188:10",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FlowOperatorDefinitions",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2019,
								"nodeType": "StructuredDocumentation",
								"src": "4564:74:10",
								"text": " @title Flow Operator definitions library\n @author Superfluid"
							},
							"fullyImplemented": true,
							"id": 2105,
							"linearizedBaseContracts": [2105],
							"name": "FlowOperatorDefinitions",
							"nameLocation": "4648:23:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2027,
									"mutability": "constant",
									"name": "AUTHORIZE_FLOW_OPERATOR_CREATE",
									"nameLocation": "4702:30:10",
									"nodeType": "VariableDeclaration",
									"scope": 2105,
									"src": "4678:70:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2020,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4678:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"id": 2026,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"arguments": [
												{
													"hexValue": "31",
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4741:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													}
												],
												"id": 2022,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "4735:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint8_$",
													"typeString": "type(uint8)"
												},
												"typeName": {
													"id": 2021,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:10",
													"typeDescriptions": {}
												}
											},
											"id": 2024,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "4735:8:10",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "30",
											"id": 2025,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4747:1:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "4735:13:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2035,
									"mutability": "constant",
									"name": "AUTHORIZE_FLOW_OPERATOR_UPDATE",
									"nameLocation": "4778:30:10",
									"nodeType": "VariableDeclaration",
									"scope": 2105,
									"src": "4754:70:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2028,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4754:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"id": 2034,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"arguments": [
												{
													"hexValue": "31",
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4817:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													}
												],
												"id": 2030,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "4811:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint8_$",
													"typeString": "type(uint8)"
												},
												"typeName": {
													"id": 2029,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4811:5:10",
													"typeDescriptions": {}
												}
											},
											"id": 2032,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "4811:8:10",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "31",
											"id": 2033,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4823:1:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "4811:13:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2043,
									"mutability": "constant",
									"name": "AUTHORIZE_FLOW_OPERATOR_DELETE",
									"nameLocation": "4854:30:10",
									"nodeType": "VariableDeclaration",
									"scope": 2105,
									"src": "4830:70:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2036,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4830:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"id": 2042,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"arguments": [
												{
													"hexValue": "31",
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4893:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													}
												],
												"id": 2038,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "4887:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint8_$",
													"typeString": "type(uint8)"
												},
												"typeName": {
													"id": 2037,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4887:5:10",
													"typeDescriptions": {}
												}
											},
											"id": 2040,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "4887:8:10",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "32",
											"id": 2041,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4899:1:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"src": "4887:13:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2050,
									"mutability": "constant",
									"name": "AUTHORIZE_FULL_CONTROL",
									"nameLocation": "4930:22:10",
									"nodeType": "VariableDeclaration",
									"scope": 2105,
									"src": "4906:153:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2044,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4906:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"id": 2049,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"id": 2047,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"id": 2045,
												"name": "AUTHORIZE_FLOW_OPERATOR_CREATE",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2027,
												"src": "4963:30:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "|",
											"rightExpression": {
												"id": 2046,
												"name": "AUTHORIZE_FLOW_OPERATOR_UPDATE",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2035,
												"src": "4996:30:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"src": "4963:63:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "|",
										"rightExpression": {
											"id": 2048,
											"name": "AUTHORIZE_FLOW_OPERATOR_DELETE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2043,
											"src": "5029:30:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"src": "4963:96:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2060,
									"mutability": "constant",
									"name": "REVOKE_FLOW_OPERATOR_CREATE",
									"nameLocation": "5089:27:10",
									"nodeType": "VariableDeclaration",
									"scope": 2105,
									"src": "5065:70:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2051,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "5065:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"id": 2059,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "5119:16:10",
										"subExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 2054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5127:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5121:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 2052,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "5121:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 2055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5121:8:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "30",
														"id": 2056,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5133:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5121:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												}
											],
											"id": 2058,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "5120:15:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2070,
									"mutability": "constant",
									"name": "REVOKE_FLOW_OPERATOR_UPDATE",
									"nameLocation": "5165:27:10",
									"nodeType": "VariableDeclaration",
									"scope": 2105,
									"src": "5141:70:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2061,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "5141:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"id": 2069,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "5195:16:10",
										"subExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2067,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 2064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5203:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5197:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 2062,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "5197:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 2065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5197:8:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "31",
														"id": 2066,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5209:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5197:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												}
											],
											"id": 2068,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "5196:15:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2080,
									"mutability": "constant",
									"name": "REVOKE_FLOW_OPERATOR_DELETE",
									"nameLocation": "5241:27:10",
									"nodeType": "VariableDeclaration",
									"scope": 2105,
									"src": "5217:70:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2071,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "5217:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"id": 2079,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "5271:16:10",
										"subExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 2074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5279:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5273:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 2072,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "5273:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 2075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5273:8:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "32",
														"id": 2076,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5285:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "5273:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												}
											],
											"id": 2078,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "5272:15:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2103,
										"nodeType": "Block",
										"src": "5370:209:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2087,
																	"name": "permissions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "5401:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "~",
																	"prefix": true,
																	"src": "5415:131:10",
																	"subExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 2092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					"id": 2090,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2088,
																						"name": "AUTHORIZE_FLOW_OPERATOR_CREATE",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2027,
																						"src": "5417:30:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 2089,
																						"name": "AUTHORIZE_FLOW_OPERATOR_UPDATE",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2035,
																						"src": "5466:30:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "5417:79:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "|",
																				"rightExpression": {
																					"id": 2091,
																					"name": "AUTHORIZE_FLOW_OPERATOR_DELETE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2043,
																					"src": "5515:30:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "5417:128:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 2093,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5416:130:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5401:145:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"id": 2096,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5387:173:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5570:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5564:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 2097,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "5564:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 2100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5564:8:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5387:185:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2086,
												"id": 2102,
												"nodeType": "Return",
												"src": "5380:192:10"
											}
										]
									},
									"id": 2104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isPermissionsClean",
									"nameLocation": "5303:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "permissions",
												"nameLocation": "5328:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "5322:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2081,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5322:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5321:19:10"
									},
									"returnParameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "5364:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2084,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5364:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5363:6:10"
									},
									"scope": 2105,
									"src": "5294:285:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2241,
							"src": "4640:942:10",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BatchOperation",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2106,
								"nodeType": "StructuredDocumentation",
								"src": "5584:63:10",
								"text": " @title Batch operation library\n @author Superfluid"
							},
							"fullyImplemented": true,
							"id": 2139,
							"linearizedBaseContracts": [2139],
							"name": "BatchOperation",
							"nameLocation": "5656:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 2107,
										"nodeType": "StructuredDocumentation",
										"src": "5677:200:10",
										"text": " @dev ERC20.approve batch operation type\n Call spec:\n ISuperToken(target).operationApprove(\n     abi.decode(data, (address spender, uint256 amount))\n )"
									},
									"id": 2110,
									"mutability": "constant",
									"name": "OPERATION_TYPE_ERC20_APPROVE",
									"nameLocation": "5907:28:10",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "5882:57:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 2108,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "5882:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5938:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2111,
										"nodeType": "StructuredDocumentation",
										"src": "5945:227:10",
										"text": " @dev ERC20.transferFrom batch operation type\n Call spec:\n ISuperToken(target).operationTransferFrom(\n     abi.decode(data, (address sender, address recipient, uint256 amount)\n )"
									},
									"id": 2114,
									"mutability": "constant",
									"name": "OPERATION_TYPE_ERC20_TRANSFER_FROM",
									"nameLocation": "6202:34:10",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "6177:63:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 2112,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "6177:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 2113,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6239:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2115,
										"nodeType": "StructuredDocumentation",
										"src": "6246:187:10",
										"text": " @dev SuperToken.upgrade batch operation type\n Call spec:\n ISuperToken(target).operationUpgrade(\n     abi.decode(data, (uint256 amount)\n )"
									},
									"id": 2120,
									"mutability": "constant",
									"name": "OPERATION_TYPE_SUPERTOKEN_UPGRADE",
									"nameLocation": "6463:33:10",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "6438:68:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 2116,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "6438:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_101_by_1",
											"typeString": "int_const 101"
										},
										"id": 2119,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 2117,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "6499:1:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"hexValue": "313030",
											"id": 2118,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "6503:3:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "6499:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_101_by_1",
											"typeString": "int_const 101"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2121,
										"nodeType": "StructuredDocumentation",
										"src": "6512:191:10",
										"text": " @dev SuperToken.downgrade batch operation type\n Call spec:\n ISuperToken(target).operationDowngrade(\n     abi.decode(data, (uint256 amount)\n )"
									},
									"id": 2126,
									"mutability": "constant",
									"name": "OPERATION_TYPE_SUPERTOKEN_DOWNGRADE",
									"nameLocation": "6733:35:10",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "6708:70:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 2122,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "6708:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_102_by_1",
											"typeString": "int_const 102"
										},
										"id": 2125,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "32",
											"id": 2123,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "6771:1:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"hexValue": "313030",
											"id": 2124,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "6775:3:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "6771:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_102_by_1",
											"typeString": "int_const 102"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2127,
										"nodeType": "StructuredDocumentation",
										"src": "6784:223:10",
										"text": " @dev Superfluid.callAgreement batch operation type\n Call spec:\n callAgreement(\n     ISuperAgreement(target)),\n     abi.decode(data, (bytes calldata, bytes userdata)\n )"
									},
									"id": 2132,
									"mutability": "constant",
									"name": "OPERATION_TYPE_SUPERFLUID_CALL_AGREEMENT",
									"nameLocation": "7037:40:10",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "7012:75:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 2128,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "7012:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_201_by_1",
											"typeString": "int_const 201"
										},
										"id": 2131,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 2129,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "7080:1:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"hexValue": "323030",
											"id": 2130,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "7084:3:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_200_by_1",
												"typeString": "int_const 200"
											},
											"value": "200"
										},
										"src": "7080:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_201_by_1",
											"typeString": "int_const 201"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2133,
										"nodeType": "StructuredDocumentation",
										"src": "7093:172:10",
										"text": " @dev Superfluid.callAppAction batch operation type\n Call spec:\n callAppAction(\n     ISuperApp(target)),\n     data\n )"
									},
									"id": 2138,
									"mutability": "constant",
									"name": "OPERATION_TYPE_SUPERFLUID_CALL_APP_ACTION",
									"nameLocation": "7295:41:10",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "7270:76:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 2134,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "7270:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_202_by_1",
											"typeString": "int_const 202"
										},
										"id": 2137,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "32",
											"id": 2135,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "7339:1:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"hexValue": "323030",
											"id": 2136,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "7343:3:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_200_by_1",
												"typeString": "int_const 200"
											},
											"value": "200"
										},
										"src": "7339:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_202_by_1",
											"typeString": "int_const 202"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 2241,
							"src": "5648:1701:10",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SuperfluidGovernanceConfigs",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2140,
								"nodeType": "StructuredDocumentation",
								"src": "7351:77:10",
								"text": " @title Superfluid governance configs library\n @author Superfluid"
							},
							"fullyImplemented": true,
							"id": 2240,
							"linearizedBaseContracts": [2240],
							"name": "SuperfluidGovernanceConfigs",
							"nameLocation": "7437:27:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2145,
									"mutability": "constant",
									"name": "SUPERFLUID_REWARD_ADDRESS_CONFIG_KEY",
									"nameLocation": "7498:36:10",
									"nodeType": "VariableDeclaration",
									"scope": 2240,
									"src": "7472:133:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2141,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "7472:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "6f72672e7375706572666c7569642d66696e616e63652e7375706572666c7569642e72657761726441646472657373",
												"id": 2143,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7555:49:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f60ae461adf056670e03ae602566409933242392cb06744f5747c9f38b05d09",
													"typeString": "literal_string \"org.superfluid-finance.superfluid.rewardAddress\""
												},
												"value": "org.superfluid-finance.superfluid.rewardAddress"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f60ae461adf056670e03ae602566409933242392cb06744f5747c9f38b05d09",
													"typeString": "literal_string \"org.superfluid-finance.superfluid.rewardAddress\""
												}
											],
											"id": 2142,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "7545:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2144,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7545:60:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2150,
									"mutability": "constant",
									"name": "CFAV1_PPP_CONFIG_KEY",
									"nameLocation": "7637:20:10",
									"nodeType": "VariableDeclaration",
									"scope": 2240,
									"src": "7611:145:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2146,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "7611:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "6f72672e7375706572666c7569642d66696e616e63652e61677265656d656e74732e436f6e7374616e74466c6f7741677265656d656e742e76312e505050436f6e66696775726174696f6e",
												"id": 2148,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7678:77:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e420d96e81cb4a6b2abb2366c4f93312d4e2ae878a7d4b22e73472fdad891f78",
													"typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1.PPPConfiguration\""
												},
												"value": "org.superfluid-finance.agreements.ConstantFlowAgreement.v1.PPPConfiguration"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e420d96e81cb4a6b2abb2366c4f93312d4e2ae878a7d4b22e73472fdad891f78",
													"typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1.PPPConfiguration\""
												}
											],
											"id": 2147,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "7668:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2149,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7668:88:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2155,
									"mutability": "constant",
									"name": "SUPERTOKEN_MINIMUM_DEPOSIT_KEY",
									"nameLocation": "7788:30:10",
									"nodeType": "VariableDeclaration",
									"scope": 2240,
									"src": "7762:138:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2151,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "7762:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "6f72672e7375706572666c7569642d66696e616e63652e7375706572666c7569642e7375706572546f6b656e4d696e696d756d4465706f736974",
												"id": 2153,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7839:60:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_eae305fa863b373417e615b1044222e2806cefc7788d169ce6748a443c3f6cc4",
													"typeString": "literal_string \"org.superfluid-finance.superfluid.superTokenMinimumDeposit\""
												},
												"value": "org.superfluid-finance.superfluid.superTokenMinimumDeposit"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_eae305fa863b373417e615b1044222e2806cefc7788d169ce6748a443c3f6cc4",
													"typeString": "literal_string \"org.superfluid-finance.superfluid.superTokenMinimumDeposit\""
												}
											],
											"id": 2152,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "7829:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2154,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7829:71:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2170,
										"nodeType": "Block",
										"src": "7996:135:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6f72672e7375706572666c7569642d66696e616e63652e7375706572666c7569642e74727573746564466f72776172646572",
																	"id": 2165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8047:52:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_5e8d8c86403ce515d0afc5f813484261c20de0e66deea95df3a7de50a4365fdd",
																		"typeString": "literal_string \"org.superfluid-finance.superfluid.trustedForwarder\""
																	},
																	"value": "org.superfluid-finance.superfluid.trustedForwarder"
																},
																{
																	"id": 2166,
																	"name": "forwarder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2157,
																	"src": "8113:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_5e8d8c86403ce515d0afc5f813484261c20de0e66deea95df3a7de50a4365fdd",
																		"typeString": "literal_string \"org.superfluid-finance.superfluid.trustedForwarder\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2163,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "8023:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8027:6:10",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "8023:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8023:100:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2162,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "8013:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8013:111:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2161,
												"id": 2169,
												"nodeType": "Return",
												"src": "8006:118:10"
											}
										]
									},
									"id": 2171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedForwarderConfigKey",
									"nameLocation": "7916:28:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "forwarder",
												"nameLocation": "7953:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "7945:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7945:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7944:19:10"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "7987:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2159,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7987:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7986:9:10"
									},
									"scope": 2240,
									"src": "7907:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2189,
										"nodeType": "Block",
										"src": "8255:178:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6f72672e7375706572666c7569642d66696e616e63652e7375706572666c7569642e61707057686974654c697374696e672e726567697374726174696f6e4b6579",
																	"id": 2183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8306:67:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2ac2eda5c308a51ed3bd3433d0d20fe487916751b3404fa382719429ef24259a",
																		"typeString": "literal_string \"org.superfluid-finance.superfluid.appWhiteListing.registrationKey\""
																	},
																	"value": "org.superfluid-finance.superfluid.appWhiteListing.registrationKey"
																},
																{
																	"id": 2184,
																	"name": "deployer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2173,
																	"src": "8387:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2185,
																	"name": "registrationKey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2175,
																	"src": "8409:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_2ac2eda5c308a51ed3bd3433d0d20fe487916751b3404fa382719429ef24259a",
																		"typeString": "literal_string \"org.superfluid-finance.superfluid.appWhiteListing.registrationKey\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 2181,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "8282:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8286:6:10",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "8282:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8282:143:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2180,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "8272:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8272:154:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2179,
												"id": 2188,
												"nodeType": "Return",
												"src": "8265:161:10"
											}
										]
									},
									"id": 2190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAppRegistrationConfigKey",
									"nameLocation": "8146:27:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "8182:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "8174:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8174:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "registrationKey",
												"nameLocation": "8206:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "8192:29:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2174,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8192:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8173:49:10"
									},
									"returnParameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "8246:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2177,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8246:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8245:9:10"
									},
									"scope": 2240,
									"src": "8137:296:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2205,
										"nodeType": "Block",
										"src": "8520:140:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6f72672e7375706572666c7569642d66696e616e63652e7375706572666c7569642e61707057686974654c697374696e672e666163746f7279",
																	"id": 2200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8571:59:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_3a9ec29d76a01dd4676b43ee8f5ae7a021577f823fb495dfb5627ad6bbb890b6",
																		"typeString": "literal_string \"org.superfluid-finance.superfluid.appWhiteListing.factory\""
																	},
																	"value": "org.superfluid-finance.superfluid.appWhiteListing.factory"
																},
																{
																	"id": 2201,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2192,
																	"src": "8644:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_3a9ec29d76a01dd4676b43ee8f5ae7a021577f823fb495dfb5627ad6bbb890b6",
																		"typeString": "literal_string \"org.superfluid-finance.superfluid.appWhiteListing.factory\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2198,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "8547:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8551:6:10",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "8547:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8547:105:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2197,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "8537:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8537:116:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2196,
												"id": 2204,
												"nodeType": "Return",
												"src": "8530:123:10"
											}
										]
									},
									"id": 2206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAppFactoryConfigKey",
									"nameLocation": "8448:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "8479:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "8471:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8471:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8470:17:10"
									},
									"returnParameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "8511:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8511:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8510:9:10"
									},
									"scope": 2240,
									"src": "8439:221:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2238,
										"nodeType": "Block",
										"src": "8785:129:10",
										"statements": [
											{
												"expression": {
													"id": 2226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2215,
														"name": "liquidationPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "8795:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2216,
																		"name": "pppConfig",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2208,
																		"src": "8816:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3332",
																		"id": 2217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8829:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	"src": "8816:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2219,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8815:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8840:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		},
																		"typeName": {
																			"id": 2221,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "8840:6:10",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		}
																	],
																	"id": 2220,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "8835:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8835:12:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint32",
																	"typeString": "type(uint32)"
																}
															},
															"id": 2224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "8848:3:10",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "8835:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "8815:36:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8795:56:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2227,
												"nodeType": "ExpressionStatement",
												"src": "8795:56:10"
											},
											{
												"expression": {
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2228,
														"name": "patricianPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "8861:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2229,
															"name": "pppConfig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2208,
															"src": "8879:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8896:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		},
																		"typeName": {
																			"id": 2231,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "8896:6:10",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		}
																	],
																	"id": 2230,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "8891:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8891:12:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint32",
																	"typeString": "type(uint32)"
																}
															},
															"id": 2234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "8904:3:10",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "8891:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "8879:28:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8861:46:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2237,
												"nodeType": "ExpressionStatement",
												"src": "8861:46:10"
											}
										]
									},
									"id": 2239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodePPPConfig",
									"nameLocation": "8675:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "pppConfig",
												"nameLocation": "8699:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "8691:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8691:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8690:19:10"
									},
									"returnParameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "liquidationPeriod",
												"nameLocation": "8741:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "8733:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8733:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "patricianPeriod",
												"nameLocation": "8768:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "8760:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8760:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8732:52:10"
									},
									"scope": 2240,
									"src": "8666:248:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2241,
							"src": "7429:1487:10",
							"usedErrors": []
						}
					],
					"src": "35:8882:10"
				},
				"id": 10
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
				"ast": {
					"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
					"exportedSymbols": {
						"ISuperAgreement": [2269],
						"ISuperfluidToken": [3848]
					},
					"id": 2270,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2242,
							"literals": ["solidity", ">=", "0.8", ".4"],
							"nodeType": "PragmaDirective",
							"src": "35:25:11"
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
							"file": "./ISuperfluidToken.sol",
							"id": 2244,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2270,
							"sourceUnit": 3849,
							"src": "62:58:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2243,
										"name": "ISuperfluidToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3848,
										"src": "71:16:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISuperAgreement",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2245,
								"nodeType": "StructuredDocumentation",
								"src": "122:65:11",
								"text": " @title Super agreement interface\n @author Superfluid"
							},
							"fullyImplemented": false,
							"id": 2269,
							"linearizedBaseContracts": [2269],
							"name": "ISuperAgreement",
							"nameLocation": "198:15:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2246,
										"nodeType": "StructuredDocumentation",
										"src": "221:59:11",
										"text": " @dev Get the type of the agreement class"
									},
									"functionSelector": "7730599e",
									"id": 2251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "agreementType",
									"nameLocation": "294:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "307:2:11"
									},
									"returnParameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "333:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2248,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:9:11"
									},
									"scope": 2269,
									"src": "285:57:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2252,
										"nodeType": "StructuredDocumentation",
										"src": "348:425:11",
										"text": " @dev Calculate the real-time balance for the account of this agreement class\n @param account Account the state belongs to\n @param time Time used for the calculation\n @return dynamicBalance Dynamic balance portion of real-time balance of this agreement\n @return deposit Account deposit amount of this agreement\n @return owedDeposit Account owed deposit amount of this agreement"
									},
									"functionSelector": "9b2e48bc",
									"id": 2268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "realtimeBalanceOf",
									"nameLocation": "787:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "814:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidToken_$3848",
													"typeString": "contract ISuperfluidToken"
												},
												"typeName": {
													"id": 2254,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2253,
														"name": "ISuperfluidToken",
														"nameLocations": [
															"814:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3848,
														"src": "814:16:11"
													},
													"referencedDeclaration": 3848,
													"src": "814:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidToken_$3848",
														"typeString": "contract ISuperfluidToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "854:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "846:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "879:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "871:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "871:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:85:11"
									},
									"returnParameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "dynamicBalance",
												"nameLocation": "957:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "950:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2261,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "950:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "deposit",
												"nameLocation": "993:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "985:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "owedDeposit",
												"nameLocation": "1022:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "1014:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1014:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "936:107:11"
									},
									"scope": 2269,
									"src": "778:266:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2270,
							"src": "188:859:11",
							"usedErrors": []
						}
					],
					"src": "35:1013:11"
				},
				"id": 11
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
				"ast": {
					"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
					"exportedSymbols": {
						"ISuperApp": [2383],
						"ISuperToken": [2783]
					},
					"id": 2384,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2271,
							"literals": ["solidity", ">=", "0.8", ".4"],
							"nodeType": "PragmaDirective",
							"src": "35:25:12"
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
							"file": "./ISuperToken.sol",
							"id": 2273,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2384,
							"sourceUnit": 2784,
							"src": "62:48:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2272,
										"name": "ISuperToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2783,
										"src": "71:11:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISuperApp",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2274,
								"nodeType": "StructuredDocumentation",
								"src": "112:133:12",
								"text": " @title SuperApp interface\n @author Superfluid\n @dev Be aware of the app being jailed, when the word permitted is used."
							},
							"fullyImplemented": false,
							"id": 2383,
							"linearizedBaseContracts": [2383],
							"name": "ISuperApp",
							"nameLocation": "256:9:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2275,
										"nodeType": "StructuredDocumentation",
										"src": "273:630:12",
										"text": " @dev Callback before a new agreement is created.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param ctx The context data.\n @return cbdata A free format in memory data the app can use to pass\n          arbitary information to the after-hook callback.\n @custom:note \n - It will be invoked with `staticcall`, no state changes are permitted.\n - Only revert with a \"reason\" is permitted."
									},
									"functionSelector": "30d9c915",
									"id": 2291,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beforeAgreementCreated",
									"nameLocation": "917:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "961:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "949:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$2783",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 2277,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2276,
														"name": "ISuperToken",
														"nameLocations": [
															"949:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2783,
														"src": "949:11:12"
													},
													"referencedDeclaration": 2783,
													"src": "949:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$2783",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "989:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "981:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "981:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "agreementId",
												"nameLocation": "1021:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "1013:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2281,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "agreementData",
												"nameLocation": "1057:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "1042:28:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2283,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1042:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "1095:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "1080:18:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2285,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1080:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:165:12"
									},
									"returnParameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "cbdata",
												"nameLocation": "1165:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "1152:19:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1152:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1151:21:12"
									},
									"scope": 2383,
									"src": "908:265:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2292,
										"nodeType": "StructuredDocumentation",
										"src": "1179:579:12",
										"text": " @dev Callback after a new agreement is created.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param cbdata The data returned from the before-hook callback.\n @param ctx The context data.\n @return newCtx The current context of the transaction.\n @custom:note \n - State changes is permitted.\n - Only revert with a \"reason\" is permitted."
									},
									"functionSelector": "d86ed3e5",
									"id": 2310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "afterAgreementCreated",
									"nameLocation": "1772:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "1815:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "1803:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$2783",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 2294,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2293,
														"name": "ISuperToken",
														"nameLocations": [
															"1803:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2783,
														"src": "1803:11:12"
													},
													"referencedDeclaration": 2783,
													"src": "1803:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$2783",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "1843:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "1835:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "agreementId",
												"nameLocation": "1875:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "1867:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2298,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1867:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "agreementData",
												"nameLocation": "1911:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "1896:28:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2300,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1896:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "cbdata",
												"nameLocation": "1949:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "1934:21:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1934:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "1980:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "1965:18:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1965:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1793:196:12"
									},
									"returnParameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "newCtx",
												"nameLocation": "2037:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "2024:19:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2307,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2024:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2023:21:12"
									},
									"scope": 2383,
									"src": "1763:282:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2311,
										"nodeType": "StructuredDocumentation",
										"src": "2051:630:12",
										"text": " @dev Callback before a new agreement is updated.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param ctx The context data.\n @return cbdata A free format in memory data the app can use to pass\n          arbitary information to the after-hook callback.\n @custom:note \n - It will be invoked with `staticcall`, no state changes are permitted.\n - Only revert with a \"reason\" is permitted."
									},
									"functionSelector": "884d1f40",
									"id": 2327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beforeAgreementUpdated",
									"nameLocation": "2695:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "2739:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "2727:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$2783",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 2313,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2312,
														"name": "ISuperToken",
														"nameLocations": [
															"2727:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2783,
														"src": "2727:11:12"
													},
													"referencedDeclaration": 2783,
													"src": "2727:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$2783",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "2767:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "2759:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2759:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "agreementId",
												"nameLocation": "2799:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "2791:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2317,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "agreementData",
												"nameLocation": "2835:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "2820:28:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2319,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2820:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "2873:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "2858:18:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2858:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:165:12"
									},
									"returnParameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "cbdata",
												"nameLocation": "2943:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "2930:19:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2324,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2930:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2929:21:12"
									},
									"scope": 2383,
									"src": "2686:265:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2328,
										"nodeType": "StructuredDocumentation",
										"src": "2958:566:12",
										"text": " @dev Callback after a new agreement is updated.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param cbdata The data returned from the before-hook callback.\n @param ctx The context data.\n @return newCtx The current context of the transaction.\n @custom:note \n - State changes is permitted.\n - Only revert with a \"reason\" is permitted."
									},
									"functionSelector": "230dbd29",
									"id": 2346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "afterAgreementUpdated",
									"nameLocation": "3538:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "3581:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "3569:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$2783",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 2330,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2329,
														"name": "ISuperToken",
														"nameLocations": [
															"3569:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2783,
														"src": "3569:11:12"
													},
													"referencedDeclaration": 2783,
													"src": "3569:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$2783",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "3609:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "3601:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3601:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "agreementId",
												"nameLocation": "3641:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "3633:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2334,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3633:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "agreementData",
												"nameLocation": "3677:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "3662:28:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2336,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3662:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "cbdata",
												"nameLocation": "3715:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "3700:21:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2338,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3700:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "3746:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "3731:18:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3731:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3559:196:12"
									},
									"returnParameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "newCtx",
												"nameLocation": "3803:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "3790:19:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3789:21:12"
									},
									"scope": 2383,
									"src": "3529:282:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2347,
										"nodeType": "StructuredDocumentation",
										"src": "3817:588:12",
										"text": " @dev Callback before a new agreement is terminated.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param ctx The context data.\n @return cbdata A free format in memory data the app can use to pass arbitary information to the after-hook callback.\n @custom:note \n - It will be invoked with `staticcall`, no state changes are permitted.\n - Revert is not permitted."
									},
									"functionSelector": "5f9e7d77",
									"id": 2363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beforeAgreementTerminated",
									"nameLocation": "4419:25:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "4466:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "4454:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$2783",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 2349,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2348,
														"name": "ISuperToken",
														"nameLocations": [
															"4454:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2783,
														"src": "4454:11:12"
													},
													"referencedDeclaration": 2783,
													"src": "4454:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$2783",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "4494:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "4486:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "agreementId",
												"nameLocation": "4526:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "4518:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2353,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4518:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "agreementData",
												"nameLocation": "4562:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "4547:28:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4547:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "4600:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "4585:18:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2357,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4585:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:165:12"
									},
									"returnParameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "cbdata",
												"nameLocation": "4670:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "4657:19:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4657:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4656:21:12"
									},
									"scope": 2383,
									"src": "4410:268:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2364,
										"nodeType": "StructuredDocumentation",
										"src": "4684:552:12",
										"text": " @dev Callback after a new agreement is terminated.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param cbdata The data returned from the before-hook callback.\n @param ctx The context data.\n @return newCtx The current context of the transaction.\n @custom:note \n - State changes is permitted.\n - Revert is not permitted."
									},
									"functionSelector": "53c11f99",
									"id": 2382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "afterAgreementTerminated",
									"nameLocation": "5250:24:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "5296:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "5284:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$2783",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 2366,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2365,
														"name": "ISuperToken",
														"nameLocations": [
															"5284:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2783,
														"src": "5284:11:12"
													},
													"referencedDeclaration": 2783,
													"src": "5284:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$2783",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "5324:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "5316:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "agreementId",
												"nameLocation": "5356:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "5348:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2370,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5348:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "agreementData",
												"nameLocation": "5392:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "5377:28:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2372,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5377:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "cbdata",
												"nameLocation": "5430:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "5415:21:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5415:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "5461:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "5446:18:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2376,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5446:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5274:196:12"
									},
									"returnParameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "newCtx",
												"nameLocation": "5518:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "5505:19:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5505:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5504:21:12"
									},
									"scope": 2383,
									"src": "5241:285:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2384,
							"src": "246:5282:12",
							"usedErrors": []
						}
					],
					"src": "35:5494:12"
				},
				"id": 12
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
				"ast": {
					"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
					"exportedSymbols": {
						"IERC20": [518],
						"IERC777": [681],
						"ISuperToken": [2783],
						"ISuperfluid": [3433],
						"ISuperfluidToken": [3848],
						"TokenInfo": [3882]
					},
					"id": 2784,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2385,
							"literals": ["solidity", ">=", "0.8", ".4"],
							"nodeType": "PragmaDirective",
							"src": "35:25:13"
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
							"file": "./ISuperfluid.sol",
							"id": 2387,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2784,
							"sourceUnit": 3434,
							"src": "62:48:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2386,
										"name": "ISuperfluid",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3433,
										"src": "71:11:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
							"file": "./ISuperfluidToken.sol",
							"id": 2389,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2784,
							"sourceUnit": 3849,
							"src": "111:58:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2388,
										"name": "ISuperfluidToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3848,
										"src": "120:16:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
							"file": "../tokens/TokenInfo.sol",
							"id": 2391,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2784,
							"sourceUnit": 3883,
							"src": "170:52:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2390,
										"name": "TokenInfo",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3882,
										"src": "179:9:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
							"file": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
							"id": 2393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2784,
							"sourceUnit": 682,
							"src": "223:75:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2392,
										"name": "IERC777",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 681,
										"src": "232:7:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2395,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2784,
							"sourceUnit": 519,
							"src": "299:72:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2394,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 518,
										"src": "308:6:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2397,
										"name": "ISuperfluidToken",
										"nameLocations": ["496:16:13"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3848,
										"src": "496:16:13"
									},
									"id": 2398,
									"nodeType": "InheritanceSpecifier",
									"src": "496:16:13"
								},
								{
									"baseName": {
										"id": 2399,
										"name": "TokenInfo",
										"nameLocations": ["514:9:13"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3882,
										"src": "514:9:13"
									},
									"id": 2400,
									"nodeType": "InheritanceSpecifier",
									"src": "514:9:13"
								},
								{
									"baseName": {
										"id": 2401,
										"name": "IERC20",
										"nameLocations": ["525:6:13"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 518,
										"src": "525:6:13"
									},
									"id": 2402,
									"nodeType": "InheritanceSpecifier",
									"src": "525:6:13"
								},
								{
									"baseName": {
										"id": 2403,
										"name": "IERC777",
										"nameLocations": ["533:7:13"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 681,
										"src": "533:7:13"
									},
									"id": 2404,
									"nodeType": "InheritanceSpecifier",
									"src": "533:7:13"
								}
							],
							"canonicalName": "ISuperToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2396,
								"nodeType": "StructuredDocumentation",
								"src": "373:97:13",
								"text": " @title Super token (Superfluid Token + ERC20 + ERC777) interface\n @author Superfluid"
							},
							"fullyImplemented": false,
							"id": 2783,
							"linearizedBaseContracts": [
								2783, 681, 518, 3882, 3848
							],
							"name": "ISuperToken",
							"nameLocation": "481:11:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "f7f02227",
									"id": 2406,
									"name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER",
									"nameLocation": "728:45:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:13"
									},
									"src": "722:54:13"
								},
								{
									"errorSelector": "fe737d05",
									"id": 2408,
									"name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT",
									"nameLocation": "807:39:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:13"
									},
									"src": "801:48:13"
								},
								{
									"errorSelector": "e3e13698",
									"id": 2410,
									"name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED",
									"nameLocation": "886:51:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "937:2:13"
									},
									"src": "880:60:13"
								},
								{
									"errorSelector": "f79cf656",
									"id": 2412,
									"name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN",
									"nameLocation": "965:31:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "996:2:13"
									},
									"src": "959:40:13"
								},
								{
									"errorSelector": "7ffa6648",
									"id": 2414,
									"name": "SUPER_TOKEN_ONLY_SELF",
									"nameLocation": "1044:21:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1065:2:13"
									},
									"src": "1038:30:13"
								},
								{
									"errorSelector": "98f73704",
									"id": 2416,
									"name": "SUPER_TOKEN_ONLY_HOST",
									"nameLocation": "1123:21:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1144:2:13"
									},
									"src": "1117:30:13"
								},
								{
									"errorSelector": "81638627",
									"id": 2418,
									"name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS",
									"nameLocation": "1202:37:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1239:2:13"
									},
									"src": "1196:46:13"
								},
								{
									"errorSelector": "df070274",
									"id": 2420,
									"name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS",
									"nameLocation": "1281:35:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1316:2:13"
									},
									"src": "1275:44:13"
								},
								{
									"errorSelector": "ba2ab184",
									"id": 2422,
									"name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS",
									"nameLocation": "1360:34:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1394:2:13"
									},
									"src": "1354:43:13"
								},
								{
									"errorSelector": "0d243157",
									"id": 2424,
									"name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS",
									"nameLocation": "1439:32:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1471:2:13"
									},
									"src": "1433:41:13"
								},
								{
									"errorSelector": "eecd6c9b",
									"id": 2426,
									"name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS",
									"nameLocation": "1518:38:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1556:2:13"
									},
									"src": "1512:47:13"
								},
								{
									"errorSelector": "e219bd39",
									"id": 2428,
									"name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS",
									"nameLocation": "1597:36:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1633:2:13"
									},
									"src": "1591:45:13"
								},
								{
									"documentation": {
										"id": 2429,
										"nodeType": "StructuredDocumentation",
										"src": "1671:47:13",
										"text": " @dev Initialize the contract"
									},
									"functionSelector": "42fe0980",
									"id": 2441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "1732:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "underlyingToken",
												"nameLocation": "1759:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "1752:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$518",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2431,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2430,
														"name": "IERC20",
														"nameLocations": [
															"1752:6:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 518,
														"src": "1752:6:13"
													},
													"referencedDeclaration": 518,
													"src": "1752:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$518",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "underlyingDecimals",
												"nameLocation": "1790:18:13",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "1784:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2433,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1784:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1834:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "1818:17:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2435,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1818:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1861:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "1845:17:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2437,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1845:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1742:126:13"
									},
									"returnParameters": {
										"id": 2440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1877:0:13"
									},
									"scope": 2783,
									"src": "1723:155:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [567, 3869],
									"documentation": {
										"id": 2442,
										"nodeType": "StructuredDocumentation",
										"src": "2069:54:13",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2137:4:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2446,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2444,
												"name": "IERC777",
												"nameLocations": ["2167:7:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 681,
												"src": "2167:7:13"
											},
											{
												"id": 2445,
												"name": "TokenInfo",
												"nameLocations": ["2176:9:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3882,
												"src": "2176:9:13"
											}
										],
										"src": "2158:28:13"
									},
									"parameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2141:2:13"
									},
									"returnParameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "2196:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2447,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2196:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2195:15:13"
									},
									"scope": 2783,
									"src": "2128:83:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [573, 3875],
									"documentation": {
										"id": 2451,
										"nodeType": "StructuredDocumentation",
										"src": "2217:102:13",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 2459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2333:6:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2455,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2453,
												"name": "IERC777",
												"nameLocations": ["2365:7:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 681,
												"src": "2365:7:13"
											},
											{
												"id": 2454,
												"name": "TokenInfo",
												"nameLocations": ["2374:9:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3882,
												"src": "2374:9:13"
											}
										],
										"src": "2356:28:13"
									},
									"parameters": {
										"id": 2452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2339:2:13"
									},
									"returnParameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2459,
												"src": "2394:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2456,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2394:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2393:15:13"
									},
									"scope": 2783,
									"src": "2324:85:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [3881],
									"documentation": {
										"id": 2460,
										"nodeType": "StructuredDocumentation",
										"src": "2415:669:13",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n @custom:note SuperToken always uses 18 decimals.\n This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 2467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3098:8:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2463,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2462,
												"name": "TokenInfo",
												"nameLocations": ["3132:9:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3882,
												"src": "3132:9:13"
											}
										],
										"src": "3123:19:13"
									},
									"parameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3106:2:13"
									},
									"returnParameters": {
										"id": 2466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "3152:5:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2464,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3152:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3151:7:13"
									},
									"scope": 2783,
									"src": "3089:70:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [467, 585],
									"documentation": {
										"id": 2468,
										"nodeType": "StructuredDocumentation",
										"src": "3346:49:13",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 2476,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3409:11:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2472,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2470,
												"name": "IERC777",
												"nameLocations": ["3446:7:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 681,
												"src": "3446:7:13"
											},
											{
												"id": 2471,
												"name": "IERC20",
												"nameLocations": ["3455:6:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 518,
												"src": "3455:6:13"
											}
										],
										"src": "3437:25:13"
									},
									"parameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3420:2:13"
									},
									"returnParameters": {
										"id": 2475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "3472:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3472:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3471:9:13"
									},
									"scope": 2783,
									"src": "3400:81:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [475, 593],
									"documentation": {
										"id": 2477,
										"nodeType": "StructuredDocumentation",
										"src": "3487:83:13",
										"text": " @dev Returns the amount of tokens owned by an account (`owner`)."
									},
									"functionSelector": "70a08231",
									"id": 2487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3584:9:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2483,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2481,
												"name": "IERC777",
												"nameLocations": ["3634:7:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 681,
												"src": "3634:7:13"
											},
											{
												"id": 2482,
												"name": "IERC20",
												"nameLocations": ["3643:6:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 518,
												"src": "3643:6:13"
											}
										],
										"src": "3625:25:13"
									},
									"parameters": {
										"id": 2480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3602:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "3594:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3594:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:17:13"
									},
									"returnParameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "3667:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "3659:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3659:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3658:17:13"
									},
									"scope": 2783,
									"src": "3575:101:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [485],
									"documentation": {
										"id": 2488,
										"nodeType": "StructuredDocumentation",
										"src": "3854:233:13",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n @return Returns Success a boolean value indicating whether the operation succeeded.\n @custom:emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4101:8:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2495,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2494,
												"name": "IERC20",
												"nameLocations": ["4163:6:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 518,
												"src": "4163:6:13"
											}
										],
										"src": "4154:16:13"
									},
									"parameters": {
										"id": 2493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4118:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "4110:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4110:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4137:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "4129:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4109:35:13"
									},
									"returnParameters": {
										"id": 2498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "4180:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2496,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4180:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4179:6:13"
									},
									"scope": 2783,
									"src": "4092:94:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [495],
									"documentation": {
										"id": 2500,
										"nodeType": "StructuredDocumentation",
										"src": "4192:288:13",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n         allowed to spend on behalf of `owner` through {transferFrom}. This is\n         zero by default.\n @notice This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4494:9:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2507,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2506,
												"name": "IERC20",
												"nameLocations": ["4554:6:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 518,
												"src": "4554:6:13"
											}
										],
										"src": "4545:16:13"
									},
									"parameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4512:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2511,
												"src": "4504:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4504:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4527:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2511,
												"src": "4519:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4519:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4503:32:13"
									},
									"returnParameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2511,
												"src": "4576:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4576:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4575:9:13"
									},
									"scope": 2783,
									"src": "4485:100:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [505],
									"documentation": {
										"id": 2512,
										"nodeType": "StructuredDocumentation",
										"src": "4591:668:13",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n @return Returns Success a boolean value indicating whether the operation succeeded.\n @custom:note Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n @custom:emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5273:7:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2519,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2518,
												"name": "IERC20",
												"nameLocations": ["5332:6:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 518,
												"src": "5332:6:13"
											}
										],
										"src": "5323:16:13"
									},
									"parameters": {
										"id": 2517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5289:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "5281:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5281:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5306:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "5298:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5298:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5280:33:13"
									},
									"returnParameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "5349:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2520,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5349:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5348:6:13"
									},
									"scope": 2783,
									"src": "5264:91:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [517],
									"documentation": {
										"id": 2524,
										"nodeType": "StructuredDocumentation",
										"src": "5361:336:13",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n         allowance mechanism. `amount` is then deducted from the caller's\n         allowance.\n @return Returns Success a boolean value indicating whether the operation succeeded.\n @custom:emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5711:12:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2533,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2532,
												"name": "IERC20",
												"nameLocations": ["5793:6:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 518,
												"src": "5793:6:13"
											}
										],
										"src": "5784:16:13"
									},
									"parameters": {
										"id": 2531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2526,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5732:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "5724:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5724:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5748:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "5740:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5740:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2530,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5767:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "5759:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5759:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5723:51:13"
									},
									"returnParameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "5810:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2534,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5810:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5809:6:13"
									},
									"scope": 2783,
									"src": "5702:114:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2538,
										"nodeType": "StructuredDocumentation",
										"src": "5822:393:13",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n @custom:emits an {Approval} event indicating the updated allowance.\n @custom:requirements \n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 2547,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6229:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6255:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "6247:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6247:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6272:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "6264:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6264:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6246:37:13"
									},
									"returnParameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "6302:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6302:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6301:6:13"
									},
									"scope": 2783,
									"src": "6220:88:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2548,
										"nodeType": "StructuredDocumentation",
										"src": "6314:485:13",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n @custom:emits an {Approval} event indicating the updated allowance.\n @custom:requirements \n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 2557,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6814:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6840:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "6832:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6832:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6857:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "6849:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6849:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6831:42:13"
									},
									"returnParameters": {
										"id": 2556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "6892:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2554,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6892:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6891:6:13"
									},
									"scope": 2783,
									"src": "6805:93:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [579],
									"documentation": {
										"id": 2558,
										"nodeType": "StructuredDocumentation",
										"src": "7077:315:13",
										"text": " @dev Returns the smallest part of the token that is not divisible. This\n         means all token operations (creation, movement and destruction) must have\n         amounts that are a multiple of this number.\n @custom:note For super token contracts, this value is always 1"
									},
									"functionSelector": "556f0dc7",
									"id": 2565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "granularity",
									"nameLocation": "7406:11:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2561,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2560,
												"name": "IERC777",
												"nameLocations": ["7443:7:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 681,
												"src": "7443:7:13"
											}
										],
										"src": "7434:17:13"
									},
									"parameters": {
										"id": 2559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7417:2:13"
									},
									"returnParameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "7461:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7461:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7460:9:13"
									},
									"scope": 2783,
									"src": "7397:73:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [603],
									"documentation": {
										"id": 2566,
										"nodeType": "StructuredDocumentation",
										"src": "7476:610:13",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n @dev If send or receive hooks are registered for the caller and `recipient`,\n      the corresponding functions will be called with `data` and empty\n      `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n @custom:emits a {Sent} event.\n @custom:requirements \n - the caller must have at least `amount` tokens.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"functionSelector": "9bd9bbc6",
									"id": 2577,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "8100:4:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2575,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2574,
												"name": "IERC777",
												"nameLocations": ["8179:7:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 681,
												"src": "8179:7:13"
											}
										],
										"src": "8170:17:13"
									},
									"parameters": {
										"id": 2573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8113:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "8105:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8105:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8132:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "8124:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8124:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2572,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8155:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "8140:19:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2571,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8140:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8104:56:13"
									},
									"returnParameters": {
										"id": 2576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8187:0:13"
									},
									"scope": 2783,
									"src": "8091:97:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [611],
									"documentation": {
										"id": 2578,
										"nodeType": "StructuredDocumentation",
										"src": "8194:414:13",
										"text": " @dev Destroys `amount` tokens from the caller's account, reducing the\n total supply.\n If a send hook is registered for the caller, the corresponding function\n will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n @custom:emits a {Burned} event.\n @custom:requirements \n - the caller must have at least `amount` tokens."
									},
									"functionSelector": "fe9d9303",
									"id": 2587,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "8622:4:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2585,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2584,
												"name": "IERC777",
												"nameLocations": ["8682:7:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 681,
												"src": "8682:7:13"
											}
										],
										"src": "8673:17:13"
									},
									"parameters": {
										"id": 2583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8635:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "8627:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8627:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8658:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "8643:19:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8643:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8626:37:13"
									},
									"returnParameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8690:0:13"
									},
									"scope": 2783,
									"src": "8613:78:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [621],
									"documentation": {
										"id": 2588,
										"nodeType": "StructuredDocumentation",
										"src": "8697:249:13",
										"text": " @dev Returns true if an account is an operator of `tokenHolder`.\n Operators can send and burn tokens on behalf of their owners. All\n accounts are their own operator.\n See {operatorSend} and {operatorBurn}."
									},
									"functionSelector": "d95b6371",
									"id": 2599,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOperatorFor",
									"nameLocation": "8960:13:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2595,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2594,
												"name": "IERC777",
												"nameLocations": ["9031:7:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 681,
												"src": "9031:7:13"
											}
										],
										"src": "9022:17:13"
									},
									"parameters": {
										"id": 2593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8982:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2599,
												"src": "8974:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8974:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "9000:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2599,
												"src": "8992:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8992:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8973:39:13"
									},
									"returnParameters": {
										"id": 2598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2599,
												"src": "9054:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2596,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9054:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9053:6:13"
									},
									"scope": 2783,
									"src": "8951:109:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [627],
									"documentation": {
										"id": 2600,
										"nodeType": "StructuredDocumentation",
										"src": "9066:243:13",
										"text": " @dev Make an account an operator of the caller.\n See {isOperatorFor}.\n @custom:emits an {AuthorizedOperator} event.\n @custom:requirements \n - `operator` cannot be calling address."
									},
									"functionSelector": "959b8c3f",
									"id": 2607,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "authorizeOperator",
									"nameLocation": "9323:17:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2605,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2604,
												"name": "IERC777",
												"nameLocations": ["9377:7:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 681,
												"src": "9377:7:13"
											}
										],
										"src": "9368:17:13"
									},
									"parameters": {
										"id": 2603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2602,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9349:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "9341:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9341:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9340:18:13"
									},
									"returnParameters": {
										"id": 2606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9385:0:13"
									},
									"scope": 2783,
									"src": "9314:72:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [633],
									"documentation": {
										"id": 2608,
										"nodeType": "StructuredDocumentation",
										"src": "9392:271:13",
										"text": " @dev Revoke an account's operator status for the caller.\n See {isOperatorFor} and {defaultOperators}.\n @custom:emits a {RevokedOperator} event.\n @custom:requirements \n - `operator` cannot be calling address."
									},
									"functionSelector": "fad8b32a",
									"id": 2615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeOperator",
									"nameLocation": "9677:14:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2613,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2612,
												"name": "IERC777",
												"nameLocations": ["9728:7:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 681,
												"src": "9728:7:13"
											}
										],
										"src": "9719:17:13"
									},
									"parameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9700:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "9692:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9692:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9691:18:13"
									},
									"returnParameters": {
										"id": 2614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9736:0:13"
									},
									"scope": 2783,
									"src": "9668:69:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [640],
									"documentation": {
										"id": 2616,
										"nodeType": "StructuredDocumentation",
										"src": "9743:338:13",
										"text": " @dev Returns the list of default operators. These accounts are operators\n for all token holders, even if {authorizeOperator} was never called on\n them.\n This list is immutable, but individual holders may revoke these via\n {revokeOperator}, in which case {isOperatorFor} will return false."
									},
									"functionSelector": "06e48538",
									"id": 2624,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "defaultOperators",
									"nameLocation": "10095:16:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2619,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2618,
												"name": "IERC777",
												"nameLocations": ["10132:7:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 681,
												"src": "10132:7:13"
											}
										],
										"src": "10123:17:13"
									},
									"parameters": {
										"id": 2617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10111:2:13"
									},
									"returnParameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "10155:16:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2620,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10155:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2621,
													"nodeType": "ArrayTypeName",
													"src": "10155:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10154:18:13"
									},
									"scope": 2783,
									"src": "10086:87:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [654],
									"documentation": {
										"id": 2625,
										"nodeType": "StructuredDocumentation",
										"src": "10179:724:13",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n be an operator of `sender`.\n If send or receive hooks are registered for `sender` and `recipient`,\n the corresponding functions will be called with `data` and\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n @custom:emits a {Sent} event.\n @custom:requirements \n - `sender` cannot be the zero address.\n - `sender` must have at least `amount` tokens.\n - the caller must be an operator for `sender`.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"functionSelector": "62ad1b83",
									"id": 2640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operatorSend",
									"nameLocation": "10917:12:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2638,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2637,
												"name": "IERC777",
												"nameLocations": ["11095:7:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 681,
												"src": "11095:7:13"
											}
										],
										"src": "11086:17:13"
									},
									"parameters": {
										"id": 2636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2627,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "10947:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "10939:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10939:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10971:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "10963:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10963:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2631,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10998:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "10990:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10990:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2633,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11029:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "11014:19:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2632,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11014:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "11058:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "11043:27:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11043:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10929:147:13"
									},
									"returnParameters": {
										"id": 2639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11103:0:13"
									},
									"scope": 2783,
									"src": "10908:196:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [666],
									"documentation": {
										"id": 2641,
										"nodeType": "StructuredDocumentation",
										"src": "11110:542:13",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the total supply.\n The caller must be an operator of `account`.\n If a send hook is registered for `account`, the corresponding function\n will be called with `data` and `operatorData`. See {IERC777Sender}.\n @custom:emits a {Burned} event.\n @custom:requirements \n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n - the caller must be an operator for `account`."
									},
									"functionSelector": "fc673c4f",
									"id": 2654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operatorBurn",
									"nameLocation": "11666:12:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2652,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2651,
												"name": "IERC777",
												"nameLocations": ["11818:7:13"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 681,
												"src": "11818:7:13"
											}
										],
										"src": "11809:17:13"
									},
									"parameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11696:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "11688:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11688:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2645,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11721:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "11713:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11713:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2647,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11752:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "11737:19:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2646,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11737:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "11781:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "11766:27:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11766:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11678:121:13"
									},
									"returnParameters": {
										"id": 2653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11826:0:13"
									},
									"scope": 2783,
									"src": "11657:170:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2655,
										"nodeType": "StructuredDocumentation",
										"src": "12035:107:13",
										"text": " @dev Mint new tokens for the account\n @custom:modifiers \n  - onlySelf"
									},
									"functionSelector": "c68d4283",
									"id": 2664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "selfMint",
									"nameLocation": "12156:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12182:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2664,
												"src": "12174:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12174:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12207:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2664,
												"src": "12199:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12199:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2661,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "12236:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2664,
												"src": "12223:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2660,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12223:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12164:86:13"
									},
									"returnParameters": {
										"id": 2663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12259:0:13"
									},
									"scope": 2783,
									"src": "12147:113:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2665,
										"nodeType": "StructuredDocumentation",
										"src": "12265:107:13",
										"text": " @dev Burn existing tokens for the account\n @custom:modifiers \n  - onlySelf"
									},
									"functionSelector": "9d876741",
									"id": 2674,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "selfBurn",
									"nameLocation": "12385:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12410:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "12402:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12402:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12434:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "12426:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12426:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2671,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "12462:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "12449:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2670,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12449:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12393:82:13"
									},
									"returnParameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12484:0:13"
									},
									"scope": 2783,
									"src": "12376:109:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2675,
										"nodeType": "StructuredDocumentation",
										"src": "12490:245:13",
										"text": " @dev Transfer `amount` tokens from the `sender` to `recipient`.\n If `spender` isn't the same as `sender`, checks if `spender` has allowance to\n spend tokens of `sender`.\n @custom:modifiers \n  - onlySelf"
									},
									"functionSelector": "41b706be",
									"id": 2686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "selfTransferFrom",
									"nameLocation": "12748:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "12782:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "12774:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12774:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12806:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "12798:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12798:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2681,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "12831:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "12823:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12823:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12858:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "12850:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12850:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12764:105:13"
									},
									"returnParameters": {
										"id": 2685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12878:0:13"
									},
									"scope": 2783,
									"src": "12739:140:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2687,
										"nodeType": "StructuredDocumentation",
										"src": "12884:145:13",
										"text": " @dev Give `spender`, `amount` allowance to spend the tokens of\n `account`.\n @custom:modifiers \n  - onlySelf"
									},
									"functionSelector": "66a12fb6",
									"id": 2696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "selfApproveFor",
									"nameLocation": "13042:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13074:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "13066:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13066:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13099:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "13091:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13091:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2693,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13124:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "13116:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13116:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13056:79:13"
									},
									"returnParameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13144:0:13"
									},
									"scope": 2783,
									"src": "13033:112:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2697,
										"nodeType": "StructuredDocumentation",
										"src": "13346:87:13",
										"text": " @dev Transfer all available balance from `msg.sender` to `recipient`"
									},
									"functionSelector": "a3a7e7f3",
									"id": 2702,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAll",
									"nameLocation": "13447:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2699,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "13467:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "13459:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13459:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13458:19:13"
									},
									"returnParameters": {
										"id": 2701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13486:0:13"
									},
									"scope": 2783,
									"src": "13438:49:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2703,
										"nodeType": "StructuredDocumentation",
										"src": "13676:110:13",
										"text": " @dev Return the underlying token contract\n @return tokenAddr Underlying token address"
									},
									"functionSelector": "ee719bc8",
									"id": 2708,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUnderlyingToken",
									"nameLocation": "13800:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13818:2:13"
									},
									"returnParameters": {
										"id": 2707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2706,
												"mutability": "mutable",
												"name": "tokenAddr",
												"nameLocation": "13851:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2708,
												"src": "13843:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13843:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13842:19:13"
									},
									"scope": 2783,
									"src": "13791:71:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2709,
										"nodeType": "StructuredDocumentation",
										"src": "13868:262:13",
										"text": " @dev Upgrade ERC20 to SuperToken.\n @param amount Number of tokens to be upgraded (in 18 decimals)\n @custom:note It will use `transferFrom` to get tokens. Before calling this\n function you should `approve` this contract"
									},
									"functionSelector": "45977d03",
									"id": 2714,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "upgrade",
									"nameLocation": "14144:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2711,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14160:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "14152:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14152:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14151:16:13"
									},
									"returnParameters": {
										"id": 2713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14176:0:13"
									},
									"scope": 2783,
									"src": "14135:42:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2715,
										"nodeType": "StructuredDocumentation",
										"src": "14183:405:13",
										"text": " @dev Upgrade ERC20 to SuperToken and transfer immediately\n @param to The account to received upgraded tokens\n @param amount Number of tokens to be upgraded (in 18 decimals)\n @param data User data for the TokensRecipient callback\n @custom:note It will use `transferFrom` to get tokens. Before calling this\n function you should `approve` this contract"
									},
									"functionSelector": "5b9d09cc",
									"id": 2724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeTo",
									"nameLocation": "14602:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14620:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "14612:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14612:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14632:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "14624:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14624:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2721,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14655:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "14640:19:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2720,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14640:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14611:49:13"
									},
									"returnParameters": {
										"id": 2723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14669:0:13"
									},
									"scope": 2783,
									"src": "14593:77:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2725,
										"nodeType": "StructuredDocumentation",
										"src": "14676:166:13",
										"text": " @dev Token upgrade event\n @param account Account where tokens are upgraded to\n @param amount Amount of tokens upgraded (in 18 decimals)"
									},
									"eventSelector": "25ca84076773b0455db53621c459ddc84fe40840e4932a62706a032566f399df",
									"id": 2731,
									"name": "TokenUpgraded",
									"nameLocation": "14853:13:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2727,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14892:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "14876:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14876:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2729,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14917:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "14909:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14909:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14866:63:13"
									},
									"src": "14847:83:13"
								},
								{
									"documentation": {
										"id": 2732,
										"nodeType": "StructuredDocumentation",
										"src": "14936:158:13",
										"text": " @dev Downgrade SuperToken to ERC20.\n @dev It will call transfer to send tokens\n @param amount Number of tokens to be downgraded"
									},
									"functionSelector": "11bcc81e",
									"id": 2737,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "downgrade",
									"nameLocation": "15108:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2734,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15126:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "15118:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15118:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15117:16:13"
									},
									"returnParameters": {
										"id": 2736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15142:0:13"
									},
									"scope": 2783,
									"src": "15099:44:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2738,
										"nodeType": "StructuredDocumentation",
										"src": "15149:150:13",
										"text": " @dev Token downgrade event\n @param account Account whose tokens are upgraded\n @param amount Amount of tokens downgraded"
									},
									"eventSelector": "3bc27981aebbb57f9247dc00fde9d6cd91e4b230083fec3238fedbcba1f9ab3d",
									"id": 2744,
									"name": "TokenDowngraded",
									"nameLocation": "15310:15:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2740,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15351:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "15335:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15335:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2742,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15376:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "15368:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15368:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15325:63:13"
									},
									"src": "15304:85:13"
								},
								{
									"documentation": {
										"id": 2745,
										"nodeType": "StructuredDocumentation",
										"src": "15578:277:13",
										"text": " @dev Perform ERC20 approve by host contract.\n @param account The account owner to be approved.\n @param spender The spender of account owner's funds.\n @param amount Number of tokens to be approved.\n @custom:modifiers \n  - onlyHost"
									},
									"functionSelector": "62aa5287",
									"id": 2754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operationApprove",
									"nameLocation": "15869:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15903:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2754,
												"src": "15895:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15895:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15928:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2754,
												"src": "15920:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15920:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2751,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15953:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2754,
												"src": "15945:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15945:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15885:80:13"
									},
									"returnParameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15974:0:13"
									},
									"scope": 2783,
									"src": "15860:115:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2755,
										"nodeType": "StructuredDocumentation",
										"src": "15981:344:13",
										"text": " @dev Perform ERC20 transfer from by host contract.\n @param account The account to spend sender's funds.\n @param spender  The account where the funds is sent from.\n @param recipient The recipient of thefunds.\n @param amount Number of tokens to be transferred.\n @custom:modifiers \n  - onlyHost"
									},
									"functionSelector": "16d055d6",
									"id": 2766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operationTransferFrom",
									"nameLocation": "16339:21:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "16378:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "16370:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16370:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2759,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16403:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "16395:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16395:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2761,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "16428:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "16420:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16420:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2763,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16455:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "16447:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16447:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16360:107:13"
									},
									"returnParameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16476:0:13"
									},
									"scope": 2783,
									"src": "16330:147:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2767,
										"nodeType": "StructuredDocumentation",
										"src": "16483:233:13",
										"text": " @dev Upgrade ERC20 to SuperToken by host contract.\n @param account The account to be changed.\n @param amount Number of tokens to be upgraded (in 18 decimals)\n @custom:modifiers \n  - onlyHost"
									},
									"functionSelector": "ca789464",
									"id": 2774,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operationUpgrade",
									"nameLocation": "16730:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2769,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "16755:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2774,
												"src": "16747:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16747:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2771,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16772:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2774,
												"src": "16764:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16764:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16746:33:13"
									},
									"returnParameters": {
										"id": 2773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16788:0:13"
									},
									"scope": 2783,
									"src": "16721:68:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2775,
										"nodeType": "StructuredDocumentation",
										"src": "16795:237:13",
										"text": " @dev Downgrade ERC20 to SuperToken by host contract.\n @param account The account to be changed.\n @param amount Number of tokens to be downgraded (in 18 decimals)\n @custom:modifiers \n  - onlyHost"
									},
									"functionSelector": "245887fc",
									"id": 2782,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operationDowngrade",
									"nameLocation": "17046:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2777,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "17073:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "17065:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17065:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2779,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17090:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "17082:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17082:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17064:33:13"
									},
									"returnParameters": {
										"id": 2781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17106:0:13"
									},
									"scope": 2783,
									"src": "17037:70:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2784,
							"src": "471:17166:13",
							"usedErrors": [
								2406, 2408, 2410, 2412, 2414, 2416, 2418, 2420,
								2422, 2424, 2426, 2428, 3569, 3571, 3573, 3575,
								3577, 3579
							]
						}
					],
					"src": "35:17603:13"
				},
				"id": 13
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
				"ast": {
					"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
					"exportedSymbols": {
						"ERC20WithTokenInfo": [3860],
						"IERC20": [518],
						"ISuperToken": [2783],
						"ISuperTokenFactory": [2911]
					},
					"id": 2912,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2785,
							"literals": ["solidity", ">=", "0.8", ".4"],
							"nodeType": "PragmaDirective",
							"src": "35:25:14"
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
							"file": "./ISuperToken.sol",
							"id": 2787,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2912,
							"sourceUnit": 2784,
							"src": "62:48:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2786,
										"name": "ISuperToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2783,
										"src": "71:11:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
							"file": "../tokens/ERC20WithTokenInfo.sol",
							"id": 2790,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2912,
							"sourceUnit": 3861,
							"src": "112:86:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2788,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 518,
										"src": "125:6:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2789,
										"name": "ERC20WithTokenInfo",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3860,
										"src": "137:18:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISuperTokenFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2791,
								"nodeType": "StructuredDocumentation",
								"src": "200:69:14",
								"text": " @title Super token factory interface\n @author Superfluid"
							},
							"fullyImplemented": false,
							"id": 2911,
							"linearizedBaseContracts": [2911],
							"name": "ISuperTokenFactory",
							"nameLocation": "280:18:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "91d67972",
									"id": 2793,
									"name": "SUPER_TOKEN_FACTORY_ALREADY_EXISTS",
									"nameLocation": "486:34:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "520:2:14"
									},
									"src": "480:43:14"
								},
								{
									"errorSelector": "872cac48",
									"id": 2795,
									"name": "SUPER_TOKEN_FACTORY_DOES_NOT_EXIST",
									"nameLocation": "548:34:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "582:2:14"
									},
									"src": "542:43:14"
								},
								{
									"errorSelector": "1b39b9b4",
									"id": 2797,
									"name": "SUPER_TOKEN_FACTORY_UNINITIALIZED",
									"nameLocation": "610:33:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "643:2:14"
									},
									"src": "604:42:14"
								},
								{
									"errorSelector": "478b8e83",
									"id": 2799,
									"name": "SUPER_TOKEN_FACTORY_ONLY_HOST",
									"nameLocation": "672:29:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "701:2:14"
									},
									"src": "666:38:14"
								},
								{
									"errorSelector": "305c9e82",
									"id": 2801,
									"name": "SUPER_TOKEN_FACTORY_ZERO_ADDRESS",
									"nameLocation": "734:32:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "766:2:14"
									},
									"src": "728:41:14"
								},
								{
									"documentation": {
										"id": 2802,
										"nodeType": "StructuredDocumentation",
										"src": "791:60:14",
										"text": " @dev Get superfluid host contract address"
									},
									"functionSelector": "20bc4425",
									"id": 2807,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getHost",
									"nameLocation": "865:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "872:2:14"
									},
									"returnParameters": {
										"id": 2806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2805,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "905:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2807,
												"src": "897:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "896:14:14"
									},
									"scope": 2911,
									"src": "856:55:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2808,
										"nodeType": "StructuredDocumentation",
										"src": "917:32:14",
										"text": "@dev Initialize the contract"
									},
									"functionSelector": "8129fc1c",
									"id": 2811,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "963:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "973:2:14"
									},
									"returnParameters": {
										"id": 2810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "984:0:14"
									},
									"scope": 2911,
									"src": "954:31:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2812,
										"nodeType": "StructuredDocumentation",
										"src": "991:77:14",
										"text": " @dev Get the current super token logic used by the factory"
									},
									"functionSelector": "9470a5b2",
									"id": 2818,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSuperTokenLogic",
									"nameLocation": "1082:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1100:2:14"
									},
									"returnParameters": {
										"id": 2817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2816,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "1138:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2818,
												"src": "1126:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$2783",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 2815,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2814,
														"name": "ISuperToken",
														"nameLocations": [
															"1126:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2783,
														"src": "1126:11:14"
													},
													"referencedDeclaration": 2783,
													"src": "1126:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$2783",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1125:24:14"
									},
									"scope": 2911,
									"src": "1073:77:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISuperTokenFactory.Upgradability",
									"id": 2822,
									"members": [
										{
											"id": 2819,
											"name": "NON_UPGRADABLE",
											"nameLocation": "1314:14:14",
											"nodeType": "EnumValue",
											"src": "1314:14:14"
										},
										{
											"id": 2820,
											"name": "SEMI_UPGRADABLE",
											"nameLocation": "1408:15:14",
											"nodeType": "EnumValue",
											"src": "1408:15:14"
										},
										{
											"id": 2821,
											"name": "FULL_UPGRADABLE",
											"nameLocation": "1487:15:14",
											"nodeType": "EnumValue",
											"src": "1487:15:14"
										}
									],
									"name": "Upgradability",
									"nameLocation": "1209:13:14",
									"nodeType": "EnumDefinition",
									"src": "1204:304:14"
								},
								{
									"documentation": {
										"id": 2823,
										"nodeType": "StructuredDocumentation",
										"src": "1514:398:14",
										"text": " @notice Create new super token wrapper for the underlying ERC20 token\n @param underlyingToken Underlying ERC20 token\n @param underlyingDecimals Underlying token decimals\n @param upgradability Upgradability mode\n @param name Super token name\n @param symbol Super token symbol\n @return superToken The deployed and initialized wrapper super token"
									},
									"functionSelector": "a6d0c534",
									"id": 2841,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createERC20Wrapper",
									"nameLocation": "1926:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2826,
												"mutability": "mutable",
												"name": "underlyingToken",
												"nameLocation": "1961:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 2841,
												"src": "1954:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$518",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2825,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2824,
														"name": "IERC20",
														"nameLocations": [
															"1954:6:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 518,
														"src": "1954:6:14"
													},
													"referencedDeclaration": 518,
													"src": "1954:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$518",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2828,
												"mutability": "mutable",
												"name": "underlyingDecimals",
												"nameLocation": "1992:18:14",
												"nodeType": "VariableDeclaration",
												"scope": 2841,
												"src": "1986:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2827,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1986:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2831,
												"mutability": "mutable",
												"name": "upgradability",
												"nameLocation": "2034:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2841,
												"src": "2020:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Upgradability_$2822",
													"typeString": "enum ISuperTokenFactory.Upgradability"
												},
												"typeName": {
													"id": 2830,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2829,
														"name": "Upgradability",
														"nameLocations": [
															"2020:13:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2822,
														"src": "2020:13:14"
													},
													"referencedDeclaration": 2822,
													"src": "2020:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Upgradability_$2822",
														"typeString": "enum ISuperTokenFactory.Upgradability"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2833,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2073:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2841,
												"src": "2057:20:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2832,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2057:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2835,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "2103:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2841,
												"src": "2087:22:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2834,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2087:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:171:14"
									},
									"returnParameters": {
										"id": 2840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "2162:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2841,
												"src": "2150:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$2783",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 2838,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2837,
														"name": "ISuperToken",
														"nameLocations": [
															"2150:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2783,
														"src": "2150:11:14"
													},
													"referencedDeclaration": 2783,
													"src": "2150:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$2783",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2149:24:14"
									},
									"scope": 2911,
									"src": "1917:257:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2842,
										"nodeType": "StructuredDocumentation",
										"src": "2180:433:14",
										"text": " @notice Create new super token wrapper for the underlying ERC20 token with extra token info\n @param underlyingToken Underlying ERC20 token\n @param upgradability Upgradability mode\n @param name Super token name\n @param symbol Super token symbol\n @return superToken The deployed and initialized wrapper super token\n NOTE:\n - It assumes token provide the .decimals() function"
									},
									"functionSelector": "431f1481",
									"id": 2858,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createERC20Wrapper",
									"nameLocation": "2627:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "underlyingToken",
												"nameLocation": "2674:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 2858,
												"src": "2655:34:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20WithTokenInfo_$3860",
													"typeString": "contract ERC20WithTokenInfo"
												},
												"typeName": {
													"id": 2844,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2843,
														"name": "ERC20WithTokenInfo",
														"nameLocations": [
															"2655:18:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3860,
														"src": "2655:18:14"
													},
													"referencedDeclaration": 3860,
													"src": "2655:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20WithTokenInfo_$3860",
														"typeString": "contract ERC20WithTokenInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "upgradability",
												"nameLocation": "2713:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2858,
												"src": "2699:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Upgradability_$2822",
													"typeString": "enum ISuperTokenFactory.Upgradability"
												},
												"typeName": {
													"id": 2847,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2846,
														"name": "Upgradability",
														"nameLocations": [
															"2699:13:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2822,
														"src": "2699:13:14"
													},
													"referencedDeclaration": 2822,
													"src": "2699:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Upgradability_$2822",
														"typeString": "enum ISuperTokenFactory.Upgradability"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2752:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2858,
												"src": "2736:20:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2849,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2736:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "2782:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2858,
												"src": "2766:22:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2851,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2766:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:149:14"
									},
									"returnParameters": {
										"id": 2857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2856,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "2841:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2858,
												"src": "2829:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$2783",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 2855,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2854,
														"name": "ISuperToken",
														"nameLocations": [
															"2829:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2783,
														"src": "2829:11:14"
													},
													"referencedDeclaration": 2783,
													"src": "2829:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$2783",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2828:24:14"
									},
									"scope": 2911,
									"src": "2618:235:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2859,
										"nodeType": "StructuredDocumentation",
										"src": "2859:318:14",
										"text": " @notice Creates a wrapper super token AND sets it in the canonical list OR reverts if it already exists\n @dev salt for create2 is the keccak256 hash of abi.encode(address(_underlyingToken))\n @param _underlyingToken Underlying ERC20 token\n @return ISuperToken the created supertoken"
									},
									"functionSelector": "151188dc",
									"id": 2868,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createCanonicalERC20Wrapper",
									"nameLocation": "3191:27:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "_underlyingToken",
												"nameLocation": "3238:16:14",
												"nodeType": "VariableDeclaration",
												"scope": 2868,
												"src": "3219:35:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20WithTokenInfo_$3860",
													"typeString": "contract ERC20WithTokenInfo"
												},
												"typeName": {
													"id": 2861,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2860,
														"name": "ERC20WithTokenInfo",
														"nameLocations": [
															"3219:18:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3860,
														"src": "3219:18:14"
													},
													"referencedDeclaration": 3860,
													"src": "3219:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20WithTokenInfo_$3860",
														"typeString": "contract ERC20WithTokenInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:37:14"
									},
									"returnParameters": {
										"id": 2867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2868,
												"src": "3290:11:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$2783",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 2865,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2864,
														"name": "ISuperToken",
														"nameLocations": [
															"3290:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2783,
														"src": "3290:11:14"
													},
													"referencedDeclaration": 2783,
													"src": "3290:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$2783",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3289:13:14"
									},
									"scope": 2911,
									"src": "3182:121:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2869,
										"nodeType": "StructuredDocumentation",
										"src": "3309:502:14",
										"text": " @notice Computes/Retrieves wrapper super token address given the underlying token address\n @dev We return from our canonical list if it already exists, otherwise we compute it\n @dev note that this function only computes addresses for SEMI_UPGRADABLE SuperTokens\n @param _underlyingToken Underlying ERC20 token address\n @return superTokenAddress Super token address\n @return isDeployed whether the super token is deployed AND set in the canonical mapping"
									},
									"functionSelector": "bab74c89",
									"id": 2878,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "computeCanonicalERC20WrapperAddress",
									"nameLocation": "3825:35:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2871,
												"mutability": "mutable",
												"name": "_underlyingToken",
												"nameLocation": "3869:16:14",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "3861:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3861:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3860:26:14"
									},
									"returnParameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2874,
												"mutability": "mutable",
												"name": "superTokenAddress",
												"nameLocation": "3942:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "3934:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3934:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "isDeployed",
												"nameLocation": "3966:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "3961:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3961:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3933:44:14"
									},
									"scope": 2911,
									"src": "3816:162:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2879,
										"nodeType": "StructuredDocumentation",
										"src": "3984:314:14",
										"text": " @notice Gets the canonical ERC20 wrapper super token address given the underlying token address\n @dev We return the address if it exists and the zero address otherwise\n @param _underlyingTokenAddress Underlying ERC20 token address\n @return superTokenAddress Super token address"
									},
									"functionSelector": "eff0a89d",
									"id": 2886,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCanonicalERC20Wrapper",
									"nameLocation": "4312:24:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2881,
												"mutability": "mutable",
												"name": "_underlyingTokenAddress",
												"nameLocation": "4345:23:14",
												"nodeType": "VariableDeclaration",
												"scope": 2886,
												"src": "4337:31:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4337:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4336:33:14"
									},
									"returnParameters": {
										"id": 2885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2884,
												"mutability": "mutable",
												"name": "superTokenAddress",
												"nameLocation": "4425:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 2886,
												"src": "4417:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4417:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4416:27:14"
									},
									"scope": 2911,
									"src": "4303:141:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2887,
										"nodeType": "StructuredDocumentation",
										"src": "4450:131:14",
										"text": " @dev Creates a new custom super token\n @param customSuperTokenProxy address of the custom supertoken proxy"
									},
									"functionSelector": "d412d344",
									"id": 2892,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initializeCustomSuperToken",
									"nameLocation": "4595:26:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2889,
												"mutability": "mutable",
												"name": "customSuperTokenProxy",
												"nameLocation": "4639:21:14",
												"nodeType": "VariableDeclaration",
												"scope": 2892,
												"src": "4631:29:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4621:45:14"
									},
									"returnParameters": {
										"id": 2891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4683:0:14"
									},
									"scope": 2911,
									"src": "4586:98:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2893,
										"nodeType": "StructuredDocumentation",
										"src": "4690:103:14",
										"text": " @dev Super token logic created event\n @param tokenLogic Token logic address"
									},
									"eventSelector": "c13fb19d60857980e565bf5dae406b8802d3c1cec50c6156b30b12b874029783",
									"id": 2898,
									"name": "SuperTokenLogicCreated",
									"nameLocation": "4804:22:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2896,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenLogic",
												"nameLocation": "4847:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2898,
												"src": "4827:30:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$2783",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 2895,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2894,
														"name": "ISuperToken",
														"nameLocations": [
															"4827:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2783,
														"src": "4827:11:14"
													},
													"referencedDeclaration": 2783,
													"src": "4827:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$2783",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:32:14"
									},
									"src": "4798:61:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2899,
										"nodeType": "StructuredDocumentation",
										"src": "4865:106:14",
										"text": " @dev Super token created event\n @param token Newly created super token address"
									},
									"eventSelector": "b52c6d9d122e8c07769b96d7bb14e66db58ee03fdebaaa2f92547e9c7ef0e65f",
									"id": 2904,
									"name": "SuperTokenCreated",
									"nameLocation": "4982:17:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2902,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5020:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2904,
												"src": "5000:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$2783",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 2901,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2900,
														"name": "ISuperToken",
														"nameLocations": [
															"5000:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2783,
														"src": "5000:11:14"
													},
													"referencedDeclaration": 2783,
													"src": "5000:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$2783",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4999:27:14"
									},
									"src": "4976:51:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2905,
										"nodeType": "StructuredDocumentation",
										"src": "5033:120:14",
										"text": " @dev Custom super token created event\n @param token Newly created custom super token address"
									},
									"eventSelector": "437790724a6e97b75d23117f28cdd4b1beeafc34f7a0911ef256e9334f4369a5",
									"id": 2910,
									"name": "CustomSuperTokenCreated",
									"nameLocation": "5164:23:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2908,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5208:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "5188:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$2783",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 2907,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2906,
														"name": "ISuperToken",
														"nameLocations": [
															"5188:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2783,
														"src": "5188:11:14"
													},
													"referencedDeclaration": 2783,
													"src": "5188:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$2783",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5187:27:14"
									},
									"src": "5158:57:14"
								}
							],
							"scope": 2912,
							"src": "270:4948:14",
							"usedErrors": [2793, 2795, 2797, 2799, 2801]
						}
					],
					"src": "35:5184:14"
				},
				"id": 14
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
				"ast": {
					"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
					"exportedSymbols": {
						"BatchOperation": [2139],
						"ContextDefinitions": [2018],
						"FlowOperatorDefinitions": [2105],
						"IERC20": [518],
						"IERC777": [681],
						"ISuperAgreement": [2269],
						"ISuperApp": [2383],
						"ISuperToken": [2783],
						"ISuperTokenFactory": [2911],
						"ISuperfluid": [3433],
						"ISuperfluidGovernance": [3562],
						"ISuperfluidToken": [3848],
						"SuperAppDefinitions": [1942],
						"SuperfluidGovernanceConfigs": [2240],
						"TokenInfo": [3882]
					},
					"id": 3434,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2913,
							"literals": ["solidity", ">=", "0.8", ".4"],
							"nodeType": "PragmaDirective",
							"src": "35:25:15"
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
							"file": "./ISuperfluidGovernance.sol",
							"id": 2915,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3434,
							"sourceUnit": 3563,
							"src": "62:68:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2914,
										"name": "ISuperfluidGovernance",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3562,
										"src": "71:21:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
							"file": "./ISuperfluidToken.sol",
							"id": 2917,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3434,
							"sourceUnit": 3849,
							"src": "131:58:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2916,
										"name": "ISuperfluidToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3848,
										"src": "140:16:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
							"file": "./ISuperToken.sol",
							"id": 2919,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3434,
							"sourceUnit": 2784,
							"src": "190:48:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2918,
										"name": "ISuperToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2783,
										"src": "199:11:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
							"file": "./ISuperTokenFactory.sol",
							"id": 2921,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3434,
							"sourceUnit": 2912,
							"src": "239:62:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2920,
										"name": "ISuperTokenFactory",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2911,
										"src": "248:18:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
							"file": "./ISuperAgreement.sol",
							"id": 2923,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3434,
							"sourceUnit": 2270,
							"src": "302:56:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2922,
										"name": "ISuperAgreement",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2269,
										"src": "311:15:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
							"file": "./ISuperApp.sol",
							"id": 2925,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3434,
							"sourceUnit": 2384,
							"src": "359:44:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2924,
										"name": "ISuperApp",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2383,
										"src": "368:9:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
							"file": "./Definitions.sol",
							"id": 2931,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3434,
							"sourceUnit": 2241,
							"src": "404:166:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2926,
										"name": "BatchOperation",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2139,
										"src": "417:14:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2927,
										"name": "ContextDefinitions",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2018,
										"src": "437:18:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2928,
										"name": "FlowOperatorDefinitions",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2105,
										"src": "461:23:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2929,
										"name": "SuperAppDefinitions",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1942,
										"src": "490:19:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2930,
										"name": "SuperfluidGovernanceConfigs",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2240,
										"src": "515:27:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
							"file": "../tokens/TokenInfo.sol",
							"id": 2933,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3434,
							"sourceUnit": 3883,
							"src": "571:52:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2932,
										"name": "TokenInfo",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3882,
										"src": "580:9:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2935,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3434,
							"sourceUnit": 519,
							"src": "624:72:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2934,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 518,
										"src": "633:6:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
							"file": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
							"id": 2937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3434,
							"sourceUnit": 682,
							"src": "697:75:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2936,
										"name": "IERC777",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 681,
										"src": "706:7:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISuperfluid",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2938,
								"nodeType": "StructuredDocumentation",
								"src": "774:345:15",
								"text": " @title Host interface\n @author Superfluid\n @notice This is the central contract of the system where super agreement, super app\n and super token features are connected.\n The Superfluid host contract is also the entry point for the protocol users,\n where batch call and meta transaction are provided for UX improvements."
							},
							"fullyImplemented": false,
							"id": 3433,
							"linearizedBaseContracts": [3433],
							"name": "ISuperfluid",
							"nameLocation": "1130:11:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "ef4295f6",
									"id": 2940,
									"name": "HOST_AGREEMENT_CALLBACK_IS_NOT_ACTION",
									"nameLocation": "1361:37:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1398:2:15"
									},
									"src": "1355:46:15"
								},
								{
									"errorSelector": "474e7641",
									"id": 2942,
									"name": "HOST_CANNOT_DOWNGRADE_TO_NON_UPGRADEABLE",
									"nameLocation": "1439:40:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1479:2:15"
									},
									"src": "1433:49:15"
								},
								{
									"errorSelector": "0cd0ebc2",
									"id": 2944,
									"name": "HOST_CALL_AGREEMENT_WITH_CTX_FROM_WRONG_ADDRESS",
									"nameLocation": "1517:47:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1564:2:15"
									},
									"src": "1511:56:15"
								},
								{
									"errorSelector": "473f7bd4",
									"id": 2946,
									"name": "HOST_CALL_APP_ACTION_WITH_CTX_FROM_WRONG_ADDRESS",
									"nameLocation": "1595:48:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1643:2:15"
									},
									"src": "1589:57:15"
								},
								{
									"errorSelector": "f4c802a4",
									"id": 2948,
									"name": "HOST_INVALID_CONFIG_WORD",
									"nameLocation": "1673:24:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1697:2:15"
									},
									"src": "1667:33:15"
								},
								{
									"errorSelector": "7c281a78",
									"id": 2950,
									"name": "HOST_MAX_256_AGREEMENTS",
									"nameLocation": "1751:23:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1774:2:15"
									},
									"src": "1745:32:15"
								},
								{
									"errorSelector": "14f72c9f",
									"id": 2952,
									"name": "HOST_NON_UPGRADEABLE",
									"nameLocation": "1829:20:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1849:2:15"
									},
									"src": "1823:29:15"
								},
								{
									"errorSelector": "67e9985b",
									"id": 2954,
									"name": "HOST_NON_ZERO_LENGTH_PLACEHOLDER_CTX",
									"nameLocation": "1907:36:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1943:2:15"
									},
									"src": "1901:45:15"
								},
								{
									"errorSelector": "c5d22a4e",
									"id": 2956,
									"name": "HOST_ONLY_GOVERNANCE",
									"nameLocation": "1985:20:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2005:2:15"
									},
									"src": "1979:29:15"
								},
								{
									"errorSelector": "b4770115",
									"id": 2958,
									"name": "HOST_UNKNOWN_BATCH_CALL_OPERATION_TYPE",
									"nameLocation": "2063:38:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2101:2:15"
									},
									"src": "2057:47:15"
								},
								{
									"errorSelector": "dc9ddba8",
									"id": 2960,
									"name": "HOST_AGREEMENT_ALREADY_REGISTERED",
									"nameLocation": "2141:33:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2174:2:15"
									},
									"src": "2135:42:15"
								},
								{
									"errorSelector": "1c9e9bea",
									"id": 2962,
									"name": "HOST_AGREEMENT_IS_NOT_REGISTERED",
									"nameLocation": "2219:32:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2251:2:15"
									},
									"src": "2213:41:15"
								},
								{
									"errorSelector": "d4f6b30c",
									"id": 2964,
									"name": "HOST_MUST_BE_CONTRACT",
									"nameLocation": "2297:21:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2318:2:15"
									},
									"src": "2291:30:15"
								},
								{
									"errorSelector": "619c5359",
									"id": 2966,
									"name": "HOST_ONLY_LISTED_AGREEMENT",
									"nameLocation": "2375:26:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2401:2:15"
									},
									"src": "2369:35:15"
								},
								{
									"errorSelector": "a85ba64f",
									"id": 2970,
									"name": "APP_RULE",
									"nameLocation": "2546:8:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "_code",
												"nameLocation": "2563:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2970,
												"src": "2555:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2555:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2554:15:15"
									},
									"src": "2540:30:15"
								},
								{
									"errorSelector": "19ab84d1",
									"id": 2972,
									"name": "HOST_INVALID_OR_EXPIRED_SUPER_APP_REGISTRATION_KEY",
									"nameLocation": "2625:50:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2675:2:15"
									},
									"src": "2619:59:15"
								},
								{
									"errorSelector": "163cbe43",
									"id": 2974,
									"name": "HOST_NOT_A_SUPER_APP",
									"nameLocation": "2703:20:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2723:2:15"
									},
									"src": "2697:29:15"
								},
								{
									"errorSelector": "5b93ebf0",
									"id": 2976,
									"name": "HOST_NO_APP_REGISTRATION_PERMISSIONS",
									"nameLocation": "2781:36:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2817:2:15"
									},
									"src": "2775:45:15"
								},
								{
									"errorSelector": "96aa315e",
									"id": 2978,
									"name": "HOST_RECEIVER_IS_NOT_SUPER_APP",
									"nameLocation": "2859:30:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2889:2:15"
									},
									"src": "2853:39:15"
								},
								{
									"errorSelector": "bacfdc40",
									"id": 2980,
									"name": "HOST_SENDER_IS_NOT_SUPER_APP",
									"nameLocation": "2937:28:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2965:2:15"
									},
									"src": "2931:37:15"
								},
								{
									"errorSelector": "44725270",
									"id": 2982,
									"name": "HOST_SOURCE_APP_NEEDS_HIGHER_APP_LEVEL",
									"nameLocation": "3015:38:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3053:2:15"
									},
									"src": "3009:47:15"
								},
								{
									"errorSelector": "02384b64",
									"id": 2984,
									"name": "HOST_SUPER_APP_IS_JAILED",
									"nameLocation": "3093:24:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3117:2:15"
									},
									"src": "3087:33:15"
								},
								{
									"errorSelector": "01b0a935",
									"id": 2986,
									"name": "HOST_SUPER_APP_ALREADY_REGISTERED",
									"nameLocation": "3171:33:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3204:2:15"
									},
									"src": "3165:42:15"
								},
								{
									"errorSelector": "289533c5",
									"id": 2988,
									"name": "HOST_UNAUTHORIZED_SUPER_APP_FACTORY",
									"nameLocation": "3249:35:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3284:2:15"
									},
									"src": "3243:44:15"
								},
								{
									"functionSelector": "bbe4fd50",
									"id": 2993,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNow",
									"nameLocation": "3844:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3850:2:15"
									},
									"returnParameters": {
										"id": 2992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2991,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "3876:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3876:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3875:9:15"
									},
									"scope": 3433,
									"src": "3835:50:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2994,
										"nodeType": "StructuredDocumentation",
										"src": "4070:81:15",
										"text": " @dev Get the current governance address of the Superfluid host"
									},
									"functionSelector": "289b3c0d",
									"id": 3000,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getGovernance",
									"nameLocation": "4165:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4178:2:15"
									},
									"returnParameters": {
										"id": 2999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2998,
												"mutability": "mutable",
												"name": "governance",
												"nameLocation": "4225:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 3000,
												"src": "4203:32:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidGovernance_$3562",
													"typeString": "contract ISuperfluidGovernance"
												},
												"typeName": {
													"id": 2997,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2996,
														"name": "ISuperfluidGovernance",
														"nameLocations": [
															"4203:21:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3562,
														"src": "4203:21:15"
													},
													"referencedDeclaration": 3562,
													"src": "4203:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidGovernance_$3562",
														"typeString": "contract ISuperfluidGovernance"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4202:34:15"
									},
									"scope": 3433,
									"src": "4156:81:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3001,
										"nodeType": "StructuredDocumentation",
										"src": "4243:69:15",
										"text": " @dev Replace the current governance with a new one"
									},
									"functionSelector": "7283100c",
									"id": 3007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "replaceGovernance",
									"nameLocation": "4326:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3004,
												"mutability": "mutable",
												"name": "newGov",
												"nameLocation": "4366:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3007,
												"src": "4344:28:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidGovernance_$3562",
													"typeString": "contract ISuperfluidGovernance"
												},
												"typeName": {
													"id": 3003,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3002,
														"name": "ISuperfluidGovernance",
														"nameLocations": [
															"4344:21:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3562,
														"src": "4344:21:15"
													},
													"referencedDeclaration": 3562,
													"src": "4344:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidGovernance_$3562",
														"typeString": "contract ISuperfluidGovernance"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4343:30:15"
									},
									"returnParameters": {
										"id": 3006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4382:0:15"
									},
									"scope": 3433,
									"src": "4317:66:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3008,
										"nodeType": "StructuredDocumentation",
										"src": "4388:169:15",
										"text": " @dev Governance replaced event\n @param oldGov Address of the old governance contract\n @param newGov Address of the new governance contract"
									},
									"eventSelector": "13abda02e63c790d0e2818b251282cfe5cbe0a8abd69c54bf5d2260c0907bd2e",
									"id": 3016,
									"name": "GovernanceReplaced",
									"nameLocation": "4568:18:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3011,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldGov",
												"nameLocation": "4609:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3016,
												"src": "4587:28:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidGovernance_$3562",
													"typeString": "contract ISuperfluidGovernance"
												},
												"typeName": {
													"id": 3010,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3009,
														"name": "ISuperfluidGovernance",
														"nameLocations": [
															"4587:21:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3562,
														"src": "4587:21:15"
													},
													"referencedDeclaration": 3562,
													"src": "4587:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidGovernance_$3562",
														"typeString": "contract ISuperfluidGovernance"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3014,
												"indexed": false,
												"mutability": "mutable",
												"name": "newGov",
												"nameLocation": "4639:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3016,
												"src": "4617:28:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidGovernance_$3562",
													"typeString": "contract ISuperfluidGovernance"
												},
												"typeName": {
													"id": 3013,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3012,
														"name": "ISuperfluidGovernance",
														"nameLocations": [
															"4617:21:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3562,
														"src": "4617:21:15"
													},
													"referencedDeclaration": 3562,
													"src": "4617:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidGovernance_$3562",
														"typeString": "contract ISuperfluidGovernance"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:60:15"
									},
									"src": "4562:85:15"
								},
								{
									"documentation": {
										"id": 3017,
										"nodeType": "StructuredDocumentation",
										"src": "4844:188:15",
										"text": " @dev Register a new agreement class to the system\n @param agreementClassLogic Initial agreement class code\n @custom:modifiers \n - onlyGovernance"
									},
									"functionSelector": "15a024e1",
									"id": 3023,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerAgreementClass",
									"nameLocation": "5046:22:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3020,
												"mutability": "mutable",
												"name": "agreementClassLogic",
												"nameLocation": "5085:19:15",
												"nodeType": "VariableDeclaration",
												"scope": 3023,
												"src": "5069:35:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperAgreement_$2269",
													"typeString": "contract ISuperAgreement"
												},
												"typeName": {
													"id": 3019,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3018,
														"name": "ISuperAgreement",
														"nameLocations": [
															"5069:15:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2269,
														"src": "5069:15:15"
													},
													"referencedDeclaration": 2269,
													"src": "5069:15:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperAgreement_$2269",
														"typeString": "contract ISuperAgreement"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5068:37:15"
									},
									"returnParameters": {
										"id": 3022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5114:0:15"
									},
									"scope": 3433,
									"src": "5037:78:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3024,
										"nodeType": "StructuredDocumentation",
										"src": "5120:280:15",
										"text": " @notice Agreement class registered event\n @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"\n @param agreementType The agreement type registered\n @param code Address of the new agreement"
									},
									"eventSelector": "878135063a6cfb3bc333e534b1fdc83f4f12221cad6705c31c0567048a8bd3d1",
									"id": 3030,
									"name": "AgreementClassRegistered",
									"nameLocation": "5411:24:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3026,
												"indexed": false,
												"mutability": "mutable",
												"name": "agreementType",
												"nameLocation": "5444:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 3030,
												"src": "5436:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3025,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3028,
												"indexed": false,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "5467:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3030,
												"src": "5459:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5459:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5435:37:15"
									},
									"src": "5405:68:15"
								},
								{
									"documentation": {
										"id": 3031,
										"nodeType": "StructuredDocumentation",
										"src": "5479:176:15",
										"text": " @dev Update code of an agreement class\n @param agreementClassLogic New code for the agreement class\n @custom:modifiers \n  - onlyGovernance"
									},
									"functionSelector": "06cecba8",
									"id": 3037,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateAgreementClass",
									"nameLocation": "5669:20:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3034,
												"mutability": "mutable",
												"name": "agreementClassLogic",
												"nameLocation": "5706:19:15",
												"nodeType": "VariableDeclaration",
												"scope": 3037,
												"src": "5690:35:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperAgreement_$2269",
													"typeString": "contract ISuperAgreement"
												},
												"typeName": {
													"id": 3033,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3032,
														"name": "ISuperAgreement",
														"nameLocations": [
															"5690:15:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2269,
														"src": "5690:15:15"
													},
													"referencedDeclaration": 2269,
													"src": "5690:15:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperAgreement_$2269",
														"typeString": "contract ISuperAgreement"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5689:37:15"
									},
									"returnParameters": {
										"id": 3036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5735:0:15"
									},
									"scope": 3433,
									"src": "5660:76:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3038,
										"nodeType": "StructuredDocumentation",
										"src": "5741:274:15",
										"text": " @notice Agreement class updated event\n @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"\n @param agreementType The agreement type updated\n @param code Address of the new agreement"
									},
									"eventSelector": "9279aa773f2b588996032d8de89911555039f28b13a11a7c17074330bc082d9a",
									"id": 3044,
									"name": "AgreementClassUpdated",
									"nameLocation": "6026:21:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3040,
												"indexed": false,
												"mutability": "mutable",
												"name": "agreementType",
												"nameLocation": "6056:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "6048:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3039,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6048:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3042,
												"indexed": false,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "6079:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "6071:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6071:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6047:37:15"
									},
									"src": "6020:65:15"
								},
								{
									"documentation": {
										"id": 3045,
										"nodeType": "StructuredDocumentation",
										"src": "6091:181:15",
										"text": " @notice Check if the agreement type is whitelisted\n @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\""
									},
									"functionSelector": "e8dccb7d",
									"id": 3052,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAgreementTypeListed",
									"nameLocation": "6286:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3047,
												"mutability": "mutable",
												"name": "agreementType",
												"nameLocation": "6316:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 3052,
												"src": "6308:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3046,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6308:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6307:23:15"
									},
									"returnParameters": {
										"id": 3051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3050,
												"mutability": "mutable",
												"name": "yes",
												"nameLocation": "6358:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3052,
												"src": "6353:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3049,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6353:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6352:10:15"
									},
									"scope": 3433,
									"src": "6277:86:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3053,
										"nodeType": "StructuredDocumentation",
										"src": "6369:65:15",
										"text": " @dev Check if the agreement class is whitelisted"
									},
									"functionSelector": "8ca48484",
									"id": 3061,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAgreementClassListed",
									"nameLocation": "6448:22:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3056,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "6487:14:15",
												"nodeType": "VariableDeclaration",
												"scope": 3061,
												"src": "6471:30:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperAgreement_$2269",
													"typeString": "contract ISuperAgreement"
												},
												"typeName": {
													"id": 3055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3054,
														"name": "ISuperAgreement",
														"nameLocations": [
															"6471:15:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2269,
														"src": "6471:15:15"
													},
													"referencedDeclaration": 2269,
													"src": "6471:15:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperAgreement_$2269",
														"typeString": "contract ISuperAgreement"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6470:32:15"
									},
									"returnParameters": {
										"id": 3060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3059,
												"mutability": "mutable",
												"name": "yes",
												"nameLocation": "6530:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3061,
												"src": "6525:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3058,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6525:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6524:10:15"
									},
									"scope": 3433,
									"src": "6439:96:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3062,
										"nodeType": "StructuredDocumentation",
										"src": "6541:158:15",
										"text": " @notice Get agreement class\n @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\""
									},
									"functionSelector": "b6d200de",
									"id": 3070,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAgreementClass",
									"nameLocation": "6713:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3064,
												"mutability": "mutable",
												"name": "agreementType",
												"nameLocation": "6739:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 3070,
												"src": "6731:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3063,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6731:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6730:23:15"
									},
									"returnParameters": {
										"id": 3069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3068,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "6792:14:15",
												"nodeType": "VariableDeclaration",
												"scope": 3070,
												"src": "6776:30:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperAgreement_$2269",
													"typeString": "contract ISuperAgreement"
												},
												"typeName": {
													"id": 3067,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3066,
														"name": "ISuperAgreement",
														"nameLocations": [
															"6776:15:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2269,
														"src": "6776:15:15"
													},
													"referencedDeclaration": 2269,
													"src": "6776:15:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperAgreement_$2269",
														"typeString": "contract ISuperAgreement"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:32:15"
									},
									"scope": 3433,
									"src": "6704:104:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3071,
										"nodeType": "StructuredDocumentation",
										"src": "6814:113:15",
										"text": " @dev Map list of the agreement classes using a bitmap\n @param bitmap Agreement class bitmap"
									},
									"functionSelector": "c56a069d",
									"id": 3080,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mapAgreementClasses",
									"nameLocation": "6941:19:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3073,
												"mutability": "mutable",
												"name": "bitmap",
												"nameLocation": "6969:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3080,
												"src": "6961:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6961:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6960:16:15"
									},
									"returnParameters": {
										"id": 3079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3078,
												"mutability": "mutable",
												"name": "agreementClasses",
												"nameLocation": "7041:16:15",
												"nodeType": "VariableDeclaration",
												"scope": 3080,
												"src": "7016:41:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_ISuperAgreement_$2269_$dyn_memory_ptr",
													"typeString": "contract ISuperAgreement[]"
												},
												"typeName": {
													"baseType": {
														"id": 3076,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3075,
															"name": "ISuperAgreement",
															"nameLocations": [
																"7016:15:15"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2269,
															"src": "7016:15:15"
														},
														"referencedDeclaration": 2269,
														"src": "7016:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISuperAgreement_$2269",
															"typeString": "contract ISuperAgreement"
														}
													},
													"id": 3077,
													"nodeType": "ArrayTypeName",
													"src": "7016:17:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_ISuperAgreement_$2269_$dyn_storage_ptr",
														"typeString": "contract ISuperAgreement[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7015:43:15"
									},
									"scope": 3433,
									"src": "6932:127:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3081,
										"nodeType": "StructuredDocumentation",
										"src": "7065:236:15",
										"text": " @notice Create a new bitmask by adding a agreement class to it\n @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"\n @param bitmap Agreement class bitmap"
									},
									"functionSelector": "bced3ddc",
									"id": 3090,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addToAgreementClassesBitmap",
									"nameLocation": "7315:27:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3083,
												"mutability": "mutable",
												"name": "bitmap",
												"nameLocation": "7351:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3090,
												"src": "7343:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7343:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3085,
												"mutability": "mutable",
												"name": "agreementType",
												"nameLocation": "7367:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 3090,
												"src": "7359:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3084,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7359:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7342:39:15"
									},
									"returnParameters": {
										"id": 3089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3088,
												"mutability": "mutable",
												"name": "newBitmap",
												"nameLocation": "7429:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 3090,
												"src": "7421:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7421:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7420:19:15"
									},
									"scope": 3433,
									"src": "7306:134:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3091,
										"nodeType": "StructuredDocumentation",
										"src": "7446:240:15",
										"text": " @notice Create a new bitmask by removing a agreement class from it\n @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"\n @param bitmap Agreement class bitmap"
									},
									"functionSelector": "a5dbbbcd",
									"id": 3100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeFromAgreementClassesBitmap",
									"nameLocation": "7700:32:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3093,
												"mutability": "mutable",
												"name": "bitmap",
												"nameLocation": "7741:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3100,
												"src": "7733:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7733:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3095,
												"mutability": "mutable",
												"name": "agreementType",
												"nameLocation": "7757:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 3100,
												"src": "7749:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3094,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7749:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7732:39:15"
									},
									"returnParameters": {
										"id": 3099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3098,
												"mutability": "mutable",
												"name": "newBitmap",
												"nameLocation": "7819:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 3100,
												"src": "7811:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7811:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7810:19:15"
									},
									"scope": 3433,
									"src": "7691:139:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3101,
										"nodeType": "StructuredDocumentation",
										"src": "8023:86:15",
										"text": " @dev Get the super token factory\n @return factory The factory"
									},
									"functionSelector": "731aed6e",
									"id": 3107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSuperTokenFactory",
									"nameLocation": "8123:20:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8143:2:15"
									},
									"returnParameters": {
										"id": 3106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3105,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "8188:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3107,
												"src": "8169:26:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperTokenFactory_$2911",
													"typeString": "contract ISuperTokenFactory"
												},
												"typeName": {
													"id": 3104,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3103,
														"name": "ISuperTokenFactory",
														"nameLocations": [
															"8169:18:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2911,
														"src": "8169:18:15"
													},
													"referencedDeclaration": 2911,
													"src": "8169:18:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperTokenFactory_$2911",
														"typeString": "contract ISuperTokenFactory"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8168:28:15"
									},
									"scope": 3433,
									"src": "8114:83:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3108,
										"nodeType": "StructuredDocumentation",
										"src": "8203:134:15",
										"text": " @dev Get the super token factory logic (applicable to upgradable deployment)\n @return logic The factory logic"
									},
									"functionSelector": "f2e55caf",
									"id": 3113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSuperTokenFactoryLogic",
									"nameLocation": "8351:25:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8376:2:15"
									},
									"returnParameters": {
										"id": 3112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3111,
												"mutability": "mutable",
												"name": "logic",
												"nameLocation": "8410:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3113,
												"src": "8402:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8402:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8401:15:15"
									},
									"scope": 3433,
									"src": "8342:75:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3114,
										"nodeType": "StructuredDocumentation",
										"src": "8423:93:15",
										"text": " @dev Update super token factory\n @param newFactory New factory logic"
									},
									"functionSelector": "54fbc493",
									"id": 3120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateSuperTokenFactory",
									"nameLocation": "8530:23:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3117,
												"mutability": "mutable",
												"name": "newFactory",
												"nameLocation": "8573:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "8554:29:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperTokenFactory_$2911",
													"typeString": "contract ISuperTokenFactory"
												},
												"typeName": {
													"id": 3116,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3115,
														"name": "ISuperTokenFactory",
														"nameLocations": [
															"8554:18:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2911,
														"src": "8554:18:15"
													},
													"referencedDeclaration": 2911,
													"src": "8554:18:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperTokenFactory_$2911",
														"typeString": "contract ISuperTokenFactory"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8553:31:15"
									},
									"returnParameters": {
										"id": 3119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8593:0:15"
									},
									"scope": 3433,
									"src": "8521:73:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3121,
										"nodeType": "StructuredDocumentation",
										"src": "8599:108:15",
										"text": " @dev SuperToken factory updated event\n @param newFactory Address of the new factory"
									},
									"eventSelector": "ce13a9895a1719ad4493b2ac1a9bfb36070566161abab408e7ecbe586da8d499",
									"id": 3126,
									"name": "SuperTokenFactoryUpdated",
									"nameLocation": "8718:24:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3124,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFactory",
												"nameLocation": "8762:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 3126,
												"src": "8743:29:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperTokenFactory_$2911",
													"typeString": "contract ISuperTokenFactory"
												},
												"typeName": {
													"id": 3123,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3122,
														"name": "ISuperTokenFactory",
														"nameLocations": [
															"8743:18:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2911,
														"src": "8743:18:15"
													},
													"referencedDeclaration": 2911,
													"src": "8743:18:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperTokenFactory_$2911",
														"typeString": "contract ISuperTokenFactory"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8742:31:15"
									},
									"src": "8712:62:15"
								},
								{
									"documentation": {
										"id": 3127,
										"nodeType": "StructuredDocumentation",
										"src": "8780:147:15",
										"text": " @notice Update the super token logic to the latest\n @dev Refer to ISuperTokenFactory.Upgradability for expected behaviours"
									},
									"functionSelector": "787afde7",
									"id": 3133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateSuperTokenLogic",
									"nameLocation": "8941:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3130,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8975:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3133,
												"src": "8963:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$2783",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 3129,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3128,
														"name": "ISuperToken",
														"nameLocations": [
															"8963:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2783,
														"src": "8963:11:15"
													},
													"referencedDeclaration": 2783,
													"src": "8963:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$2783",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8962:19:15"
									},
									"returnParameters": {
										"id": 3132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8990:0:15"
									},
									"scope": 3433,
									"src": "8932:59:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3134,
										"nodeType": "StructuredDocumentation",
										"src": "8996:109:15",
										"text": " @dev SuperToken logic updated event\n @param code Address of the new SuperToken logic"
									},
									"eventSelector": "840acbd291b38534819f47f875839277e502f40e1c7bfea2c5fc2c8017442cd3",
									"id": 3141,
									"name": "SuperTokenLogicUpdated",
									"nameLocation": "9116:22:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3137,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9159:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3141,
												"src": "9139:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$2783",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 3136,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3135,
														"name": "ISuperToken",
														"nameLocations": [
															"9139:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2783,
														"src": "9139:11:15"
													},
													"referencedDeclaration": 2783,
													"src": "9139:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$2783",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3139,
												"indexed": false,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "9174:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3141,
												"src": "9166:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9166:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9138:41:15"
									},
									"src": "9110:70:15"
								},
								{
									"documentation": {
										"id": 3142,
										"nodeType": "StructuredDocumentation",
										"src": "9367:383:15",
										"text": " @dev Message sender (must be a contract) declares itself as a super app.\n @custom:deprecated you should use `registerAppWithKey` or `registerAppByFactory` instead,\n because app registration is currently governance permissioned on mainnets.\n @param configWord The super app manifest configuration, flags are defined in\n `SuperAppDefinitions`"
									},
									"functionSelector": "ad3915c8",
									"id": 3147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerApp",
									"nameLocation": "9764:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3144,
												"mutability": "mutable",
												"name": "configWord",
												"nameLocation": "9784:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 3147,
												"src": "9776:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9776:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9775:20:15"
									},
									"returnParameters": {
										"id": 3146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9804:0:15"
									},
									"scope": 3433,
									"src": "9755:50:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3148,
										"nodeType": "StructuredDocumentation",
										"src": "9810:84:15",
										"text": " @dev App registered event\n @param app Address of jailed app"
									},
									"eventSelector": "0d540ad8f39e07d19909687352b9fa017405d93c91a6760981fbae9cf28bfef7",
									"id": 3153,
									"name": "AppRegistered",
									"nameLocation": "9905:13:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3151,
												"indexed": true,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "9937:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3153,
												"src": "9919:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$2383",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 3150,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3149,
														"name": "ISuperApp",
														"nameLocations": [
															"9919:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2383,
														"src": "9919:9:15"
													},
													"referencedDeclaration": 2383,
													"src": "9919:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$2383",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9918:23:15"
									},
									"src": "9899:43:15"
								},
								{
									"documentation": {
										"id": 3154,
										"nodeType": "StructuredDocumentation",
										"src": "9948:655:15",
										"text": " @dev Message sender declares itself as a super app.\n @param configWord The super app manifest configuration, flags are defined in `SuperAppDefinitions`\n @param registrationKey The registration key issued by the governance, needed to register on a mainnet.\n @notice See https://github.com/superfluid-finance/protocol-monorepo/wiki/Super-App-White-listing-Guide\n On testnets or in dev environment, a placeholder (e.g. empty string) can be used.\n While the message sender must be the super app itself, the transaction sender (tx.origin)\n must be the deployer account the registration key was issued for."
									},
									"functionSelector": "bd1c448b",
									"id": 3161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerAppWithKey",
									"nameLocation": "10617:18:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3156,
												"mutability": "mutable",
												"name": "configWord",
												"nameLocation": "10644:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 3161,
												"src": "10636:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10636:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3158,
												"mutability": "mutable",
												"name": "registrationKey",
												"nameLocation": "10672:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 3161,
												"src": "10656:31:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3157,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10656:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10635:53:15"
									},
									"returnParameters": {
										"id": 3160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10697:0:15"
									},
									"scope": 3433,
									"src": "10608:90:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3162,
										"nodeType": "StructuredDocumentation",
										"src": "10704:400:15",
										"text": " @dev Message sender (must be a contract) declares app as a super app\n @param configWord The super app manifest configuration, flags are defined in `SuperAppDefinitions`\n @notice On mainnet deployments, only factory contracts pre-authorized by governance can use this.\n See https://github.com/superfluid-finance/protocol-monorepo/wiki/Super-App-White-listing-Guide"
									},
									"functionSelector": "f3733052",
									"id": 3170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerAppByFactory",
									"nameLocation": "11118:20:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3165,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "11149:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3170,
												"src": "11139:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$2383",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 3164,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3163,
														"name": "ISuperApp",
														"nameLocations": [
															"11139:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2383,
														"src": "11139:9:15"
													},
													"referencedDeclaration": 2383,
													"src": "11139:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$2383",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3167,
												"mutability": "mutable",
												"name": "configWord",
												"nameLocation": "11162:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 3170,
												"src": "11154:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11154:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11138:35:15"
									},
									"returnParameters": {
										"id": 3169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11182:0:15"
									},
									"scope": 3433,
									"src": "11109:74:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3171,
										"nodeType": "StructuredDocumentation",
										"src": "11189:90:15",
										"text": " @dev Query if the app is registered\n @param app Super app address"
									},
									"functionSelector": "3ca3ad4e",
									"id": 3179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApp",
									"nameLocation": "11293:5:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3174,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "11309:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3179,
												"src": "11299:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$2383",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 3173,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3172,
														"name": "ISuperApp",
														"nameLocations": [
															"11299:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2383,
														"src": "11299:9:15"
													},
													"referencedDeclaration": 2383,
													"src": "11299:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$2383",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11298:15:15"
									},
									"returnParameters": {
										"id": 3178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3179,
												"src": "11336:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11336:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11335:6:15"
									},
									"scope": 3433,
									"src": "11284:58:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3180,
										"nodeType": "StructuredDocumentation",
										"src": "11348:83:15",
										"text": " @dev Query app callbacklevel\n @param app Super app address"
									},
									"functionSelector": "9378fa13",
									"id": 3188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAppCallbackLevel",
									"nameLocation": "11445:19:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3183,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "11475:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3188,
												"src": "11465:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$2383",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 3182,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3181,
														"name": "ISuperApp",
														"nameLocations": [
															"11465:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2383,
														"src": "11465:9:15"
													},
													"referencedDeclaration": 2383,
													"src": "11465:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$2383",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11464:15:15"
									},
									"returnParameters": {
										"id": 3187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3186,
												"mutability": "mutable",
												"name": "appCallbackLevel",
												"nameLocation": "11508:16:15",
												"nodeType": "VariableDeclaration",
												"scope": 3188,
												"src": "11502:22:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3185,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11502:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11501:24:15"
									},
									"scope": 3433,
									"src": "11436:90:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3189,
										"nodeType": "StructuredDocumentation",
										"src": "11532:93:15",
										"text": " @dev Get the manifest of the super app\n @param app Super app address"
									},
									"functionSelector": "f9f522f4",
									"id": 3201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAppManifest",
									"nameLocation": "11639:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3192,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "11673:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3201,
												"src": "11663:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$2383",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 3191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3190,
														"name": "ISuperApp",
														"nameLocations": [
															"11663:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2383,
														"src": "11663:9:15"
													},
													"referencedDeclaration": 2383,
													"src": "11663:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$2383",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11653:29:15"
									},
									"returnParameters": {
										"id": 3200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3195,
												"mutability": "mutable",
												"name": "isSuperApp",
												"nameLocation": "11740:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 3201,
												"src": "11735:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11735:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3197,
												"mutability": "mutable",
												"name": "isJailed",
												"nameLocation": "11769:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3201,
												"src": "11764:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11764:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3199,
												"mutability": "mutable",
												"name": "noopMask",
												"nameLocation": "11799:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3201,
												"src": "11791:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11791:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11721:96:15"
									},
									"scope": 3433,
									"src": "11630:188:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3202,
										"nodeType": "StructuredDocumentation",
										"src": "11824:92:15",
										"text": " @dev Query if the app has been jailed\n @param app Super app address"
									},
									"functionSelector": "6b4f3335",
									"id": 3210,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAppJailed",
									"nameLocation": "11930:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3205,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "11952:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3210,
												"src": "11942:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$2383",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 3204,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3203,
														"name": "ISuperApp",
														"nameLocations": [
															"11942:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2383,
														"src": "11942:9:15"
													},
													"referencedDeclaration": 2383,
													"src": "11942:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$2383",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11941:15:15"
									},
									"returnParameters": {
										"id": 3209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3208,
												"mutability": "mutable",
												"name": "isJail",
												"nameLocation": "11985:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3210,
												"src": "11980:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3207,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11980:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11979:13:15"
									},
									"scope": 3433,
									"src": "11921:72:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3211,
										"nodeType": "StructuredDocumentation",
										"src": "11999:153:15",
										"text": " @dev Whitelist the target app for app composition for the source app (msg.sender)\n @param targetApp The target super app address"
									},
									"functionSelector": "57121e0c",
									"id": 3217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowCompositeApp",
									"nameLocation": "12166:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3214,
												"mutability": "mutable",
												"name": "targetApp",
												"nameLocation": "12194:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 3217,
												"src": "12184:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$2383",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 3213,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3212,
														"name": "ISuperApp",
														"nameLocations": [
															"12184:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2383,
														"src": "12184:9:15"
													},
													"referencedDeclaration": 2383,
													"src": "12184:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$2383",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12183:21:15"
									},
									"returnParameters": {
										"id": 3216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12213:0:15"
									},
									"scope": 3433,
									"src": "12157:57:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3218,
										"nodeType": "StructuredDocumentation",
										"src": "12220:184:15",
										"text": " @dev Query if source app is allowed to call the target app as downstream app\n @param app Super app address\n @param targetApp The target super app address"
									},
									"functionSelector": "bb84cfa1",
									"id": 3229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isCompositeAppAllowed",
									"nameLocation": "12418:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3221,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "12459:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3229,
												"src": "12449:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$2383",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 3220,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3219,
														"name": "ISuperApp",
														"nameLocations": [
															"12449:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2383,
														"src": "12449:9:15"
													},
													"referencedDeclaration": 2383,
													"src": "12449:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$2383",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3224,
												"mutability": "mutable",
												"name": "targetApp",
												"nameLocation": "12482:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 3229,
												"src": "12472:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$2383",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 3223,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3222,
														"name": "ISuperApp",
														"nameLocations": [
															"12472:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2383,
														"src": "12472:9:15"
													},
													"referencedDeclaration": 2383,
													"src": "12472:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$2383",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12439:58:15"
									},
									"returnParameters": {
										"id": 3228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3227,
												"mutability": "mutable",
												"name": "isAppAllowed",
												"nameLocation": "12542:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 3229,
												"src": "12537:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12537:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12536:19:15"
									},
									"scope": 3433,
									"src": "12409:147:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3230,
										"nodeType": "StructuredDocumentation",
										"src": "12948:393:15",
										"text": " @dev (For agreements) StaticCall the app before callback\n @param  app               The super app.\n @param  callData          The call data sending to the super app.\n @param  isTermination     Is it a termination callback?\n @param  ctx               Current ctx, it will be validated.\n @return cbdata            Data returned from the callback."
									},
									"functionSelector": "74041e02",
									"id": 3244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "callAppBeforeCallback",
									"nameLocation": "13355:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3233,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "13396:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3244,
												"src": "13386:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$2383",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 3232,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3231,
														"name": "ISuperApp",
														"nameLocations": [
															"13386:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2383,
														"src": "13386:9:15"
													},
													"referencedDeclaration": 2383,
													"src": "13386:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$2383",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3235,
												"mutability": "mutable",
												"name": "callData",
												"nameLocation": "13424:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3244,
												"src": "13409:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3234,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13409:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3237,
												"mutability": "mutable",
												"name": "isTermination",
												"nameLocation": "13447:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 3244,
												"src": "13442:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3236,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13442:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3239,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "13485:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3244,
												"src": "13470:18:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13470:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13376:118:15"
									},
									"returnParameters": {
										"id": 3243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3242,
												"mutability": "mutable",
												"name": "cbdata",
												"nameLocation": "13597:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3244,
												"src": "13584:19:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13584:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13583:21:15"
									},
									"scope": 3433,
									"src": "13346:259:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3245,
										"nodeType": "StructuredDocumentation",
										"src": "13611:393:15",
										"text": " @dev (For agreements) Call the app after callback\n @param  app               The super app.\n @param  callData          The call data sending to the super app.\n @param  isTermination     Is it a termination callback?\n @param  ctx               Current ctx, it will be validated.\n @return newCtx            The current context of the transaction."
									},
									"functionSelector": "1e6d0a84",
									"id": 3259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "callAppAfterCallback",
									"nameLocation": "14018:20:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3248,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "14058:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3259,
												"src": "14048:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$2383",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 3247,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3246,
														"name": "ISuperApp",
														"nameLocations": [
															"14048:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2383,
														"src": "14048:9:15"
													},
													"referencedDeclaration": 2383,
													"src": "14048:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$2383",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3250,
												"mutability": "mutable",
												"name": "callData",
												"nameLocation": "14086:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3259,
												"src": "14071:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3249,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14071:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3252,
												"mutability": "mutable",
												"name": "isTermination",
												"nameLocation": "14109:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 3259,
												"src": "14104:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3251,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14104:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3254,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "14147:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3259,
												"src": "14132:18:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14132:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14038:118:15"
									},
									"returnParameters": {
										"id": 3258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3257,
												"mutability": "mutable",
												"name": "newCtx",
												"nameLocation": "14259:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3259,
												"src": "14246:19:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14246:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14245:21:15"
									},
									"scope": 3433,
									"src": "14009:258:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3260,
										"nodeType": "StructuredDocumentation",
										"src": "14273:408:15",
										"text": " @dev (For agreements) Create a new callback stack\n @param  ctx                     The current ctx, it will be validated.\n @param  app                     The super app.\n @param  appCreditGranted        App credit granted so far.\n @param  appCreditUsed           App credit used so far.\n @return newCtx                  The current context of the transaction."
									},
									"functionSelector": "768fabb0",
									"id": 3277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "appCallbackPush",
									"nameLocation": "14695:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3262,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "14735:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3277,
												"src": "14720:18:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3261,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14720:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3265,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "14758:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3277,
												"src": "14748:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$2383",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 3264,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3263,
														"name": "ISuperApp",
														"nameLocations": [
															"14748:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2383,
														"src": "14748:9:15"
													},
													"referencedDeclaration": 2383,
													"src": "14748:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$2383",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3267,
												"mutability": "mutable",
												"name": "appCreditGranted",
												"nameLocation": "14779:16:15",
												"nodeType": "VariableDeclaration",
												"scope": 3277,
												"src": "14771:24:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14771:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3269,
												"mutability": "mutable",
												"name": "appCreditUsed",
												"nameLocation": "14812:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 3277,
												"src": "14805:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3268,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "14805:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3272,
												"mutability": "mutable",
												"name": "appCreditToken",
												"nameLocation": "14852:14:15",
												"nodeType": "VariableDeclaration",
												"scope": 3277,
												"src": "14835:31:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidToken_$3848",
													"typeString": "contract ISuperfluidToken"
												},
												"typeName": {
													"id": 3271,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3270,
														"name": "ISuperfluidToken",
														"nameLocations": [
															"14835:16:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3848,
														"src": "14835:16:15"
													},
													"referencedDeclaration": 3848,
													"src": "14835:16:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidToken_$3848",
														"typeString": "contract ISuperfluidToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14710:162:15"
									},
									"returnParameters": {
										"id": 3276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3275,
												"mutability": "mutable",
												"name": "newCtx",
												"nameLocation": "14976:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3277,
												"src": "14963:19:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3274,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14963:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14962:21:15"
									},
									"scope": 3433,
									"src": "14686:298:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3278,
										"nodeType": "StructuredDocumentation",
										"src": "14990:554:15",
										"text": " @dev (For agreements) Pop from the current app callback stack\n @param  ctx                     The ctx that was pushed before the callback stack.\n @param  appCreditUsedDelta      App credit used by the app.\n @return newCtx                  The current context of the transaction.\n @custom:security\n - Here we cannot do assertValidCtx(ctx), since we do not really save the stack in memory.\n - Hence there is still implicit trust that the agreement handles the callback push/pop pair correctly."
									},
									"functionSelector": "989b0c3e",
									"id": 3287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "appCallbackPop",
									"nameLocation": "15558:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3280,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "15597:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3287,
												"src": "15582:18:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3279,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15582:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3282,
												"mutability": "mutable",
												"name": "appCreditUsedDelta",
												"nameLocation": "15617:18:15",
												"nodeType": "VariableDeclaration",
												"scope": 3287,
												"src": "15610:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3281,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "15610:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15572:69:15"
									},
									"returnParameters": {
										"id": 3286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3285,
												"mutability": "mutable",
												"name": "newCtx",
												"nameLocation": "15714:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3287,
												"src": "15701:19:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15701:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15700:21:15"
									},
									"scope": 3433,
									"src": "15549:173:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3288,
										"nodeType": "StructuredDocumentation",
										"src": "15728:288:15",
										"text": " @dev (For agreements) Use app credit.\n @param  ctx                      The current ctx, it will be validated.\n @param  appCreditUsedMore        See app credit for more details.\n @return newCtx                   The current context of the transaction."
									},
									"functionSelector": "59a29141",
									"id": 3297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ctxUseCredit",
									"nameLocation": "16030:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3290,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "16067:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "16052:18:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16052:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3292,
												"mutability": "mutable",
												"name": "appCreditUsedMore",
												"nameLocation": "16087:17:15",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "16080:24:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3291,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "16080:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16042:68:15"
									},
									"returnParameters": {
										"id": 3296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3295,
												"mutability": "mutable",
												"name": "newCtx",
												"nameLocation": "16214:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "16201:19:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3294,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16201:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:21:15"
									},
									"scope": 3433,
									"src": "16021:201:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3298,
										"nodeType": "StructuredDocumentation",
										"src": "16228:244:15",
										"text": " @dev (For agreements) Jail the app.\n @param  app                     The super app.\n @param  reason                  Jail reason code.\n @return newCtx                  The current context of the transaction."
									},
									"functionSelector": "b724211e",
									"id": 3310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "jailApp",
									"nameLocation": "16486:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3300,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "16518:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3310,
												"src": "16503:18:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3299,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16503:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3303,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "16541:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3310,
												"src": "16531:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$2383",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 3302,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3301,
														"name": "ISuperApp",
														"nameLocations": [
															"16531:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2383,
														"src": "16531:9:15"
													},
													"referencedDeclaration": 2383,
													"src": "16531:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$2383",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3305,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "16562:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3310,
												"src": "16554:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16554:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16493:81:15"
									},
									"returnParameters": {
										"id": 3309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3308,
												"mutability": "mutable",
												"name": "newCtx",
												"nameLocation": "16678:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3310,
												"src": "16665:19:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3307,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16665:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16664:21:15"
									},
									"scope": 3433,
									"src": "16477:209:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3311,
										"nodeType": "StructuredDocumentation",
										"src": "16692:172:15",
										"text": " @dev Jail event for the app\n @param app Address of jailed app\n @param reason Reason the app is jailed (see Definitions.sol for the full list)"
									},
									"eventSelector": "be3aa33bd245135e4e26b223d79d14ea479a47bff09f2b03c53838af1edbb14b",
									"id": 3318,
									"name": "Jail",
									"nameLocation": "16875:4:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3314,
												"indexed": true,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "16898:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "16880:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$2383",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 3313,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3312,
														"name": "ISuperApp",
														"nameLocations": [
															"16880:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2383,
														"src": "16880:9:15"
													},
													"referencedDeclaration": 2383,
													"src": "16880:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$2383",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3316,
												"indexed": false,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "16911:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "16903:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16903:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16879:39:15"
									},
									"src": "16869:50:15"
								},
								{
									"documentation": {
										"id": 3319,
										"nodeType": "StructuredDocumentation",
										"src": "17480:265:15",
										"text": " @dev Call agreement function\n @param agreementClass The agreement address you are calling\n @param callData The contextual call data with placeholder ctx\n @param userData Extra user data being sent to the super app callbacks"
									},
									"functionSelector": "39255d5b",
									"id": 3331,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "callAgreement",
									"nameLocation": "17760:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3322,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "17800:14:15",
												"nodeType": "VariableDeclaration",
												"scope": 3331,
												"src": "17784:30:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperAgreement_$2269",
													"typeString": "contract ISuperAgreement"
												},
												"typeName": {
													"id": 3321,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3320,
														"name": "ISuperAgreement",
														"nameLocations": [
															"17784:15:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2269,
														"src": "17784:15:15"
													},
													"referencedDeclaration": 2269,
													"src": "17784:15:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperAgreement_$2269",
														"typeString": "contract ISuperAgreement"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3324,
												"mutability": "mutable",
												"name": "callData",
												"nameLocation": "17840:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3331,
												"src": "17825:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3323,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17825:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3326,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "17874:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3331,
												"src": "17859:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3325,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17859:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17773:116:15"
									},
									"returnParameters": {
										"id": 3330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3329,
												"mutability": "mutable",
												"name": "returnedData",
												"nameLocation": "17993:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 3331,
												"src": "17980:25:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3328,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17980:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17979:27:15"
									},
									"scope": 3433,
									"src": "17751:256:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3332,
										"nodeType": "StructuredDocumentation",
										"src": "18013:268:15",
										"text": " @notice Call app action\n @dev Main use case is calling app action in a batch call via the host\n @param callData The contextual call data\n @custom:note See \"Contextless Call Proxies\" above for more about contextual call data."
									},
									"functionSelector": "1e855cf3",
									"id": 3342,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "callAppAction",
									"nameLocation": "18295:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3335,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "18328:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3342,
												"src": "18318:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$2383",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 3334,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3333,
														"name": "ISuperApp",
														"nameLocations": [
															"18318:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2383,
														"src": "18318:9:15"
													},
													"referencedDeclaration": 2383,
													"src": "18318:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$2383",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3337,
												"mutability": "mutable",
												"name": "callData",
												"nameLocation": "18356:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3342,
												"src": "18341:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3336,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18341:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18308:62:15"
									},
									"returnParameters": {
										"id": 3341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3340,
												"mutability": "mutable",
												"name": "returnedData",
												"nameLocation": "18500:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 3342,
												"src": "18487:25:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18487:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18486:27:15"
									},
									"scope": 3433,
									"src": "18286:228:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISuperfluid.Context",
									"id": 3366,
									"members": [
										{
											"constant": false,
											"id": 3344,
											"mutability": "mutable",
											"name": "appCallbackLevel",
											"nameLocation": "19759:16:15",
											"nodeType": "VariableDeclaration",
											"scope": 3366,
											"src": "19753:22:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 3343,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "19753:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3346,
											"mutability": "mutable",
											"name": "callType",
											"nameLocation": "19815:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 3366,
											"src": "19809:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 3345,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "19809:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3348,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "19873:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 3366,
											"src": "19865:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3347,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "19865:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3350,
											"mutability": "mutable",
											"name": "msgSender",
											"nameLocation": "19952:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 3366,
											"src": "19944:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3349,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "19944:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3352,
											"mutability": "mutable",
											"name": "agreementSelector",
											"nameLocation": "20117:17:15",
											"nodeType": "VariableDeclaration",
											"scope": 3366,
											"src": "20110:24:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes4",
												"typeString": "bytes4"
											},
											"typeName": {
												"id": 3351,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "20110:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3354,
											"mutability": "mutable",
											"name": "userData",
											"nameLocation": "20198:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 3366,
											"src": "20192:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 3353,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "20192:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3356,
											"mutability": "mutable",
											"name": "appCreditGranted",
											"nameLocation": "20300:16:15",
											"nodeType": "VariableDeclaration",
											"scope": 3366,
											"src": "20292:24:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3355,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "20292:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3358,
											"mutability": "mutable",
											"name": "appCreditWantedDeprecated",
											"nameLocation": "20383:25:15",
											"nodeType": "VariableDeclaration",
											"scope": 3366,
											"src": "20375:33:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3357,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "20375:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3360,
											"mutability": "mutable",
											"name": "appCreditUsed",
											"nameLocation": "20946:13:15",
											"nodeType": "VariableDeclaration",
											"scope": 3366,
											"src": "20939:20:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 3359,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "20939:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3362,
											"mutability": "mutable",
											"name": "appAddress",
											"nameLocation": "21000:10:15",
											"nodeType": "VariableDeclaration",
											"scope": 3366,
											"src": "20992:18:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3361,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "20992:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3365,
											"mutability": "mutable",
											"name": "appCreditToken",
											"nameLocation": "21074:14:15",
											"nodeType": "VariableDeclaration",
											"scope": 3366,
											"src": "21057:31:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_ISuperfluidToken_$3848",
												"typeString": "contract ISuperfluidToken"
											},
											"typeName": {
												"id": 3364,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3363,
													"name": "ISuperfluidToken",
													"nameLocations": [
														"21057:16:15"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3848,
													"src": "21057:16:15"
												},
												"referencedDeclaration": 3848,
												"src": "21057:16:15",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidToken_$3848",
													"typeString": "contract ISuperfluidToken"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Context",
									"nameLocation": "19659:7:15",
									"nodeType": "StructDefinition",
									"scope": 3433,
									"src": "19652:1443:15",
									"visibility": "public"
								},
								{
									"functionSelector": "4329d293",
									"id": 3382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "callAgreementWithContext",
									"nameLocation": "21110:24:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3369,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "21160:14:15",
												"nodeType": "VariableDeclaration",
												"scope": 3382,
												"src": "21144:30:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperAgreement_$2269",
													"typeString": "contract ISuperAgreement"
												},
												"typeName": {
													"id": 3368,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3367,
														"name": "ISuperAgreement",
														"nameLocations": [
															"21144:15:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2269,
														"src": "21144:15:15"
													},
													"referencedDeclaration": 2269,
													"src": "21144:15:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperAgreement_$2269",
														"typeString": "contract ISuperAgreement"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3371,
												"mutability": "mutable",
												"name": "callData",
												"nameLocation": "21199:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3382,
												"src": "21184:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3370,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21184:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3373,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "21232:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3382,
												"src": "21217:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3372,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21217:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3375,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "21265:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3382,
												"src": "21250:18:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21250:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21134:140:15"
									},
									"returnParameters": {
										"id": 3381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3378,
												"mutability": "mutable",
												"name": "newCtx",
												"nameLocation": "21395:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3382,
												"src": "21382:19:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3377,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21382:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3380,
												"mutability": "mutable",
												"name": "returnedData",
												"nameLocation": "21416:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 3382,
												"src": "21403:25:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21403:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21381:48:15"
									},
									"scope": 3433,
									"src": "21101:329:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ba48b5f8",
									"id": 3394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "callAppActionWithContext",
									"nameLocation": "21445:24:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3385,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "21489:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3394,
												"src": "21479:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$2383",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 3384,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3383,
														"name": "ISuperApp",
														"nameLocations": [
															"21479:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2383,
														"src": "21479:9:15"
													},
													"referencedDeclaration": 2383,
													"src": "21479:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$2383",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3387,
												"mutability": "mutable",
												"name": "callData",
												"nameLocation": "21517:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3394,
												"src": "21502:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21502:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3389,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "21550:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3394,
												"src": "21535:18:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3388,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21535:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21469:90:15"
									},
									"returnParameters": {
										"id": 3393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3392,
												"mutability": "mutable",
												"name": "newCtx",
												"nameLocation": "21667:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3394,
												"src": "21654:19:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3391,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21654:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21653:21:15"
									},
									"scope": 3433,
									"src": "21436:239:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3f6c923a",
									"id": 3402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decodeCtx",
									"nameLocation": "21690:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3396,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "21713:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3402,
												"src": "21700:16:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3395,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21700:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21699:18:15"
									},
									"returnParameters": {
										"id": 3401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3400,
												"mutability": "mutable",
												"name": "context",
												"nameLocation": "21772:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3402,
												"src": "21757:22:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Context_$3366_memory_ptr",
													"typeString": "struct ISuperfluid.Context"
												},
												"typeName": {
													"id": 3399,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3398,
														"name": "Context",
														"nameLocations": [
															"21757:7:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3366,
														"src": "21757:7:15"
													},
													"referencedDeclaration": 3366,
													"src": "21757:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Context_$3366_storage_ptr",
														"typeString": "struct ISuperfluid.Context"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21756:24:15"
									},
									"scope": 3433,
									"src": "21681:100:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bf428734",
									"id": 3409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isCtxValid",
									"nameLocation": "21796:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3404,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "21822:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3409,
												"src": "21807:18:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21807:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21806:20:15"
									},
									"returnParameters": {
										"id": 3408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3409,
												"src": "21850:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21850:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21849:6:15"
									},
									"scope": 3433,
									"src": "21787:69:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISuperfluid.Operation",
									"id": 3416,
									"members": [
										{
											"constant": false,
											"id": 3411,
											"mutability": "mutable",
											"name": "operationType",
											"nameLocation": "22193:13:15",
											"nodeType": "VariableDeclaration",
											"scope": 3416,
											"src": "22186:20:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 3410,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "22186:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3413,
											"mutability": "mutable",
											"name": "target",
											"nameLocation": "22252:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 3416,
											"src": "22244:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3412,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "22244:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3415,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "22316:4:15",
											"nodeType": "VariableDeclaration",
											"scope": 3416,
											"src": "22310:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 3414,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "22310:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Operation",
									"nameLocation": "22095:9:15",
									"nodeType": "StructDefinition",
									"scope": 3433,
									"src": "22088:239:15",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 3417,
										"nodeType": "StructuredDocumentation",
										"src": "22333:94:15",
										"text": " @dev Batch call function\n @param operations Array of batch operations"
									},
									"functionSelector": "6ad3ca7d",
									"id": 3424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchCall",
									"nameLocation": "22441:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3421,
												"mutability": "mutable",
												"name": "operations",
												"nameLocation": "22472:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 3424,
												"src": "22451:31:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Operation_$3416_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ISuperfluid.Operation[]"
												},
												"typeName": {
													"baseType": {
														"id": 3419,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3418,
															"name": "Operation",
															"nameLocations": [
																"22451:9:15"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3416,
															"src": "22451:9:15"
														},
														"referencedDeclaration": 3416,
														"src": "22451:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Operation_$3416_storage_ptr",
															"typeString": "struct ISuperfluid.Operation"
														}
													},
													"id": 3420,
													"nodeType": "ArrayTypeName",
													"src": "22451:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Operation_$3416_storage_$dyn_storage_ptr",
														"typeString": "struct ISuperfluid.Operation[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22450:33:15"
									},
									"returnParameters": {
										"id": 3423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22492:0:15"
									},
									"scope": 3433,
									"src": "22432:61:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3425,
										"nodeType": "StructuredDocumentation",
										"src": "22499:128:15",
										"text": " @dev Batch call function for trusted forwarders (EIP-2771)\n @param operations Array of batch operations"
									},
									"functionSelector": "670e77e3",
									"id": 3432,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "forwardBatchCall",
									"nameLocation": "22641:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3429,
												"mutability": "mutable",
												"name": "operations",
												"nameLocation": "22679:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 3432,
												"src": "22658:31:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Operation_$3416_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ISuperfluid.Operation[]"
												},
												"typeName": {
													"baseType": {
														"id": 3427,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3426,
															"name": "Operation",
															"nameLocations": [
																"22658:9:15"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3416,
															"src": "22658:9:15"
														},
														"referencedDeclaration": 3416,
														"src": "22658:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Operation_$3416_storage_ptr",
															"typeString": "struct ISuperfluid.Operation"
														}
													},
													"id": 3428,
													"nodeType": "ArrayTypeName",
													"src": "22658:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Operation_$3416_storage_$dyn_storage_ptr",
														"typeString": "struct ISuperfluid.Operation[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22657:33:15"
									},
									"returnParameters": {
										"id": 3431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22699:0:15"
									},
									"scope": 3433,
									"src": "22632:68:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3434,
							"src": "1120:22687:15",
							"usedErrors": [
								2940, 2942, 2944, 2946, 2948, 2950, 2952, 2954,
								2956, 2958, 2960, 2962, 2964, 2966, 2970, 2972,
								2974, 2976, 2978, 2980, 2982, 2984, 2986, 2988
							]
						}
					],
					"src": "35:23773:15"
				},
				"id": 15
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
				"ast": {
					"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
					"exportedSymbols": {
						"ISuperAgreement": [2269],
						"ISuperToken": [2783],
						"ISuperfluid": [3433],
						"ISuperfluidGovernance": [3562],
						"ISuperfluidToken": [3848]
					},
					"id": 3563,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3435,
							"literals": ["solidity", ">=", "0.8", ".4"],
							"nodeType": "PragmaDirective",
							"src": "35:25:16"
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
							"file": "./ISuperAgreement.sol",
							"id": 3437,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3563,
							"sourceUnit": 2270,
							"src": "62:56:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3436,
										"name": "ISuperAgreement",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2269,
										"src": "71:15:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
							"file": "./ISuperToken.sol",
							"id": 3439,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3563,
							"sourceUnit": 2784,
							"src": "119:48:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3438,
										"name": "ISuperToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2783,
										"src": "128:11:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
							"file": "./ISuperfluidToken.sol",
							"id": 3441,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3563,
							"sourceUnit": 3849,
							"src": "168:59:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3440,
										"name": "ISuperfluidToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3848,
										"src": "177:16:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
							"file": "./ISuperfluid.sol",
							"id": 3443,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3563,
							"sourceUnit": 3434,
							"src": "228:48:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3442,
										"name": "ISuperfluid",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3433,
										"src": "237:11:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISuperfluidGovernance",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3444,
								"nodeType": "StructuredDocumentation",
								"src": "279:71:16",
								"text": " @title Superfluid governance interface\n @author Superfluid"
							},
							"fullyImplemented": false,
							"id": 3562,
							"linearizedBaseContracts": [3562],
							"name": "ISuperfluidGovernance",
							"nameLocation": "361:21:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "27743aa6",
									"id": 3446,
									"name": "SF_GOV_ARRAYS_NOT_SAME_LENGTH",
									"nameLocation": "574:29:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "603:2:16"
									},
									"src": "568:38:16"
								},
								{
									"errorSelector": "e171980a",
									"id": 3448,
									"name": "SF_GOV_INVALID_LIQUIDATION_OR_PATRICIAN_PERIOD",
									"nameLocation": "648:46:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "694:2:16"
									},
									"src": "642:55:16"
								},
								{
									"errorSelector": "80dddd73",
									"id": 3450,
									"name": "SF_GOV_MUST_BE_CONTRACT",
									"nameLocation": "722:23:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "745:2:16"
									},
									"src": "716:32:16"
								},
								{
									"documentation": {
										"id": 3451,
										"nodeType": "StructuredDocumentation",
										"src": "791:76:16",
										"text": " @dev Replace the current governance with a new governance"
									},
									"functionSelector": "44864b25",
									"id": 3459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "replaceGovernance",
									"nameLocation": "881:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3454,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "920:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3459,
												"src": "908:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluid_$3433",
													"typeString": "contract ISuperfluid"
												},
												"typeName": {
													"id": 3453,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3452,
														"name": "ISuperfluid",
														"nameLocations": [
															"908:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3433,
														"src": "908:11:16"
													},
													"referencedDeclaration": 3433,
													"src": "908:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluid_$3433",
														"typeString": "contract ISuperfluid"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3456,
												"mutability": "mutable",
												"name": "newGov",
												"nameLocation": "942:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 3459,
												"src": "934:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:51:16"
									},
									"returnParameters": {
										"id": 3458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "958:0:16"
									},
									"scope": 3562,
									"src": "872:87:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3460,
										"nodeType": "StructuredDocumentation",
										"src": "965:54:16",
										"text": " @dev Register a new agreement class"
									},
									"functionSelector": "cadf8f85",
									"id": 3468,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerAgreementClass",
									"nameLocation": "1033:22:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3463,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "1077:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3468,
												"src": "1065:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluid_$3433",
													"typeString": "contract ISuperfluid"
												},
												"typeName": {
													"id": 3462,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3461,
														"name": "ISuperfluid",
														"nameLocations": [
															"1065:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3433,
														"src": "1065:11:16"
													},
													"referencedDeclaration": 3433,
													"src": "1065:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluid_$3433",
														"typeString": "contract ISuperfluid"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3465,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "1099:14:16",
												"nodeType": "VariableDeclaration",
												"scope": 3468,
												"src": "1091:22:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1055:59:16"
									},
									"returnParameters": {
										"id": 3467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:0:16"
									},
									"scope": 3562,
									"src": "1024:100:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3469,
										"nodeType": "StructuredDocumentation",
										"src": "1130:193:16",
										"text": " @dev Update logics of the contracts\n @custom:note \n - Because they might have inter-dependencies, it is good to have one single function to update them all"
									},
									"functionSelector": "427942a4",
									"id": 3482,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateContracts",
									"nameLocation": "1337:15:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3472,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "1374:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3482,
												"src": "1362:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluid_$3433",
													"typeString": "contract ISuperfluid"
												},
												"typeName": {
													"id": 3471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3470,
														"name": "ISuperfluid",
														"nameLocations": [
															"1362:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3433,
														"src": "1362:11:16"
													},
													"referencedDeclaration": 3433,
													"src": "1362:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluid_$3433",
														"typeString": "contract ISuperfluid"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3474,
												"mutability": "mutable",
												"name": "hostNewLogic",
												"nameLocation": "1396:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 3482,
												"src": "1388:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1388:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3477,
												"mutability": "mutable",
												"name": "agreementClassNewLogics",
												"nameLocation": "1437:23:16",
												"nodeType": "VariableDeclaration",
												"scope": 3482,
												"src": "1418:42:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3475,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1418:7:16",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3476,
													"nodeType": "ArrayTypeName",
													"src": "1418:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3479,
												"mutability": "mutable",
												"name": "superTokenFactoryNewLogic",
												"nameLocation": "1478:25:16",
												"nodeType": "VariableDeclaration",
												"scope": 3482,
												"src": "1470:33:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1470:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:157:16"
									},
									"returnParameters": {
										"id": 3481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:0:16"
									},
									"scope": 3562,
									"src": "1328:191:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3483,
										"nodeType": "StructuredDocumentation",
										"src": "1525:113:16",
										"text": " @dev Update supertoken logic contract to the latest that is managed by the super token factory"
									},
									"functionSelector": "42148deb",
									"id": 3493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchUpdateSuperTokenLogic",
									"nameLocation": "1652:26:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3486,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "1700:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3493,
												"src": "1688:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluid_$3433",
													"typeString": "contract ISuperfluid"
												},
												"typeName": {
													"id": 3485,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3484,
														"name": "ISuperfluid",
														"nameLocations": [
															"1688:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3433,
														"src": "1688:11:16"
													},
													"referencedDeclaration": 3433,
													"src": "1688:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluid_$3433",
														"typeString": "contract ISuperfluid"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3490,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "1737:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 3493,
												"src": "1714:29:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_ISuperToken_$2783_$dyn_calldata_ptr",
													"typeString": "contract ISuperToken[]"
												},
												"typeName": {
													"baseType": {
														"id": 3488,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3487,
															"name": "ISuperToken",
															"nameLocations": [
																"1714:11:16"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2783,
															"src": "1714:11:16"
														},
														"referencedDeclaration": 2783,
														"src": "1714:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISuperToken_$2783",
															"typeString": "contract ISuperToken"
														}
													},
													"id": 3489,
													"nodeType": "ArrayTypeName",
													"src": "1714:13:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_ISuperToken_$2783_$dyn_storage_ptr",
														"typeString": "contract ISuperToken[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1678:66:16"
									},
									"returnParameters": {
										"id": 3492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1753:0:16"
									},
									"scope": 3562,
									"src": "1643:111:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3494,
										"nodeType": "StructuredDocumentation",
										"src": "1764:58:16",
										"text": " @dev Set configuration as address value"
									},
									"functionSelector": "78707cb8",
									"id": 3507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setConfig",
									"nameLocation": "1836:9:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3497,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "1867:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3507,
												"src": "1855:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluid_$3433",
													"typeString": "contract ISuperfluid"
												},
												"typeName": {
													"id": 3496,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3495,
														"name": "ISuperfluid",
														"nameLocations": [
															"1855:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3433,
														"src": "1855:11:16"
													},
													"referencedDeclaration": 3433,
													"src": "1855:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluid_$3433",
														"typeString": "contract ISuperfluid"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3500,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "1898:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 3507,
												"src": "1881:27:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidToken_$3848",
													"typeString": "contract ISuperfluidToken"
												},
												"typeName": {
													"id": 3499,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3498,
														"name": "ISuperfluidToken",
														"nameLocations": [
															"1881:16:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3848,
														"src": "1881:16:16"
													},
													"referencedDeclaration": 3848,
													"src": "1881:16:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidToken_$3848",
														"typeString": "contract ISuperfluidToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3502,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1926:3:16",
												"nodeType": "VariableDeclaration",
												"scope": 3507,
												"src": "1918:11:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3501,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3504,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1947:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3507,
												"src": "1939:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1845:113:16"
									},
									"returnParameters": {
										"id": 3506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1967:0:16"
									},
									"scope": 3562,
									"src": "1827:141:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3508,
										"nodeType": "StructuredDocumentation",
										"src": "1978:58:16",
										"text": " @dev Set configuration as uint256 value"
									},
									"functionSelector": "f79a8e63",
									"id": 3521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setConfig",
									"nameLocation": "2050:9:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3511,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "2081:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3521,
												"src": "2069:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluid_$3433",
													"typeString": "contract ISuperfluid"
												},
												"typeName": {
													"id": 3510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3509,
														"name": "ISuperfluid",
														"nameLocations": [
															"2069:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3433,
														"src": "2069:11:16"
													},
													"referencedDeclaration": 3433,
													"src": "2069:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluid_$3433",
														"typeString": "contract ISuperfluid"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3514,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "2112:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 3521,
												"src": "2095:27:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidToken_$3848",
													"typeString": "contract ISuperfluidToken"
												},
												"typeName": {
													"id": 3513,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3512,
														"name": "ISuperfluidToken",
														"nameLocations": [
															"2095:16:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3848,
														"src": "2095:16:16"
													},
													"referencedDeclaration": 3848,
													"src": "2095:16:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidToken_$3848",
														"typeString": "contract ISuperfluidToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3516,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2140:3:16",
												"nodeType": "VariableDeclaration",
												"scope": 3521,
												"src": "2132:11:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3515,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2132:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3518,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2161:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3521,
												"src": "2153:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:113:16"
									},
									"returnParameters": {
										"id": 3520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:0:16"
									},
									"scope": 3562,
									"src": "2041:141:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3522,
										"nodeType": "StructuredDocumentation",
										"src": "2188:43:16",
										"text": " @dev Clear configuration"
									},
									"functionSelector": "640b6cc9",
									"id": 3533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "clearConfig",
									"nameLocation": "2245:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3525,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "2278:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3533,
												"src": "2266:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluid_$3433",
													"typeString": "contract ISuperfluid"
												},
												"typeName": {
													"id": 3524,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3523,
														"name": "ISuperfluid",
														"nameLocations": [
															"2266:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3433,
														"src": "2266:11:16"
													},
													"referencedDeclaration": 3433,
													"src": "2266:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluid_$3433",
														"typeString": "contract ISuperfluid"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3528,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "2309:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 3533,
												"src": "2292:27:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidToken_$3848",
													"typeString": "contract ISuperfluidToken"
												},
												"typeName": {
													"id": 3527,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3526,
														"name": "ISuperfluidToken",
														"nameLocations": [
															"2292:16:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3848,
														"src": "2292:16:16"
													},
													"referencedDeclaration": 3848,
													"src": "2292:16:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidToken_$3848",
														"typeString": "contract ISuperfluidToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3530,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2337:3:16",
												"nodeType": "VariableDeclaration",
												"scope": 3533,
												"src": "2329:11:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3529,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2329:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:90:16"
									},
									"returnParameters": {
										"id": 3532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:0:16"
									},
									"scope": 3562,
									"src": "2236:120:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3534,
										"nodeType": "StructuredDocumentation",
										"src": "2362:58:16",
										"text": " @dev Get configuration as address value"
									},
									"functionSelector": "8369a0f1",
									"id": 3547,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getConfigAsAddress",
									"nameLocation": "2434:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3537,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "2474:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3547,
												"src": "2462:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluid_$3433",
													"typeString": "contract ISuperfluid"
												},
												"typeName": {
													"id": 3536,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3535,
														"name": "ISuperfluid",
														"nameLocations": [
															"2462:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3433,
														"src": "2462:11:16"
													},
													"referencedDeclaration": 3433,
													"src": "2462:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluid_$3433",
														"typeString": "contract ISuperfluid"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3540,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "2505:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 3547,
												"src": "2488:27:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidToken_$3848",
													"typeString": "contract ISuperfluidToken"
												},
												"typeName": {
													"id": 3539,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3538,
														"name": "ISuperfluidToken",
														"nameLocations": [
															"2488:16:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3848,
														"src": "2488:16:16"
													},
													"referencedDeclaration": 3848,
													"src": "2488:16:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidToken_$3848",
														"typeString": "contract ISuperfluidToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3542,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2533:3:16",
												"nodeType": "VariableDeclaration",
												"scope": 3547,
												"src": "2525:11:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3541,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2452:85:16"
									},
									"returnParameters": {
										"id": 3546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3545,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2569:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3547,
												"src": "2561:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2561:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2560:15:16"
									},
									"scope": 3562,
									"src": "2425:151:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3548,
										"nodeType": "StructuredDocumentation",
										"src": "2582:58:16",
										"text": " @dev Get configuration as uint256 value"
									},
									"functionSelector": "80f70cba",
									"id": 3561,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getConfigAsUint256",
									"nameLocation": "2654:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3551,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "2694:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "2682:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluid_$3433",
													"typeString": "contract ISuperfluid"
												},
												"typeName": {
													"id": 3550,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3549,
														"name": "ISuperfluid",
														"nameLocations": [
															"2682:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3433,
														"src": "2682:11:16"
													},
													"referencedDeclaration": 3433,
													"src": "2682:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluid_$3433",
														"typeString": "contract ISuperfluid"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3554,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "2725:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "2708:27:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidToken_$3848",
													"typeString": "contract ISuperfluidToken"
												},
												"typeName": {
													"id": 3553,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3552,
														"name": "ISuperfluidToken",
														"nameLocations": [
															"2708:16:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3848,
														"src": "2708:16:16"
													},
													"referencedDeclaration": 3848,
													"src": "2708:16:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidToken_$3848",
														"typeString": "contract ISuperfluidToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3556,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2753:3:16",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "2745:11:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3555,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2745:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2672:85:16"
									},
									"returnParameters": {
										"id": 3560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3559,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2789:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "2781:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2781:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2780:15:16"
									},
									"scope": 3562,
									"src": "2645:151:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3563,
							"src": "351:2448:16",
							"usedErrors": [3446, 3448, 3450]
						}
					],
					"src": "35:2765:16"
				},
				"id": 16
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
				"ast": {
					"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
					"exportedSymbols": {
						"ISuperAgreement": [2269],
						"ISuperfluidToken": [3848]
					},
					"id": 3849,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3564,
							"literals": ["solidity", ">=", "0.8", ".4"],
							"nodeType": "PragmaDirective",
							"src": "35:25:17"
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
							"file": "./ISuperAgreement.sol",
							"id": 3566,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3849,
							"sourceUnit": 2270,
							"src": "62:56:17",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3565,
										"name": "ISuperAgreement",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2269,
										"src": "71:15:17",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISuperfluidToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3567,
								"nodeType": "StructuredDocumentation",
								"src": "120:66:17",
								"text": " @title Superfluid token interface\n @author Superfluid"
							},
							"fullyImplemented": false,
							"id": 3848,
							"linearizedBaseContracts": [3848],
							"name": "ISuperfluidToken",
							"nameLocation": "197:16:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "f05521f6",
									"id": 3569,
									"name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS",
									"nameLocation": "401:33:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:17"
									},
									"src": "395:42:17"
								},
								{
									"errorSelector": "dae18809",
									"id": 3571,
									"name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST",
									"nameLocation": "463:33:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:2:17"
									},
									"src": "457:42:17"
								},
								{
									"errorSelector": "10ecdf44",
									"id": 3573,
									"name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE",
									"nameLocation": "525:34:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "559:2:17"
									},
									"src": "519:43:17"
								},
								{
									"errorSelector": "2f4cb941",
									"id": 3575,
									"name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE",
									"nameLocation": "587:34:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "621:2:17"
									},
									"src": "581:43:17"
								},
								{
									"errorSelector": "c9ff6644",
									"id": 3577,
									"name": "SF_TOKEN_ONLY_LISTED_AGREEMENT",
									"nameLocation": "649:30:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "679:2:17"
									},
									"src": "643:39:17"
								},
								{
									"errorSelector": "c51efddd",
									"id": 3579,
									"name": "SF_TOKEN_ONLY_HOST",
									"nameLocation": "711:18:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "729:2:17"
									},
									"src": "705:27:17"
								},
								{
									"documentation": {
										"id": 3580,
										"nodeType": "StructuredDocumentation",
										"src": "954:60:17",
										"text": " @dev Get superfluid host contract address"
									},
									"functionSelector": "20bc4425",
									"id": 3585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getHost",
									"nameLocation": "1028:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1035:2:17"
									},
									"returnParameters": {
										"id": 3584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3583,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "1068:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 3585,
												"src": "1060:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:14:17"
									},
									"scope": 3848,
									"src": "1019:55:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISuperfluidToken.LiquidationTypeData",
									"id": 3590,
									"members": [
										{
											"constant": false,
											"id": 3587,
											"mutability": "mutable",
											"name": "version",
											"nameLocation": "1507:7:17",
											"nodeType": "VariableDeclaration",
											"scope": 3590,
											"src": "1499:15:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3586,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1499:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3589,
											"mutability": "mutable",
											"name": "liquidationType",
											"nameLocation": "1530:15:17",
											"nodeType": "VariableDeclaration",
											"scope": 3590,
											"src": "1524:21:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 3588,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1524:5:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LiquidationTypeData",
									"nameLocation": "1469:19:17",
									"nodeType": "StructDefinition",
									"scope": 3848,
									"src": "1462:90:17",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 3591,
										"nodeType": "StructuredDocumentation",
										"src": "1754:321:17",
										"text": " @dev Calculate the real balance of a user, taking in consideration all agreements of the account\n @param account for the query\n @param timestamp Time of balance\n @return availableBalance Real-time balance\n @return deposit Account deposit\n @return owedDeposit Account owed Deposit"
									},
									"functionSelector": "eb3537cc",
									"id": 3604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "realtimeBalanceOf",
									"nameLocation": "2089:17:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3593,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2123:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3604,
												"src": "2115:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2115:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3595,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2147:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 3604,
												"src": "2139:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2106:56:17"
									},
									"returnParameters": {
										"id": 3603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3598,
												"mutability": "mutable",
												"name": "availableBalance",
												"nameLocation": "2222:16:17",
												"nodeType": "VariableDeclaration",
												"scope": 3604,
												"src": "2215:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3597,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3600,
												"mutability": "mutable",
												"name": "deposit",
												"nameLocation": "2260:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3604,
												"src": "2252:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2252:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3602,
												"mutability": "mutable",
												"name": "owedDeposit",
												"nameLocation": "2289:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 3604,
												"src": "2281:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2281:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:100:17"
									},
									"scope": 3848,
									"src": "2080:222:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3605,
										"nodeType": "StructuredDocumentation",
										"src": "2308:339:17",
										"text": " @notice Calculate the realtime balance given the current host.getNow() value\n @dev realtimeBalanceOf with timestamp equals to block timestamp\n @param account for the query\n @return availableBalance Real-time balance\n @return deposit Account deposit\n @return owedDeposit Account owed Deposit"
									},
									"functionSelector": "2ec8eec7",
									"id": 3618,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "realtimeBalanceOfNow",
									"nameLocation": "2661:20:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3607,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2698:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3618,
												"src": "2690:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2690:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2681:30:17"
									},
									"returnParameters": {
										"id": 3617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3610,
												"mutability": "mutable",
												"name": "availableBalance",
												"nameLocation": "2771:16:17",
												"nodeType": "VariableDeclaration",
												"scope": 3618,
												"src": "2764:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3609,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2764:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3612,
												"mutability": "mutable",
												"name": "deposit",
												"nameLocation": "2809:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3618,
												"src": "2801:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2801:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3614,
												"mutability": "mutable",
												"name": "owedDeposit",
												"nameLocation": "2838:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 3618,
												"src": "2830:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2830:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3616,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2871:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 3618,
												"src": "2863:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2863:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2750:131:17"
									},
									"scope": 3848,
									"src": "2652:230:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3619,
										"nodeType": "StructuredDocumentation",
										"src": "2888:309:17",
										"text": " @notice Check if account is critical\n @dev A critical account is when availableBalance < 0\n @param account The account to check\n @param timestamp The time we'd like to check if the account is critical (should use future)\n @return isCritical Whether the account is critical"
									},
									"functionSelector": "d9d078d6",
									"id": 3628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAccountCritical",
									"nameLocation": "3211:17:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3621,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3246:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3628,
												"src": "3238:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3238:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3623,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "3271:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 3628,
												"src": "3263:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3263:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3228:58:17"
									},
									"returnParameters": {
										"id": 3627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3626,
												"mutability": "mutable",
												"name": "isCritical",
												"nameLocation": "3330:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 3628,
												"src": "3325:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3625,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3325:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3324:17:17"
									},
									"scope": 3848,
									"src": "3202:140:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3629,
										"nodeType": "StructuredDocumentation",
										"src": "3348:239:17",
										"text": " @notice Check if account is critical now (current host.getNow())\n @dev A critical account is when availableBalance < 0\n @param account The account to check\n @return isCritical Whether the account is critical"
									},
									"functionSelector": "79359f6f",
									"id": 3636,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAccountCriticalNow",
									"nameLocation": "3601:20:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3631,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3639:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3636,
												"src": "3631:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3621:31:17"
									},
									"returnParameters": {
										"id": 3635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3634,
												"mutability": "mutable",
												"name": "isCritical",
												"nameLocation": "3696:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 3636,
												"src": "3691:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3633,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3691:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3690:17:17"
									},
									"scope": 3848,
									"src": "3592:116:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3637,
										"nodeType": "StructuredDocumentation",
										"src": "3714:383:17",
										"text": " @notice Check if account is solvent\n @dev An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\n @param account The account to check\n @param timestamp The time we'd like to check if the account is solvent (should use future)\n @return isSolvent True if the account is solvent, false otherwise"
									},
									"functionSelector": "b84cdd4a",
									"id": 3646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAccountSolvent",
									"nameLocation": "4111:16:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3639,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4145:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3646,
												"src": "4137:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3641,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "4170:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 3646,
												"src": "4162:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4162:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4127:58:17"
									},
									"returnParameters": {
										"id": 3645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3644,
												"mutability": "mutable",
												"name": "isSolvent",
												"nameLocation": "4229:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 3646,
												"src": "4224:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4224:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4223:16:17"
									},
									"scope": 3848,
									"src": "4102:138:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3647,
										"nodeType": "StructuredDocumentation",
										"src": "4246:289:17",
										"text": " @notice Check if account is solvent now\n @dev An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\n @param account The account to check\n @return isSolvent True if the account is solvent, false otherwise"
									},
									"functionSelector": "bb0d196e",
									"id": 3654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAccountSolventNow",
									"nameLocation": "4549:19:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3649,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4586:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3654,
												"src": "4578:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4578:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4568:31:17"
									},
									"returnParameters": {
										"id": 3653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3652,
												"mutability": "mutable",
												"name": "isSolvent",
												"nameLocation": "4643:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 3654,
												"src": "4638:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3651,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4638:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:16:17"
									},
									"scope": 3848,
									"src": "4540:114:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3655,
										"nodeType": "StructuredDocumentation",
										"src": "4660:277:17",
										"text": " @notice Get a list of agreements that is active for the account\n @dev An active agreement is one that has state for the account\n @param account Account to query\n @return activeAgreements List of accounts that have non-zero states for the account"
									},
									"functionSelector": "386fa221",
									"id": 3664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAccountActiveAgreements",
									"nameLocation": "4951:26:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3657,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4986:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3664,
												"src": "4978:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4977:17:17"
									},
									"returnParameters": {
										"id": 3663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3662,
												"mutability": "mutable",
												"name": "activeAgreements",
												"nameLocation": "5056:16:17",
												"nodeType": "VariableDeclaration",
												"scope": 3664,
												"src": "5031:41:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_ISuperAgreement_$2269_$dyn_memory_ptr",
													"typeString": "contract ISuperAgreement[]"
												},
												"typeName": {
													"baseType": {
														"id": 3660,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3659,
															"name": "ISuperAgreement",
															"nameLocations": [
																"5031:15:17"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2269,
															"src": "5031:15:17"
														},
														"referencedDeclaration": 2269,
														"src": "5031:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISuperAgreement_$2269",
															"typeString": "contract ISuperAgreement"
														}
													},
													"id": 3661,
													"nodeType": "ArrayTypeName",
													"src": "5031:17:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_ISuperAgreement_$2269_$dyn_storage_ptr",
														"typeString": "contract ISuperAgreement[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5030:43:17"
									},
									"scope": 3848,
									"src": "4942:132:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3665,
										"nodeType": "StructuredDocumentation",
										"src": "5280:110:17",
										"text": " @dev Create a new agreement\n @param id Agreement ID\n @param data Agreement data"
									},
									"functionSelector": "12a6a3f8",
									"id": 3673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createAgreement",
									"nameLocation": "5404:15:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3667,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5437:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 3673,
												"src": "5429:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3666,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5429:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3670,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5468:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 3673,
												"src": "5449:23:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 3668,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5449:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 3669,
													"nodeType": "ArrayTypeName",
													"src": "5449:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5419:59:17"
									},
									"returnParameters": {
										"id": 3672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5495:0:17"
									},
									"scope": 3848,
									"src": "5395:101:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3674,
										"nodeType": "StructuredDocumentation",
										"src": "5501:174:17",
										"text": " @dev Agreement created event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param data Agreement data"
									},
									"eventSelector": "770ea40a13a4644573ed785e5c7116890709947918747febc5add46feb531e2d",
									"id": 3683,
									"name": "AgreementCreated",
									"nameLocation": "5686:16:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3676,
												"indexed": true,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "5728:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 3683,
												"src": "5712:30:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5712:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3678,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5760:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 3683,
												"src": "5752:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3677,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5752:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3681,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5782:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 3683,
												"src": "5772:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 3679,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5772:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 3680,
													"nodeType": "ArrayTypeName",
													"src": "5772:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5702:90:17"
									},
									"src": "5680:113:17"
								},
								{
									"documentation": {
										"id": 3684,
										"nodeType": "StructuredDocumentation",
										"src": "5799:184:17",
										"text": " @dev Get data of the agreement\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @return data Data of the agreement"
									},
									"functionSelector": "6c2d9f2f",
									"id": 3696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAgreementData",
									"nameLocation": "5997:16:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3686,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "6031:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 3696,
												"src": "6023:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6023:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3688,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "6063:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 3696,
												"src": "6055:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3687,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6055:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3690,
												"mutability": "mutable",
												"name": "dataLength",
												"nameLocation": "6080:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 3696,
												"src": "6075:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3689,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6075:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6013:83:17"
									},
									"returnParameters": {
										"id": 3695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3694,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6152:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 3696,
												"src": "6135:21:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 3692,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "6135:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 3693,
													"nodeType": "ArrayTypeName",
													"src": "6135:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6134:23:17"
									},
									"scope": 3848,
									"src": "5988:170:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3697,
										"nodeType": "StructuredDocumentation",
										"src": "6164:110:17",
										"text": " @dev Create a new agreement\n @param id Agreement ID\n @param data Agreement data"
									},
									"functionSelector": "a1b2bf8b",
									"id": 3705,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateAgreementData",
									"nameLocation": "6288:19:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3699,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "6325:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 3705,
												"src": "6317:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3698,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6317:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6356:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 3705,
												"src": "6337:23:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 3700,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "6337:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 3701,
													"nodeType": "ArrayTypeName",
													"src": "6337:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6307:59:17"
									},
									"returnParameters": {
										"id": 3704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6383:0:17"
									},
									"scope": 3848,
									"src": "6279:105:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3706,
										"nodeType": "StructuredDocumentation",
										"src": "6389:174:17",
										"text": " @dev Agreement updated event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param data Agreement data"
									},
									"eventSelector": "0c4c547b3a4fcaa5be8353b3111472b124155bccc86de811d4a481c9e6e9faca",
									"id": 3715,
									"name": "AgreementUpdated",
									"nameLocation": "6574:16:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3708,
												"indexed": true,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "6616:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 3715,
												"src": "6600:30:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3710,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "6648:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 3715,
												"src": "6640:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3709,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6640:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3713,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6670:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 3715,
												"src": "6660:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 3711,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "6660:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 3712,
													"nodeType": "ArrayTypeName",
													"src": "6660:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6590:90:17"
									},
									"src": "6568:113:17"
								},
								{
									"documentation": {
										"id": 3716,
										"nodeType": "StructuredDocumentation",
										"src": "6687:73:17",
										"text": " @dev Close the agreement\n @param id Agreement ID"
									},
									"functionSelector": "27048397",
									"id": 3723,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "terminateAgreement",
									"nameLocation": "6774:18:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3718,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "6810:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 3723,
												"src": "6802:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3717,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6802:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3720,
												"mutability": "mutable",
												"name": "dataLength",
												"nameLocation": "6827:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 3723,
												"src": "6822:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3719,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6822:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6792:51:17"
									},
									"returnParameters": {
										"id": 3722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6860:0:17"
									},
									"scope": 3848,
									"src": "6765:96:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3724,
										"nodeType": "StructuredDocumentation",
										"src": "6866:143:17",
										"text": " @dev Agreement terminated event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID"
									},
									"eventSelector": "71a63dc095de07aa5512ad57a7596a39516317e316981a1cd71000057be1537b",
									"id": 3730,
									"name": "AgreementTerminated",
									"nameLocation": "7020:19:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3726,
												"indexed": true,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "7065:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 3730,
												"src": "7049:30:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3728,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "7097:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 3730,
												"src": "7089:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3727,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7089:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7039:66:17"
									},
									"src": "7014:92:17"
								},
								{
									"documentation": {
										"id": 3731,
										"nodeType": "StructuredDocumentation",
										"src": "7112:199:17",
										"text": " @dev Update agreement state slot\n @param account Account to be updated\n @custom:note \n - To clear the storage out, provide zero-ed array of intended length"
									},
									"functionSelector": "090c415e",
									"id": 3741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateAgreementStateSlot",
									"nameLocation": "7325:24:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3733,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7367:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3741,
												"src": "7359:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7359:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3735,
												"mutability": "mutable",
												"name": "slotId",
												"nameLocation": "7392:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3741,
												"src": "7384:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7384:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3738,
												"mutability": "mutable",
												"name": "slotData",
												"nameLocation": "7427:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3741,
												"src": "7408:27:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 3736,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7408:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 3737,
													"nodeType": "ArrayTypeName",
													"src": "7408:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7349:92:17"
									},
									"returnParameters": {
										"id": 3740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7458:0:17"
									},
									"scope": 3848,
									"src": "7316:143:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3742,
										"nodeType": "StructuredDocumentation",
										"src": "7464:214:17",
										"text": " @dev Agreement account state updated event\n @param agreementClass Contract address of the agreement\n @param account Account updated\n @param slotId slot id of the agreement state"
									},
									"eventSelector": "30f416fa68fca014a0f334464c64b000ba53e99b6d2afdea9d5ca756372d5985",
									"id": 3750,
									"name": "AgreementStateUpdated",
									"nameLocation": "7689:21:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3744,
												"indexed": true,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "7736:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 3750,
												"src": "7720:30:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7720:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3746,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7776:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3750,
												"src": "7760:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7760:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3748,
												"indexed": false,
												"mutability": "mutable",
												"name": "slotId",
												"nameLocation": "7801:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3750,
												"src": "7793:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7793:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7710:103:17"
									},
									"src": "7683:131:17"
								},
								{
									"documentation": {
										"id": 3751,
										"nodeType": "StructuredDocumentation",
										"src": "7820:267:17",
										"text": " @dev Get data of the slot of the state of an agreement\n @param agreementClass Contract address of the agreement\n @param account Account to query\n @param slotId slot id of the state\n @param dataLength length of the state data"
									},
									"functionSelector": "4b61cc33",
									"id": 3765,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAgreementStateSlot",
									"nameLocation": "8101:21:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3753,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "8140:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 3765,
												"src": "8132:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8132:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3755,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8172:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3765,
												"src": "8164:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8164:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3757,
												"mutability": "mutable",
												"name": "slotId",
												"nameLocation": "8197:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3765,
												"src": "8189:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8189:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3759,
												"mutability": "mutable",
												"name": "dataLength",
												"nameLocation": "8218:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 3765,
												"src": "8213:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3758,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8213:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8122:112:17"
									},
									"returnParameters": {
										"id": 3764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3763,
												"mutability": "mutable",
												"name": "slotData",
												"nameLocation": "8291:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3765,
												"src": "8274:25:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 3761,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "8274:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 3762,
													"nodeType": "ArrayTypeName",
													"src": "8274:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8273:27:17"
									},
									"scope": 3848,
									"src": "8092:209:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3766,
										"nodeType": "StructuredDocumentation",
										"src": "8307:320:17",
										"text": " @notice Settle balance from an account by the agreement\n @dev The agreement needs to make sure that the balance delta is balanced afterwards\n @param account Account to query.\n @param delta Amount of balance delta to be settled\n @custom:modifiers \n  - onlyAgreement"
									},
									"functionSelector": "cf97256d",
									"id": 3773,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "settleBalance",
									"nameLocation": "8641:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3768,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8672:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3773,
												"src": "8664:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8664:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3770,
												"mutability": "mutable",
												"name": "delta",
												"nameLocation": "8696:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3773,
												"src": "8689:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3769,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8689:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8654:53:17"
									},
									"returnParameters": {
										"id": 3772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8724:0:17"
									},
									"scope": 3848,
									"src": "8632:93:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3774,
										"nodeType": "StructuredDocumentation",
										"src": "8731:1154:17",
										"text": " @dev Make liquidation payouts (v2)\n @param id Agreement ID\n @param liquidationTypeData Data regarding the version of the liquidation schema and the type\n @param liquidatorAccount Address of the executor of the liquidation\n @param useDefaultRewardAccount Whether or not the default reward account receives the rewardAmount\n @param targetAccount Account to be liquidated\n @param rewardAmount The amount the rewarded account will receive\n @param targetAccountBalanceDelta The delta amount the target account balance should change by\n @custom:note \n - If a bailout is required (bailoutAmount > 0)\n   - the actual reward (single deposit) goes to the executor,\n   - while the reward account becomes the bailout account\n   - total bailout include: bailout amount + reward amount\n   - the targetAccount will be bailed out\n - If a bailout is not required\n   - the targetAccount will pay the rewardAmount\n   - the liquidator (reward account in PIC period) will receive the rewardAmount\n @custom:modifiers \n  - onlyAgreement"
									},
									"functionSelector": "1863e809",
									"id": 3791,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "makeLiquidationPayoutsV2",
									"nameLocation": "9899:24:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3776,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "9946:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 3791,
												"src": "9938:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3775,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9938:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3778,
												"mutability": "mutable",
												"name": "liquidationTypeData",
												"nameLocation": "9971:19:17",
												"nodeType": "VariableDeclaration",
												"scope": 3791,
												"src": "9958:32:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3777,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9958:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3780,
												"mutability": "mutable",
												"name": "liquidatorAccount",
												"nameLocation": "10008:17:17",
												"nodeType": "VariableDeclaration",
												"scope": 3791,
												"src": "10000:25:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10000:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3782,
												"mutability": "mutable",
												"name": "useDefaultRewardAccount",
												"nameLocation": "10040:23:17",
												"nodeType": "VariableDeclaration",
												"scope": 3791,
												"src": "10035:28:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3781,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10035:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3784,
												"mutability": "mutable",
												"name": "targetAccount",
												"nameLocation": "10081:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 3791,
												"src": "10073:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10073:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3786,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "10112:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 3791,
												"src": "10104:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10104:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3788,
												"mutability": "mutable",
												"name": "targetAccountBalanceDelta",
												"nameLocation": "10141:25:17",
												"nodeType": "VariableDeclaration",
												"scope": 3791,
												"src": "10134:32:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3787,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "10134:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9928:244:17"
									},
									"returnParameters": {
										"id": 3790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10181:0:17"
									},
									"scope": 3848,
									"src": "9890:292:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3792,
										"nodeType": "StructuredDocumentation",
										"src": "10187:1512:17",
										"text": " @dev Agreement liquidation event v2 (including agent account)\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param liquidatorAccount Address of the executor of the liquidation\n @param targetAccount Account of the stream sender\n @param rewardAmountReceiver Account that collects the reward or bails out insolvent accounts\n @param rewardAmount The amount the reward recipient account balance should change by\n @param targetAccountBalanceDelta The amount the sender account balance should change by\n @param liquidationTypeData The encoded liquidation type data including the version (how to decode)\n @custom:note \n Reward account rule:\n - if the agreement is liquidated during the PIC period\n   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount\n   - the targetAccount will pay for the rewardAmount\n - if the agreement is liquidated after the PIC period AND the targetAccount is solvent\n   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)\n   - the targetAccount will pay for the rewardAmount\n - if the targetAccount is insolvent\n   - the liquidatorAccount will get the rewardAmount (single deposit)\n   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount\n   - the targetAccount will receive the bailoutAmount"
									},
									"eventSelector": "b8381a3ce157650e06186e3e8f4dd4dc29236f2688b6eed1893d0a60d7c6386f",
									"id": 3810,
									"name": "AgreementLiquidatedV2",
									"nameLocation": "11710:21:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3794,
												"indexed": true,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "11757:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 3810,
												"src": "11741:30:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11741:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3796,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "11789:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 3810,
												"src": "11781:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3795,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11781:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3798,
												"indexed": true,
												"mutability": "mutable",
												"name": "liquidatorAccount",
												"nameLocation": "11817:17:17",
												"nodeType": "VariableDeclaration",
												"scope": 3810,
												"src": "11801:33:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11801:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3800,
												"indexed": true,
												"mutability": "mutable",
												"name": "targetAccount",
												"nameLocation": "11860:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 3810,
												"src": "11844:29:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11844:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3802,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmountReceiver",
												"nameLocation": "11891:20:17",
												"nodeType": "VariableDeclaration",
												"scope": 3810,
												"src": "11883:28:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11883:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3804,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "11929:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 3810,
												"src": "11921:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11921:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3806,
												"indexed": false,
												"mutability": "mutable",
												"name": "targetAccountBalanceDelta",
												"nameLocation": "11958:25:17",
												"nodeType": "VariableDeclaration",
												"scope": 3810,
												"src": "11951:32:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3805,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11951:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3808,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidationTypeData",
												"nameLocation": "11999:19:17",
												"nodeType": "VariableDeclaration",
												"scope": 3810,
												"src": "11993:25:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11993:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11731:293:17"
									},
									"src": "11704:321:17"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3811,
										"nodeType": "StructuredDocumentation",
										"src": "12837:435:17",
										"text": " @dev Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param penaltyAccount Account of the agreement to be penalized\n @param rewardAccount Account that collect the reward\n @param rewardAmount Amount of liquidation reward\n @custom:deprecated Use AgreementLiquidatedV2 instead"
									},
									"eventSelector": "8505c3d8f1f184f032cf0bc4cd80ee61c8b9d94f8907c3281bf0101a2610fe80",
									"id": 3823,
									"name": "AgreementLiquidated",
									"nameLocation": "13283:19:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3813,
												"indexed": true,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "13328:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 3823,
												"src": "13312:30:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13312:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3815,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13360:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 3823,
												"src": "13352:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3814,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13352:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3817,
												"indexed": true,
												"mutability": "mutable",
												"name": "penaltyAccount",
												"nameLocation": "13388:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 3823,
												"src": "13372:30:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13372:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3819,
												"indexed": true,
												"mutability": "mutable",
												"name": "rewardAccount",
												"nameLocation": "13428:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 3823,
												"src": "13412:29:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13412:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3821,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "13459:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 3823,
												"src": "13451:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13451:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13302:175:17"
									},
									"src": "13277:201:17"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3824,
										"nodeType": "StructuredDocumentation",
										"src": "13484:276:17",
										"text": " @dev System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\n @param bailoutAccount Account that bailout the penalty account\n @param bailoutAmount Amount of account bailout\n @custom:deprecated Use AgreementLiquidatedV2 instead"
									},
									"eventSelector": "d6c9a04afc81e8c614310bbee6c9e84f5abe15b82038bf8347014ce0852e6ffd",
									"id": 3830,
									"name": "Bailout",
									"nameLocation": "13771:7:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3826,
												"indexed": true,
												"mutability": "mutable",
												"name": "bailoutAccount",
												"nameLocation": "13804:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 3830,
												"src": "13788:30:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13788:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3828,
												"indexed": false,
												"mutability": "mutable",
												"name": "bailoutAmount",
												"nameLocation": "13836:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 3830,
												"src": "13828:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13828:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13778:77:17"
									},
									"src": "13765:91:17"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3831,
										"nodeType": "StructuredDocumentation",
										"src": "13862:1082:17",
										"text": " @dev Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\n @param liquidatorAccount Account of the agent that performed the liquidation.\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param penaltyAccount Account of the agreement to be penalized\n @param bondAccount Account that collect the reward or bailout accounts\n @param rewardAmount Amount of liquidation reward\n @param bailoutAmount Amount of liquidation bailouot\n @custom:deprecated Use AgreementLiquidatedV2 instead\n @custom:note \n Reward account rule:\n - if bailout is equal to 0, then\n   - the bondAccount will get the rewardAmount,\n   - the penaltyAccount will pay for the rewardAmount.\n - if bailout is larger than 0, then\n   - the liquidatorAccount will get the rewardAmouont,\n   - the bondAccount will pay for both the rewardAmount and bailoutAmount,\n   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount."
									},
									"eventSelector": "5f22b60e58b1d6de858bc27c48d5a4653e052da99e083c1d88bb8c58e1abc8ef",
									"id": 3847,
									"name": "AgreementLiquidatedBy",
									"nameLocation": "14955:21:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3833,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidatorAccount",
												"nameLocation": "14994:17:17",
												"nodeType": "VariableDeclaration",
												"scope": 3847,
												"src": "14986:25:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14986:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3835,
												"indexed": true,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "15037:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 3847,
												"src": "15021:30:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15021:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3837,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "15069:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 3847,
												"src": "15061:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3836,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15061:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3839,
												"indexed": true,
												"mutability": "mutable",
												"name": "penaltyAccount",
												"nameLocation": "15097:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 3847,
												"src": "15081:30:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15081:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3841,
												"indexed": true,
												"mutability": "mutable",
												"name": "bondAccount",
												"nameLocation": "15137:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 3847,
												"src": "15121:27:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15121:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3843,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "15166:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 3847,
												"src": "15158:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15158:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3845,
												"indexed": false,
												"mutability": "mutable",
												"name": "bailoutAmount",
												"nameLocation": "15196:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 3847,
												"src": "15188:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15188:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14976:239:17"
									},
									"src": "14949:267:17"
								}
							],
							"scope": 3849,
							"src": "187:15031:17",
							"usedErrors": [3569, 3571, 3573, 3575, 3577, 3579]
						}
					],
					"src": "35:15184:17"
				},
				"id": 17
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
				"ast": {
					"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
					"exportedSymbols": {
						"ERC20WithTokenInfo": [3860],
						"IERC20": [518],
						"TokenInfo": [3882]
					},
					"id": 3861,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3850,
							"literals": ["solidity", ">=", "0.8", ".4"],
							"nodeType": "PragmaDirective",
							"src": "35:25:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3852,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3861,
							"sourceUnit": 519,
							"src": "62:72:18",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3851,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 518,
										"src": "71:6:18",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
							"file": "./TokenInfo.sol",
							"id": 3854,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3861,
							"sourceUnit": 3883,
							"src": "135:44:18",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3853,
										"name": "TokenInfo",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3882,
										"src": "144:9:18",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3856,
										"name": "IERC20",
										"nameLocations": ["530:6:18"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 518,
										"src": "530:6:18"
									},
									"id": 3857,
									"nodeType": "InheritanceSpecifier",
									"src": "530:6:18"
								},
								{
									"baseName": {
										"id": 3858,
										"name": "TokenInfo",
										"nameLocations": ["538:9:18"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3882,
										"src": "538:9:18"
									},
									"id": 3859,
									"nodeType": "InheritanceSpecifier",
									"src": "538:9:18"
								}
							],
							"canonicalName": "ERC20WithTokenInfo",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3855,
								"nodeType": "StructuredDocumentation",
								"src": "181:263:18",
								"text": " @title ERC20 token with token info interface\n @author Superfluid\n @dev Using abstract contract instead of interfaces because old solidity\n      does not support interface inheriting other interfaces\n solhint-disable-next-line no-empty-blocks"
							},
							"fullyImplemented": false,
							"id": 3860,
							"linearizedBaseContracts": [3860, 3882, 518],
							"name": "ERC20WithTokenInfo",
							"nameLocation": "508:18:18",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3861,
							"src": "490:60:18",
							"usedErrors": []
						}
					],
					"src": "35:516:18"
				},
				"id": 18
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
				"ast": {
					"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
					"exportedSymbols": {
						"TokenInfo": [3882]
					},
					"id": 3883,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3862,
							"literals": ["solidity", ">=", "0.8", ".4"],
							"nodeType": "PragmaDirective",
							"src": "35:25:19"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TokenInfo",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3863,
								"nodeType": "StructuredDocumentation",
								"src": "62:188:19",
								"text": " @title ERC20 token info interface\n @author Superfluid\n @dev ERC20 standard interface does not specify these functions, but\n      often the token implementations have them."
							},
							"fullyImplemented": false,
							"id": 3882,
							"linearizedBaseContracts": [3882],
							"name": "TokenInfo",
							"nameLocation": "261:9:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3864,
										"nodeType": "StructuredDocumentation",
										"src": "277:54:19",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 3869,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "345:4:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:2:19"
									},
									"returnParameters": {
										"id": 3868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3869,
												"src": "375:13:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3866,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "375:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:15:19"
									},
									"scope": 3882,
									"src": "336:54:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3870,
										"nodeType": "StructuredDocumentation",
										"src": "396:102:19",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 3875,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "512:6:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "518:2:19"
									},
									"returnParameters": {
										"id": 3874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3875,
												"src": "544:13:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3872,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "544:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "543:15:19"
									},
									"scope": 3882,
									"src": "503:56:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3876,
										"nodeType": "StructuredDocumentation",
										"src": "565:612:19",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 3881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1191:8:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1199:2:19"
									},
									"returnParameters": {
										"id": 3880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3881,
												"src": "1225:5:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3878,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1225:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1224:7:19"
									},
									"scope": 3882,
									"src": "1182:50:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3883,
							"src": "251:983:19",
							"usedErrors": []
						}
					],
					"src": "35:1200:19"
				},
				"id": 19
			},
			"contracts/BurnMintSuperToken.sol": {
				"ast": {
					"absolutePath": "contracts/BurnMintSuperToken.sol",
					"exportedSymbols": {
						"AccessControl": [315],
						"BurnMintSuperToken": [3984],
						"SuperTokenBase": [4152]
					},
					"id": 3985,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3884,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "35:23:20"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 3886,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3985,
							"sourceUnit": 316,
							"src": "60:79:20",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3885,
										"name": "AccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "68:13:20",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/base/SuperTokenBase.sol",
							"file": "./base/SuperTokenBase.sol",
							"id": 3888,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3985,
							"sourceUnit": 4153,
							"src": "141:57:20",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3887,
										"name": "SuperTokenBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4152,
										"src": "149:14:20",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3890,
										"name": "SuperTokenBase",
										"nameLocations": ["359:14:20"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4152,
										"src": "359:14:20"
									},
									"id": 3891,
									"nodeType": "InheritanceSpecifier",
									"src": "359:14:20"
								},
								{
									"baseName": {
										"id": 3892,
										"name": "AccessControl",
										"nameLocations": ["375:13:20"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "375:13:20"
									},
									"id": 3893,
									"nodeType": "InheritanceSpecifier",
									"src": "375:13:20"
								}
							],
							"canonicalName": "BurnMintSuperToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3889,
								"nodeType": "StructuredDocumentation",
								"src": "200:128:20",
								"text": "@title Burnable and Mintable Pure Super Token\n @author jtriley.eth\n @notice This does not perform checks when burning"
							},
							"fullyImplemented": true,
							"id": 3984,
							"linearizedBaseContracts": [
								3984, 315, 902, 914, 388, 703, 4152, 4216, 440,
								4160
							],
							"name": "BurnMintSuperToken",
							"nameLocation": "337:18:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 3894,
										"nodeType": "StructuredDocumentation",
										"src": "392:23:20",
										"text": "@notice Minter Role"
									},
									"functionSelector": "d5391393",
									"id": 3899,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "441:11:20",
									"nodeType": "VariableDeclaration",
									"scope": 3984,
									"src": "417:62:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3895,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "417:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 3897,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "465:13:20",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 3896,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "455:9:20",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3898,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "455:24:20",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 3900,
										"nodeType": "StructuredDocumentation",
										"src": "483:23:20",
										"text": "@notice Burner Role"
									},
									"functionSelector": "282c51f3",
									"id": 3905,
									"mutability": "constant",
									"name": "BURNER_ROLE",
									"nameLocation": "532:11:20",
									"nodeType": "VariableDeclaration",
									"scope": 3984,
									"src": "508:62:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3901,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "508:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4255524e45525f524f4c45",
												"id": 3903,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "556:13:20",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												},
												"value": "BURNER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												}
											],
											"id": 3902,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "546:9:20",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3904,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "546:24:20",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3914,
										"nodeType": "Block",
										"src": "591:59:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3909,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "612:18:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 3910,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "632:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "636:6:20",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "632:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3908,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "601:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "601:42:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3913,
												"nodeType": "ExpressionStatement",
												"src": "601:42:20"
											}
										]
									},
									"id": 3915,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "588:2:20"
									},
									"returnParameters": {
										"id": 3907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:0:20"
									},
									"scope": 3984,
									"src": "577:73:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3943,
										"nodeType": "Block",
										"src": "1231:86:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3932,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3918,
															"src": "1247:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3933,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3920,
															"src": "1256:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 3934,
															"name": "symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3922,
															"src": "1262:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3931,
														"name": "_initialize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4040,
														"src": "1235:11:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,string memory,string memory)"
														}
													},
													"id": 3935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1235:34:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3936,
												"nodeType": "ExpressionStatement",
												"src": "1235:34:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3938,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3926,
															"src": "1279:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3939,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3924,
															"src": "1289:13:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3940,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3928,
															"src": "1304:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3937,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4079,
														"src": "1273:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 3941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1273:40:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3942,
												"nodeType": "ExpressionStatement",
												"src": "1273:40:20"
											}
										]
									},
									"documentation": {
										"id": 3916,
										"nodeType": "StructuredDocumentation",
										"src": "653:409:20",
										"text": "@notice Initializer, used AFTER factory upgrade\n @dev We MUST mint here, there is no other way to mint tokens\n @param factory Super Token factory for initialization\n @param name Name of Super Token\n @param symbol Symbol of Super Token\n @param initialSupply Initial token supply to pre-mint\n @param receiver Receiver of pre-mint\n @param userData Arbitrary user data for pre-mint"
									},
									"functionSelector": "a6a05598",
									"id": 3944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "1073:10:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3918,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "1095:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3944,
												"src": "1087:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3920,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1120:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 3944,
												"src": "1106:18:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3919,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1106:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3922,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1142:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 3944,
												"src": "1128:20:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3921,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1128:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3924,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "1160:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3944,
												"src": "1152:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3926,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1185:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3944,
												"src": "1177:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1177:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3928,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "1210:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3944,
												"src": "1197:21:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3927,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1197:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1083:138:20"
									},
									"returnParameters": {
										"id": 3930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1231:0:20"
									},
									"scope": 3984,
									"src": "1064:253:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3963,
										"nodeType": "Block",
										"src": "1566:41:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3958,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3947,
															"src": "1576:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3959,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3949,
															"src": "1586:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3960,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3951,
															"src": "1594:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3957,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4079,
														"src": "1570:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 3961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1570:33:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3962,
												"nodeType": "ExpressionStatement",
												"src": "1570:33:20"
											}
										]
									},
									"documentation": {
										"id": 3945,
										"nodeType": "StructuredDocumentation",
										"src": "1320:133:20",
										"text": "@notice Mints tokens, only the owner may do this\n @param receiver Receiver of minted tokens\n @param amount Amount to mint"
									},
									"functionSelector": "94d008ef",
									"id": 3964,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3954,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3899,
													"src": "1553:11:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3955,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3953,
												"name": "onlyRole",
												"nameLocations": ["1544:8:20"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1544:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "1544:21:20"
										}
									],
									"name": "mint",
									"nameLocation": "1464:4:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3947,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1480:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3964,
												"src": "1472:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1472:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3949,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1500:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 3964,
												"src": "1492:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1492:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3951,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "1523:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3964,
												"src": "1510:21:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3950,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1510:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:66:20"
									},
									"returnParameters": {
										"id": 3956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1566:0:20"
									},
									"scope": 3984,
									"src": "1455:152:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3982,
										"nodeType": "Block",
										"src": "1772:43:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3976,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1782:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1786:6:20",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1782:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3978,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3967,
															"src": "1794:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3979,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3969,
															"src": "1802:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3975,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4102,
														"src": "1776:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 3980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1776:35:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3981,
												"nodeType": "ExpressionStatement",
												"src": "1776:35:20"
											}
										]
									},
									"documentation": {
										"id": 3965,
										"nodeType": "StructuredDocumentation",
										"src": "1610:71:20",
										"text": "@notice Burns from message sender\n @param amount Amount to burn"
									},
									"functionSelector": "fe9d9303",
									"id": 3983,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3972,
													"name": "BURNER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3905,
													"src": "1758:11:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3973,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3971,
												"name": "onlyRole",
												"nameLocations": ["1749:8:20"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1749:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "1749:21:20"
										}
									],
									"name": "burn",
									"nameLocation": "1692:4:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3967,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1705:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 3983,
												"src": "1697:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1697:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3969,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "1726:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3983,
												"src": "1713:21:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3968,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1713:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1696:39:20"
									},
									"returnParameters": {
										"id": 3974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1772:0:20"
									},
									"scope": 3984,
									"src": "1683:132:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3985,
							"src": "328:1489:20",
							"usedErrors": [4170, 4173]
						}
					],
					"src": "35:1783:20"
				},
				"id": 20
			},
			"contracts/base/SuperTokenBase.sol": {
				"ast": {
					"absolutePath": "contracts/base/SuperTokenBase.sol",
					"exportedSymbols": {
						"IERC20": [518],
						"ISuperToken": [2783],
						"ISuperTokenFactory": [2911],
						"SuperTokenBase": [4152],
						"SuperTokenStorage": [4160],
						"UUPSProxy": [4216]
					},
					"id": 4153,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3986,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "35:23:21"
						},
						{
							"absolutePath": "contracts/base/SuperTokenStorage.sol",
							"file": "../base/SuperTokenStorage.sol",
							"id": 3988,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4153,
							"sourceUnit": 4161,
							"src": "60:64:21",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3987,
										"name": "SuperTokenStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4160,
										"src": "68:17:21",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/base/UUPSProxy.sol",
							"file": "../base/UUPSProxy.sol",
							"id": 3990,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4153,
							"sourceUnit": 4217,
							"src": "125:48:21",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3989,
										"name": "UUPSProxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4216,
										"src": "133:9:21",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3992,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4153,
							"sourceUnit": 519,
							"src": "175:70:21",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3991,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 518,
										"src": "183:6:21",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
							"file": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
							"id": 3994,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4153,
							"sourceUnit": 2784,
							"src": "246:115:21",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3993,
										"name": "ISuperToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2783,
										"src": "254:11:21",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
							"file": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
							"id": 3996,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4153,
							"sourceUnit": 2912,
							"src": "362:129:21",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3995,
										"name": "ISuperTokenFactory",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2911,
										"src": "370:18:21",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3998,
										"name": "SuperTokenStorage",
										"nameLocations": ["786:17:21"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4160,
										"src": "786:17:21"
									},
									"id": 3999,
									"nodeType": "InheritanceSpecifier",
									"src": "786:17:21"
								},
								{
									"baseName": {
										"id": 4000,
										"name": "UUPSProxy",
										"nameLocations": ["805:9:21"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4216,
										"src": "805:9:21"
									},
									"id": 4001,
									"nodeType": "InheritanceSpecifier",
									"src": "805:9:21"
								}
							],
							"canonicalName": "SuperTokenBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3997,
								"nodeType": "StructuredDocumentation",
								"src": "493:257:21",
								"text": "@title Abstract contract containing a thin layer of abstraction for aux logic.\n @author jtriley.eth\n @dev The initial supply may be zero, in the event the token is mintable.\n Inheriting contracts MUST have an initializer calling this function!"
							},
							"fullyImplemented": true,
							"id": 4152,
							"linearizedBaseContracts": [4152, 4216, 440, 4160],
							"name": "SuperTokenBase",
							"nameLocation": "768:14:21",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4039,
										"nodeType": "Block",
										"src": "1110:156:21",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 4017,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1177:4:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SuperTokenBase_$4152",
																		"typeString": "contract SuperTokenBase"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SuperTokenBase_$4152",
																		"typeString": "contract SuperTokenBase"
																	}
																],
																"id": 4016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1169:7:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4015,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1169:7:21",
																	"typeDescriptions": {}
																}
															},
															"id": 4018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1169:13:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 4012,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4004,
																	"src": "1133:7:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4011,
																"name": "ISuperTokenFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2911,
																"src": "1114:18:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISuperTokenFactory_$2911_$",
																	"typeString": "type(contract ISuperTokenFactory)"
																}
															},
															"id": 4013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1114:27:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISuperTokenFactory_$2911",
																"typeString": "contract ISuperTokenFactory"
															}
														},
														"id": 4014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1142:26:21",
														"memberName": "initializeCustomSuperToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2892,
														"src": "1114:54:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 4019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1114:69:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4020,
												"nodeType": "ExpressionStatement",
												"src": "1114:69:21"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 4031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1240:1:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 4030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1232:7:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 4029,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1232:7:21",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1232:10:21",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4028,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "1225:6:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$518_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 4033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1225:18:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$518",
																"typeString": "contract IERC20"
															}
														},
														{
															"hexValue": "3138",
															"id": 4034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1245:2:21",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														{
															"id": 4035,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4006,
															"src": "1249:4:21",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 4036,
															"name": "symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4008,
															"src": "1255:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$518",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 4024,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1207:4:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SuperTokenBase_$4152",
																				"typeString": "contract SuperTokenBase"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SuperTokenBase_$4152",
																				"typeString": "contract SuperTokenBase"
																			}
																		],
																		"id": 4023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1199:7:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 4022,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1199:7:21",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1199:13:21",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4021,
																"name": "ISuperToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2783,
																"src": "1187:11:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISuperToken_$2783_$",
																	"typeString": "type(contract ISuperToken)"
																}
															},
															"id": 4026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1187:26:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISuperToken_$2783",
																"typeString": "contract ISuperToken"
															}
														},
														"id": 4027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1214:10:21",
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2441,
														"src": "1187:37:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$518_$_t_uint8_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,uint8,string memory,string memory) external"
														}
													},
													"id": 4037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1187:75:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4038,
												"nodeType": "ExpressionStatement",
												"src": "1187:75:21"
											}
										]
									},
									"documentation": {
										"id": 4002,
										"nodeType": "StructuredDocumentation",
										"src": "819:200:21",
										"text": "@dev Upgrades the super token with the factory, then initializes.\n @param factory super token factory for initialization\n @param name super token name\n @param symbol super token symbol"
									},
									"id": 4040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initialize",
									"nameLocation": "1030:11:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4004,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "1050:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 4040,
												"src": "1042:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4006,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1073:4:21",
												"nodeType": "VariableDeclaration",
												"scope": 4040,
												"src": "1059:18:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4005,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1059:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4008,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1093:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 4040,
												"src": "1079:20:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4007,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1079:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:59:21"
									},
									"returnParameters": {
										"id": 4010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1110:0:21"
									},
									"scope": 4152,
									"src": "1021:245:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4055,
										"nodeType": "Block",
										"src": "1382:55:21",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 4049,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1413:4:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SuperTokenBase_$4152",
																				"typeString": "contract SuperTokenBase"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SuperTokenBase_$4152",
																				"typeString": "contract SuperTokenBase"
																			}
																		],
																		"id": 4048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1405:7:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 4047,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1405:7:21",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1405:13:21",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4046,
																"name": "ISuperToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2783,
																"src": "1393:11:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISuperToken_$2783_$",
																	"typeString": "type(contract ISuperToken)"
																}
															},
															"id": 4051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1393:26:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISuperToken_$2783",
																"typeString": "contract ISuperToken"
															}
														},
														"id": 4052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1420:11:21",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2476,
														"src": "1393:38:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 4053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1393:40:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4045,
												"id": 4054,
												"nodeType": "Return",
												"src": "1386:47:21"
											}
										]
									},
									"documentation": {
										"id": 4041,
										"nodeType": "StructuredDocumentation",
										"src": "1269:53:21",
										"text": "@dev Gets totalSupply\n @return t total supply"
									},
									"id": 4056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalSupply",
									"nameLocation": "1333:12:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1345:2:21"
									},
									"returnParameters": {
										"id": 4045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4044,
												"mutability": "mutable",
												"name": "t",
												"nameLocation": "1379:1:21",
												"nodeType": "VariableDeclaration",
												"scope": 4056,
												"src": "1371:9:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1371:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1370:11:21"
									},
									"scope": 4152,
									"src": "1324:113:21",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4078,
										"nodeType": "Block",
										"src": "1756:70:21",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 4073,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4059,
															"src": "1796:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4074,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4061,
															"src": "1805:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4075,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4063,
															"src": "1813:8:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 4069,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1780:4:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SuperTokenBase_$4152",
																				"typeString": "contract SuperTokenBase"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SuperTokenBase_$4152",
																				"typeString": "contract SuperTokenBase"
																			}
																		],
																		"id": 4068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1772:7:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 4067,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1772:7:21",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1772:13:21",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4066,
																"name": "ISuperToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2783,
																"src": "1760:11:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISuperToken_$2783_$",
																	"typeString": "type(contract ISuperToken)"
																}
															},
															"id": 4071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1760:26:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISuperToken_$2783",
																"typeString": "contract ISuperToken"
															}
														},
														"id": 4072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1787:8:21",
														"memberName": "selfMint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2664,
														"src": "1760:35:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory) external"
														}
													},
													"id": 4076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1760:62:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4077,
												"nodeType": "ExpressionStatement",
												"src": "1760:62:21"
											}
										]
									},
									"documentation": {
										"id": 4057,
										"nodeType": "StructuredDocumentation",
										"src": "1440:234:21",
										"text": "@dev Internal mint, calling functions should perform important checks!\n @param account Address receiving minted tokens\n @param amount Amount of tokens minted\n @param userData Optional user data for ERC777 send callback"
									},
									"id": 4079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "1685:5:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4059,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1699:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 4079,
												"src": "1691:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1691:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4061,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1716:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 4079,
												"src": "1708:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4063,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "1737:8:21",
												"nodeType": "VariableDeclaration",
												"scope": 4079,
												"src": "1724:21:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4062,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1724:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1690:56:21"
									},
									"returnParameters": {
										"id": 4065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1756:0:21"
									},
									"scope": 4152,
									"src": "1676:150:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4101,
										"nodeType": "Block",
										"src": "2132:67:21",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 4096,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4082,
															"src": "2172:4:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4097,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4084,
															"src": "2178:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4098,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4086,
															"src": "2186:8:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 4092,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2156:4:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SuperTokenBase_$4152",
																				"typeString": "contract SuperTokenBase"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SuperTokenBase_$4152",
																				"typeString": "contract SuperTokenBase"
																			}
																		],
																		"id": 4091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2148:7:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 4090,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2148:7:21",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2148:13:21",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4089,
																"name": "ISuperToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2783,
																"src": "2136:11:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISuperToken_$2783_$",
																	"typeString": "type(contract ISuperToken)"
																}
															},
															"id": 4094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2136:26:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISuperToken_$2783",
																"typeString": "contract ISuperToken"
															}
														},
														"id": 4095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2163:8:21",
														"memberName": "selfBurn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2674,
														"src": "2136:35:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory) external"
														}
													},
													"id": 4099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2136:59:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4100,
												"nodeType": "ExpressionStatement",
												"src": "2136:59:21"
											}
										]
									},
									"documentation": {
										"id": 4080,
										"nodeType": "StructuredDocumentation",
										"src": "1829:224:21",
										"text": "@dev Internal burn, calling functions should perform important checks!\n @param from Address from which to burn tokens\n @param amount Amount to burn\n @param userData Optional user data for ERC777 send callback"
									},
									"id": 4102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "2064:5:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4082,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2078:4:21",
												"nodeType": "VariableDeclaration",
												"scope": 4102,
												"src": "2070:12:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2070:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4084,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2092:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 4102,
												"src": "2084:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4086,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "2113:8:21",
												"nodeType": "VariableDeclaration",
												"scope": 4102,
												"src": "2100:21:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4085,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2100:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2069:53:21"
									},
									"returnParameters": {
										"id": 4088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2132:0:21"
									},
									"scope": 4152,
									"src": "2055:144:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4124,
										"nodeType": "Block",
										"src": "2486:75:21",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 4119,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4105,
															"src": "2532:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4120,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4107,
															"src": "2541:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4121,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4109,
															"src": "2550:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 4115,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2510:4:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SuperTokenBase_$4152",
																				"typeString": "contract SuperTokenBase"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SuperTokenBase_$4152",
																				"typeString": "contract SuperTokenBase"
																			}
																		],
																		"id": 4114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2502:7:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 4113,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2502:7:21",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2502:13:21",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4112,
																"name": "ISuperToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2783,
																"src": "2490:11:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISuperToken_$2783_$",
																	"typeString": "type(contract ISuperToken)"
																}
															},
															"id": 4117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2490:26:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISuperToken_$2783",
																"typeString": "contract ISuperToken"
															}
														},
														"id": 4118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2517:14:21",
														"memberName": "selfApproveFor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2696,
														"src": "2490:41:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 4122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2490:67:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4123,
												"nodeType": "ExpressionStatement",
												"src": "2490:67:21"
											}
										]
									},
									"documentation": {
										"id": 4103,
										"nodeType": "StructuredDocumentation",
										"src": "2202:205:21",
										"text": "@dev Internal approve, calling functions should perform important checks!\n @param account Address of approving party\n @param spender Address of spending party\n @param amount Approval amount"
									},
									"id": 4125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "2418:8:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4105,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2435:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 4125,
												"src": "2427:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4107,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2452:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 4125,
												"src": "2444:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2444:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4109,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2469:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 4125,
												"src": "2461:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2426:50:21"
									},
									"returnParameters": {
										"id": 4111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2486:0:21"
									},
									"scope": 4152,
									"src": "2409:152:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4150,
										"nodeType": "Block",
										"src": "2969:87:21",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 4144,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4128,
															"src": "3017:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4145,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4130,
															"src": "3025:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4146,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4132,
															"src": "3034:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4147,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4134,
															"src": "3045:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 4140,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2993:4:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SuperTokenBase_$4152",
																				"typeString": "contract SuperTokenBase"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SuperTokenBase_$4152",
																				"typeString": "contract SuperTokenBase"
																			}
																		],
																		"id": 4139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2985:7:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 4138,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2985:7:21",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2985:13:21",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4137,
																"name": "ISuperToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2783,
																"src": "2973:11:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISuperToken_$2783_$",
																	"typeString": "type(contract ISuperToken)"
																}
															},
															"id": 4142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2973:26:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISuperToken_$2783",
																"typeString": "contract ISuperToken"
															}
														},
														"id": 4143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3000:16:21",
														"memberName": "selfTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2686,
														"src": "2973:43:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256) external"
														}
													},
													"id": 4148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2973:79:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4149,
												"nodeType": "ExpressionStatement",
												"src": "2973:79:21"
											}
										]
									},
									"documentation": {
										"id": 4126,
										"nodeType": "StructuredDocumentation",
										"src": "2564:292:21",
										"text": "@dev Internal transferFrom, calling functions should perform important checks!\n @param holder Owner of the tranfserred tokens\n @param spender Address of spending party (approved/operator)\n @param recipient Address of recipient party\n @param amount Amount to be tranfserred"
									},
									"id": 4151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferFrom",
									"nameLocation": "2867:13:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4128,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "2892:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 4151,
												"src": "2884:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2884:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4130,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2910:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 4151,
												"src": "2902:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4132,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2929:9:21",
												"nodeType": "VariableDeclaration",
												"scope": 4151,
												"src": "2921:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2921:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4134,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2950:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 4151,
												"src": "2942:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2942:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:79:21"
									},
									"returnParameters": {
										"id": 4136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2969:0:21"
									},
									"scope": 4152,
									"src": "2858:198:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4153,
							"src": "750:2308:21",
							"usedErrors": [4170, 4173]
						}
					],
					"src": "35:3024:21"
				},
				"id": 21
			},
			"contracts/base/SuperTokenStorage.sol": {
				"ast": {
					"absolutePath": "contracts/base/SuperTokenStorage.sol",
					"exportedSymbols": {
						"SuperTokenStorage": [4160]
					},
					"id": 4161,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4154,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "35:23:22"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "SuperTokenStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4155,
								"nodeType": "StructuredDocumentation",
								"src": "60:348:22",
								"text": "@title Abstract Storage Contract to pad the first 32 slots of storage\n @author Superfluid\n @dev MUST be the FIRST contract inherited to pad the first 32 slots. The slots are padded to\n ensure the implementation contract (SuperToken.sol) does not override any auxiliary state\n variables. For more info see `./docs/StorageLayout.md`."
							},
							"fullyImplemented": true,
							"id": 4160,
							"linearizedBaseContracts": [4160],
							"name": "SuperTokenStorage",
							"nameLocation": "426:17:22",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4159,
									"mutability": "mutable",
									"name": "_storagePaddings",
									"nameLocation": "471:16:22",
									"nodeType": "VariableDeclaration",
									"scope": 4160,
									"src": "450:37:22",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$32_storage",
										"typeString": "uint256[32]"
									},
									"typeName": {
										"baseType": {
											"id": 4156,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "450:7:22",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 4158,
										"length": {
											"hexValue": "3332",
											"id": 4157,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "458:2:22",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_32_by_1",
												"typeString": "int_const 32"
											},
											"value": "32"
										},
										"nodeType": "ArrayTypeName",
										"src": "450:11:22",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$32_storage_ptr",
											"typeString": "uint256[32]"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 4161,
							"src": "408:82:22",
							"usedErrors": []
						}
					],
					"src": "35:456:22"
				},
				"id": 22
			},
			"contracts/base/UUPSProxy.sol": {
				"ast": {
					"absolutePath": "contracts/base/UUPSProxy.sol",
					"exportedSymbols": {
						"Proxy": [440],
						"UUPSProxy": [4216]
					},
					"id": 4217,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4162,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "35:23:23"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
							"file": "@openzeppelin/contracts/proxy/Proxy.sol",
							"id": 4164,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4217,
							"sourceUnit": 441,
							"src": "60:62:23",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4163,
										"name": "Proxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 440,
										"src": "68:5:23",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4166,
										"name": "Proxy",
										"nameLocations": ["456:5:23"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 440,
										"src": "456:5:23"
									},
									"id": 4167,
									"nodeType": "InheritanceSpecifier",
									"src": "456:5:23"
								}
							],
							"canonicalName": "UUPSProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4165,
								"nodeType": "StructuredDocumentation",
								"src": "124:310:23",
								"text": "@title UUPS Proxy implementation contract\n @author jtriley.eth\n @notice Stores the logic contract's address at the _IMPLEMENTATION_SLOT\n @dev `initializeProxy(address)` is called by the Super Token Factory\n The call to the factory should be in the same transaction to avoid being\n front run"
							},
							"fullyImplemented": true,
							"id": 4216,
							"linearizedBaseContracts": [4216, 440],
							"name": "UUPSProxy",
							"nameLocation": "443:9:23",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 4168,
										"nodeType": "StructuredDocumentation",
										"src": "465:58:23",
										"text": "@notice Thrown when the logic contract address is zero"
									},
									"errorSelector": "d92e233d",
									"id": 4170,
									"name": "ZeroAddress",
									"nameLocation": "531:11:23",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "542:2:23"
									},
									"src": "525:20:23"
								},
								{
									"documentation": {
										"id": 4171,
										"nodeType": "StructuredDocumentation",
										"src": "548:55:23",
										"text": "@notice Thrown when the logic contract has been set"
									},
									"errorSelector": "5daa87a0",
									"id": 4173,
									"name": "Initialized",
									"nameLocation": "611:11:23",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "622:2:23"
									},
									"src": "605:20:23"
								},
								{
									"constant": true,
									"documentation": {
										"id": 4174,
										"nodeType": "StructuredDocumentation",
										"src": "628:128:23",
										"text": "@notice Precomputed from the following for gas savings\n bytes32(uint256(keccak256(\"eip1967.proxy.implementation\") - 1));"
									},
									"id": 4177,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "784:20:23",
									"nodeType": "VariableDeclaration",
									"scope": 4216,
									"src": "758:117:23",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 4175,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "758:7:23",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 4176,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "809:66:23",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4205,
										"nodeType": "Block",
										"src": "1107:188:23",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 4188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4183,
														"name": "initialAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4180,
														"src": "1115:14:23",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 4186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1141:1:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 4185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1133:7:23",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 4184,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1133:7:23",
																"typeDescriptions": {}
															}
														},
														"id": 4187,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1133:10:23",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1115:28:23",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4192,
												"nodeType": "IfStatement",
												"src": "1111:54:23",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4189,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4170,
															"src": "1152:11:23",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 4190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1152:13:23",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4191,
													"nodeType": "RevertStatement",
													"src": "1145:20:23"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 4199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4193,
															"name": "_implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4215
															],
															"referencedDeclaration": 4215,
															"src": "1173:15:23",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 4194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1173:17:23",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 4197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1202:1:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 4196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1194:7:23",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 4195,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1194:7:23",
																"typeDescriptions": {}
															}
														},
														"id": 4198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1194:10:23",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1173:31:23",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4203,
												"nodeType": "IfStatement",
												"src": "1169:57:23",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4200,
															"name": "Initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4173,
															"src": "1213:11:23",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 4201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1213:13:23",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4202,
													"nodeType": "RevertStatement",
													"src": "1206:20:23"
												}
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1239:53:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_IMPLEMENTATION_SLOT",
																		"nodeType": "YulIdentifier",
																		"src": "1251:20:23"
																	},
																	{
																		"name": "initialAddress",
																		"nodeType": "YulIdentifier",
																		"src": "1273:14:23"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "1244:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1244:44:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1244:44:23"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 4177,
														"isOffset": false,
														"isSlot": false,
														"src": "1251:20:23",
														"valueSize": 1
													},
													{
														"declaration": 4180,
														"isOffset": false,
														"isSlot": false,
														"src": "1273:14:23",
														"valueSize": 1
													}
												],
												"id": 4204,
												"nodeType": "InlineAssembly",
												"src": "1230:62:23"
											}
										]
									},
									"documentation": {
										"id": 4178,
										"nodeType": "StructuredDocumentation",
										"src": "879:168:23",
										"text": "@notice Stores the logic contract address only once.\n @dev Called by the SuperTokenFactory contract on upgrade\n @param initialAddress logic contract address"
									},
									"functionSelector": "4a0687ef",
									"id": 4206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initializeProxy",
									"nameLocation": "1058:15:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4180,
												"mutability": "mutable",
												"name": "initialAddress",
												"nameLocation": "1082:14:23",
												"nodeType": "VariableDeclaration",
												"scope": 4206,
												"src": "1074:22:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:23",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:24:23"
									},
									"returnParameters": {
										"id": 4182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1107:0:23"
									},
									"scope": 4216,
									"src": "1049:246:23",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [405],
									"body": {
										"id": 4214,
										"nodeType": "Block",
										"src": "1487:60:23",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1500:44:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1505:35:23",
															"value": {
																"arguments": [
																	{
																		"name": "_IMPLEMENTATION_SLOT",
																		"nodeType": "YulIdentifier",
																		"src": "1519:20:23"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "1513:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1513:27:23"
															},
															"variableNames": [
																{
																	"name": "impl",
																	"nodeType": "YulIdentifier",
																	"src": "1505:4:23"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 4177,
														"isOffset": false,
														"isSlot": false,
														"src": "1519:20:23",
														"valueSize": 1
													},
													{
														"declaration": 4211,
														"isOffset": false,
														"isSlot": false,
														"src": "1505:4:23",
														"valueSize": 1
													}
												],
												"id": 4213,
												"nodeType": "InlineAssembly",
												"src": "1491:53:23"
											}
										]
									},
									"documentation": {
										"id": 4207,
										"nodeType": "StructuredDocumentation",
										"src": "1298:95:23",
										"text": "@notice Reads logic contract from precomputed slot\n @return impl Logic contract address"
									},
									"id": 4215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "1404:15:23",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 4209,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1452:8:23"
									},
									"parameters": {
										"id": 4208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1419:2:23"
									},
									"returnParameters": {
										"id": 4212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4211,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "1480:4:23",
												"nodeType": "VariableDeclaration",
												"scope": 4215,
												"src": "1472:12:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1472:7:23",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:14:23"
									},
									"scope": 4216,
									"src": "1395:152:23",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 4217,
							"src": "434:1115:23",
							"usedErrors": [4170, 4173]
						}
					],
					"src": "35:1515:23"
				},
				"id": 23
			}
		}
	}
}
