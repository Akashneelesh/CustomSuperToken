{
	"id": "de8a0b6f9fcee94e1cf0a7fd02a83955",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/OurSuperToken.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity ^0.8.0;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport {SuperTokenBase} from \"./base/SuperTokenBase.sol\";\n\n/// @title Mintable Pure Super Token\n/// @author jtriley.eth\n/// @notice Only the owner may mint\ncontract OurSuperToken is SuperTokenBase, Ownable {\n\t\n    /// @notice Initializer, used AFTER factory upgrade\n\t/// @param factory Super token factory for initialization\n    /// @param name Name of Super Token\n    /// @param symbol Symbol of Super Token\n    function initialize(\n\t\taddress factory,\n\t\tstring memory name,\n\t\tstring memory symbol,\n\t\tuint256 initialSupply,\n\t\taddress receiver,\n\t\tbytes memory userData\n\t) external {\n\t\t_initialize(factory, name, symbol);\n\t\t_mint(receiver, initialSupply, userData);\n\t}\n\n\t/// @notice Mints tokens, only the owner may do this\n\t/// @param receiver Receiver of minted tokens\n\t/// @param amount Amount to mint\n\tfunction mint(address receiver, uint256 amount, bytes memory userData) external onlyOwner {\n\t\t_mint(receiver, amount, userData);\n\t}\n\n    function totalSupply() external view returns (uint t) {\n        _totalSupply();\n\n    }\n    function approve(address account,address spender,uint256 amount) external {\n        _approve(account, spender, amount);\n    }\n\n    function transferFrom(address holder,address spender, address recipient,uint256 amount) external {\n        _transferFrom(holder,spender,recipient,amount);\n    }\n\n    function burn(uint256 amount, bytes memory userData) external {\n        _burn(msg.sender,amount,userData);\n    }\n\n\n}\n"
			},
			"contracts/base/SuperTokenBase.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity ^0.8.0;\n\nimport {SuperTokenStorage} from \"../base/SuperTokenStorage.sol\";\nimport {UUPSProxy} from \"../base/UUPSProxy.sol\";\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {ISuperToken} from \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\";\nimport {ISuperTokenFactory} from \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\";\n\n/// @title Abstract contract containing a thin layer of abstraction for aux logic.\n/// @author jtriley.eth\n/// @dev The initial supply may be zero, in the event the token is mintable.\n/// Inheriting contracts MUST have an initializer calling this function!\nabstract contract SuperTokenBase is SuperTokenStorage, UUPSProxy {\n\n\t/// @dev Upgrades the super token with the factory, then initializes.\n\t/// @param factory super token factory for initialization\n\t/// @param name super token name\n\t/// @param symbol super token symbol\n\tfunction _initialize(address factory, string memory name, string memory symbol) internal {\n\t\tISuperTokenFactory(factory).initializeCustomSuperToken(address(this));\n\t\tISuperToken(address(this)).initialize(IERC20(address(0)), 18, name, symbol);\n\t}\n\n\t/// @dev Gets totalSupply\n\t/// @return t total supply\n\tfunction _totalSupply() internal view returns (uint256 t) {\n\t\treturn ISuperToken(address(this)).totalSupply();\n\t}\n\n\t/// @dev Internal mint, calling functions should perform important checks!\n\t/// @param account Address receiving minted tokens\n\t/// @param amount Amount of tokens minted\n\t/// @param userData Optional user data for ERC777 send callback\n\tfunction _mint(address account, uint256 amount, bytes memory userData) internal {\n\t\tISuperToken(address(this)).selfMint(account, amount, userData);\n\t}\n\n\t/// @dev Internal burn, calling functions should perform important checks!\n\t/// @param from Address from which to burn tokens\n\t/// @param amount Amount to burn\n\t/// @param userData Optional user data for ERC777 send callback\n\tfunction _burn(address from, uint256 amount, bytes memory userData) internal {\n\t\tISuperToken(address(this)).selfBurn(from, amount, userData);\n\t}\n\n\t/// @dev Internal approve, calling functions should perform important checks!\n\t/// @param account Address of approving party\n\t/// @param spender Address of spending party\n\t/// @param amount Approval amount\n\tfunction _approve(address account, address spender, uint256 amount) internal {\n\t\tISuperToken(address(this)).selfApproveFor(account, spender, amount);\n\t}\n\n\t/// @dev Internal transferFrom, calling functions should perform important checks!\n\t/// @param holder Owner of the tranfserred tokens\n\t/// @param spender Address of spending party (approved/operator)\n\t/// @param recipient Address of recipient party\n\t/// @param amount Amount to be tranfserred\n\tfunction _transferFrom(\n\t\taddress holder,\n\t\taddress spender,\n\t\taddress recipient,\n\t\tuint256 amount\n\t) internal {\n\t\tISuperToken(address(this)).selfTransferFrom(holder, spender, recipient, amount);\n\t}\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.8.4;\n\nimport { ISuperToken } from \"./ISuperToken.sol\";\n\nimport {\n    IERC20,\n    ERC20WithTokenInfo\n} from \"../tokens/ERC20WithTokenInfo.sol\";\n\n/**\n * @title Super token factory interface\n * @author Superfluid\n */\ninterface ISuperTokenFactory {\n\n    /**************************************************************************\n     * Errors\n     *************************************************************************/\n    error SUPER_TOKEN_FACTORY_ALREADY_EXISTS(); // 0x91d67972\n    error SUPER_TOKEN_FACTORY_DOES_NOT_EXIST(); // 0x872cac48\n    error SUPER_TOKEN_FACTORY_UNINITIALIZED();  // 0x1b39b9b4\n    error SUPER_TOKEN_FACTORY_ONLY_HOST();      // 0x478b8e83\n    error SUPER_TOKEN_FACTORY_ZERO_ADDRESS();   // 0x305c9e82\n\n    /**\n     * @dev Get superfluid host contract address\n     */\n    function getHost() external view returns(address host);\n\n    /// @dev Initialize the contract\n    function initialize() external;\n\n    /**\n     * @dev Get the current super token logic used by the factory\n     */\n    function getSuperTokenLogic() external view returns (ISuperToken superToken);\n\n    /**\n     * @dev Upgradability modes\n     */\n    enum Upgradability {\n        /// Non upgradable super token, `host.updateSuperTokenLogic` will revert\n        NON_UPGRADABLE,\n        /// Upgradable through `host.updateSuperTokenLogic` operation\n        SEMI_UPGRADABLE,\n        /// Always using the latest super token logic\n        FULL_UPGRADABLE\n    }\n\n    /**\n     * @notice Create new super token wrapper for the underlying ERC20 token\n     * @param underlyingToken Underlying ERC20 token\n     * @param underlyingDecimals Underlying token decimals\n     * @param upgradability Upgradability mode\n     * @param name Super token name\n     * @param symbol Super token symbol\n     * @return superToken The deployed and initialized wrapper super token\n     */\n    function createERC20Wrapper(\n        IERC20 underlyingToken,\n        uint8 underlyingDecimals,\n        Upgradability upgradability,\n        string calldata name,\n        string calldata symbol\n    )\n        external\n        returns (ISuperToken superToken);\n\n    /**\n     * @notice Create new super token wrapper for the underlying ERC20 token with extra token info\n     * @param underlyingToken Underlying ERC20 token\n     * @param upgradability Upgradability mode\n     * @param name Super token name\n     * @param symbol Super token symbol\n     * @return superToken The deployed and initialized wrapper super token\n     * NOTE:\n     * - It assumes token provide the .decimals() function\n     */\n    function createERC20Wrapper(\n        ERC20WithTokenInfo underlyingToken,\n        Upgradability upgradability,\n        string calldata name,\n        string calldata symbol\n    )\n        external\n        returns (ISuperToken superToken);\n\n    /**\n     * @notice Creates a wrapper super token AND sets it in the canonical list OR reverts if it already exists\n     * @dev salt for create2 is the keccak256 hash of abi.encode(address(_underlyingToken))\n     * @param _underlyingToken Underlying ERC20 token\n     * @return ISuperToken the created supertoken\n     */\n    function createCanonicalERC20Wrapper(ERC20WithTokenInfo _underlyingToken)\n        external\n        returns (ISuperToken);\n\n    /**\n     * @notice Computes/Retrieves wrapper super token address given the underlying token address\n     * @dev We return from our canonical list if it already exists, otherwise we compute it\n     * @dev note that this function only computes addresses for SEMI_UPGRADABLE SuperTokens\n     * @param _underlyingToken Underlying ERC20 token address\n     * @return superTokenAddress Super token address\n     * @return isDeployed whether the super token is deployed AND set in the canonical mapping\n     */\n    function computeCanonicalERC20WrapperAddress(address _underlyingToken)\n        external\n        view\n        returns (address superTokenAddress, bool isDeployed);\n\n    /**\n     * @notice Gets the canonical ERC20 wrapper super token address given the underlying token address\n     * @dev We return the address if it exists and the zero address otherwise\n     * @param _underlyingTokenAddress Underlying ERC20 token address\n     * @return superTokenAddress Super token address\n     */\n    function getCanonicalERC20Wrapper(address _underlyingTokenAddress)\n        external\n        view\n        returns (address superTokenAddress);\n\n    /**\n     * @dev Creates a new custom super token\n     * @param customSuperTokenProxy address of the custom supertoken proxy\n     */\n    function initializeCustomSuperToken(\n        address customSuperTokenProxy\n    )\n        external;\n\n    /**\n      * @dev Super token logic created event\n      * @param tokenLogic Token logic address\n      */\n    event SuperTokenLogicCreated(ISuperToken indexed tokenLogic);\n\n    /**\n      * @dev Super token created event\n      * @param token Newly created super token address\n      */\n    event SuperTokenCreated(ISuperToken indexed token);\n\n    /**\n      * @dev Custom super token created event\n      * @param token Newly created custom super token address\n      */\n    event CustomSuperTokenCreated(ISuperToken indexed token);\n\n}\n"
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.8.4;\n\nimport { ISuperfluid } from \"./ISuperfluid.sol\";\nimport { ISuperfluidToken } from \"./ISuperfluidToken.sol\";\nimport { TokenInfo } from \"../tokens/TokenInfo.sol\";\nimport { IERC777 } from \"@openzeppelin/contracts/token/ERC777/IERC777.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title Super token (Superfluid Token + ERC20 + ERC777) interface\n * @author Superfluid\n */\ninterface ISuperToken is ISuperfluidToken, TokenInfo, IERC20, IERC777 {\n\n    /**************************************************************************\n     * Errors\n     *************************************************************************/\n    error SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER();       // 0xf7f02227\n    error SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT();             // 0xfe737d05\n    error SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED(); // 0xe3e13698\n    error SUPER_TOKEN_NO_UNDERLYING_TOKEN();                     // 0xf79cf656\n    error SUPER_TOKEN_ONLY_SELF();                               // 0x7ffa6648\n    error SUPER_TOKEN_ONLY_HOST();                               // 0x98f73704\n    error SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS();               // 0x81638627\n    error SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS();                 // 0xdf070274\n    error SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS();                  // 0xba2ab184\n    error SUPER_TOKEN_MINT_TO_ZERO_ADDRESS();                    // 0x0d243157\n    error SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS();              // 0xeecd6c9b\n    error SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS();                // 0xe219bd39\n\n    /**\n     * @dev Initialize the contract\n     */\n    function initialize(\n        IERC20 underlyingToken,\n        uint8 underlyingDecimals,\n        string calldata n,\n        string calldata s\n    ) external;\n\n    /**************************************************************************\n    * TokenInfo & ERC777\n    *************************************************************************/\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view override(IERC777, TokenInfo) returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view override(IERC777, TokenInfo) returns (string memory);\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * @custom:note SuperToken always uses 18 decimals.\n     *\n     * This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() external view override(TokenInfo) returns (uint8);\n\n    /**************************************************************************\n    * ERC20 & ERC777\n    *************************************************************************/\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() external view override(IERC777, IERC20) returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`owner`).\n     */\n    function balanceOf(address account) external view override(IERC777, IERC20) returns(uint256 balance);\n\n    /**************************************************************************\n    * ERC20\n    *************************************************************************/\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * @return Returns Success a boolean value indicating whether the operation succeeded.\n     *\n     * @custom:emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external override(IERC20) returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     *         allowed to spend on behalf of `owner` through {transferFrom}. This is\n     *         zero by default.\n     *\n     * @notice This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external override(IERC20) view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * @return Returns Success a boolean value indicating whether the operation succeeded.\n     *\n     * @custom:note Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * @custom:emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external override(IERC20) returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     *         allowance mechanism. `amount` is then deducted from the caller's\n     *         allowance.\n     *\n     * @return Returns Success a boolean value indicating whether the operation succeeded.\n     *\n     * @custom:emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external override(IERC20) returns (bool);\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * @custom:emits an {Approval} event indicating the updated allowance.\n     *\n     * @custom:requirements \n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) external returns (bool);\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * @custom:emits an {Approval} event indicating the updated allowance.\n     *\n     * @custom:requirements \n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n     function decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool);\n\n    /**************************************************************************\n    * ERC777\n    *************************************************************************/\n\n    /**\n     * @dev Returns the smallest part of the token that is not divisible. This\n     *         means all token operations (creation, movement and destruction) must have\n     *         amounts that are a multiple of this number.\n     *\n     * @custom:note For super token contracts, this value is always 1\n     */\n    function granularity() external view override(IERC777) returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * @dev If send or receive hooks are registered for the caller and `recipient`,\n     *      the corresponding functions will be called with `data` and empty\n     *      `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * @custom:emits a {Sent} event.\n     *\n     * @custom:requirements \n     * - the caller must have at least `amount` tokens.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function send(address recipient, uint256 amount, bytes calldata data) external override(IERC777);\n\n    /**\n     * @dev Destroys `amount` tokens from the caller's account, reducing the\n     * total supply.\n     *\n     * If a send hook is registered for the caller, the corresponding function\n     * will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n     *\n     * @custom:emits a {Burned} event.\n     *\n     * @custom:requirements \n     * - the caller must have at least `amount` tokens.\n     */\n    function burn(uint256 amount, bytes calldata data) external override(IERC777);\n\n    /**\n     * @dev Returns true if an account is an operator of `tokenHolder`.\n     * Operators can send and burn tokens on behalf of their owners. All\n     * accounts are their own operator.\n     *\n     * See {operatorSend} and {operatorBurn}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) external override(IERC777) view returns (bool);\n\n    /**\n     * @dev Make an account an operator of the caller.\n     *\n     * See {isOperatorFor}.\n     *\n     * @custom:emits an {AuthorizedOperator} event.\n     *\n     * @custom:requirements \n     * - `operator` cannot be calling address.\n     */\n    function authorizeOperator(address operator) external override(IERC777);\n\n    /**\n     * @dev Revoke an account's operator status for the caller.\n     *\n     * See {isOperatorFor} and {defaultOperators}.\n     *\n     * @custom:emits a {RevokedOperator} event.\n     *\n     * @custom:requirements \n     * - `operator` cannot be calling address.\n     */\n    function revokeOperator(address operator) external override(IERC777);\n\n    /**\n     * @dev Returns the list of default operators. These accounts are operators\n     * for all token holders, even if {authorizeOperator} was never called on\n     * them.\n     *\n     * This list is immutable, but individual holders may revoke these via\n     * {revokeOperator}, in which case {isOperatorFor} will return false.\n     */\n    function defaultOperators() external override(IERC777) view returns (address[] memory);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n     * be an operator of `sender`.\n     *\n     * If send or receive hooks are registered for `sender` and `recipient`,\n     * the corresponding functions will be called with `data` and\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * @custom:emits a {Sent} event.\n     *\n     * @custom:requirements \n     * - `sender` cannot be the zero address.\n     * - `sender` must have at least `amount` tokens.\n     * - the caller must be an operator for `sender`.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external override(IERC777);\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\n     * The caller must be an operator of `account`.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `data` and `operatorData`. See {IERC777Sender}.\n     *\n     * @custom:emits a {Burned} event.\n     *\n     * @custom:requirements \n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     * - the caller must be an operator for `account`.\n     */\n    function operatorBurn(\n        address account,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external override(IERC777);\n\n    /**************************************************************************\n     * SuperToken custom token functions\n     *************************************************************************/\n\n    /**\n     * @dev Mint new tokens for the account\n     *\n     * @custom:modifiers \n     *  - onlySelf\n     */\n    function selfMint(\n        address account,\n        uint256 amount,\n        bytes memory userData\n    ) external;\n\n   /**\n    * @dev Burn existing tokens for the account\n    *\n    * @custom:modifiers \n    *  - onlySelf\n    */\n   function selfBurn(\n       address account,\n       uint256 amount,\n       bytes memory userData\n   ) external;\n\n   /**\n    * @dev Transfer `amount` tokens from the `sender` to `recipient`.\n    * If `spender` isn't the same as `sender`, checks if `spender` has allowance to\n    * spend tokens of `sender`.\n    *\n    * @custom:modifiers \n    *  - onlySelf\n    */\n   function selfTransferFrom(\n        address sender,\n        address spender,\n        address recipient,\n        uint256 amount\n   ) external;\n\n   /**\n    * @dev Give `spender`, `amount` allowance to spend the tokens of\n    * `account`.\n    *\n    * @custom:modifiers \n    *  - onlySelf\n    */\n   function selfApproveFor(\n        address account,\n        address spender,\n        uint256 amount\n   ) external;\n\n    /**************************************************************************\n     * SuperToken extra functions\n     *************************************************************************/\n\n    /**\n     * @dev Transfer all available balance from `msg.sender` to `recipient`\n     */\n    function transferAll(address recipient) external;\n\n    /**************************************************************************\n     * ERC20 wrapping\n     *************************************************************************/\n\n    /**\n     * @dev Return the underlying token contract\n     * @return tokenAddr Underlying token address\n     */\n    function getUnderlyingToken() external view returns(address tokenAddr);\n\n    /**\n     * @dev Upgrade ERC20 to SuperToken.\n     * @param amount Number of tokens to be upgraded (in 18 decimals)\n     *\n     * @custom:note It will use `transferFrom` to get tokens. Before calling this\n     * function you should `approve` this contract\n     */\n    function upgrade(uint256 amount) external;\n\n    /**\n     * @dev Upgrade ERC20 to SuperToken and transfer immediately\n     * @param to The account to received upgraded tokens\n     * @param amount Number of tokens to be upgraded (in 18 decimals)\n     * @param data User data for the TokensRecipient callback\n     *\n     * @custom:note It will use `transferFrom` to get tokens. Before calling this\n     * function you should `approve` this contract\n     */\n    function upgradeTo(address to, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev Token upgrade event\n     * @param account Account where tokens are upgraded to\n     * @param amount Amount of tokens upgraded (in 18 decimals)\n     */\n    event TokenUpgraded(\n        address indexed account,\n        uint256 amount\n    );\n\n    /**\n     * @dev Downgrade SuperToken to ERC20.\n     * @dev It will call transfer to send tokens\n     * @param amount Number of tokens to be downgraded\n     */\n    function downgrade(uint256 amount) external;\n\n    /**\n     * @dev Token downgrade event\n     * @param account Account whose tokens are upgraded\n     * @param amount Amount of tokens downgraded\n     */\n    event TokenDowngraded(\n        address indexed account,\n        uint256 amount\n    );\n\n    /**************************************************************************\n    * Batch Operations\n    *************************************************************************/\n\n    /**\n    * @dev Perform ERC20 approve by host contract.\n    * @param account The account owner to be approved.\n    * @param spender The spender of account owner's funds.\n    * @param amount Number of tokens to be approved.\n    *\n    * @custom:modifiers \n    *  - onlyHost\n    */\n    function operationApprove(\n        address account,\n        address spender,\n        uint256 amount\n    ) external;\n\n    /**\n    * @dev Perform ERC20 transfer from by host contract.\n    * @param account The account to spend sender's funds.\n    * @param spender  The account where the funds is sent from.\n    * @param recipient The recipient of thefunds.\n    * @param amount Number of tokens to be transferred.\n    *\n    * @custom:modifiers \n    *  - onlyHost\n    */\n    function operationTransferFrom(\n        address account,\n        address spender,\n        address recipient,\n        uint256 amount\n    ) external;\n\n    /**\n    * @dev Upgrade ERC20 to SuperToken by host contract.\n    * @param account The account to be changed.\n    * @param amount Number of tokens to be upgraded (in 18 decimals)\n    *\n    * @custom:modifiers \n    *  - onlyHost\n    */\n    function operationUpgrade(address account, uint256 amount) external;\n\n    /**\n    * @dev Downgrade ERC20 to SuperToken by host contract.\n    * @param account The account to be changed.\n    * @param amount Number of tokens to be downgraded (in 18 decimals)\n    *\n    * @custom:modifiers \n    *  - onlyHost\n    */\n    function operationDowngrade(address account, uint256 amount) external;\n\n\n    /**************************************************************************\n    * Function modifiers for access control and parameter validations\n    *\n    * While they cannot be explicitly stated in function definitions, they are\n    * listed in function definition comments instead for clarity.\n    *\n    * NOTE: solidity-coverage not supporting it\n    *************************************************************************/\n\n    /// @dev The msg.sender must be the contract itself\n    //modifier onlySelf() virtual\n\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"contracts/base/UUPSProxy.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity ^0.8.0;\n\nimport {Proxy} from \"@openzeppelin/contracts/proxy/Proxy.sol\";\n\n/// @title UUPS Proxy implementation contract\n/// @author jtriley.eth\n/// @notice Stores the logic contract's address at the _IMPLEMENTATION_SLOT\n/// @dev `initializeProxy(address)` is called by the Super Token Factory\n/// The call to the factory should be in the same transaction to avoid being\n/// front run\ncontract UUPSProxy is Proxy {\n\t/// @notice Thrown when the logic contract address is zero\n\terror ZeroAddress();\n\n\t/// @notice Thrown when the logic contract has been set\n\terror Initialized();\n\n\t/// @notice Precomputed from the following for gas savings\n\t/// bytes32(uint256(keccak256(\"eip1967.proxy.implementation\") - 1));\n\tbytes32 internal constant _IMPLEMENTATION_SLOT =\n\t\t0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n\t/// @notice Stores the logic contract address only once.\n\t/// @dev Called by the SuperTokenFactory contract on upgrade\n\t/// @param initialAddress logic contract address\n\tfunction initializeProxy(address initialAddress) external {\n\t\tif (initialAddress == address(0)) revert ZeroAddress();\n\t\tif (_implementation() != address(0)) revert Initialized();\n\t\tassembly {\n\t\t\tsstore(_IMPLEMENTATION_SLOT, initialAddress)\n\t\t}\n\t}\n\n\t/// @notice Reads logic contract from precomputed slot\n\t/// @return impl Logic contract address\n\tfunction _implementation()\n\t\tinternal\n\t\tview\n\t\tvirtual\n\t\toverride\n\t\treturns (address impl)\n\t{\n\t\tassembly {\n\t\t\timpl := sload(_IMPLEMENTATION_SLOT)\n\t\t}\n\t}\n}\n"
			},
			"contracts/base/SuperTokenStorage.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity ^0.8.0;\n\n/// @title Abstract Storage Contract to pad the first 32 slots of storage\n/// @author Superfluid\n/// @dev MUST be the FIRST contract inherited to pad the first 32 slots. The slots are padded to\n/// ensure the implementation contract (SuperToken.sol) does not override any auxiliary state\n/// variables. For more info see `./docs/StorageLayout.md`.\nabstract contract SuperTokenStorage {\n    uint256[32] internal _storagePaddings;\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.8.4;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { TokenInfo } from \"./TokenInfo.sol\";\n\n/**\n * @title ERC20 token with token info interface\n * @author Superfluid\n * @dev Using abstract contract instead of interfaces because old solidity\n *      does not support interface inheriting other interfaces\n * solhint-disable-next-line no-empty-blocks\n *\n */\n// solhint-disable-next-line no-empty-blocks\nabstract contract ERC20WithTokenInfo is IERC20, TokenInfo {}\n"
			},
			"@openzeppelin/contracts/token/ERC777/IERC777.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC777/IERC777.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777Token standard as defined in the EIP.\n *\n * This contract uses the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n * token holders and recipients react to token movements by using setting implementers\n * for the associated interfaces in said registry. See {IERC1820Registry} and\n * {ERC1820Implementer}.\n */\ninterface IERC777 {\n    /**\n     * @dev Emitted when `amount` tokens are created by `operator` and assigned to `to`.\n     *\n     * Note that some additional user `data` and `operatorData` can be logged in the event.\n     */\n    event Minted(address indexed operator, address indexed to, uint256 amount, bytes data, bytes operatorData);\n\n    /**\n     * @dev Emitted when `operator` destroys `amount` tokens from `account`.\n     *\n     * Note that some additional user `data` and `operatorData` can be logged in the event.\n     */\n    event Burned(address indexed operator, address indexed from, uint256 amount, bytes data, bytes operatorData);\n\n    /**\n     * @dev Emitted when `operator` is made operator for `tokenHolder`.\n     */\n    event AuthorizedOperator(address indexed operator, address indexed tokenHolder);\n\n    /**\n     * @dev Emitted when `operator` is revoked its operator status for `tokenHolder`.\n     */\n    event RevokedOperator(address indexed operator, address indexed tokenHolder);\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the smallest part of the token that is not divisible. This\n     * means all token operations (creation, movement and destruction) must have\n     * amounts that are a multiple of this number.\n     *\n     * For most token contracts, this value will equal 1.\n     */\n    function granularity() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`owner`).\n     */\n    function balanceOf(address owner) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * If send or receive hooks are registered for the caller and `recipient`,\n     * the corresponding functions will be called with `data` and empty\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function send(\n        address recipient,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Destroys `amount` tokens from the caller's account, reducing the\n     * total supply.\n     *\n     * If a send hook is registered for the caller, the corresponding function\n     * will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     */\n    function burn(uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev Returns true if an account is an operator of `tokenHolder`.\n     * Operators can send and burn tokens on behalf of their owners. All\n     * accounts are their own operator.\n     *\n     * See {operatorSend} and {operatorBurn}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) external view returns (bool);\n\n    /**\n     * @dev Make an account an operator of the caller.\n     *\n     * See {isOperatorFor}.\n     *\n     * Emits an {AuthorizedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function authorizeOperator(address operator) external;\n\n    /**\n     * @dev Revoke an account's operator status for the caller.\n     *\n     * See {isOperatorFor} and {defaultOperators}.\n     *\n     * Emits a {RevokedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function revokeOperator(address operator) external;\n\n    /**\n     * @dev Returns the list of default operators. These accounts are operators\n     * for all token holders, even if {authorizeOperator} was never called on\n     * them.\n     *\n     * This list is immutable, but individual holders may revoke these via\n     * {revokeOperator}, in which case {isOperatorFor} will return false.\n     */\n    function defaultOperators() external view returns (address[] memory);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n     * be an operator of `sender`.\n     *\n     * If send or receive hooks are registered for `sender` and `recipient`,\n     * the corresponding functions will be called with `data` and\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - `sender` cannot be the zero address.\n     * - `sender` must have at least `amount` tokens.\n     * - the caller must be an operator for `sender`.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\n     * The caller must be an operator of `account`.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `data` and `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     * - the caller must be an operator for `account`.\n     */\n    function operatorBurn(\n        address account,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    event Sent(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 amount,\n        bytes data,\n        bytes operatorData\n    );\n}\n"
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.8.4;\n\n/**\n * @title ERC20 token info interface\n * @author Superfluid\n * @dev ERC20 standard interface does not specify these functions, but\n *      often the token implementations have them.\n */\ninterface TokenInfo {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.8.4;\n\nimport { ISuperAgreement } from \"./ISuperAgreement.sol\";\n\n/**\n * @title Superfluid token interface\n * @author Superfluid\n */\ninterface ISuperfluidToken {\n\n    /**************************************************************************\n     * Errors\n     *************************************************************************/\n    error SF_TOKEN_AGREEMENT_ALREADY_EXISTS();  // 0xf05521f6\n    error SF_TOKEN_AGREEMENT_DOES_NOT_EXIST();  // 0xdae18809\n    error SF_TOKEN_BURN_INSUFFICIENT_BALANCE(); // 0x10ecdf44\n    error SF_TOKEN_MOVE_INSUFFICIENT_BALANCE(); // 0x2f4cb941\n    error SF_TOKEN_ONLY_LISTED_AGREEMENT();     // 0xc9ff6644\n    error SF_TOKEN_ONLY_HOST();                 // 0xc51efddd\n\n    /**************************************************************************\n     * Basic information\n     *************************************************************************/\n\n    /**\n     * @dev Get superfluid host contract address\n     */\n    function getHost() external view returns(address host);\n\n    /**\n     * @dev Encoded liquidation type data mainly used for handling stack to deep errors\n     *\n     * @custom:note \n     * - version: 1\n     * - liquidationType key:\n     *    - 0 = reward account receives reward (PIC period)\n     *    - 1 = liquidator account receives reward (Pleb period)\n     *    - 2 = liquidator account receives reward (Pirate period/bailout)\n     */\n    struct LiquidationTypeData {\n        uint256 version;\n        uint8 liquidationType;\n    }\n\n    /**************************************************************************\n     * Real-time balance functions\n     *************************************************************************/\n\n    /**\n    * @dev Calculate the real balance of a user, taking in consideration all agreements of the account\n    * @param account for the query\n    * @param timestamp Time of balance\n    * @return availableBalance Real-time balance\n    * @return deposit Account deposit\n    * @return owedDeposit Account owed Deposit\n    */\n    function realtimeBalanceOf(\n       address account,\n       uint256 timestamp\n    )\n        external view\n        returns (\n            int256 availableBalance,\n            uint256 deposit,\n            uint256 owedDeposit);\n\n    /**\n     * @notice Calculate the realtime balance given the current host.getNow() value\n     * @dev realtimeBalanceOf with timestamp equals to block timestamp\n     * @param account for the query\n     * @return availableBalance Real-time balance\n     * @return deposit Account deposit\n     * @return owedDeposit Account owed Deposit\n     */\n    function realtimeBalanceOfNow(\n       address account\n    )\n        external view\n        returns (\n            int256 availableBalance,\n            uint256 deposit,\n            uint256 owedDeposit,\n            uint256 timestamp);\n\n    /**\n    * @notice Check if account is critical\n    * @dev A critical account is when availableBalance < 0\n    * @param account The account to check\n    * @param timestamp The time we'd like to check if the account is critical (should use future)\n    * @return isCritical Whether the account is critical\n    */\n    function isAccountCritical(\n        address account,\n        uint256 timestamp\n    )\n        external view\n        returns(bool isCritical);\n\n    /**\n    * @notice Check if account is critical now (current host.getNow())\n    * @dev A critical account is when availableBalance < 0\n    * @param account The account to check\n    * @return isCritical Whether the account is critical\n    */\n    function isAccountCriticalNow(\n        address account\n    )\n        external view\n        returns(bool isCritical);\n\n    /**\n     * @notice Check if account is solvent\n     * @dev An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\n     * @param account The account to check\n     * @param timestamp The time we'd like to check if the account is solvent (should use future)\n     * @return isSolvent True if the account is solvent, false otherwise\n     */\n    function isAccountSolvent(\n        address account,\n        uint256 timestamp\n    )\n        external view\n        returns(bool isSolvent);\n\n    /**\n     * @notice Check if account is solvent now\n     * @dev An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\n     * @param account The account to check\n     * @return isSolvent True if the account is solvent, false otherwise\n     */\n    function isAccountSolventNow(\n        address account\n    )\n        external view\n        returns(bool isSolvent);\n\n    /**\n    * @notice Get a list of agreements that is active for the account\n    * @dev An active agreement is one that has state for the account\n    * @param account Account to query\n    * @return activeAgreements List of accounts that have non-zero states for the account\n    */\n    function getAccountActiveAgreements(address account)\n       external view\n       returns(ISuperAgreement[] memory activeAgreements);\n\n\n   /**************************************************************************\n    * Super Agreement hosting functions\n    *************************************************************************/\n\n    /**\n     * @dev Create a new agreement\n     * @param id Agreement ID\n     * @param data Agreement data\n     */\n    function createAgreement(\n        bytes32 id,\n        bytes32[] calldata data\n    )\n        external;\n    /**\n     * @dev Agreement created event\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param data Agreement data\n     */\n    event AgreementCreated(\n        address indexed agreementClass,\n        bytes32 id,\n        bytes32[] data\n    );\n\n    /**\n     * @dev Get data of the agreement\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @return data Data of the agreement\n     */\n    function getAgreementData(\n        address agreementClass,\n        bytes32 id,\n        uint dataLength\n    )\n        external view\n        returns(bytes32[] memory data);\n\n    /**\n     * @dev Create a new agreement\n     * @param id Agreement ID\n     * @param data Agreement data\n     */\n    function updateAgreementData(\n        bytes32 id,\n        bytes32[] calldata data\n    )\n        external;\n    /**\n     * @dev Agreement updated event\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param data Agreement data\n     */\n    event AgreementUpdated(\n        address indexed agreementClass,\n        bytes32 id,\n        bytes32[] data\n    );\n\n    /**\n     * @dev Close the agreement\n     * @param id Agreement ID\n     */\n    function terminateAgreement(\n        bytes32 id,\n        uint dataLength\n    )\n        external;\n    /**\n     * @dev Agreement terminated event\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     */\n    event AgreementTerminated(\n        address indexed agreementClass,\n        bytes32 id\n    );\n\n    /**\n     * @dev Update agreement state slot\n     * @param account Account to be updated\n     *\n     * @custom:note \n     * - To clear the storage out, provide zero-ed array of intended length\n     */\n    function updateAgreementStateSlot(\n        address account,\n        uint256 slotId,\n        bytes32[] calldata slotData\n    )\n        external;\n    /**\n     * @dev Agreement account state updated event\n     * @param agreementClass Contract address of the agreement\n     * @param account Account updated\n     * @param slotId slot id of the agreement state\n     */\n    event AgreementStateUpdated(\n        address indexed agreementClass,\n        address indexed account,\n        uint256 slotId\n    );\n\n    /**\n     * @dev Get data of the slot of the state of an agreement\n     * @param agreementClass Contract address of the agreement\n     * @param account Account to query\n     * @param slotId slot id of the state\n     * @param dataLength length of the state data\n     */\n    function getAgreementStateSlot(\n        address agreementClass,\n        address account,\n        uint256 slotId,\n        uint dataLength\n    )\n        external view\n        returns (bytes32[] memory slotData);\n\n    /**\n     * @notice Settle balance from an account by the agreement\n     * @dev The agreement needs to make sure that the balance delta is balanced afterwards\n     * @param account Account to query.\n     * @param delta Amount of balance delta to be settled\n     *\n     * @custom:modifiers \n     *  - onlyAgreement\n     */\n    function settleBalance(\n        address account,\n        int256 delta\n    )\n        external;\n\n    /**\n     * @dev Make liquidation payouts (v2)\n     * @param id Agreement ID\n     * @param liquidationTypeData Data regarding the version of the liquidation schema and the type\n     * @param liquidatorAccount Address of the executor of the liquidation\n     * @param useDefaultRewardAccount Whether or not the default reward account receives the rewardAmount\n     * @param targetAccount Account to be liquidated\n     * @param rewardAmount The amount the rewarded account will receive\n     * @param targetAccountBalanceDelta The delta amount the target account balance should change by\n     *\n     * @custom:note \n     * - If a bailout is required (bailoutAmount > 0)\n     *   - the actual reward (single deposit) goes to the executor,\n     *   - while the reward account becomes the bailout account\n     *   - total bailout include: bailout amount + reward amount\n     *   - the targetAccount will be bailed out\n     * - If a bailout is not required\n     *   - the targetAccount will pay the rewardAmount\n     *   - the liquidator (reward account in PIC period) will receive the rewardAmount\n     *\n     * @custom:modifiers \n     *  - onlyAgreement\n     */\n    function makeLiquidationPayoutsV2\n    (\n        bytes32 id,\n        bytes memory liquidationTypeData,\n        address liquidatorAccount,\n        bool useDefaultRewardAccount,\n        address targetAccount,\n        uint256 rewardAmount,\n        int256 targetAccountBalanceDelta\n    ) external;\n    /**\n     * @dev Agreement liquidation event v2 (including agent account)\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param liquidatorAccount Address of the executor of the liquidation\n     * @param targetAccount Account of the stream sender\n     * @param rewardAmountReceiver Account that collects the reward or bails out insolvent accounts\n     * @param rewardAmount The amount the reward recipient account balance should change by\n     * @param targetAccountBalanceDelta The amount the sender account balance should change by\n     * @param liquidationTypeData The encoded liquidation type data including the version (how to decode)\n     *\n     * @custom:note \n     * Reward account rule:\n     * - if the agreement is liquidated during the PIC period\n     *   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount\n     *   - the targetAccount will pay for the rewardAmount\n     * - if the agreement is liquidated after the PIC period AND the targetAccount is solvent\n     *   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)\n     *   - the targetAccount will pay for the rewardAmount\n     * - if the targetAccount is insolvent\n     *   - the liquidatorAccount will get the rewardAmount (single deposit)\n     *   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount\n     *   - the targetAccount will receive the bailoutAmount\n     */\n    event AgreementLiquidatedV2(\n        address indexed agreementClass,\n        bytes32 id,\n        address indexed liquidatorAccount,\n        address indexed targetAccount,\n        address rewardAmountReceiver,\n        uint256 rewardAmount,\n        int256 targetAccountBalanceDelta,\n        bytes liquidationTypeData\n    );\n\n    /**************************************************************************\n     * Function modifiers for access control and parameter validations\n     *\n     * While they cannot be explicitly stated in function definitions, they are\n     * listed in function definition comments instead for clarity.\n     *\n     * NOTE: solidity-coverage not supporting it\n     *************************************************************************/\n\n     /// @dev The msg.sender must be host contract\n     //modifier onlyHost() virtual;\n\n    /// @dev The msg.sender must be a listed agreement.\n    //modifier onlyAgreement() virtual;\n\n    /**************************************************************************\n     * DEPRECATED\n     *************************************************************************/\n\n    /**\n     * @dev Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param penaltyAccount Account of the agreement to be penalized\n     * @param rewardAccount Account that collect the reward\n     * @param rewardAmount Amount of liquidation reward\n     *\n     * @custom:deprecated Use AgreementLiquidatedV2 instead\n     */\n    event AgreementLiquidated(\n        address indexed agreementClass,\n        bytes32 id,\n        address indexed penaltyAccount,\n        address indexed rewardAccount,\n        uint256 rewardAmount\n    );\n\n    /**\n     * @dev System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\n     * @param bailoutAccount Account that bailout the penalty account\n     * @param bailoutAmount Amount of account bailout\n     *\n     * @custom:deprecated Use AgreementLiquidatedV2 instead\n     */\n    event Bailout(\n        address indexed bailoutAccount,\n        uint256 bailoutAmount\n    );\n\n    /**\n     * @dev Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\n     * @param liquidatorAccount Account of the agent that performed the liquidation.\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param penaltyAccount Account of the agreement to be penalized\n     * @param bondAccount Account that collect the reward or bailout accounts\n     * @param rewardAmount Amount of liquidation reward\n     * @param bailoutAmount Amount of liquidation bailouot\n     *\n     * @custom:deprecated Use AgreementLiquidatedV2 instead\n     *\n     * @custom:note \n     * Reward account rule:\n     * - if bailout is equal to 0, then\n     *   - the bondAccount will get the rewardAmount,\n     *   - the penaltyAccount will pay for the rewardAmount.\n     * - if bailout is larger than 0, then\n     *   - the liquidatorAccount will get the rewardAmouont,\n     *   - the bondAccount will pay for both the rewardAmount and bailoutAmount,\n     *   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.\n     */\n    event AgreementLiquidatedBy(\n        address liquidatorAccount,\n        address indexed agreementClass,\n        bytes32 id,\n        address indexed penaltyAccount,\n        address indexed bondAccount,\n        uint256 rewardAmount,\n        uint256 bailoutAmount\n    );\n}\n"
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.8.4;\n\nimport { ISuperfluidGovernance } from \"./ISuperfluidGovernance.sol\";\nimport { ISuperfluidToken } from \"./ISuperfluidToken.sol\";\nimport { ISuperToken } from \"./ISuperToken.sol\";\nimport { ISuperTokenFactory } from \"./ISuperTokenFactory.sol\";\nimport { ISuperAgreement } from \"./ISuperAgreement.sol\";\nimport { ISuperApp } from \"./ISuperApp.sol\";\nimport {\n    BatchOperation,\n    ContextDefinitions,\n    FlowOperatorDefinitions,\n    SuperAppDefinitions,\n    SuperfluidGovernanceConfigs\n} from \"./Definitions.sol\";\nimport { TokenInfo } from \"../tokens/TokenInfo.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { IERC777 } from \"@openzeppelin/contracts/token/ERC777/IERC777.sol\";\n\n/**\n * @title Host interface\n * @author Superfluid\n * @notice This is the central contract of the system where super agreement, super app\n * and super token features are connected.\n *\n * The Superfluid host contract is also the entry point for the protocol users,\n * where batch call and meta transaction are provided for UX improvements.\n *\n */\ninterface ISuperfluid {\n\n    /**************************************************************************\n     * Errors\n     *************************************************************************/\n    // Superfluid Custom Errors\n    error HOST_AGREEMENT_CALLBACK_IS_NOT_ACTION();              // 0xef4295f6\n    error HOST_CANNOT_DOWNGRADE_TO_NON_UPGRADEABLE();           // 0x474e7641\n    error HOST_CALL_AGREEMENT_WITH_CTX_FROM_WRONG_ADDRESS();    // 0x0cd0ebc2\n    error HOST_CALL_APP_ACTION_WITH_CTX_FROM_WRONG_ADDRESS();   // 0x473f7bd4\n    error HOST_INVALID_CONFIG_WORD();                           // 0xf4c802a4\n    error HOST_MAX_256_AGREEMENTS();                            // 0x7c281a78\n    error HOST_NON_UPGRADEABLE();                               // 0x14f72c9f\n    error HOST_NON_ZERO_LENGTH_PLACEHOLDER_CTX();               // 0x67e9985b\n    error HOST_ONLY_GOVERNANCE();                               // 0xc5d22a4e\n    error HOST_UNKNOWN_BATCH_CALL_OPERATION_TYPE();             // 0xb4770115\n    error HOST_AGREEMENT_ALREADY_REGISTERED();                  // 0xdc9ddba8\n    error HOST_AGREEMENT_IS_NOT_REGISTERED();                   // 0x1c9e9bea\n    error HOST_MUST_BE_CONTRACT();                              // 0xd4f6b30c\n    error HOST_ONLY_LISTED_AGREEMENT();                         // 0x619c5359\n\n    // App Related Custom Errors\n    // uses SuperAppDefinitions' App Jail Reasons as _code\n    error APP_RULE(uint256 _code);                              // 0xa85ba64f\n\n    error HOST_INVALID_OR_EXPIRED_SUPER_APP_REGISTRATION_KEY(); // 0x19ab84d1\n    error HOST_NOT_A_SUPER_APP();                               // 0x163cbe43\n    error HOST_NO_APP_REGISTRATION_PERMISSIONS();               // 0x5b93ebf0\n    error HOST_RECEIVER_IS_NOT_SUPER_APP();                     // 0x96aa315e\n    error HOST_SENDER_IS_NOT_SUPER_APP();                       // 0xbacfdc40\n    error HOST_SOURCE_APP_NEEDS_HIGHER_APP_LEVEL();             // 0x44725270\n    error HOST_SUPER_APP_IS_JAILED();                           // 0x02384b64\n    error HOST_SUPER_APP_ALREADY_REGISTERED();                  // 0x01b0a935\n    error HOST_UNAUTHORIZED_SUPER_APP_FACTORY();                // 0x289533c5\n\n    /**************************************************************************\n     * Time\n     *\n     * > The Oracle: You have the sight now, Neo. You are looking at the world without time.\n     * > Neo: Then why can't I see what happens to her?\n     * > The Oracle: We can never see past the choices we don't understand.\n     * >       - The Oracle and Neo conversing about the future of Trinity and the effects of Neo's choices\n     *************************************************************************/\n\n    function getNow() external view returns (uint256);\n\n    /**************************************************************************\n     * Governance\n     *************************************************************************/\n\n    /**\n     * @dev Get the current governance address of the Superfluid host\n     */\n    function getGovernance() external view returns(ISuperfluidGovernance governance);\n\n    /**\n     * @dev Replace the current governance with a new one\n     */\n    function replaceGovernance(ISuperfluidGovernance newGov) external;\n    /**\n     * @dev Governance replaced event\n     * @param oldGov Address of the old governance contract\n     * @param newGov Address of the new governance contract\n     */\n    event GovernanceReplaced(ISuperfluidGovernance oldGov, ISuperfluidGovernance newGov);\n\n    /**************************************************************************\n     * Agreement Whitelisting\n     *************************************************************************/\n\n    /**\n     * @dev Register a new agreement class to the system\n     * @param agreementClassLogic Initial agreement class code\n     *\n     * @custom:modifiers \n     * - onlyGovernance\n     */\n    function registerAgreementClass(ISuperAgreement agreementClassLogic) external;\n    /**\n     * @notice Agreement class registered event\n     * @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"\n     * @param agreementType The agreement type registered\n     * @param code Address of the new agreement\n     */\n    event AgreementClassRegistered(bytes32 agreementType, address code);\n\n    /**\n    * @dev Update code of an agreement class\n    * @param agreementClassLogic New code for the agreement class\n    *\n    * @custom:modifiers \n    *  - onlyGovernance\n    */\n    function updateAgreementClass(ISuperAgreement agreementClassLogic) external;\n    /**\n     * @notice Agreement class updated event\n     * @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"\n     * @param agreementType The agreement type updated\n     * @param code Address of the new agreement\n     */\n    event AgreementClassUpdated(bytes32 agreementType, address code);\n\n    /**\n    * @notice Check if the agreement type is whitelisted\n    * @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"\n    */\n    function isAgreementTypeListed(bytes32 agreementType) external view returns(bool yes);\n\n    /**\n    * @dev Check if the agreement class is whitelisted\n    */\n    function isAgreementClassListed(ISuperAgreement agreementClass) external view returns(bool yes);\n\n    /**\n    * @notice Get agreement class\n    * @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"\n    */\n    function getAgreementClass(bytes32 agreementType) external view returns(ISuperAgreement agreementClass);\n\n    /**\n    * @dev Map list of the agreement classes using a bitmap\n    * @param bitmap Agreement class bitmap\n    */\n    function mapAgreementClasses(uint256 bitmap)\n        external view\n        returns (ISuperAgreement[] memory agreementClasses);\n\n    /**\n    * @notice Create a new bitmask by adding a agreement class to it\n    * @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"\n    * @param bitmap Agreement class bitmap\n    */\n    function addToAgreementClassesBitmap(uint256 bitmap, bytes32 agreementType)\n        external view\n        returns (uint256 newBitmap);\n\n    /**\n    * @notice Create a new bitmask by removing a agreement class from it\n    * @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"\n    * @param bitmap Agreement class bitmap\n    */\n    function removeFromAgreementClassesBitmap(uint256 bitmap, bytes32 agreementType)\n        external view\n        returns (uint256 newBitmap);\n\n    /**************************************************************************\n    * Super Token Factory\n    **************************************************************************/\n\n    /**\n     * @dev Get the super token factory\n     * @return factory The factory\n     */\n    function getSuperTokenFactory() external view returns (ISuperTokenFactory factory);\n\n    /**\n     * @dev Get the super token factory logic (applicable to upgradable deployment)\n     * @return logic The factory logic\n     */\n    function getSuperTokenFactoryLogic() external view returns (address logic);\n\n    /**\n     * @dev Update super token factory\n     * @param newFactory New factory logic\n     */\n    function updateSuperTokenFactory(ISuperTokenFactory newFactory) external;\n    /**\n     * @dev SuperToken factory updated event\n     * @param newFactory Address of the new factory\n     */\n    event SuperTokenFactoryUpdated(ISuperTokenFactory newFactory);\n\n    /**\n     * @notice Update the super token logic to the latest\n     * @dev Refer to ISuperTokenFactory.Upgradability for expected behaviours\n     */\n    function updateSuperTokenLogic(ISuperToken token) external;\n    /**\n     * @dev SuperToken logic updated event\n     * @param code Address of the new SuperToken logic\n     */\n    event SuperTokenLogicUpdated(ISuperToken indexed token, address code);\n\n    /**************************************************************************\n     * App Registry\n     *************************************************************************/\n\n    /**\n     * @dev Message sender (must be a contract) declares itself as a super app.\n     * @custom:deprecated you should use `registerAppWithKey` or `registerAppByFactory` instead,\n     * because app registration is currently governance permissioned on mainnets.\n     * @param configWord The super app manifest configuration, flags are defined in\n     * `SuperAppDefinitions`\n     */\n    function registerApp(uint256 configWord) external;\n    /**\n     * @dev App registered event\n     * @param app Address of jailed app\n     */\n    event AppRegistered(ISuperApp indexed app);\n\n    /**\n     * @dev Message sender declares itself as a super app.\n     * @param configWord The super app manifest configuration, flags are defined in `SuperAppDefinitions`\n     * @param registrationKey The registration key issued by the governance, needed to register on a mainnet.\n     * @notice See https://github.com/superfluid-finance/protocol-monorepo/wiki/Super-App-White-listing-Guide\n     * On testnets or in dev environment, a placeholder (e.g. empty string) can be used.\n     * While the message sender must be the super app itself, the transaction sender (tx.origin)\n     * must be the deployer account the registration key was issued for.\n     */\n    function registerAppWithKey(uint256 configWord, string calldata registrationKey) external;\n\n    /**\n     * @dev Message sender (must be a contract) declares app as a super app\n     * @param configWord The super app manifest configuration, flags are defined in `SuperAppDefinitions`\n     * @notice On mainnet deployments, only factory contracts pre-authorized by governance can use this.\n     * See https://github.com/superfluid-finance/protocol-monorepo/wiki/Super-App-White-listing-Guide\n     */\n    function registerAppByFactory(ISuperApp app, uint256 configWord) external;\n\n    /**\n     * @dev Query if the app is registered\n     * @param app Super app address\n     */\n    function isApp(ISuperApp app) external view returns(bool);\n\n    /**\n     * @dev Query app callbacklevel\n     * @param app Super app address\n     */\n    function getAppCallbackLevel(ISuperApp app) external view returns(uint8 appCallbackLevel);\n\n    /**\n     * @dev Get the manifest of the super app\n     * @param app Super app address\n     */\n    function getAppManifest(\n        ISuperApp app\n    )\n        external view\n        returns (\n            bool isSuperApp,\n            bool isJailed,\n            uint256 noopMask\n        );\n\n    /**\n     * @dev Query if the app has been jailed\n     * @param app Super app address\n     */\n    function isAppJailed(ISuperApp app) external view returns (bool isJail);\n\n    /**\n     * @dev Whitelist the target app for app composition for the source app (msg.sender)\n     * @param targetApp The target super app address\n     */\n    function allowCompositeApp(ISuperApp targetApp) external;\n\n    /**\n     * @dev Query if source app is allowed to call the target app as downstream app\n     * @param app Super app address\n     * @param targetApp The target super app address\n     */\n    function isCompositeAppAllowed(\n        ISuperApp app,\n        ISuperApp targetApp\n    )\n        external view\n        returns (bool isAppAllowed);\n\n    /**************************************************************************\n     * Agreement Framework\n     *\n     * Agreements use these function to trigger super app callbacks, updates\n     * app credit and charge gas fees.\n     *\n     * These functions can only be called by registered agreements.\n     *************************************************************************/\n\n    /**\n     * @dev (For agreements) StaticCall the app before callback\n     * @param  app               The super app.\n     * @param  callData          The call data sending to the super app.\n     * @param  isTermination     Is it a termination callback?\n     * @param  ctx               Current ctx, it will be validated.\n     * @return cbdata            Data returned from the callback.\n     */\n    function callAppBeforeCallback(\n        ISuperApp app,\n        bytes calldata callData,\n        bool isTermination,\n        bytes calldata ctx\n    )\n        external\n        // onlyAgreement\n        // assertValidCtx(ctx)\n        returns(bytes memory cbdata);\n\n    /**\n     * @dev (For agreements) Call the app after callback\n     * @param  app               The super app.\n     * @param  callData          The call data sending to the super app.\n     * @param  isTermination     Is it a termination callback?\n     * @param  ctx               Current ctx, it will be validated.\n     * @return newCtx            The current context of the transaction.\n     */\n    function callAppAfterCallback(\n        ISuperApp app,\n        bytes calldata callData,\n        bool isTermination,\n        bytes calldata ctx\n    )\n        external\n        // onlyAgreement\n        // assertValidCtx(ctx)\n        returns(bytes memory newCtx);\n\n    /**\n     * @dev (For agreements) Create a new callback stack\n     * @param  ctx                     The current ctx, it will be validated.\n     * @param  app                     The super app.\n     * @param  appCreditGranted        App credit granted so far.\n     * @param  appCreditUsed           App credit used so far.\n     * @return newCtx                  The current context of the transaction.\n     */\n    function appCallbackPush(\n        bytes calldata ctx,\n        ISuperApp app,\n        uint256 appCreditGranted,\n        int256 appCreditUsed,\n        ISuperfluidToken appCreditToken\n    )\n        external\n        // onlyAgreement\n        // assertValidCtx(ctx)\n        returns (bytes memory newCtx);\n\n    /**\n     * @dev (For agreements) Pop from the current app callback stack\n     * @param  ctx                     The ctx that was pushed before the callback stack.\n     * @param  appCreditUsedDelta      App credit used by the app.\n     * @return newCtx                  The current context of the transaction.\n     *\n     * @custom:security\n     * - Here we cannot do assertValidCtx(ctx), since we do not really save the stack in memory.\n     * - Hence there is still implicit trust that the agreement handles the callback push/pop pair correctly.\n     */\n    function appCallbackPop(\n        bytes calldata ctx,\n        int256 appCreditUsedDelta\n    )\n        external\n        // onlyAgreement\n        returns (bytes memory newCtx);\n\n    /**\n     * @dev (For agreements) Use app credit.\n     * @param  ctx                      The current ctx, it will be validated.\n     * @param  appCreditUsedMore        See app credit for more details.\n     * @return newCtx                   The current context of the transaction.\n     */\n    function ctxUseCredit(\n        bytes calldata ctx,\n        int256 appCreditUsedMore\n    )\n        external\n        // onlyAgreement\n        // assertValidCtx(ctx)\n        returns (bytes memory newCtx);\n\n    /**\n     * @dev (For agreements) Jail the app.\n     * @param  app                     The super app.\n     * @param  reason                  Jail reason code.\n     * @return newCtx                  The current context of the transaction.\n     */\n    function jailApp(\n        bytes calldata ctx,\n        ISuperApp app,\n        uint256 reason\n    )\n        external\n        // onlyAgreement\n        // assertValidCtx(ctx)\n        returns (bytes memory newCtx);\n\n    /**\n     * @dev Jail event for the app\n     * @param app Address of jailed app\n     * @param reason Reason the app is jailed (see Definitions.sol for the full list)\n     */\n    event Jail(ISuperApp indexed app, uint256 reason);\n\n    /**************************************************************************\n     * Contextless Call Proxies\n     *\n     * NOTE: For EOAs or non-app contracts, they are the entry points for interacting\n     * with agreements or apps.\n     *\n     * NOTE: The contextual call data should be generated using\n     * abi.encodeWithSelector. The context parameter should be set to \"0x\",\n     * an empty bytes array as a placeholder to be replaced by the host\n     * contract.\n     *************************************************************************/\n\n     /**\n      * @dev Call agreement function\n      * @param agreementClass The agreement address you are calling\n      * @param callData The contextual call data with placeholder ctx\n      * @param userData Extra user data being sent to the super app callbacks\n      */\n     function callAgreement(\n         ISuperAgreement agreementClass,\n         bytes calldata callData,\n         bytes calldata userData\n     )\n        external\n        //cleanCtx\n        //isAgreement(agreementClass)\n        returns(bytes memory returnedData);\n\n    /**\n     * @notice Call app action\n     * @dev Main use case is calling app action in a batch call via the host\n     * @param callData The contextual call data\n     *\n     * @custom:note See \"Contextless Call Proxies\" above for more about contextual call data.\n     */\n    function callAppAction(\n        ISuperApp app,\n        bytes calldata callData\n    )\n        external\n        //cleanCtx\n        //isAppActive(app)\n        //isValidAppAction(callData)\n        returns(bytes memory returnedData);\n\n    /**************************************************************************\n     * Contextual Call Proxies and Context Utilities\n     *\n     * For apps, they must use context they receive to interact with\n     * agreements or apps.\n     *\n     * The context changes must be saved and returned by the apps in their\n     * callbacks always, any modification to the context will be detected and\n     * the violating app will be jailed.\n     *************************************************************************/\n\n    /**\n     * @dev Context Struct\n     *\n     * @custom:note on backward compatibility:\n     * - Non-dynamic fields are padded to 32bytes and packed\n     * - Dynamic fields are referenced through a 32bytes offset to their \"parents\" field (or root)\n     * - The order of the fields hence should not be rearranged in order to be backward compatible:\n     *    - non-dynamic fields will be parsed at the same memory location,\n     *    - and dynamic fields will simply have a greater offset than it was.\n     * - We cannot change the structure of the Context struct because of ABI compatibility requirements\n     */\n    struct Context {\n        //\n        // Call context\n        //\n        // app callback level\n        uint8 appCallbackLevel;\n        // type of call\n        uint8 callType;\n        // the system timestamp\n        uint256 timestamp;\n        // The intended message sender for the call\n        address msgSender;\n\n        //\n        // Callback context\n        //\n        // For callbacks it is used to know which agreement function selector is called\n        bytes4 agreementSelector;\n        // User provided data for app callbacks\n        bytes userData;\n\n        //\n        // App context\n        //\n        // app credit granted\n        uint256 appCreditGranted;\n        // app credit wanted by the app callback\n        uint256 appCreditWantedDeprecated;\n        // app credit used, allowing negative values over a callback session\n        // the appCreditUsed value over a callback sessions is calculated with:\n        // existing flow data owed deposit + sum of the callback agreements\n        // deposit deltas \n        // the final value used to modify the state is determined by the\n        // _adjustNewAppCreditUsed function (in AgreementLibrary.sol) which takes \n        // the appCreditUsed value reached in the callback session and the app\n        // credit granted\n        int256 appCreditUsed;\n        // app address\n        address appAddress;\n        // app credit in super token\n        ISuperfluidToken appCreditToken;\n    }\n\n    function callAgreementWithContext(\n        ISuperAgreement agreementClass,\n        bytes calldata callData,\n        bytes calldata userData,\n        bytes calldata ctx\n    )\n        external\n        // requireValidCtx(ctx)\n        // onlyAgreement(agreementClass)\n        returns (bytes memory newCtx, bytes memory returnedData);\n\n    function callAppActionWithContext(\n        ISuperApp app,\n        bytes calldata callData,\n        bytes calldata ctx\n    )\n        external\n        // requireValidCtx(ctx)\n        // isAppActive(app)\n        returns (bytes memory newCtx);\n\n    function decodeCtx(bytes memory ctx)\n        external pure\n        returns (Context memory context);\n\n    function isCtxValid(bytes calldata ctx) external view returns (bool);\n\n    /**************************************************************************\n    * Batch call\n    **************************************************************************/\n    /**\n     * @dev Batch operation data\n     */\n    struct Operation {\n        // Operation type. Defined in BatchOperation (Definitions.sol)\n        uint32 operationType;\n        // Operation target\n        address target;\n        // Data specific to the operation\n        bytes data;\n    }\n\n    /**\n     * @dev Batch call function\n     * @param operations Array of batch operations\n     */\n    function batchCall(Operation[] calldata operations) external;\n\n    /**\n     * @dev Batch call function for trusted forwarders (EIP-2771)\n     * @param operations Array of batch operations\n     */\n    function forwardBatchCall(Operation[] calldata operations) external;\n\n    /**************************************************************************\n     * Function modifiers for access control and parameter validations\n     *\n     * While they cannot be explicitly stated in function definitions, they are\n     * listed in function definition comments instead for clarity.\n     *\n     * TODO: turning these off because solidity-coverage doesn't like it\n     *************************************************************************/\n\n     /* /// @dev The current superfluid context is clean.\n     modifier cleanCtx() virtual;\n\n     /// @dev Require the ctx being valid.\n     modifier requireValidCtx(bytes memory ctx) virtual;\n\n     /// @dev Assert the ctx being valid.\n     modifier assertValidCtx(bytes memory ctx) virtual;\n\n     /// @dev The agreement is a listed agreement.\n     modifier isAgreement(ISuperAgreement agreementClass) virtual;\n\n     // onlyGovernance\n\n     /// @dev The msg.sender must be a listed agreement.\n     modifier onlyAgreement() virtual;\n\n     /// @dev The app is registered and not jailed.\n     modifier isAppActive(ISuperApp app) virtual; */\n}\n"
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.8.4;\n\nimport { ISuperfluidToken } from \"./ISuperfluidToken.sol\";\n\n/**\n * @title Super agreement interface\n * @author Superfluid\n */\ninterface ISuperAgreement {\n\n    /**\n     * @dev Get the type of the agreement class\n     */\n    function agreementType() external view returns (bytes32);\n\n    /**\n     * @dev Calculate the real-time balance for the account of this agreement class\n     * @param account Account the state belongs to\n     * @param time Time used for the calculation\n     * @return dynamicBalance Dynamic balance portion of real-time balance of this agreement\n     * @return deposit Account deposit amount of this agreement\n     * @return owedDeposit Account owed deposit amount of this agreement\n     */\n    function realtimeBalanceOf(\n        ISuperfluidToken token,\n        address account,\n        uint256 time\n    )\n        external\n        view\n        returns (\n            int256 dynamicBalance,\n            uint256 deposit,\n            uint256 owedDeposit\n        );\n\n}\n"
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.8.4;\n\n/**\n * @title Super app definitions library\n * @author Superfluid\n */\nlibrary SuperAppDefinitions {\n\n    /**************************************************************************\n    / App manifest config word\n    /**************************************************************************/\n\n    /*\n     * App level is a way to allow the app to whitelist what other app it can\n     * interact with (aka. composite app feature).\n     *\n     * For more details, refer to the technical paper of superfluid protocol.\n     */\n    uint256 constant internal APP_LEVEL_MASK = 0xFF;\n\n    // The app is at the final level, hence it doesn't want to interact with any other app\n    uint256 constant internal APP_LEVEL_FINAL = 1 << 0;\n\n    // The app is at the second level, it may interact with other final level apps if whitelisted\n    uint256 constant internal APP_LEVEL_SECOND = 1 << 1;\n\n    function getAppCallbackLevel(uint256 configWord) internal pure returns (uint8) {\n        return uint8(configWord & APP_LEVEL_MASK);\n    }\n\n    uint256 constant internal APP_JAIL_BIT = 1 << 15;\n    function isAppJailed(uint256 configWord) internal pure returns (bool) {\n        return (configWord & SuperAppDefinitions.APP_JAIL_BIT) > 0;\n    }\n\n    /**************************************************************************\n    / Callback implementation bit masks\n    /**************************************************************************/\n    uint256 constant internal AGREEMENT_CALLBACK_NOOP_BITMASKS = 0xFF << 32;\n    uint256 constant internal BEFORE_AGREEMENT_CREATED_NOOP = 1 << (32 + 0);\n    uint256 constant internal AFTER_AGREEMENT_CREATED_NOOP = 1 << (32 + 1);\n    uint256 constant internal BEFORE_AGREEMENT_UPDATED_NOOP = 1 << (32 + 2);\n    uint256 constant internal AFTER_AGREEMENT_UPDATED_NOOP = 1 << (32 + 3);\n    uint256 constant internal BEFORE_AGREEMENT_TERMINATED_NOOP = 1 << (32 + 4);\n    uint256 constant internal AFTER_AGREEMENT_TERMINATED_NOOP = 1 << (32 + 5);\n\n    /**************************************************************************\n    / App Jail Reasons\n    /**************************************************************************/\n\n    uint256 constant internal APP_RULE_REGISTRATION_ONLY_IN_CONSTRUCTOR = 1;\n    uint256 constant internal APP_RULE_NO_REGISTRATION_FOR_EOA = 2;\n    uint256 constant internal APP_RULE_NO_REVERT_ON_TERMINATION_CALLBACK = 10;\n    uint256 constant internal APP_RULE_NO_CRITICAL_SENDER_ACCOUNT = 11;\n    uint256 constant internal APP_RULE_NO_CRITICAL_RECEIVER_ACCOUNT = 12;\n    uint256 constant internal APP_RULE_CTX_IS_READONLY = 20;\n    uint256 constant internal APP_RULE_CTX_IS_NOT_CLEAN = 21;\n    uint256 constant internal APP_RULE_CTX_IS_MALFORMATED = 22;\n    uint256 constant internal APP_RULE_COMPOSITE_APP_IS_NOT_WHITELISTED = 30;\n    uint256 constant internal APP_RULE_COMPOSITE_APP_IS_JAILED = 31;\n    uint256 constant internal APP_RULE_MAX_APP_LEVEL_REACHED = 40;\n\n    // Validate configWord cleaness for future compatibility, or else may introduce undefined future behavior\n    function isConfigWordClean(uint256 configWord) internal pure returns (bool) {\n        return (configWord & ~(APP_LEVEL_MASK | APP_JAIL_BIT | AGREEMENT_CALLBACK_NOOP_BITMASKS)) == uint256(0);\n    }\n}\n\n/**\n * @title Context definitions library\n * @author Superfluid\n */\nlibrary ContextDefinitions {\n\n    /**************************************************************************\n    / Call info\n    /**************************************************************************/\n\n    // app level\n    uint256 constant internal CALL_INFO_APP_LEVEL_MASK = 0xFF;\n\n    // call type\n    uint256 constant internal CALL_INFO_CALL_TYPE_SHIFT = 32;\n    uint256 constant internal CALL_INFO_CALL_TYPE_MASK = 0xF << CALL_INFO_CALL_TYPE_SHIFT;\n    uint8 constant internal CALL_INFO_CALL_TYPE_AGREEMENT = 1;\n    uint8 constant internal CALL_INFO_CALL_TYPE_APP_ACTION = 2;\n    uint8 constant internal CALL_INFO_CALL_TYPE_APP_CALLBACK = 3;\n\n    function decodeCallInfo(uint256 callInfo)\n        internal pure\n        returns (uint8 appCallbackLevel, uint8 callType)\n    {\n        appCallbackLevel = uint8(callInfo & CALL_INFO_APP_LEVEL_MASK);\n        callType = uint8((callInfo & CALL_INFO_CALL_TYPE_MASK) >> CALL_INFO_CALL_TYPE_SHIFT);\n    }\n\n    function encodeCallInfo(uint8 appCallbackLevel, uint8 callType)\n        internal pure\n        returns (uint256 callInfo)\n    {\n        return uint256(appCallbackLevel) | (uint256(callType) << CALL_INFO_CALL_TYPE_SHIFT);\n    }\n\n}\n\n/**\n * @title Flow Operator definitions library\n  * @author Superfluid\n */\n library FlowOperatorDefinitions {\n    uint8 constant internal AUTHORIZE_FLOW_OPERATOR_CREATE = uint8(1) << 0;\n    uint8 constant internal AUTHORIZE_FLOW_OPERATOR_UPDATE = uint8(1) << 1;\n    uint8 constant internal AUTHORIZE_FLOW_OPERATOR_DELETE = uint8(1) << 2;\n    uint8 constant internal AUTHORIZE_FULL_CONTROL =\n        AUTHORIZE_FLOW_OPERATOR_CREATE | AUTHORIZE_FLOW_OPERATOR_UPDATE | AUTHORIZE_FLOW_OPERATOR_DELETE;\n    uint8 constant internal REVOKE_FLOW_OPERATOR_CREATE = ~(uint8(1) << 0);\n    uint8 constant internal REVOKE_FLOW_OPERATOR_UPDATE = ~(uint8(1) << 1);\n    uint8 constant internal REVOKE_FLOW_OPERATOR_DELETE = ~(uint8(1) << 2);\n\n    function isPermissionsClean(uint8 permissions) internal pure returns (bool) {\n        return (\n            permissions & ~(AUTHORIZE_FLOW_OPERATOR_CREATE\n                | AUTHORIZE_FLOW_OPERATOR_UPDATE\n                | AUTHORIZE_FLOW_OPERATOR_DELETE)\n            ) == uint8(0);\n    }\n }\n\n/**\n * @title Batch operation library\n * @author Superfluid\n */\nlibrary BatchOperation {\n    /**\n     * @dev ERC20.approve batch operation type\n     *\n     * Call spec:\n     * ISuperToken(target).operationApprove(\n     *     abi.decode(data, (address spender, uint256 amount))\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_ERC20_APPROVE = 1;\n    /**\n     * @dev ERC20.transferFrom batch operation type\n     *\n     * Call spec:\n     * ISuperToken(target).operationTransferFrom(\n     *     abi.decode(data, (address sender, address recipient, uint256 amount)\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_ERC20_TRANSFER_FROM = 2;\n    /**\n     * @dev SuperToken.upgrade batch operation type\n     *\n     * Call spec:\n     * ISuperToken(target).operationUpgrade(\n     *     abi.decode(data, (uint256 amount)\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_SUPERTOKEN_UPGRADE = 1 + 100;\n    /**\n     * @dev SuperToken.downgrade batch operation type\n     *\n     * Call spec:\n     * ISuperToken(target).operationDowngrade(\n     *     abi.decode(data, (uint256 amount)\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_SUPERTOKEN_DOWNGRADE = 2 + 100;\n    /**\n     * @dev Superfluid.callAgreement batch operation type\n     *\n     * Call spec:\n     * callAgreement(\n     *     ISuperAgreement(target)),\n     *     abi.decode(data, (bytes calldata, bytes userdata)\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_SUPERFLUID_CALL_AGREEMENT = 1 + 200;\n    /**\n     * @dev Superfluid.callAppAction batch operation type\n     *\n     * Call spec:\n     * callAppAction(\n     *     ISuperApp(target)),\n     *     data\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_SUPERFLUID_CALL_APP_ACTION = 2 + 200;\n}\n\n/**\n * @title Superfluid governance configs library\n * @author Superfluid\n */\nlibrary SuperfluidGovernanceConfigs {\n\n    bytes32 constant internal SUPERFLUID_REWARD_ADDRESS_CONFIG_KEY =\n        keccak256(\"org.superfluid-finance.superfluid.rewardAddress\");\n    bytes32 constant internal CFAV1_PPP_CONFIG_KEY =\n        keccak256(\"org.superfluid-finance.agreements.ConstantFlowAgreement.v1.PPPConfiguration\");\n    bytes32 constant internal SUPERTOKEN_MINIMUM_DEPOSIT_KEY =\n        keccak256(\"org.superfluid-finance.superfluid.superTokenMinimumDeposit\");\n\n    function getTrustedForwarderConfigKey(address forwarder) internal pure returns (bytes32) {\n        return keccak256(abi.encode(\n            \"org.superfluid-finance.superfluid.trustedForwarder\",\n            forwarder));\n    }\n\n    function getAppRegistrationConfigKey(address deployer, string memory registrationKey) internal pure returns (bytes32) {\n        return keccak256(abi.encode(\n            \"org.superfluid-finance.superfluid.appWhiteListing.registrationKey\",\n            deployer,\n            registrationKey));\n    }\n\n    function getAppFactoryConfigKey(address factory) internal pure returns (bytes32) {\n        return keccak256(abi.encode(\n            \"org.superfluid-finance.superfluid.appWhiteListing.factory\",\n            factory));\n    }\n\n    function decodePPPConfig(uint256 pppConfig) internal pure returns (uint256 liquidationPeriod, uint256 patricianPeriod) {\n        liquidationPeriod = (pppConfig >> 32) & type(uint32).max;\n        patricianPeriod = pppConfig & type(uint32).max;\n    }\n}\n"
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.8.4;\n\nimport { ISuperToken } from \"./ISuperToken.sol\";\n\n/**\n * @title SuperApp interface\n * @author Superfluid\n * @dev Be aware of the app being jailed, when the word permitted is used.\n */\ninterface ISuperApp {\n\n    /**\n     * @dev Callback before a new agreement is created.\n     * @param superToken The super token used for the agreement.\n     * @param agreementClass The agreement class address.\n     * @param agreementId The agreementId\n     * @param agreementData The agreement data (non-compressed)\n     * @param ctx The context data.\n     * @return cbdata A free format in memory data the app can use to pass\n     *          arbitary information to the after-hook callback.\n     *\n     * @custom:note \n     * - It will be invoked with `staticcall`, no state changes are permitted.\n     * - Only revert with a \"reason\" is permitted.\n     */\n    function beforeAgreementCreated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata ctx\n    )\n        external\n        view\n        returns (bytes memory cbdata);\n\n    /**\n     * @dev Callback after a new agreement is created.\n     * @param superToken The super token used for the agreement.\n     * @param agreementClass The agreement class address.\n     * @param agreementId The agreementId\n     * @param agreementData The agreement data (non-compressed)\n     * @param cbdata The data returned from the before-hook callback.\n     * @param ctx The context data.\n     * @return newCtx The current context of the transaction.\n     *\n     * @custom:note \n     * - State changes is permitted.\n     * - Only revert with a \"reason\" is permitted.\n     */\n    function afterAgreementCreated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata cbdata,\n        bytes calldata ctx\n    )\n        external\n        returns (bytes memory newCtx);\n\n    /**\n     * @dev Callback before a new agreement is updated.\n     * @param superToken The super token used for the agreement.\n     * @param agreementClass The agreement class address.\n     * @param agreementId The agreementId\n     * @param agreementData The agreement data (non-compressed)\n     * @param ctx The context data.\n     * @return cbdata A free format in memory data the app can use to pass\n     *          arbitary information to the after-hook callback.\n     *\n     * @custom:note \n     * - It will be invoked with `staticcall`, no state changes are permitted.\n     * - Only revert with a \"reason\" is permitted.\n     */\n    function beforeAgreementUpdated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata ctx\n    )\n        external\n        view\n        returns (bytes memory cbdata);\n\n\n    /**\n    * @dev Callback after a new agreement is updated.\n    * @param superToken The super token used for the agreement.\n    * @param agreementClass The agreement class address.\n    * @param agreementId The agreementId\n    * @param agreementData The agreement data (non-compressed)\n    * @param cbdata The data returned from the before-hook callback.\n    * @param ctx The context data.\n    * @return newCtx The current context of the transaction.\n    *\n    * @custom:note \n    * - State changes is permitted.\n    * - Only revert with a \"reason\" is permitted.\n    */\n    function afterAgreementUpdated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata cbdata,\n        bytes calldata ctx\n    )\n        external\n        returns (bytes memory newCtx);\n\n    /**\n    * @dev Callback before a new agreement is terminated.\n    * @param superToken The super token used for the agreement.\n    * @param agreementClass The agreement class address.\n    * @param agreementId The agreementId\n    * @param agreementData The agreement data (non-compressed)\n    * @param ctx The context data.\n    * @return cbdata A free format in memory data the app can use to pass arbitary information to the after-hook callback.\n    *\n    * @custom:note \n    * - It will be invoked with `staticcall`, no state changes are permitted.\n    * - Revert is not permitted.\n    */\n    function beforeAgreementTerminated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata ctx\n    )\n        external\n        view\n        returns (bytes memory cbdata);\n\n    /**\n    * @dev Callback after a new agreement is terminated.\n    * @param superToken The super token used for the agreement.\n    * @param agreementClass The agreement class address.\n    * @param agreementId The agreementId\n    * @param agreementData The agreement data (non-compressed)\n    * @param cbdata The data returned from the before-hook callback.\n    * @param ctx The context data.\n    * @return newCtx The current context of the transaction.\n    *\n    * @custom:note \n    * - State changes is permitted.\n    * - Revert is not permitted.\n    */\n    function afterAgreementTerminated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata cbdata,\n        bytes calldata ctx\n    )\n        external\n        returns (bytes memory newCtx);\n}\n"
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
				"content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.8.4;\n\nimport { ISuperAgreement } from \"./ISuperAgreement.sol\";\nimport { ISuperToken } from \"./ISuperToken.sol\";\nimport { ISuperfluidToken  } from \"./ISuperfluidToken.sol\";\nimport { ISuperfluid } from \"./ISuperfluid.sol\";\n\n\n/**\n * @title Superfluid governance interface\n * @author Superfluid\n */\ninterface ISuperfluidGovernance {\n    \n    /**************************************************************************\n     * Errors\n     *************************************************************************/\n    error SF_GOV_ARRAYS_NOT_SAME_LENGTH();                  // 0x27743aa6\n    error SF_GOV_INVALID_LIQUIDATION_OR_PATRICIAN_PERIOD(); // 0xe171980a\n    error SF_GOV_MUST_BE_CONTRACT();                        // 0x80dddd73\n\n    /**\n     * @dev Replace the current governance with a new governance\n     */\n    function replaceGovernance(\n        ISuperfluid host,\n        address newGov) external;\n\n    /**\n     * @dev Register a new agreement class\n     */\n    function registerAgreementClass(\n        ISuperfluid host,\n        address agreementClass) external;\n\n    /**\n     * @dev Update logics of the contracts\n     *\n     * @custom:note \n     * - Because they might have inter-dependencies, it is good to have one single function to update them all\n     */\n    function updateContracts(\n        ISuperfluid host,\n        address hostNewLogic,\n        address[] calldata agreementClassNewLogics,\n        address superTokenFactoryNewLogic\n    ) external;\n\n    /**\n     * @dev Update supertoken logic contract to the latest that is managed by the super token factory\n     */\n    function batchUpdateSuperTokenLogic(\n        ISuperfluid host,\n        ISuperToken[] calldata tokens) external;\n    \n    /**\n     * @dev Set configuration as address value\n     */\n    function setConfig(\n        ISuperfluid host,\n        ISuperfluidToken superToken,\n        bytes32 key,\n        address value\n    ) external;\n    \n    /**\n     * @dev Set configuration as uint256 value\n     */\n    function setConfig(\n        ISuperfluid host,\n        ISuperfluidToken superToken,\n        bytes32 key,\n        uint256 value\n    ) external;\n\n    /**\n     * @dev Clear configuration\n     */\n    function clearConfig(\n        ISuperfluid host,\n        ISuperfluidToken superToken,\n        bytes32 key\n    ) external;\n\n    /**\n     * @dev Get configuration as address value\n     */\n    function getConfigAsAddress(\n        ISuperfluid host,\n        ISuperfluidToken superToken,\n        bytes32 key) external view returns (address value);\n\n    /**\n     * @dev Get configuration as uint256 value\n     */\n    function getConfigAsUint256(\n        ISuperfluid host,\n        ISuperfluidToken superToken,\n        bytes32 key) external view returns (uint256 value);\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": ["ast"],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC777/IERC777.sol": {
				"IERC777": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "AuthorizedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Burned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "RevokedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Sent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "authorizeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultOperators",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "granularity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "isOperatorFor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorSend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "revokeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "send",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {ERC1820Implementer}.",
						"events": {
							"AuthorizedOperator(address,address)": {
								"details": "Emitted when `operator` is made operator for `tokenHolder`."
							},
							"Burned(address,address,uint256,bytes,bytes)": {
								"details": "Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event."
							},
							"Minted(address,address,uint256,bytes,bytes)": {
								"details": "Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event."
							},
							"RevokedOperator(address,address)": {
								"details": "Emitted when `operator` is revoked its operator status for `tokenHolder`."
							}
						},
						"kind": "dev",
						"methods": {
							"authorizeOperator(address)": {
								"details": "Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by an account (`owner`)."
							},
							"burn(uint256,bytes)": {
								"details": "Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens."
							},
							"defaultOperators()": {
								"details": "Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."
							},
							"granularity()": {
								"details": "Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1."
							},
							"isOperatorFor(address,address)": {
								"details": "Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"operatorBurn(address,uint256,bytes,bytes)": {
								"details": "Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`."
							},
							"operatorSend(address,address,uint256,bytes,bytes)": {
								"details": "Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."
							},
							"revokeOperator(address)": {
								"details": "Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address."
							},
							"send(address,uint256,bytes)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"authorizeOperator(address)": "959b8c3f",
							"balanceOf(address)": "70a08231",
							"burn(uint256,bytes)": "fe9d9303",
							"defaultOperators()": "06e48538",
							"granularity()": "556f0dc7",
							"isOperatorFor(address,address)": "d95b6371",
							"name()": "06fdde03",
							"operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
							"operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
							"revokeOperator(address)": "fad8b32a",
							"send(address,uint256,bytes)": "9bd9bbc6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {ERC1820Implementer}.\",\"events\":{\"AuthorizedOperator(address,address)\":{\"details\":\"Emitted when `operator` is made operator for `tokenHolder`.\"},\"Burned(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"Minted(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"RevokedOperator(address,address)\":{\"details\":\"Emitted when `operator` is revoked its operator status for `tokenHolder`.\"}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address)\":{\"details\":\"Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"granularity()\":{\"details\":\"Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1.\"},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"revokeOperator(address)\":{\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address.\"},\"send(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":\"IERC777\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
				"BatchOperation": {
					"abi": [],
					"devdoc": {
						"author": "Superfluid",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"OPERATION_TYPE_ERC20_APPROVE": {
								"details": "ERC20.approve batch operation type Call spec: ISuperToken(target).operationApprove(     abi.decode(data, (address spender, uint256 amount)) )"
							},
							"OPERATION_TYPE_ERC20_TRANSFER_FROM": {
								"details": "ERC20.transferFrom batch operation type Call spec: ISuperToken(target).operationTransferFrom(     abi.decode(data, (address sender, address recipient, uint256 amount) )"
							},
							"OPERATION_TYPE_SUPERFLUID_CALL_AGREEMENT": {
								"details": "Superfluid.callAgreement batch operation type Call spec: callAgreement(     ISuperAgreement(target)),     abi.decode(data, (bytes calldata, bytes userdata) )"
							},
							"OPERATION_TYPE_SUPERFLUID_CALL_APP_ACTION": {
								"details": "Superfluid.callAppAction batch operation type Call spec: callAppAction(     ISuperApp(target)),     data )"
							},
							"OPERATION_TYPE_SUPERTOKEN_DOWNGRADE": {
								"details": "SuperToken.downgrade batch operation type Call spec: ISuperToken(target).operationDowngrade(     abi.decode(data, (uint256 amount) )"
							},
							"OPERATION_TYPE_SUPERTOKEN_UPGRADE": {
								"details": "SuperToken.upgrade batch operation type Call spec: ISuperToken(target).operationUpgrade(     abi.decode(data, (uint256 amount) )"
							}
						},
						"title": "Batch operation library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":5648:7349  library BatchOperation {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":5648:7349  library BatchOperation {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209b776374491000626f2d2208ab4ab1be45b0974b4e61b679ea179d09cb261c1564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209b776374491000626f2d2208ab4ab1be45b0974b4e61b679ea179d09cb261c1564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 PUSH24 0x6374491000626F2D2208AB4AB1BE45B0974B4E61B679EA17 SWAP14 MULMOD 0xCB 0x26 SHR ISZERO PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "5648:1701:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209b776374491000626f2d2208ab4ab1be45b0974b4e61b679ea179d09cb261c1564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 PUSH24 0x6374491000626F2D2208AB4AB1BE45B0974B4E61B679EA17 SWAP14 MULMOD 0xCB 0x26 SHR ISZERO PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "5648:1701:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5648,
									"end": 7349,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209b776374491000626f2d2208ab4ab1be45b0974b4e61b679ea179d09cb261c1564736f6c63430008120033",
									".code": [
										{
											"begin": 5648,
											"end": 7349,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 5648,
											"end": 7349,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5648,
											"end": 7349,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5648,
											"end": 7349,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5648,
											"end": 7349,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5648,
											"end": 7349,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5648,
											"end": 7349,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5648,
											"end": 7349,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5648,
											"end": 7349,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC777/IERC777.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
								"contracts/OurSuperToken.sol",
								"contracts/base/SuperTokenBase.sol",
								"contracts/base/SuperTokenStorage.sol",
								"contracts/base/UUPSProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"OPERATION_TYPE_ERC20_APPROVE\":{\"details\":\"ERC20.approve batch operation type Call spec: ISuperToken(target).operationApprove(     abi.decode(data, (address spender, uint256 amount)) )\"},\"OPERATION_TYPE_ERC20_TRANSFER_FROM\":{\"details\":\"ERC20.transferFrom batch operation type Call spec: ISuperToken(target).operationTransferFrom(     abi.decode(data, (address sender, address recipient, uint256 amount) )\"},\"OPERATION_TYPE_SUPERFLUID_CALL_AGREEMENT\":{\"details\":\"Superfluid.callAgreement batch operation type Call spec: callAgreement(     ISuperAgreement(target)),     abi.decode(data, (bytes calldata, bytes userdata) )\"},\"OPERATION_TYPE_SUPERFLUID_CALL_APP_ACTION\":{\"details\":\"Superfluid.callAppAction batch operation type Call spec: callAppAction(     ISuperApp(target)),     data )\"},\"OPERATION_TYPE_SUPERTOKEN_DOWNGRADE\":{\"details\":\"SuperToken.downgrade batch operation type Call spec: ISuperToken(target).operationDowngrade(     abi.decode(data, (uint256 amount) )\"},\"OPERATION_TYPE_SUPERTOKEN_UPGRADE\":{\"details\":\"SuperToken.upgrade batch operation type Call spec: ISuperToken(target).operationUpgrade(     abi.decode(data, (uint256 amount) )\"}},\"title\":\"Batch operation library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":\"BatchOperation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ContextDefinitions": {
					"abi": [],
					"devdoc": {
						"author": "Superfluid",
						"kind": "dev",
						"methods": {},
						"title": "Context definitions library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":3374:4562  library ContextDefinitions {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":3374:4562  library ContextDefinitions {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208270ef9aadecf33d3d7d152cce676b4433f36a1dfc2063cb0bdbb40e041d332764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208270ef9aadecf33d3d7d152cce676b4433f36a1dfc2063cb0bdbb40e041d332764736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 PUSH17 0xEF9AADECF33D3D7D152CCE676B4433F36A SAR 0xFC KECCAK256 PUSH4 0xCB0BDBB4 0xE DIV SAR CALLER 0x27 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "3374:1188:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208270ef9aadecf33d3d7d152cce676b4433f36a1dfc2063cb0bdbb40e041d332764736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 PUSH17 0xEF9AADECF33D3D7D152CCE676B4433F36A SAR 0xFC KECCAK256 PUSH4 0xCB0BDBB4 0xE DIV SAR CALLER 0x27 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "3374:1188:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"decodeCallInfo(uint256)": "infinite",
								"encodeCallInfo(uint8,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 4562,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208270ef9aadecf33d3d7d152cce676b4433f36a1dfc2063cb0bdbb40e041d332764736f6c63430008120033",
									".code": [
										{
											"begin": 3374,
											"end": 4562,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 4562,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 4562,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 4562,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3374,
											"end": 4562,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 4562,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 4562,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 4562,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 4562,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC777/IERC777.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
								"contracts/OurSuperToken.sol",
								"contracts/base/SuperTokenBase.sol",
								"contracts/base/SuperTokenStorage.sol",
								"contracts/base/UUPSProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Context definitions library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":\"ContextDefinitions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"FlowOperatorDefinitions": {
					"abi": [],
					"devdoc": {
						"author": "Superfluid",
						"kind": "dev",
						"methods": {},
						"title": "Flow Operator definitions library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":4640:5582  library FlowOperatorDefinitions {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":4640:5582  library FlowOperatorDefinitions {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e28a44be77ca23d77fec30066dc5708e400e9937ae51f51ab2e214f60a1f00f364736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e28a44be77ca23d77fec30066dc5708e400e9937ae51f51ab2e214f60a1f00f364736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 DUP11 PREVRANDAO 0xBE PUSH24 0xCA23D77FEC30066DC5708E400E9937AE51F51AB2E214F60A 0x1F STOP RETURN PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "4640:942:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e28a44be77ca23d77fec30066dc5708e400e9937ae51f51ab2e214f60a1f00f364736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 DUP11 PREVRANDAO 0xBE PUSH24 0xCA23D77FEC30066DC5708E400E9937AE51F51AB2E214F60A 0x1F STOP RETURN PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "4640:942:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"isPermissionsClean(uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4640,
									"end": 5582,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e28a44be77ca23d77fec30066dc5708e400e9937ae51f51ab2e214f60a1f00f364736f6c63430008120033",
									".code": [
										{
											"begin": 4640,
											"end": 5582,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 5582,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 5582,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 5582,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4640,
											"end": 5582,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4640,
											"end": 5582,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 5582,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 5582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 5582,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC777/IERC777.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
								"contracts/OurSuperToken.sol",
								"contracts/base/SuperTokenBase.sol",
								"contracts/base/SuperTokenStorage.sol",
								"contracts/base/UUPSProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Flow Operator definitions library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":\"FlowOperatorDefinitions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SuperAppDefinitions": {
					"abi": [],
					"devdoc": {
						"author": "Superfluid",
						"kind": "dev",
						"methods": {},
						"title": "Super app definitions library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":132:3304  library SuperAppDefinitions {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":132:3304  library SuperAppDefinitions {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220844747de52a2e0a019316d608b2339d4ad588a581a21362fc17e398c23ea746b64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220844747de52a2e0a019316d608b2339d4ad588a581a21362fc17e398c23ea746b64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 SELFBALANCE SELFBALANCE 0xDE MSTORE LOG2 0xE0 LOG0 NOT BALANCE PUSH14 0x608B2339D4AD588A581A21362FC1 PUSH31 0x398C23EA746B64736F6C634300081200330000000000000000000000000000 ",
							"sourceMap": "132:3172:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220844747de52a2e0a019316d608b2339d4ad588a581a21362fc17e398c23ea746b64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 SELFBALANCE SELFBALANCE 0xDE MSTORE LOG2 0xE0 LOG0 NOT BALANCE PUSH14 0x608B2339D4AD588A581A21362FC1 PUSH31 0x398C23EA746B64736F6C634300081200330000000000000000000000000000 ",
							"sourceMap": "132:3172:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getAppCallbackLevel(uint256)": "infinite",
								"isAppJailed(uint256)": "infinite",
								"isConfigWordClean(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 132,
									"end": 3304,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220844747de52a2e0a019316d608b2339d4ad588a581a21362fc17e398c23ea746b64736f6c63430008120033",
									".code": [
										{
											"begin": 132,
											"end": 3304,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 132,
											"end": 3304,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 132,
											"end": 3304,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 132,
											"end": 3304,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 132,
											"end": 3304,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 3304,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 132,
											"end": 3304,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 3304,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 132,
											"end": 3304,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC777/IERC777.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
								"contracts/OurSuperToken.sol",
								"contracts/base/SuperTokenBase.sol",
								"contracts/base/SuperTokenStorage.sol",
								"contracts/base/UUPSProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Super app definitions library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":\"SuperAppDefinitions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SuperfluidGovernanceConfigs": {
					"abi": [],
					"devdoc": {
						"author": "Superfluid",
						"kind": "dev",
						"methods": {},
						"title": "Superfluid governance configs library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":7429:8916  library SuperfluidGovernanceConfigs {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":7429:8916  library SuperfluidGovernanceConfigs {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d5f67b6aa17faaf945da28660c287f9d2157643d9f832adc3c18504a0426fc6164736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d5f67b6aa17faaf945da28660c287f9d2157643d9f832adc3c18504a0426fc6164736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xF6 PUSH28 0x6AA17FAAF945DA28660C287F9D2157643D9F832ADC3C18504A0426FC PUSH2 0x6473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "7429:1487:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d5f67b6aa17faaf945da28660c287f9d2157643d9f832adc3c18504a0426fc6164736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xF6 PUSH28 0x6AA17FAAF945DA28660C287F9D2157643D9F832ADC3C18504A0426FC PUSH2 0x6473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "7429:1487:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"decodePPPConfig(uint256)": "infinite",
								"getAppFactoryConfigKey(address)": "infinite",
								"getAppRegistrationConfigKey(address,string memory)": "infinite",
								"getTrustedForwarderConfigKey(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7429,
									"end": 8916,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d5f67b6aa17faaf945da28660c287f9d2157643d9f832adc3c18504a0426fc6164736f6c63430008120033",
									".code": [
										{
											"begin": 7429,
											"end": 8916,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 7429,
											"end": 8916,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 7429,
											"end": 8916,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7429,
											"end": 8916,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7429,
											"end": 8916,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7429,
											"end": 8916,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7429,
											"end": 8916,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7429,
											"end": 8916,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7429,
											"end": 8916,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC777/IERC777.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
								"contracts/OurSuperToken.sol",
								"contracts/base/SuperTokenBase.sol",
								"contracts/base/SuperTokenStorage.sol",
								"contracts/base/UUPSProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Superfluid governance configs library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":\"SuperfluidGovernanceConfigs\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
				"ISuperAgreement": {
					"abi": [
						{
							"inputs": [],
							"name": "agreementType",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluidToken",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "realtimeBalanceOf",
							"outputs": [
								{
									"internalType": "int256",
									"name": "dynamicBalance",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "deposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "owedDeposit",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Superfluid",
						"kind": "dev",
						"methods": {
							"agreementType()": {
								"details": "Get the type of the agreement class"
							},
							"realtimeBalanceOf(address,address,uint256)": {
								"details": "Calculate the real-time balance for the account of this agreement class",
								"params": {
									"account": "Account the state belongs to",
									"time": "Time used for the calculation"
								},
								"returns": {
									"deposit": "Account deposit amount of this agreement",
									"dynamicBalance": "Dynamic balance portion of real-time balance of this agreement",
									"owedDeposit": "Account owed deposit amount of this agreement"
								}
							}
						},
						"title": "Super agreement interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"agreementType()": "7730599e",
							"realtimeBalanceOf(address,address,uint256)": "9b2e48bc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"agreementType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"dynamicBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{\"agreementType()\":{\"details\":\"Get the type of the agreement class\"},\"realtimeBalanceOf(address,address,uint256)\":{\"details\":\"Calculate the real-time balance for the account of this agreement class\",\"params\":{\"account\":\"Account the state belongs to\",\"time\":\"Time used for the calculation\"},\"returns\":{\"deposit\":\"Account deposit amount of this agreement\",\"dynamicBalance\":\"Dynamic balance portion of real-time balance of this agreement\",\"owedDeposit\":\"Account owed deposit amount of this agreement\"}}},\"title\":\"Super agreement interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":\"ISuperAgreement\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
				"ISuperApp": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "agreementId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "agreementData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "cbdata",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "afterAgreementCreated",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "newCtx",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "agreementId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "agreementData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "cbdata",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "afterAgreementTerminated",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "newCtx",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "agreementId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "agreementData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "cbdata",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "afterAgreementUpdated",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "newCtx",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "agreementId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "agreementData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "beforeAgreementCreated",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "cbdata",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "agreementId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "agreementData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "beforeAgreementTerminated",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "cbdata",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "agreementId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "agreementData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "beforeAgreementUpdated",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "cbdata",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Superfluid",
						"details": "Be aware of the app being jailed, when the word permitted is used.",
						"kind": "dev",
						"methods": {
							"afterAgreementCreated(address,address,bytes32,bytes,bytes,bytes)": {
								"custom:note": " - State changes is permitted. - Only revert with a \"reason\" is permitted.",
								"details": "Callback after a new agreement is created.",
								"params": {
									"agreementClass": "The agreement class address.",
									"agreementData": "The agreement data (non-compressed)",
									"agreementId": "The agreementId",
									"cbdata": "The data returned from the before-hook callback.",
									"ctx": "The context data.",
									"superToken": "The super token used for the agreement."
								},
								"returns": {
									"newCtx": "The current context of the transaction."
								}
							},
							"afterAgreementTerminated(address,address,bytes32,bytes,bytes,bytes)": {
								"custom:note": " - State changes is permitted. - Revert is not permitted.",
								"details": "Callback after a new agreement is terminated.",
								"params": {
									"agreementClass": "The agreement class address.",
									"agreementData": "The agreement data (non-compressed)",
									"agreementId": "The agreementId",
									"cbdata": "The data returned from the before-hook callback.",
									"ctx": "The context data.",
									"superToken": "The super token used for the agreement."
								},
								"returns": {
									"newCtx": "The current context of the transaction."
								}
							},
							"afterAgreementUpdated(address,address,bytes32,bytes,bytes,bytes)": {
								"custom:note": " - State changes is permitted. - Only revert with a \"reason\" is permitted.",
								"details": "Callback after a new agreement is updated.",
								"params": {
									"agreementClass": "The agreement class address.",
									"agreementData": "The agreement data (non-compressed)",
									"agreementId": "The agreementId",
									"cbdata": "The data returned from the before-hook callback.",
									"ctx": "The context data.",
									"superToken": "The super token used for the agreement."
								},
								"returns": {
									"newCtx": "The current context of the transaction."
								}
							},
							"beforeAgreementCreated(address,address,bytes32,bytes,bytes)": {
								"custom:note": " - It will be invoked with `staticcall`, no state changes are permitted. - Only revert with a \"reason\" is permitted.",
								"details": "Callback before a new agreement is created.",
								"params": {
									"agreementClass": "The agreement class address.",
									"agreementData": "The agreement data (non-compressed)",
									"agreementId": "The agreementId",
									"ctx": "The context data.",
									"superToken": "The super token used for the agreement."
								},
								"returns": {
									"cbdata": "A free format in memory data the app can use to pass          arbitary information to the after-hook callback."
								}
							},
							"beforeAgreementTerminated(address,address,bytes32,bytes,bytes)": {
								"custom:note": " - It will be invoked with `staticcall`, no state changes are permitted. - Revert is not permitted.",
								"details": "Callback before a new agreement is terminated.",
								"params": {
									"agreementClass": "The agreement class address.",
									"agreementData": "The agreement data (non-compressed)",
									"agreementId": "The agreementId",
									"ctx": "The context data.",
									"superToken": "The super token used for the agreement."
								},
								"returns": {
									"cbdata": "A free format in memory data the app can use to pass arbitary information to the after-hook callback."
								}
							},
							"beforeAgreementUpdated(address,address,bytes32,bytes,bytes)": {
								"custom:note": " - It will be invoked with `staticcall`, no state changes are permitted. - Only revert with a \"reason\" is permitted.",
								"details": "Callback before a new agreement is updated.",
								"params": {
									"agreementClass": "The agreement class address.",
									"agreementData": "The agreement data (non-compressed)",
									"agreementId": "The agreementId",
									"ctx": "The context data.",
									"superToken": "The super token used for the agreement."
								},
								"returns": {
									"cbdata": "A free format in memory data the app can use to pass          arbitary information to the after-hook callback."
								}
							}
						},
						"title": "SuperApp interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"afterAgreementCreated(address,address,bytes32,bytes,bytes,bytes)": "d86ed3e5",
							"afterAgreementTerminated(address,address,bytes32,bytes,bytes,bytes)": "53c11f99",
							"afterAgreementUpdated(address,address,bytes32,bytes,bytes,bytes)": "230dbd29",
							"beforeAgreementCreated(address,address,bytes32,bytes,bytes)": "30d9c915",
							"beforeAgreementTerminated(address,address,bytes32,bytes,bytes)": "5f9e7d77",
							"beforeAgreementUpdated(address,address,bytes32,bytes,bytes)": "884d1f40"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"afterAgreementCreated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"afterAgreementTerminated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"afterAgreementUpdated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"beforeAgreementCreated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"beforeAgreementTerminated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"beforeAgreementUpdated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"Be aware of the app being jailed, when the word permitted is used.\",\"kind\":\"dev\",\"methods\":{\"afterAgreementCreated(address,address,bytes32,bytes,bytes,bytes)\":{\"custom:note\":\" - State changes is permitted. - Only revert with a \\\"reason\\\" is permitted.\",\"details\":\"Callback after a new agreement is created.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"cbdata\":\"The data returned from the before-hook callback.\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"newCtx\":\"The current context of the transaction.\"}},\"afterAgreementTerminated(address,address,bytes32,bytes,bytes,bytes)\":{\"custom:note\":\" - State changes is permitted. - Revert is not permitted.\",\"details\":\"Callback after a new agreement is terminated.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"cbdata\":\"The data returned from the before-hook callback.\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"newCtx\":\"The current context of the transaction.\"}},\"afterAgreementUpdated(address,address,bytes32,bytes,bytes,bytes)\":{\"custom:note\":\" - State changes is permitted. - Only revert with a \\\"reason\\\" is permitted.\",\"details\":\"Callback after a new agreement is updated.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"cbdata\":\"The data returned from the before-hook callback.\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"newCtx\":\"The current context of the transaction.\"}},\"beforeAgreementCreated(address,address,bytes32,bytes,bytes)\":{\"custom:note\":\" - It will be invoked with `staticcall`, no state changes are permitted. - Only revert with a \\\"reason\\\" is permitted.\",\"details\":\"Callback before a new agreement is created.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"cbdata\":\"A free format in memory data the app can use to pass          arbitary information to the after-hook callback.\"}},\"beforeAgreementTerminated(address,address,bytes32,bytes,bytes)\":{\"custom:note\":\" - It will be invoked with `staticcall`, no state changes are permitted. - Revert is not permitted.\",\"details\":\"Callback before a new agreement is terminated.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"cbdata\":\"A free format in memory data the app can use to pass arbitary information to the after-hook callback.\"}},\"beforeAgreementUpdated(address,address,bytes32,bytes,bytes)\":{\"custom:note\":\" - It will be invoked with `staticcall`, no state changes are permitted. - Only revert with a \\\"reason\\\" is permitted.\",\"details\":\"Callback before a new agreement is updated.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"cbdata\":\"A free format in memory data the app can use to pass          arbitary information to the after-hook callback.\"}}},\"title\":\"SuperApp interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":\"ISuperApp\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x6cc4b0724d977190c7441dfc3be6c6e48b43b555c3370af32ef5b6600f15f53f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3e89c944642772a42429f21a11017b57deb98a9198f8e4f8749f00aaee71299e\",\"dweb:/ipfs/QmaSv9GvqikcGHJ3tcwATDHSpQw6mfnHPDtcfqcZSS7LF6\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0x2ccec11f964b165f64e453192793991bf28e1054069b6f709a39849a8286aeb4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://edbaf6db0b9c6803dcdb7c91a2ddbdba503a41ecc5cecf9c27a43643669bfff1\",\"dweb:/ipfs/QmYpf7XFKrnB2ZAPf8cDqfvZDfyoxMHA1x2FQSYzDFE3KZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x316aa6cd16167569d5ee47fb2e4673b1def2117c7ea56969290ab6aec97cd263\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a5eb13acce613a227c2c2b3da2b88ad6361c9e541ca59ccee0bb5cf42cffccc6\",\"dweb:/ipfs/QmceA9RWHL1BWk4cPnYY55FjAdsEi1LfXrC11RbF8Wb8eW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64\",\"dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229\",\"dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
				"ISuperToken": {
					"abi": [
						{
							"inputs": [],
							"name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_TOKEN_ONLY_HOST",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_TOKEN_ONLY_LISTED_AGREEMENT",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_ONLY_HOST",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_ONLY_SELF",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"name": "AgreementCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "penaltyAccount",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "rewardAccount",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"name": "AgreementLiquidated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "liquidatorAccount",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "penaltyAccount",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "bondAccount",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bailoutAmount",
									"type": "uint256"
								}
							],
							"name": "AgreementLiquidatedBy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "liquidatorAccount",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "targetAccount",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "rewardAmountReceiver",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "targetAccountBalanceDelta",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "liquidationTypeData",
									"type": "bytes"
								}
							],
							"name": "AgreementLiquidatedV2",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "slotId",
									"type": "uint256"
								}
							],
							"name": "AgreementStateUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "AgreementTerminated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"name": "AgreementUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "AuthorizedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "bailoutAccount",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bailoutAmount",
									"type": "uint256"
								}
							],
							"name": "Bailout",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Burned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "RevokedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Sent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokenDowngraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokenUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "authorizeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"name": "createAgreement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultOperators",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "downgrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getAccountActiveAgreements",
							"outputs": [
								{
									"internalType": "contract ISuperAgreement[]",
									"name": "activeAgreements",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "dataLength",
									"type": "uint256"
								}
							],
							"name": "getAgreementData",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "slotId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "dataLength",
									"type": "uint256"
								}
							],
							"name": "getAgreementStateSlot",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "slotData",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHost",
							"outputs": [
								{
									"internalType": "address",
									"name": "host",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getUnderlyingToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "tokenAddr",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "granularity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "underlyingToken",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "underlyingDecimals",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "n",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "s",
									"type": "string"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "isAccountCritical",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isCritical",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAccountCriticalNow",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isCritical",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "isAccountSolvent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isSolvent",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAccountSolventNow",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isSolvent",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "isOperatorFor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "liquidationTypeData",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "liquidatorAccount",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "useDefaultRewardAccount",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "targetAccount",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								},
								{
									"internalType": "int256",
									"name": "targetAccountBalanceDelta",
									"type": "int256"
								}
							],
							"name": "makeLiquidationPayoutsV2",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "operationApprove",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "operationDowngrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "operationTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "operationUpgrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorSend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "realtimeBalanceOf",
							"outputs": [
								{
									"internalType": "int256",
									"name": "availableBalance",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "deposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "owedDeposit",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "realtimeBalanceOfNow",
							"outputs": [
								{
									"internalType": "int256",
									"name": "availableBalance",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "deposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "owedDeposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "revokeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "selfApproveFor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								}
							],
							"name": "selfBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								}
							],
							"name": "selfMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "selfTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "send",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "int256",
									"name": "delta",
									"type": "int256"
								}
							],
							"name": "settleBalance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "dataLength",
									"type": "uint256"
								}
							],
							"name": "terminateAgreement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "transferAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"name": "updateAgreementData",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "slotId",
									"type": "uint256"
								},
								{
									"internalType": "bytes32[]",
									"name": "slotData",
									"type": "bytes32[]"
								}
							],
							"name": "updateAgreementStateSlot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "upgrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Superfluid",
						"events": {
							"AgreementCreated(address,bytes32,bytes32[])": {
								"details": "Agreement created event",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"data": "Agreement data",
									"id": "Agreement ID"
								}
							},
							"AgreementLiquidated(address,bytes32,address,address,uint256)": {
								"custom:deprecated": "Use AgreementLiquidatedV2 instead",
								"details": "Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"id": "Agreement ID",
									"penaltyAccount": "Account of the agreement to be penalized",
									"rewardAccount": "Account that collect the reward",
									"rewardAmount": "Amount of liquidation reward"
								}
							},
							"AgreementLiquidatedBy(address,address,bytes32,address,address,uint256,uint256)": {
								"custom:deprecated": "Use AgreementLiquidatedV2 instead",
								"custom:note": " Reward account rule: - if bailout is equal to 0, then   - the bondAccount will get the rewardAmount,   - the penaltyAccount will pay for the rewardAmount. - if bailout is larger than 0, then   - the liquidatorAccount will get the rewardAmouont,   - the bondAccount will pay for both the rewardAmount and bailoutAmount,   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.",
								"details": "Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"bailoutAmount": "Amount of liquidation bailouot",
									"bondAccount": "Account that collect the reward or bailout accounts",
									"id": "Agreement ID",
									"liquidatorAccount": "Account of the agent that performed the liquidation.",
									"penaltyAccount": "Account of the agreement to be penalized",
									"rewardAmount": "Amount of liquidation reward"
								}
							},
							"AgreementLiquidatedV2(address,bytes32,address,address,address,uint256,int256,bytes)": {
								"custom:note": " Reward account rule: - if the agreement is liquidated during the PIC period   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount   - the targetAccount will pay for the rewardAmount - if the agreement is liquidated after the PIC period AND the targetAccount is solvent   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)   - the targetAccount will pay for the rewardAmount - if the targetAccount is insolvent   - the liquidatorAccount will get the rewardAmount (single deposit)   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount   - the targetAccount will receive the bailoutAmount",
								"details": "Agreement liquidation event v2 (including agent account)",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"id": "Agreement ID",
									"liquidationTypeData": "The encoded liquidation type data including the version (how to decode)",
									"liquidatorAccount": "Address of the executor of the liquidation",
									"rewardAmount": "The amount the reward recipient account balance should change by",
									"rewardAmountReceiver": "Account that collects the reward or bails out insolvent accounts",
									"targetAccount": "Account of the stream sender",
									"targetAccountBalanceDelta": "The amount the sender account balance should change by"
								}
							},
							"AgreementStateUpdated(address,address,uint256)": {
								"details": "Agreement account state updated event",
								"params": {
									"account": "Account updated",
									"agreementClass": "Contract address of the agreement",
									"slotId": "slot id of the agreement state"
								}
							},
							"AgreementTerminated(address,bytes32)": {
								"details": "Agreement terminated event",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"id": "Agreement ID"
								}
							},
							"AgreementUpdated(address,bytes32,bytes32[])": {
								"details": "Agreement updated event",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"data": "Agreement data",
									"id": "Agreement ID"
								}
							},
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"AuthorizedOperator(address,address)": {
								"details": "Emitted when `operator` is made operator for `tokenHolder`."
							},
							"Bailout(address,uint256)": {
								"custom:deprecated": "Use AgreementLiquidatedV2 instead",
								"details": "System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)",
								"params": {
									"bailoutAccount": "Account that bailout the penalty account",
									"bailoutAmount": "Amount of account bailout"
								}
							},
							"Burned(address,address,uint256,bytes,bytes)": {
								"details": "Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event."
							},
							"Minted(address,address,uint256,bytes,bytes)": {
								"details": "Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event."
							},
							"RevokedOperator(address,address)": {
								"details": "Emitted when `operator` is revoked its operator status for `tokenHolder`."
							},
							"TokenDowngraded(address,uint256)": {
								"details": "Token downgrade event",
								"params": {
									"account": "Account whose tokens are upgraded",
									"amount": "Amount of tokens downgraded"
								}
							},
							"TokenUpgraded(address,uint256)": {
								"details": "Token upgrade event",
								"params": {
									"account": "Account where tokens are upgraded to",
									"amount": "Amount of tokens upgraded (in 18 decimals)"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be         allowed to spend on behalf of `owner` through {transferFrom}. This is         zero by default."
							},
							"approve(address,uint256)": {
								"custom:emits": "an {Approval} event.",
								"custom:note": "Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.",
								"returns": {
									"_0": "Returns Success a boolean value indicating whether the operation succeeded."
								}
							},
							"authorizeOperator(address)": {
								"custom:emits": "an {AuthorizedOperator} event.",
								"custom:requirements": " - `operator` cannot be calling address.",
								"details": "Make an account an operator of the caller. See {isOperatorFor}."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by an account (`owner`)."
							},
							"burn(uint256,bytes)": {
								"custom:emits": "a {Burned} event.",
								"custom:requirements": " - the caller must have at least `amount` tokens.",
								"details": "Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}."
							},
							"createAgreement(bytes32,bytes32[])": {
								"details": "Create a new agreement",
								"params": {
									"data": "Agreement data",
									"id": "Agreement ID"
								}
							},
							"decimals()": {
								"custom:note": "SuperToken always uses 18 decimals. This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.",
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called."
							},
							"decreaseAllowance(address,uint256)": {
								"custom:emits": "an {Approval} event indicating the updated allowance.",
								"custom:requirements": " - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.",
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}."
							},
							"defaultOperators()": {
								"details": "Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."
							},
							"downgrade(uint256)": {
								"details": "Downgrade SuperToken to ERC20.It will call transfer to send tokens",
								"params": {
									"amount": "Number of tokens to be downgraded"
								}
							},
							"getAccountActiveAgreements(address)": {
								"details": "An active agreement is one that has state for the account",
								"params": {
									"account": "Account to query"
								},
								"returns": {
									"activeAgreements": "List of accounts that have non-zero states for the account"
								}
							},
							"getAgreementData(address,bytes32,uint256)": {
								"details": "Get data of the agreement",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"id": "Agreement ID"
								},
								"returns": {
									"data": "Data of the agreement"
								}
							},
							"getAgreementStateSlot(address,address,uint256,uint256)": {
								"details": "Get data of the slot of the state of an agreement",
								"params": {
									"account": "Account to query",
									"agreementClass": "Contract address of the agreement",
									"dataLength": "length of the state data",
									"slotId": "slot id of the state"
								}
							},
							"getHost()": {
								"details": "Get superfluid host contract address"
							},
							"getUnderlyingToken()": {
								"details": "Return the underlying token contract",
								"returns": {
									"tokenAddr": "Underlying token address"
								}
							},
							"granularity()": {
								"custom:note": "For super token contracts, this value is always 1",
								"details": "Returns the smallest part of the token that is not divisible. This         means all token operations (creation, movement and destruction) must have         amounts that are a multiple of this number."
							},
							"increaseAllowance(address,uint256)": {
								"custom:emits": "an {Approval} event indicating the updated allowance.",
								"custom:requirements": " - `spender` cannot be the zero address.",
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}."
							},
							"initialize(address,uint8,string,string)": {
								"details": "Initialize the contract"
							},
							"isAccountCritical(address,uint256)": {
								"details": "A critical account is when availableBalance < 0",
								"params": {
									"account": "The account to check",
									"timestamp": "The time we'd like to check if the account is critical (should use future)"
								},
								"returns": {
									"isCritical": "Whether the account is critical"
								}
							},
							"isAccountCriticalNow(address)": {
								"details": "A critical account is when availableBalance < 0",
								"params": {
									"account": "The account to check"
								},
								"returns": {
									"isCritical": "Whether the account is critical"
								}
							},
							"isAccountSolvent(address,uint256)": {
								"details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
								"params": {
									"account": "The account to check",
									"timestamp": "The time we'd like to check if the account is solvent (should use future)"
								},
								"returns": {
									"isSolvent": "True if the account is solvent, false otherwise"
								}
							},
							"isAccountSolventNow(address)": {
								"details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
								"params": {
									"account": "The account to check"
								},
								"returns": {
									"isSolvent": "True if the account is solvent, false otherwise"
								}
							},
							"isOperatorFor(address,address)": {
								"details": "Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."
							},
							"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": {
								"custom:modifiers": "  - onlyAgreement",
								"custom:note": " - If a bailout is required (bailoutAmount > 0)   - the actual reward (single deposit) goes to the executor,   - while the reward account becomes the bailout account   - total bailout include: bailout amount + reward amount   - the targetAccount will be bailed out - If a bailout is not required   - the targetAccount will pay the rewardAmount   - the liquidator (reward account in PIC period) will receive the rewardAmount",
								"details": "Make liquidation payouts (v2)",
								"params": {
									"id": "Agreement ID",
									"liquidationTypeData": "Data regarding the version of the liquidation schema and the type",
									"liquidatorAccount": "Address of the executor of the liquidation",
									"rewardAmount": "The amount the rewarded account will receive",
									"targetAccount": "Account to be liquidated",
									"targetAccountBalanceDelta": "The delta amount the target account balance should change by",
									"useDefaultRewardAccount": "Whether or not the default reward account receives the rewardAmount"
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"operationApprove(address,address,uint256)": {
								"custom:modifiers": "  - onlyHost",
								"details": "Perform ERC20 approve by host contract.",
								"params": {
									"account": "The account owner to be approved.",
									"amount": "Number of tokens to be approved.",
									"spender": "The spender of account owner's funds."
								}
							},
							"operationDowngrade(address,uint256)": {
								"custom:modifiers": "  - onlyHost",
								"details": "Downgrade ERC20 to SuperToken by host contract.",
								"params": {
									"account": "The account to be changed.",
									"amount": "Number of tokens to be downgraded (in 18 decimals)"
								}
							},
							"operationTransferFrom(address,address,address,uint256)": {
								"custom:modifiers": "  - onlyHost",
								"details": "Perform ERC20 transfer from by host contract.",
								"params": {
									"account": "The account to spend sender's funds.",
									"amount": "Number of tokens to be transferred.",
									"recipient": "The recipient of thefunds.",
									"spender": "The account where the funds is sent from."
								}
							},
							"operationUpgrade(address,uint256)": {
								"custom:modifiers": "  - onlyHost",
								"details": "Upgrade ERC20 to SuperToken by host contract.",
								"params": {
									"account": "The account to be changed.",
									"amount": "Number of tokens to be upgraded (in 18 decimals)"
								}
							},
							"operatorBurn(address,uint256,bytes,bytes)": {
								"custom:emits": "a {Burned} event.",
								"custom:requirements": " - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.",
								"details": "Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}."
							},
							"operatorSend(address,address,uint256,bytes,bytes)": {
								"custom:emits": "a {Sent} event.",
								"custom:requirements": " - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.",
								"details": "Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}."
							},
							"realtimeBalanceOf(address,uint256)": {
								"details": "Calculate the real balance of a user, taking in consideration all agreements of the account",
								"params": {
									"account": "for the query",
									"timestamp": "Time of balance"
								},
								"returns": {
									"availableBalance": "Real-time balance",
									"deposit": "Account deposit",
									"owedDeposit": "Account owed Deposit"
								}
							},
							"realtimeBalanceOfNow(address)": {
								"details": "realtimeBalanceOf with timestamp equals to block timestamp",
								"params": {
									"account": "for the query"
								},
								"returns": {
									"availableBalance": "Real-time balance",
									"deposit": "Account deposit",
									"owedDeposit": "Account owed Deposit"
								}
							},
							"revokeOperator(address)": {
								"custom:emits": "a {RevokedOperator} event.",
								"custom:requirements": " - `operator` cannot be calling address.",
								"details": "Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}."
							},
							"selfApproveFor(address,address,uint256)": {
								"custom:modifiers": "  - onlySelf",
								"details": "Give `spender`, `amount` allowance to spend the tokens of `account`."
							},
							"selfBurn(address,uint256,bytes)": {
								"custom:modifiers": "  - onlySelf",
								"details": "Burn existing tokens for the account"
							},
							"selfMint(address,uint256,bytes)": {
								"custom:modifiers": "  - onlySelf",
								"details": "Mint new tokens for the account"
							},
							"selfTransferFrom(address,address,address,uint256)": {
								"custom:modifiers": "  - onlySelf",
								"details": "Transfer `amount` tokens from the `sender` to `recipient`. If `spender` isn't the same as `sender`, checks if `spender` has allowance to spend tokens of `sender`."
							},
							"send(address,uint256,bytes)": {
								"custom:emits": "a {Sent} event.",
								"custom:requirements": " - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.",
								"details": "Moves `amount` tokens from the caller's account to `recipient`.If send or receive hooks are registered for the caller and `recipient`,      the corresponding functions will be called with `data` and empty      `operatorData`. See {IERC777Sender} and {IERC777Recipient}."
							},
							"settleBalance(address,int256)": {
								"custom:modifiers": "  - onlyAgreement",
								"details": "The agreement needs to make sure that the balance delta is balanced afterwards",
								"params": {
									"account": "Account to query.",
									"delta": "Amount of balance delta to be settled"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"terminateAgreement(bytes32,uint256)": {
								"details": "Close the agreement",
								"params": {
									"id": "Agreement ID"
								}
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"custom:emits": "a {Transfer} event.",
								"details": "Moves `amount` tokens from the caller's account to `recipient`.",
								"returns": {
									"_0": "Returns Success a boolean value indicating whether the operation succeeded."
								}
							},
							"transferAll(address)": {
								"details": "Transfer all available balance from `msg.sender` to `recipient`"
							},
							"transferFrom(address,address,uint256)": {
								"custom:emits": "a {Transfer} event.",
								"details": "Moves `amount` tokens from `sender` to `recipient` using the         allowance mechanism. `amount` is then deducted from the caller's         allowance.",
								"returns": {
									"_0": "Returns Success a boolean value indicating whether the operation succeeded."
								}
							},
							"updateAgreementData(bytes32,bytes32[])": {
								"details": "Create a new agreement",
								"params": {
									"data": "Agreement data",
									"id": "Agreement ID"
								}
							},
							"updateAgreementStateSlot(address,uint256,bytes32[])": {
								"custom:note": " - To clear the storage out, provide zero-ed array of intended length",
								"details": "Update agreement state slot",
								"params": {
									"account": "Account to be updated"
								}
							},
							"upgrade(uint256)": {
								"custom:note": "It will use `transferFrom` to get tokens. Before calling this function you should `approve` this contract",
								"details": "Upgrade ERC20 to SuperToken.",
								"params": {
									"amount": "Number of tokens to be upgraded (in 18 decimals)"
								}
							},
							"upgradeTo(address,uint256,bytes)": {
								"custom:note": "It will use `transferFrom` to get tokens. Before calling this function you should `approve` this contract",
								"details": "Upgrade ERC20 to SuperToken and transfer immediately",
								"params": {
									"amount": "Number of tokens to be upgraded (in 18 decimals)",
									"data": "User data for the TokensRecipient callback",
									"to": "The account to received upgraded tokens"
								}
							}
						},
						"title": "Super token (Superfluid Token + ERC20 + ERC777) interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"authorizeOperator(address)": "959b8c3f",
							"balanceOf(address)": "70a08231",
							"burn(uint256,bytes)": "fe9d9303",
							"createAgreement(bytes32,bytes32[])": "12a6a3f8",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"defaultOperators()": "06e48538",
							"downgrade(uint256)": "11bcc81e",
							"getAccountActiveAgreements(address)": "386fa221",
							"getAgreementData(address,bytes32,uint256)": "6c2d9f2f",
							"getAgreementStateSlot(address,address,uint256,uint256)": "4b61cc33",
							"getHost()": "20bc4425",
							"getUnderlyingToken()": "ee719bc8",
							"granularity()": "556f0dc7",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize(address,uint8,string,string)": "42fe0980",
							"isAccountCritical(address,uint256)": "d9d078d6",
							"isAccountCriticalNow(address)": "79359f6f",
							"isAccountSolvent(address,uint256)": "b84cdd4a",
							"isAccountSolventNow(address)": "bb0d196e",
							"isOperatorFor(address,address)": "d95b6371",
							"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": "1863e809",
							"name()": "06fdde03",
							"operationApprove(address,address,uint256)": "62aa5287",
							"operationDowngrade(address,uint256)": "245887fc",
							"operationTransferFrom(address,address,address,uint256)": "16d055d6",
							"operationUpgrade(address,uint256)": "ca789464",
							"operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
							"operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
							"realtimeBalanceOf(address,uint256)": "eb3537cc",
							"realtimeBalanceOfNow(address)": "2ec8eec7",
							"revokeOperator(address)": "fad8b32a",
							"selfApproveFor(address,address,uint256)": "66a12fb6",
							"selfBurn(address,uint256,bytes)": "9d876741",
							"selfMint(address,uint256,bytes)": "c68d4283",
							"selfTransferFrom(address,address,address,uint256)": "41b706be",
							"send(address,uint256,bytes)": "9bd9bbc6",
							"settleBalance(address,int256)": "cf97256d",
							"symbol()": "95d89b41",
							"terminateAgreement(bytes32,uint256)": "27048397",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAll(address)": "a3a7e7f3",
							"transferFrom(address,address,uint256)": "23b872dd",
							"updateAgreementData(bytes32,bytes32[])": "a1b2bf8b",
							"updateAgreementStateSlot(address,uint256,bytes32[])": "090c415e",
							"upgrade(uint256)": "45977d03",
							"upgradeTo(address,uint256,bytes)": "5b9d09cc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_ALREADY_EXISTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_DOES_NOT_EXIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_BURN_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_MOVE_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_LISTED_AGREEMENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_MINT_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NO_UNDERLYING_TOKEN\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_SELF\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidatedBy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardAmountReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"}],\"name\":\"AgreementLiquidatedV2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"}],\"name\":\"AgreementStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"AgreementTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bailoutAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"Bailout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenDowngraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"downgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountActiveAgreements\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"activeAgreements\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementData\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementStateSlot\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnderlyingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"underlyingDecimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"n\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountCritical\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountCriticalNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountSolvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountSolventNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useDefaultRewardAccount\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"}],\"name\":\"makeLiquidationPayoutsV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationDowngrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"realtimeBalanceOfNow\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"selfApproveFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"selfTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"settleBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementStateSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"events\":{\"AgreementCreated(address,bytes32,bytes32[])\":{\"details\":\"Agreement created event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"AgreementLiquidated(address,bytes32,address,address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAccount\":\"Account that collect the reward\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedBy(address,address,bytes32,address,address,uint256,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"custom:note\":\" Reward account rule: - if bailout is equal to 0, then   - the bondAccount will get the rewardAmount,   - the penaltyAccount will pay for the rewardAmount. - if bailout is larger than 0, then   - the liquidatorAccount will get the rewardAmouont,   - the bondAccount will pay for both the rewardAmount and bailoutAmount,   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"bailoutAmount\":\"Amount of liquidation bailouot\",\"bondAccount\":\"Account that collect the reward or bailout accounts\",\"id\":\"Agreement ID\",\"liquidatorAccount\":\"Account of the agent that performed the liquidation.\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedV2(address,bytes32,address,address,address,uint256,int256,bytes)\":{\"custom:note\":\" Reward account rule: - if the agreement is liquidated during the PIC period   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount   - the targetAccount will pay for the rewardAmount - if the agreement is liquidated after the PIC period AND the targetAccount is solvent   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)   - the targetAccount will pay for the rewardAmount - if the targetAccount is insolvent   - the liquidatorAccount will get the rewardAmount (single deposit)   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount   - the targetAccount will receive the bailoutAmount\",\"details\":\"Agreement liquidation event v2 (including agent account)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"liquidationTypeData\":\"The encoded liquidation type data including the version (how to decode)\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the reward recipient account balance should change by\",\"rewardAmountReceiver\":\"Account that collects the reward or bails out insolvent accounts\",\"targetAccount\":\"Account of the stream sender\",\"targetAccountBalanceDelta\":\"The amount the sender account balance should change by\"}},\"AgreementStateUpdated(address,address,uint256)\":{\"details\":\"Agreement account state updated event\",\"params\":{\"account\":\"Account updated\",\"agreementClass\":\"Contract address of the agreement\",\"slotId\":\"slot id of the agreement state\"}},\"AgreementTerminated(address,bytes32)\":{\"details\":\"Agreement terminated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"}},\"AgreementUpdated(address,bytes32,bytes32[])\":{\"details\":\"Agreement updated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"AuthorizedOperator(address,address)\":{\"details\":\"Emitted when `operator` is made operator for `tokenHolder`.\"},\"Bailout(address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"bailoutAccount\":\"Account that bailout the penalty account\",\"bailoutAmount\":\"Amount of account bailout\"}},\"Burned(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"Minted(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"RevokedOperator(address,address)\":{\"details\":\"Emitted when `operator` is revoked its operator status for `tokenHolder`.\"},\"TokenDowngraded(address,uint256)\":{\"details\":\"Token downgrade event\",\"params\":{\"account\":\"Account whose tokens are upgraded\",\"amount\":\"Amount of tokens downgraded\"}},\"TokenUpgraded(address,uint256)\":{\"details\":\"Token upgrade event\",\"params\":{\"account\":\"Account where tokens are upgraded to\",\"amount\":\"Amount of tokens upgraded (in 18 decimals)\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be         allowed to spend on behalf of `owner` through {transferFrom}. This is         zero by default.\"},\"approve(address,uint256)\":{\"custom:emits\":\"an {Approval} event.\",\"custom:note\":\"Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"authorizeOperator(address)\":{\"custom:emits\":\"an {AuthorizedOperator} event.\",\"custom:requirements\":\" - `operator` cannot be calling address.\",\"details\":\"Make an account an operator of the caller. See {isOperatorFor}.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"custom:emits\":\"a {Burned} event.\",\"custom:requirements\":\" - the caller must have at least `amount` tokens.\",\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}.\"},\"createAgreement(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"decimals()\":{\"custom:note\":\"SuperToken always uses 18 decimals. This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\",\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.\"},\"decreaseAllowance(address,uint256)\":{\"custom:emits\":\"an {Approval} event indicating the updated allowance.\",\"custom:requirements\":\" - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\",\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"downgrade(uint256)\":{\"details\":\"Downgrade SuperToken to ERC20.It will call transfer to send tokens\",\"params\":{\"amount\":\"Number of tokens to be downgraded\"}},\"getAccountActiveAgreements(address)\":{\"details\":\"An active agreement is one that has state for the account\",\"params\":{\"account\":\"Account to query\"},\"returns\":{\"activeAgreements\":\"List of accounts that have non-zero states for the account\"}},\"getAgreementData(address,bytes32,uint256)\":{\"details\":\"Get data of the agreement\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"},\"returns\":{\"data\":\"Data of the agreement\"}},\"getAgreementStateSlot(address,address,uint256,uint256)\":{\"details\":\"Get data of the slot of the state of an agreement\",\"params\":{\"account\":\"Account to query\",\"agreementClass\":\"Contract address of the agreement\",\"dataLength\":\"length of the state data\",\"slotId\":\"slot id of the state\"}},\"getHost()\":{\"details\":\"Get superfluid host contract address\"},\"getUnderlyingToken()\":{\"details\":\"Return the underlying token contract\",\"returns\":{\"tokenAddr\":\"Underlying token address\"}},\"granularity()\":{\"custom:note\":\"For super token contracts, this value is always 1\",\"details\":\"Returns the smallest part of the token that is not divisible. This         means all token operations (creation, movement and destruction) must have         amounts that are a multiple of this number.\"},\"increaseAllowance(address,uint256)\":{\"custom:emits\":\"an {Approval} event indicating the updated allowance.\",\"custom:requirements\":\" - `spender` cannot be the zero address.\",\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\"},\"initialize(address,uint8,string,string)\":{\"details\":\"Initialize the contract\"},\"isAccountCritical(address,uint256)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is critical (should use future)\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountCriticalNow(address)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountSolvent(address,uint256)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is solvent (should use future)\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isAccountSolventNow(address)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)\":{\"custom:modifiers\":\"  - onlyAgreement\",\"custom:note\":\" - If a bailout is required (bailoutAmount > 0)   - the actual reward (single deposit) goes to the executor,   - while the reward account becomes the bailout account   - total bailout include: bailout amount + reward amount   - the targetAccount will be bailed out - If a bailout is not required   - the targetAccount will pay the rewardAmount   - the liquidator (reward account in PIC period) will receive the rewardAmount\",\"details\":\"Make liquidation payouts (v2)\",\"params\":{\"id\":\"Agreement ID\",\"liquidationTypeData\":\"Data regarding the version of the liquidation schema and the type\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the rewarded account will receive\",\"targetAccount\":\"Account to be liquidated\",\"targetAccountBalanceDelta\":\"The delta amount the target account balance should change by\",\"useDefaultRewardAccount\":\"Whether or not the default reward account receives the rewardAmount\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"operationApprove(address,address,uint256)\":{\"custom:modifiers\":\"  - onlyHost\",\"details\":\"Perform ERC20 approve by host contract.\",\"params\":{\"account\":\"The account owner to be approved.\",\"amount\":\"Number of tokens to be approved.\",\"spender\":\"The spender of account owner's funds.\"}},\"operationDowngrade(address,uint256)\":{\"custom:modifiers\":\"  - onlyHost\",\"details\":\"Downgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be downgraded (in 18 decimals)\"}},\"operationTransferFrom(address,address,address,uint256)\":{\"custom:modifiers\":\"  - onlyHost\",\"details\":\"Perform ERC20 transfer from by host contract.\",\"params\":{\"account\":\"The account to spend sender's funds.\",\"amount\":\"Number of tokens to be transferred.\",\"recipient\":\"The recipient of thefunds.\",\"spender\":\"The account where the funds is sent from.\"}},\"operationUpgrade(address,uint256)\":{\"custom:modifiers\":\"  - onlyHost\",\"details\":\"Upgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be upgraded (in 18 decimals)\"}},\"operatorBurn(address,uint256,bytes,bytes)\":{\"custom:emits\":\"a {Burned} event.\",\"custom:requirements\":\" - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.\",\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"custom:emits\":\"a {Sent} event.\",\"custom:requirements\":\" - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\",\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\"},\"realtimeBalanceOf(address,uint256)\":{\"details\":\"Calculate the real balance of a user, taking in consideration all agreements of the account\",\"params\":{\"account\":\"for the query\",\"timestamp\":\"Time of balance\"},\"returns\":{\"availableBalance\":\"Real-time balance\",\"deposit\":\"Account deposit\",\"owedDeposit\":\"Account owed Deposit\"}},\"realtimeBalanceOfNow(address)\":{\"details\":\"realtimeBalanceOf with timestamp equals to block timestamp\",\"params\":{\"account\":\"for the query\"},\"returns\":{\"availableBalance\":\"Real-time balance\",\"deposit\":\"Account deposit\",\"owedDeposit\":\"Account owed Deposit\"}},\"revokeOperator(address)\":{\"custom:emits\":\"a {RevokedOperator} event.\",\"custom:requirements\":\" - `operator` cannot be calling address.\",\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}.\"},\"selfApproveFor(address,address,uint256)\":{\"custom:modifiers\":\"  - onlySelf\",\"details\":\"Give `spender`, `amount` allowance to spend the tokens of `account`.\"},\"selfBurn(address,uint256,bytes)\":{\"custom:modifiers\":\"  - onlySelf\",\"details\":\"Burn existing tokens for the account\"},\"selfMint(address,uint256,bytes)\":{\"custom:modifiers\":\"  - onlySelf\",\"details\":\"Mint new tokens for the account\"},\"selfTransferFrom(address,address,address,uint256)\":{\"custom:modifiers\":\"  - onlySelf\",\"details\":\"Transfer `amount` tokens from the `sender` to `recipient`. If `spender` isn't the same as `sender`, checks if `spender` has allowance to spend tokens of `sender`.\"},\"send(address,uint256,bytes)\":{\"custom:emits\":\"a {Sent} event.\",\"custom:requirements\":\" - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\",\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.If send or receive hooks are registered for the caller and `recipient`,      the corresponding functions will be called with `data` and empty      `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\"},\"settleBalance(address,int256)\":{\"custom:modifiers\":\"  - onlyAgreement\",\"details\":\"The agreement needs to make sure that the balance delta is balanced afterwards\",\"params\":{\"account\":\"Account to query.\",\"delta\":\"Amount of balance delta to be settled\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"terminateAgreement(bytes32,uint256)\":{\"details\":\"Close the agreement\",\"params\":{\"id\":\"Agreement ID\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"custom:emits\":\"a {Transfer} event.\",\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"transferAll(address)\":{\"details\":\"Transfer all available balance from `msg.sender` to `recipient`\"},\"transferFrom(address,address,uint256)\":{\"custom:emits\":\"a {Transfer} event.\",\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the         allowance mechanism. `amount` is then deducted from the caller's         allowance.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"updateAgreementData(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"updateAgreementStateSlot(address,uint256,bytes32[])\":{\"custom:note\":\" - To clear the storage out, provide zero-ed array of intended length\",\"details\":\"Update agreement state slot\",\"params\":{\"account\":\"Account to be updated\"}},\"upgrade(uint256)\":{\"custom:note\":\"It will use `transferFrom` to get tokens. Before calling this function you should `approve` this contract\",\"details\":\"Upgrade ERC20 to SuperToken.\",\"params\":{\"amount\":\"Number of tokens to be upgraded (in 18 decimals)\"}},\"upgradeTo(address,uint256,bytes)\":{\"custom:note\":\"It will use `transferFrom` to get tokens. Before calling this function you should `approve` this contract\",\"details\":\"Upgrade ERC20 to SuperToken and transfer immediately\",\"params\":{\"amount\":\"Number of tokens to be upgraded (in 18 decimals)\",\"data\":\"User data for the TokensRecipient callback\",\"to\":\"The account to received upgraded tokens\"}}},\"title\":\"Super token (Superfluid Token + ERC20 + ERC777) interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"This value changes when {approve} or {transferFrom} are called.\"},\"getAccountActiveAgreements(address)\":{\"notice\":\"Get a list of agreements that is active for the account\"},\"isAccountCritical(address,uint256)\":{\"notice\":\"Check if account is critical\"},\"isAccountCriticalNow(address)\":{\"notice\":\"Check if account is critical now (current host.getNow())\"},\"isAccountSolvent(address,uint256)\":{\"notice\":\"Check if account is solvent\"},\"isAccountSolventNow(address)\":{\"notice\":\"Check if account is solvent now\"},\"realtimeBalanceOfNow(address)\":{\"notice\":\"Calculate the realtime balance given the current host.getNow() value\"},\"settleBalance(address,int256)\":{\"notice\":\"Settle balance from an account by the agreement\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":\"ISuperToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x6cc4b0724d977190c7441dfc3be6c6e48b43b555c3370af32ef5b6600f15f53f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3e89c944642772a42429f21a11017b57deb98a9198f8e4f8749f00aaee71299e\",\"dweb:/ipfs/QmaSv9GvqikcGHJ3tcwATDHSpQw6mfnHPDtcfqcZSS7LF6\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0x2ccec11f964b165f64e453192793991bf28e1054069b6f709a39849a8286aeb4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://edbaf6db0b9c6803dcdb7c91a2ddbdba503a41ecc5cecf9c27a43643669bfff1\",\"dweb:/ipfs/QmYpf7XFKrnB2ZAPf8cDqfvZDfyoxMHA1x2FQSYzDFE3KZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x316aa6cd16167569d5ee47fb2e4673b1def2117c7ea56969290ab6aec97cd263\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a5eb13acce613a227c2c2b3da2b88ad6361c9e541ca59ccee0bb5cf42cffccc6\",\"dweb:/ipfs/QmceA9RWHL1BWk4cPnYY55FjAdsEi1LfXrC11RbF8Wb8eW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64\",\"dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229\",\"dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "This value changes when {approve} or {transferFrom} are called."
							},
							"getAccountActiveAgreements(address)": {
								"notice": "Get a list of agreements that is active for the account"
							},
							"isAccountCritical(address,uint256)": {
								"notice": "Check if account is critical"
							},
							"isAccountCriticalNow(address)": {
								"notice": "Check if account is critical now (current host.getNow())"
							},
							"isAccountSolvent(address,uint256)": {
								"notice": "Check if account is solvent"
							},
							"isAccountSolventNow(address)": {
								"notice": "Check if account is solvent now"
							},
							"realtimeBalanceOfNow(address)": {
								"notice": "Calculate the realtime balance given the current host.getNow() value"
							},
							"settleBalance(address,int256)": {
								"notice": "Settle balance from an account by the agreement"
							}
						},
						"version": 1
					}
				}
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
				"ISuperTokenFactory": {
					"abi": [
						{
							"inputs": [],
							"name": "SUPER_TOKEN_FACTORY_ALREADY_EXISTS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_FACTORY_DOES_NOT_EXIST",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_FACTORY_ONLY_HOST",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_FACTORY_UNINITIALIZED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SUPER_TOKEN_FACTORY_ZERO_ADDRESS",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract ISuperToken",
									"name": "token",
									"type": "address"
								}
							],
							"name": "CustomSuperTokenCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract ISuperToken",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SuperTokenCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract ISuperToken",
									"name": "tokenLogic",
									"type": "address"
								}
							],
							"name": "SuperTokenLogicCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_underlyingToken",
									"type": "address"
								}
							],
							"name": "computeCanonicalERC20WrapperAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "superTokenAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isDeployed",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ERC20WithTokenInfo",
									"name": "_underlyingToken",
									"type": "address"
								}
							],
							"name": "createCanonicalERC20Wrapper",
							"outputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ERC20WithTokenInfo",
									"name": "underlyingToken",
									"type": "address"
								},
								{
									"internalType": "enum ISuperTokenFactory.Upgradability",
									"name": "upgradability",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"name": "createERC20Wrapper",
							"outputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "superToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "underlyingToken",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "underlyingDecimals",
									"type": "uint8"
								},
								{
									"internalType": "enum ISuperTokenFactory.Upgradability",
									"name": "upgradability",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"name": "createERC20Wrapper",
							"outputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "superToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_underlyingTokenAddress",
									"type": "address"
								}
							],
							"name": "getCanonicalERC20Wrapper",
							"outputs": [
								{
									"internalType": "address",
									"name": "superTokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHost",
							"outputs": [
								{
									"internalType": "address",
									"name": "host",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSuperTokenLogic",
							"outputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "superToken",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "customSuperTokenProxy",
									"type": "address"
								}
							],
							"name": "initializeCustomSuperToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Superfluid",
						"events": {
							"CustomSuperTokenCreated(address)": {
								"details": "Custom super token created event",
								"params": {
									"token": "Newly created custom super token address"
								}
							},
							"SuperTokenCreated(address)": {
								"details": "Super token created event",
								"params": {
									"token": "Newly created super token address"
								}
							},
							"SuperTokenLogicCreated(address)": {
								"details": "Super token logic created event",
								"params": {
									"tokenLogic": "Token logic address"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"computeCanonicalERC20WrapperAddress(address)": {
								"details": "We return from our canonical list if it already exists, otherwise we compute itnote that this function only computes addresses for SEMI_UPGRADABLE SuperTokens",
								"params": {
									"_underlyingToken": "Underlying ERC20 token address"
								},
								"returns": {
									"isDeployed": "whether the super token is deployed AND set in the canonical mapping",
									"superTokenAddress": "Super token address"
								}
							},
							"createCanonicalERC20Wrapper(address)": {
								"details": "salt for create2 is the keccak256 hash of abi.encode(address(_underlyingToken))",
								"params": {
									"_underlyingToken": "Underlying ERC20 token"
								},
								"returns": {
									"_0": "ISuperToken the created supertoken"
								}
							},
							"createERC20Wrapper(address,uint8,string,string)": {
								"params": {
									"name": "Super token name",
									"symbol": "Super token symbol",
									"underlyingToken": "Underlying ERC20 token",
									"upgradability": "Upgradability mode"
								},
								"returns": {
									"superToken": "The deployed and initialized wrapper super token NOTE: - It assumes token provide the .decimals() function"
								}
							},
							"createERC20Wrapper(address,uint8,uint8,string,string)": {
								"params": {
									"name": "Super token name",
									"symbol": "Super token symbol",
									"underlyingDecimals": "Underlying token decimals",
									"underlyingToken": "Underlying ERC20 token",
									"upgradability": "Upgradability mode"
								},
								"returns": {
									"superToken": "The deployed and initialized wrapper super token"
								}
							},
							"getCanonicalERC20Wrapper(address)": {
								"details": "We return the address if it exists and the zero address otherwise",
								"params": {
									"_underlyingTokenAddress": "Underlying ERC20 token address"
								},
								"returns": {
									"superTokenAddress": "Super token address"
								}
							},
							"getHost()": {
								"details": "Get superfluid host contract address"
							},
							"getSuperTokenLogic()": {
								"details": "Get the current super token logic used by the factory"
							},
							"initialize()": {
								"details": "Initialize the contract"
							},
							"initializeCustomSuperToken(address)": {
								"details": "Creates a new custom super token",
								"params": {
									"customSuperTokenProxy": "address of the custom supertoken proxy"
								}
							}
						},
						"title": "Super token factory interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"computeCanonicalERC20WrapperAddress(address)": "bab74c89",
							"createCanonicalERC20Wrapper(address)": "151188dc",
							"createERC20Wrapper(address,uint8,string,string)": "431f1481",
							"createERC20Wrapper(address,uint8,uint8,string,string)": "a6d0c534",
							"getCanonicalERC20Wrapper(address)": "eff0a89d",
							"getHost()": "20bc4425",
							"getSuperTokenLogic()": "9470a5b2",
							"initialize()": "8129fc1c",
							"initializeCustomSuperToken(address)": "d412d344"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_ALREADY_EXISTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_DOES_NOT_EXIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_UNINITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"CustomSuperTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SuperTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"tokenLogic\",\"type\":\"address\"}],\"name\":\"SuperTokenLogicCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_underlyingToken\",\"type\":\"address\"}],\"name\":\"computeCanonicalERC20WrapperAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"superTokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDeployed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20WithTokenInfo\",\"name\":\"_underlyingToken\",\"type\":\"address\"}],\"name\":\"createCanonicalERC20Wrapper\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20WithTokenInfo\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"enum ISuperTokenFactory.Upgradability\",\"name\":\"upgradability\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createERC20Wrapper\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"underlyingDecimals\",\"type\":\"uint8\"},{\"internalType\":\"enum ISuperTokenFactory.Upgradability\",\"name\":\"upgradability\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createERC20Wrapper\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_underlyingTokenAddress\",\"type\":\"address\"}],\"name\":\"getCanonicalERC20Wrapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"superTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSuperTokenLogic\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"customSuperTokenProxy\",\"type\":\"address\"}],\"name\":\"initializeCustomSuperToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"events\":{\"CustomSuperTokenCreated(address)\":{\"details\":\"Custom super token created event\",\"params\":{\"token\":\"Newly created custom super token address\"}},\"SuperTokenCreated(address)\":{\"details\":\"Super token created event\",\"params\":{\"token\":\"Newly created super token address\"}},\"SuperTokenLogicCreated(address)\":{\"details\":\"Super token logic created event\",\"params\":{\"tokenLogic\":\"Token logic address\"}}},\"kind\":\"dev\",\"methods\":{\"computeCanonicalERC20WrapperAddress(address)\":{\"details\":\"We return from our canonical list if it already exists, otherwise we compute itnote that this function only computes addresses for SEMI_UPGRADABLE SuperTokens\",\"params\":{\"_underlyingToken\":\"Underlying ERC20 token address\"},\"returns\":{\"isDeployed\":\"whether the super token is deployed AND set in the canonical mapping\",\"superTokenAddress\":\"Super token address\"}},\"createCanonicalERC20Wrapper(address)\":{\"details\":\"salt for create2 is the keccak256 hash of abi.encode(address(_underlyingToken))\",\"params\":{\"_underlyingToken\":\"Underlying ERC20 token\"},\"returns\":{\"_0\":\"ISuperToken the created supertoken\"}},\"createERC20Wrapper(address,uint8,string,string)\":{\"params\":{\"name\":\"Super token name\",\"symbol\":\"Super token symbol\",\"underlyingToken\":\"Underlying ERC20 token\",\"upgradability\":\"Upgradability mode\"},\"returns\":{\"superToken\":\"The deployed and initialized wrapper super token NOTE: - It assumes token provide the .decimals() function\"}},\"createERC20Wrapper(address,uint8,uint8,string,string)\":{\"params\":{\"name\":\"Super token name\",\"symbol\":\"Super token symbol\",\"underlyingDecimals\":\"Underlying token decimals\",\"underlyingToken\":\"Underlying ERC20 token\",\"upgradability\":\"Upgradability mode\"},\"returns\":{\"superToken\":\"The deployed and initialized wrapper super token\"}},\"getCanonicalERC20Wrapper(address)\":{\"details\":\"We return the address if it exists and the zero address otherwise\",\"params\":{\"_underlyingTokenAddress\":\"Underlying ERC20 token address\"},\"returns\":{\"superTokenAddress\":\"Super token address\"}},\"getHost()\":{\"details\":\"Get superfluid host contract address\"},\"getSuperTokenLogic()\":{\"details\":\"Get the current super token logic used by the factory\"},\"initialize()\":{\"details\":\"Initialize the contract\"},\"initializeCustomSuperToken(address)\":{\"details\":\"Creates a new custom super token\",\"params\":{\"customSuperTokenProxy\":\"address of the custom supertoken proxy\"}}},\"title\":\"Super token factory interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"computeCanonicalERC20WrapperAddress(address)\":{\"notice\":\"Computes/Retrieves wrapper super token address given the underlying token address\"},\"createCanonicalERC20Wrapper(address)\":{\"notice\":\"Creates a wrapper super token AND sets it in the canonical list OR reverts if it already exists\"},\"createERC20Wrapper(address,uint8,string,string)\":{\"notice\":\"Create new super token wrapper for the underlying ERC20 token with extra token info\"},\"createERC20Wrapper(address,uint8,uint8,string,string)\":{\"notice\":\"Create new super token wrapper for the underlying ERC20 token\"},\"getCanonicalERC20Wrapper(address)\":{\"notice\":\"Gets the canonical ERC20 wrapper super token address given the underlying token address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":\"ISuperTokenFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x6cc4b0724d977190c7441dfc3be6c6e48b43b555c3370af32ef5b6600f15f53f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3e89c944642772a42429f21a11017b57deb98a9198f8e4f8749f00aaee71299e\",\"dweb:/ipfs/QmaSv9GvqikcGHJ3tcwATDHSpQw6mfnHPDtcfqcZSS7LF6\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0x2ccec11f964b165f64e453192793991bf28e1054069b6f709a39849a8286aeb4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://edbaf6db0b9c6803dcdb7c91a2ddbdba503a41ecc5cecf9c27a43643669bfff1\",\"dweb:/ipfs/QmYpf7XFKrnB2ZAPf8cDqfvZDfyoxMHA1x2FQSYzDFE3KZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x316aa6cd16167569d5ee47fb2e4673b1def2117c7ea56969290ab6aec97cd263\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a5eb13acce613a227c2c2b3da2b88ad6361c9e541ca59ccee0bb5cf42cffccc6\",\"dweb:/ipfs/QmceA9RWHL1BWk4cPnYY55FjAdsEi1LfXrC11RbF8Wb8eW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64\",\"dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229\",\"dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"computeCanonicalERC20WrapperAddress(address)": {
								"notice": "Computes/Retrieves wrapper super token address given the underlying token address"
							},
							"createCanonicalERC20Wrapper(address)": {
								"notice": "Creates a wrapper super token AND sets it in the canonical list OR reverts if it already exists"
							},
							"createERC20Wrapper(address,uint8,string,string)": {
								"notice": "Create new super token wrapper for the underlying ERC20 token with extra token info"
							},
							"createERC20Wrapper(address,uint8,uint8,string,string)": {
								"notice": "Create new super token wrapper for the underlying ERC20 token"
							},
							"getCanonicalERC20Wrapper(address)": {
								"notice": "Gets the canonical ERC20 wrapper super token address given the underlying token address"
							}
						},
						"version": 1
					}
				}
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
				"ISuperfluid": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_code",
									"type": "uint256"
								}
							],
							"name": "APP_RULE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_AGREEMENT_ALREADY_REGISTERED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_AGREEMENT_CALLBACK_IS_NOT_ACTION",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_AGREEMENT_IS_NOT_REGISTERED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_CALL_AGREEMENT_WITH_CTX_FROM_WRONG_ADDRESS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_CALL_APP_ACTION_WITH_CTX_FROM_WRONG_ADDRESS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_CANNOT_DOWNGRADE_TO_NON_UPGRADEABLE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_INVALID_CONFIG_WORD",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_INVALID_OR_EXPIRED_SUPER_APP_REGISTRATION_KEY",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_MAX_256_AGREEMENTS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_MUST_BE_CONTRACT",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_NON_UPGRADEABLE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_NON_ZERO_LENGTH_PLACEHOLDER_CTX",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_NOT_A_SUPER_APP",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_NO_APP_REGISTRATION_PERMISSIONS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_ONLY_GOVERNANCE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_ONLY_LISTED_AGREEMENT",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_RECEIVER_IS_NOT_SUPER_APP",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_SENDER_IS_NOT_SUPER_APP",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_SOURCE_APP_NEEDS_HIGHER_APP_LEVEL",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_SUPER_APP_ALREADY_REGISTERED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_SUPER_APP_IS_JAILED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_UNAUTHORIZED_SUPER_APP_FACTORY",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HOST_UNKNOWN_BATCH_CALL_OPERATION_TYPE",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "agreementType",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "code",
									"type": "address"
								}
							],
							"name": "AgreementClassRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "agreementType",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "code",
									"type": "address"
								}
							],
							"name": "AgreementClassUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								}
							],
							"name": "AppRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "contract ISuperfluidGovernance",
									"name": "oldGov",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "contract ISuperfluidGovernance",
									"name": "newGov",
									"type": "address"
								}
							],
							"name": "GovernanceReplaced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reason",
									"type": "uint256"
								}
							],
							"name": "Jail",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "contract ISuperTokenFactory",
									"name": "newFactory",
									"type": "address"
								}
							],
							"name": "SuperTokenFactoryUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract ISuperToken",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "code",
									"type": "address"
								}
							],
							"name": "SuperTokenLogicUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "bitmap",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "agreementType",
									"type": "bytes32"
								}
							],
							"name": "addToAgreementClassesBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "newBitmap",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "targetApp",
									"type": "address"
								}
							],
							"name": "allowCompositeApp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								},
								{
									"internalType": "int256",
									"name": "appCreditUsedDelta",
									"type": "int256"
								}
							],
							"name": "appCallbackPop",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "newCtx",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								},
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "appCreditGranted",
									"type": "uint256"
								},
								{
									"internalType": "int256",
									"name": "appCreditUsed",
									"type": "int256"
								},
								{
									"internalType": "contract ISuperfluidToken",
									"name": "appCreditToken",
									"type": "address"
								}
							],
							"name": "appCallbackPush",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "newCtx",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "operationType",
											"type": "uint32"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct ISuperfluid.Operation[]",
									"name": "operations",
									"type": "tuple[]"
								}
							],
							"name": "batchCall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperAgreement",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "callData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								}
							],
							"name": "callAgreement",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "returnedData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperAgreement",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "callData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "callAgreementWithContext",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "newCtx",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "returnedData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "callData",
									"type": "bytes"
								}
							],
							"name": "callAppAction",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "returnedData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "callData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "callAppActionWithContext",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "newCtx",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "callData",
									"type": "bytes"
								},
								{
									"internalType": "bool",
									"name": "isTermination",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "callAppAfterCallback",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "newCtx",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "callData",
									"type": "bytes"
								},
								{
									"internalType": "bool",
									"name": "isTermination",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "callAppBeforeCallback",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "cbdata",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								},
								{
									"internalType": "int256",
									"name": "appCreditUsedMore",
									"type": "int256"
								}
							],
							"name": "ctxUseCredit",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "newCtx",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "decodeCtx",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "appCallbackLevel",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "callType",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "msgSender",
											"type": "address"
										},
										{
											"internalType": "bytes4",
											"name": "agreementSelector",
											"type": "bytes4"
										},
										{
											"internalType": "bytes",
											"name": "userData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "appCreditGranted",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "appCreditWantedDeprecated",
											"type": "uint256"
										},
										{
											"internalType": "int256",
											"name": "appCreditUsed",
											"type": "int256"
										},
										{
											"internalType": "address",
											"name": "appAddress",
											"type": "address"
										},
										{
											"internalType": "contract ISuperfluidToken",
											"name": "appCreditToken",
											"type": "address"
										}
									],
									"internalType": "struct ISuperfluid.Context",
									"name": "context",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "operationType",
											"type": "uint32"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct ISuperfluid.Operation[]",
									"name": "operations",
									"type": "tuple[]"
								}
							],
							"name": "forwardBatchCall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "agreementType",
									"type": "bytes32"
								}
							],
							"name": "getAgreementClass",
							"outputs": [
								{
									"internalType": "contract ISuperAgreement",
									"name": "agreementClass",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								}
							],
							"name": "getAppCallbackLevel",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "appCallbackLevel",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								}
							],
							"name": "getAppManifest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isSuperApp",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isJailed",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "noopMask",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getGovernance",
							"outputs": [
								{
									"internalType": "contract ISuperfluidGovernance",
									"name": "governance",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNow",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSuperTokenFactory",
							"outputs": [
								{
									"internalType": "contract ISuperTokenFactory",
									"name": "factory",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSuperTokenFactoryLogic",
							"outputs": [
								{
									"internalType": "address",
									"name": "logic",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperAgreement",
									"name": "agreementClass",
									"type": "address"
								}
							],
							"name": "isAgreementClassListed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "yes",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "agreementType",
									"type": "bytes32"
								}
							],
							"name": "isAgreementTypeListed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "yes",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								}
							],
							"name": "isApp",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								}
							],
							"name": "isAppJailed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isJail",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								},
								{
									"internalType": "contract ISuperApp",
									"name": "targetApp",
									"type": "address"
								}
							],
							"name": "isCompositeAppAllowed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isAppAllowed",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								}
							],
							"name": "isCtxValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "ctx",
									"type": "bytes"
								},
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "reason",
									"type": "uint256"
								}
							],
							"name": "jailApp",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "newCtx",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "bitmap",
									"type": "uint256"
								}
							],
							"name": "mapAgreementClasses",
							"outputs": [
								{
									"internalType": "contract ISuperAgreement[]",
									"name": "agreementClasses",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperAgreement",
									"name": "agreementClassLogic",
									"type": "address"
								}
							],
							"name": "registerAgreementClass",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "configWord",
									"type": "uint256"
								}
							],
							"name": "registerApp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperApp",
									"name": "app",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "configWord",
									"type": "uint256"
								}
							],
							"name": "registerAppByFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "configWord",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "registrationKey",
									"type": "string"
								}
							],
							"name": "registerAppWithKey",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "bitmap",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "agreementType",
									"type": "bytes32"
								}
							],
							"name": "removeFromAgreementClassesBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "newBitmap",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluidGovernance",
									"name": "newGov",
									"type": "address"
								}
							],
							"name": "replaceGovernance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperAgreement",
									"name": "agreementClassLogic",
									"type": "address"
								}
							],
							"name": "updateAgreementClass",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperTokenFactory",
									"name": "newFactory",
									"type": "address"
								}
							],
							"name": "updateSuperTokenFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperToken",
									"name": "token",
									"type": "address"
								}
							],
							"name": "updateSuperTokenLogic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Superfluid",
						"events": {
							"AgreementClassRegistered(bytes32,address)": {
								"details": "agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"",
								"params": {
									"agreementType": "The agreement type registered",
									"code": "Address of the new agreement"
								}
							},
							"AgreementClassUpdated(bytes32,address)": {
								"details": "agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"",
								"params": {
									"agreementType": "The agreement type updated",
									"code": "Address of the new agreement"
								}
							},
							"AppRegistered(address)": {
								"details": "App registered event",
								"params": {
									"app": "Address of jailed app"
								}
							},
							"GovernanceReplaced(address,address)": {
								"details": "Governance replaced event",
								"params": {
									"newGov": "Address of the new governance contract",
									"oldGov": "Address of the old governance contract"
								}
							},
							"Jail(address,uint256)": {
								"details": "Jail event for the app",
								"params": {
									"app": "Address of jailed app",
									"reason": "Reason the app is jailed (see Definitions.sol for the full list)"
								}
							},
							"SuperTokenFactoryUpdated(address)": {
								"details": "SuperToken factory updated event",
								"params": {
									"newFactory": "Address of the new factory"
								}
							},
							"SuperTokenLogicUpdated(address,address)": {
								"details": "SuperToken logic updated event",
								"params": {
									"code": "Address of the new SuperToken logic"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"addToAgreementClassesBitmap(uint256,bytes32)": {
								"details": "agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"",
								"params": {
									"bitmap": "Agreement class bitmap"
								}
							},
							"allowCompositeApp(address)": {
								"details": "Whitelist the target app for app composition for the source app (msg.sender)",
								"params": {
									"targetApp": "The target super app address"
								}
							},
							"appCallbackPop(bytes,int256)": {
								"custom:security": "- Here we cannot do assertValidCtx(ctx), since we do not really save the stack in memory. - Hence there is still implicit trust that the agreement handles the callback push/pop pair correctly.",
								"details": "(For agreements) Pop from the current app callback stack",
								"params": {
									"appCreditUsedDelta": "App credit used by the app.",
									"ctx": "The ctx that was pushed before the callback stack."
								},
								"returns": {
									"newCtx": "                 The current context of the transaction."
								}
							},
							"appCallbackPush(bytes,address,uint256,int256,address)": {
								"details": "(For agreements) Create a new callback stack",
								"params": {
									"app": "The super app.",
									"appCreditGranted": "App credit granted so far.",
									"appCreditUsed": "App credit used so far.",
									"ctx": "The current ctx, it will be validated."
								},
								"returns": {
									"newCtx": "                 The current context of the transaction."
								}
							},
							"batchCall((uint32,address,bytes)[])": {
								"details": "Batch call function",
								"params": {
									"operations": "Array of batch operations"
								}
							},
							"callAgreement(address,bytes,bytes)": {
								"details": "Call agreement function",
								"params": {
									"agreementClass": "The agreement address you are calling",
									"callData": "The contextual call data with placeholder ctx",
									"userData": "Extra user data being sent to the super app callbacks"
								}
							},
							"callAppAction(address,bytes)": {
								"custom:note": "See \"Contextless Call Proxies\" above for more about contextual call data.",
								"details": "Main use case is calling app action in a batch call via the host",
								"params": {
									"callData": "The contextual call data"
								}
							},
							"callAppAfterCallback(address,bytes,bool,bytes)": {
								"details": "(For agreements) Call the app after callback",
								"params": {
									"app": "The super app.",
									"callData": "The call data sending to the super app.",
									"ctx": "Current ctx, it will be validated.",
									"isTermination": "Is it a termination callback?"
								},
								"returns": {
									"newCtx": "           The current context of the transaction."
								}
							},
							"callAppBeforeCallback(address,bytes,bool,bytes)": {
								"details": "(For agreements) StaticCall the app before callback",
								"params": {
									"app": "The super app.",
									"callData": "The call data sending to the super app.",
									"ctx": "Current ctx, it will be validated.",
									"isTermination": "Is it a termination callback?"
								},
								"returns": {
									"cbdata": "           Data returned from the callback."
								}
							},
							"ctxUseCredit(bytes,int256)": {
								"details": "(For agreements) Use app credit.",
								"params": {
									"appCreditUsedMore": "See app credit for more details.",
									"ctx": "The current ctx, it will be validated."
								},
								"returns": {
									"newCtx": "                  The current context of the transaction."
								}
							},
							"forwardBatchCall((uint32,address,bytes)[])": {
								"details": "Batch call function for trusted forwarders (EIP-2771)",
								"params": {
									"operations": "Array of batch operations"
								}
							},
							"getAgreementClass(bytes32)": {
								"details": "agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\""
							},
							"getAppCallbackLevel(address)": {
								"details": "Query app callbacklevel",
								"params": {
									"app": "Super app address"
								}
							},
							"getAppManifest(address)": {
								"details": "Get the manifest of the super app",
								"params": {
									"app": "Super app address"
								}
							},
							"getGovernance()": {
								"details": "Get the current governance address of the Superfluid host"
							},
							"getSuperTokenFactory()": {
								"details": "Get the super token factory",
								"returns": {
									"factory": "The factory"
								}
							},
							"getSuperTokenFactoryLogic()": {
								"details": "Get the super token factory logic (applicable to upgradable deployment)",
								"returns": {
									"logic": "The factory logic"
								}
							},
							"isAgreementClassListed(address)": {
								"details": "Check if the agreement class is whitelisted"
							},
							"isAgreementTypeListed(bytes32)": {
								"details": "agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\""
							},
							"isApp(address)": {
								"details": "Query if the app is registered",
								"params": {
									"app": "Super app address"
								}
							},
							"isAppJailed(address)": {
								"details": "Query if the app has been jailed",
								"params": {
									"app": "Super app address"
								}
							},
							"isCompositeAppAllowed(address,address)": {
								"details": "Query if source app is allowed to call the target app as downstream app",
								"params": {
									"app": "Super app address",
									"targetApp": "The target super app address"
								}
							},
							"jailApp(bytes,address,uint256)": {
								"details": "(For agreements) Jail the app.",
								"params": {
									"app": "The super app.",
									"reason": "Jail reason code."
								},
								"returns": {
									"newCtx": "                 The current context of the transaction."
								}
							},
							"mapAgreementClasses(uint256)": {
								"details": "Map list of the agreement classes using a bitmap",
								"params": {
									"bitmap": "Agreement class bitmap"
								}
							},
							"registerAgreementClass(address)": {
								"custom:modifiers": " - onlyGovernance",
								"details": "Register a new agreement class to the system",
								"params": {
									"agreementClassLogic": "Initial agreement class code"
								}
							},
							"registerApp(uint256)": {
								"custom:deprecated": "you should use `registerAppWithKey` or `registerAppByFactory` instead, because app registration is currently governance permissioned on mainnets.",
								"details": "Message sender (must be a contract) declares itself as a super app.",
								"params": {
									"configWord": "The super app manifest configuration, flags are defined in `SuperAppDefinitions`"
								}
							},
							"registerAppByFactory(address,uint256)": {
								"details": "Message sender (must be a contract) declares app as a super app",
								"params": {
									"configWord": "The super app manifest configuration, flags are defined in `SuperAppDefinitions`"
								}
							},
							"registerAppWithKey(uint256,string)": {
								"details": "Message sender declares itself as a super app.",
								"params": {
									"configWord": "The super app manifest configuration, flags are defined in `SuperAppDefinitions`",
									"registrationKey": "The registration key issued by the governance, needed to register on a mainnet."
								}
							},
							"removeFromAgreementClassesBitmap(uint256,bytes32)": {
								"details": "agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"",
								"params": {
									"bitmap": "Agreement class bitmap"
								}
							},
							"replaceGovernance(address)": {
								"details": "Replace the current governance with a new one"
							},
							"updateAgreementClass(address)": {
								"custom:modifiers": "  - onlyGovernance",
								"details": "Update code of an agreement class",
								"params": {
									"agreementClassLogic": "New code for the agreement class"
								}
							},
							"updateSuperTokenFactory(address)": {
								"details": "Update super token factory",
								"params": {
									"newFactory": "New factory logic"
								}
							},
							"updateSuperTokenLogic(address)": {
								"details": "Refer to ISuperTokenFactory.Upgradability for expected behaviours"
							}
						},
						"title": "Host interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addToAgreementClassesBitmap(uint256,bytes32)": "bced3ddc",
							"allowCompositeApp(address)": "57121e0c",
							"appCallbackPop(bytes,int256)": "989b0c3e",
							"appCallbackPush(bytes,address,uint256,int256,address)": "768fabb0",
							"batchCall((uint32,address,bytes)[])": "6ad3ca7d",
							"callAgreement(address,bytes,bytes)": "39255d5b",
							"callAgreementWithContext(address,bytes,bytes,bytes)": "4329d293",
							"callAppAction(address,bytes)": "1e855cf3",
							"callAppActionWithContext(address,bytes,bytes)": "ba48b5f8",
							"callAppAfterCallback(address,bytes,bool,bytes)": "1e6d0a84",
							"callAppBeforeCallback(address,bytes,bool,bytes)": "74041e02",
							"ctxUseCredit(bytes,int256)": "59a29141",
							"decodeCtx(bytes)": "3f6c923a",
							"forwardBatchCall((uint32,address,bytes)[])": "670e77e3",
							"getAgreementClass(bytes32)": "b6d200de",
							"getAppCallbackLevel(address)": "9378fa13",
							"getAppManifest(address)": "f9f522f4",
							"getGovernance()": "289b3c0d",
							"getNow()": "bbe4fd50",
							"getSuperTokenFactory()": "731aed6e",
							"getSuperTokenFactoryLogic()": "f2e55caf",
							"isAgreementClassListed(address)": "8ca48484",
							"isAgreementTypeListed(bytes32)": "e8dccb7d",
							"isApp(address)": "3ca3ad4e",
							"isAppJailed(address)": "6b4f3335",
							"isCompositeAppAllowed(address,address)": "bb84cfa1",
							"isCtxValid(bytes)": "bf428734",
							"jailApp(bytes,address,uint256)": "b724211e",
							"mapAgreementClasses(uint256)": "c56a069d",
							"registerAgreementClass(address)": "15a024e1",
							"registerApp(uint256)": "ad3915c8",
							"registerAppByFactory(address,uint256)": "f3733052",
							"registerAppWithKey(uint256,string)": "bd1c448b",
							"removeFromAgreementClassesBitmap(uint256,bytes32)": "a5dbbbcd",
							"replaceGovernance(address)": "7283100c",
							"updateAgreementClass(address)": "06cecba8",
							"updateSuperTokenFactory(address)": "54fbc493",
							"updateSuperTokenLogic(address)": "787afde7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_code\",\"type\":\"uint256\"}],\"name\":\"APP_RULE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_AGREEMENT_ALREADY_REGISTERED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_AGREEMENT_CALLBACK_IS_NOT_ACTION\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_AGREEMENT_IS_NOT_REGISTERED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_CALL_AGREEMENT_WITH_CTX_FROM_WRONG_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_CALL_APP_ACTION_WITH_CTX_FROM_WRONG_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_CANNOT_DOWNGRADE_TO_NON_UPGRADEABLE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_INVALID_CONFIG_WORD\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_INVALID_OR_EXPIRED_SUPER_APP_REGISTRATION_KEY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_MAX_256_AGREEMENTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_MUST_BE_CONTRACT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_NON_UPGRADEABLE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_NON_ZERO_LENGTH_PLACEHOLDER_CTX\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_NOT_A_SUPER_APP\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_NO_APP_REGISTRATION_PERMISSIONS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_ONLY_GOVERNANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_ONLY_LISTED_AGREEMENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_RECEIVER_IS_NOT_SUPER_APP\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_SENDER_IS_NOT_SUPER_APP\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_SOURCE_APP_NEEDS_HIGHER_APP_LEVEL\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_SUPER_APP_ALREADY_REGISTERED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_SUPER_APP_IS_JAILED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_UNAUTHORIZED_SUPER_APP_FACTORY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HOST_UNKNOWN_BATCH_CALL_OPERATION_TYPE\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"code\",\"type\":\"address\"}],\"name\":\"AgreementClassRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"code\",\"type\":\"address\"}],\"name\":\"AgreementClassUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"AppRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ISuperfluidGovernance\",\"name\":\"oldGov\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ISuperfluidGovernance\",\"name\":\"newGov\",\"type\":\"address\"}],\"name\":\"GovernanceReplaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reason\",\"type\":\"uint256\"}],\"name\":\"Jail\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ISuperTokenFactory\",\"name\":\"newFactory\",\"type\":\"address\"}],\"name\":\"SuperTokenFactoryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"code\",\"type\":\"address\"}],\"name\":\"SuperTokenLogicUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmap\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"}],\"name\":\"addToAgreementClassesBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newBitmap\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"targetApp\",\"type\":\"address\"}],\"name\":\"allowCompositeApp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"appCreditUsedDelta\",\"type\":\"int256\"}],\"name\":\"appCallbackPop\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"},{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"appCreditGranted\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"appCreditUsed\",\"type\":\"int256\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"appCreditToken\",\"type\":\"address\"}],\"name\":\"appCallbackPush\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operationType\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ISuperfluid.Operation[]\",\"name\":\"operations\",\"type\":\"tuple[]\"}],\"name\":\"batchCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"callAgreement\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"returnedData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"callAgreementWithContext\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnedData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"name\":\"callAppAction\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"returnedData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"callAppActionWithContext\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isTermination\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"callAppAfterCallback\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isTermination\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"callAppBeforeCallback\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"appCreditUsedMore\",\"type\":\"int256\"}],\"name\":\"ctxUseCredit\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"decodeCtx\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"appCallbackLevel\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"callType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"agreementSelector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"appCreditGranted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"appCreditWantedDeprecated\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"appCreditUsed\",\"type\":\"int256\"},{\"internalType\":\"address\",\"name\":\"appAddress\",\"type\":\"address\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"appCreditToken\",\"type\":\"address\"}],\"internalType\":\"struct ISuperfluid.Context\",\"name\":\"context\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operationType\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ISuperfluid.Operation[]\",\"name\":\"operations\",\"type\":\"tuple[]\"}],\"name\":\"forwardBatchCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"}],\"name\":\"getAgreementClass\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClass\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"getAppCallbackLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"appCallbackLevel\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"getAppManifest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSuperApp\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isJailed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"noopMask\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGovernance\",\"outputs\":[{\"internalType\":\"contract ISuperfluidGovernance\",\"name\":\"governance\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSuperTokenFactory\",\"outputs\":[{\"internalType\":\"contract ISuperTokenFactory\",\"name\":\"factory\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSuperTokenFactoryLogic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"logic\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClass\",\"type\":\"address\"}],\"name\":\"isAgreementClassListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"yes\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"}],\"name\":\"isAgreementTypeListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"yes\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"isApp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"isAppJailed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isJail\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"contract ISuperApp\",\"name\":\"targetApp\",\"type\":\"address\"}],\"name\":\"isCompositeAppAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isAppAllowed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"isCtxValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"},{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reason\",\"type\":\"uint256\"}],\"name\":\"jailApp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmap\",\"type\":\"uint256\"}],\"name\":\"mapAgreementClasses\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"agreementClasses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClassLogic\",\"type\":\"address\"}],\"name\":\"registerAgreementClass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"configWord\",\"type\":\"uint256\"}],\"name\":\"registerApp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"configWord\",\"type\":\"uint256\"}],\"name\":\"registerAppByFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"configWord\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"registrationKey\",\"type\":\"string\"}],\"name\":\"registerAppWithKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmap\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"}],\"name\":\"removeFromAgreementClassesBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newBitmap\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidGovernance\",\"name\":\"newGov\",\"type\":\"address\"}],\"name\":\"replaceGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClassLogic\",\"type\":\"address\"}],\"name\":\"updateAgreementClass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperTokenFactory\",\"name\":\"newFactory\",\"type\":\"address\"}],\"name\":\"updateSuperTokenFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"updateSuperTokenLogic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"events\":{\"AgreementClassRegistered(bytes32,address)\":{\"details\":\"agreementType is the keccak256 hash of: \\\"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\\\"\",\"params\":{\"agreementType\":\"The agreement type registered\",\"code\":\"Address of the new agreement\"}},\"AgreementClassUpdated(bytes32,address)\":{\"details\":\"agreementType is the keccak256 hash of: \\\"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\\\"\",\"params\":{\"agreementType\":\"The agreement type updated\",\"code\":\"Address of the new agreement\"}},\"AppRegistered(address)\":{\"details\":\"App registered event\",\"params\":{\"app\":\"Address of jailed app\"}},\"GovernanceReplaced(address,address)\":{\"details\":\"Governance replaced event\",\"params\":{\"newGov\":\"Address of the new governance contract\",\"oldGov\":\"Address of the old governance contract\"}},\"Jail(address,uint256)\":{\"details\":\"Jail event for the app\",\"params\":{\"app\":\"Address of jailed app\",\"reason\":\"Reason the app is jailed (see Definitions.sol for the full list)\"}},\"SuperTokenFactoryUpdated(address)\":{\"details\":\"SuperToken factory updated event\",\"params\":{\"newFactory\":\"Address of the new factory\"}},\"SuperTokenLogicUpdated(address,address)\":{\"details\":\"SuperToken logic updated event\",\"params\":{\"code\":\"Address of the new SuperToken logic\"}}},\"kind\":\"dev\",\"methods\":{\"addToAgreementClassesBitmap(uint256,bytes32)\":{\"details\":\"agreementType is the keccak256 hash of: \\\"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\\\"\",\"params\":{\"bitmap\":\"Agreement class bitmap\"}},\"allowCompositeApp(address)\":{\"details\":\"Whitelist the target app for app composition for the source app (msg.sender)\",\"params\":{\"targetApp\":\"The target super app address\"}},\"appCallbackPop(bytes,int256)\":{\"custom:security\":\"- Here we cannot do assertValidCtx(ctx), since we do not really save the stack in memory. - Hence there is still implicit trust that the agreement handles the callback push/pop pair correctly.\",\"details\":\"(For agreements) Pop from the current app callback stack\",\"params\":{\"appCreditUsedDelta\":\"App credit used by the app.\",\"ctx\":\"The ctx that was pushed before the callback stack.\"},\"returns\":{\"newCtx\":\"                 The current context of the transaction.\"}},\"appCallbackPush(bytes,address,uint256,int256,address)\":{\"details\":\"(For agreements) Create a new callback stack\",\"params\":{\"app\":\"The super app.\",\"appCreditGranted\":\"App credit granted so far.\",\"appCreditUsed\":\"App credit used so far.\",\"ctx\":\"The current ctx, it will be validated.\"},\"returns\":{\"newCtx\":\"                 The current context of the transaction.\"}},\"batchCall((uint32,address,bytes)[])\":{\"details\":\"Batch call function\",\"params\":{\"operations\":\"Array of batch operations\"}},\"callAgreement(address,bytes,bytes)\":{\"details\":\"Call agreement function\",\"params\":{\"agreementClass\":\"The agreement address you are calling\",\"callData\":\"The contextual call data with placeholder ctx\",\"userData\":\"Extra user data being sent to the super app callbacks\"}},\"callAppAction(address,bytes)\":{\"custom:note\":\"See \\\"Contextless Call Proxies\\\" above for more about contextual call data.\",\"details\":\"Main use case is calling app action in a batch call via the host\",\"params\":{\"callData\":\"The contextual call data\"}},\"callAppAfterCallback(address,bytes,bool,bytes)\":{\"details\":\"(For agreements) Call the app after callback\",\"params\":{\"app\":\"The super app.\",\"callData\":\"The call data sending to the super app.\",\"ctx\":\"Current ctx, it will be validated.\",\"isTermination\":\"Is it a termination callback?\"},\"returns\":{\"newCtx\":\"           The current context of the transaction.\"}},\"callAppBeforeCallback(address,bytes,bool,bytes)\":{\"details\":\"(For agreements) StaticCall the app before callback\",\"params\":{\"app\":\"The super app.\",\"callData\":\"The call data sending to the super app.\",\"ctx\":\"Current ctx, it will be validated.\",\"isTermination\":\"Is it a termination callback?\"},\"returns\":{\"cbdata\":\"           Data returned from the callback.\"}},\"ctxUseCredit(bytes,int256)\":{\"details\":\"(For agreements) Use app credit.\",\"params\":{\"appCreditUsedMore\":\"See app credit for more details.\",\"ctx\":\"The current ctx, it will be validated.\"},\"returns\":{\"newCtx\":\"                  The current context of the transaction.\"}},\"forwardBatchCall((uint32,address,bytes)[])\":{\"details\":\"Batch call function for trusted forwarders (EIP-2771)\",\"params\":{\"operations\":\"Array of batch operations\"}},\"getAgreementClass(bytes32)\":{\"details\":\"agreementType is the keccak256 hash of: \\\"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\\\"\"},\"getAppCallbackLevel(address)\":{\"details\":\"Query app callbacklevel\",\"params\":{\"app\":\"Super app address\"}},\"getAppManifest(address)\":{\"details\":\"Get the manifest of the super app\",\"params\":{\"app\":\"Super app address\"}},\"getGovernance()\":{\"details\":\"Get the current governance address of the Superfluid host\"},\"getSuperTokenFactory()\":{\"details\":\"Get the super token factory\",\"returns\":{\"factory\":\"The factory\"}},\"getSuperTokenFactoryLogic()\":{\"details\":\"Get the super token factory logic (applicable to upgradable deployment)\",\"returns\":{\"logic\":\"The factory logic\"}},\"isAgreementClassListed(address)\":{\"details\":\"Check if the agreement class is whitelisted\"},\"isAgreementTypeListed(bytes32)\":{\"details\":\"agreementType is the keccak256 hash of: \\\"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\\\"\"},\"isApp(address)\":{\"details\":\"Query if the app is registered\",\"params\":{\"app\":\"Super app address\"}},\"isAppJailed(address)\":{\"details\":\"Query if the app has been jailed\",\"params\":{\"app\":\"Super app address\"}},\"isCompositeAppAllowed(address,address)\":{\"details\":\"Query if source app is allowed to call the target app as downstream app\",\"params\":{\"app\":\"Super app address\",\"targetApp\":\"The target super app address\"}},\"jailApp(bytes,address,uint256)\":{\"details\":\"(For agreements) Jail the app.\",\"params\":{\"app\":\"The super app.\",\"reason\":\"Jail reason code.\"},\"returns\":{\"newCtx\":\"                 The current context of the transaction.\"}},\"mapAgreementClasses(uint256)\":{\"details\":\"Map list of the agreement classes using a bitmap\",\"params\":{\"bitmap\":\"Agreement class bitmap\"}},\"registerAgreementClass(address)\":{\"custom:modifiers\":\" - onlyGovernance\",\"details\":\"Register a new agreement class to the system\",\"params\":{\"agreementClassLogic\":\"Initial agreement class code\"}},\"registerApp(uint256)\":{\"custom:deprecated\":\"you should use `registerAppWithKey` or `registerAppByFactory` instead, because app registration is currently governance permissioned on mainnets.\",\"details\":\"Message sender (must be a contract) declares itself as a super app.\",\"params\":{\"configWord\":\"The super app manifest configuration, flags are defined in `SuperAppDefinitions`\"}},\"registerAppByFactory(address,uint256)\":{\"details\":\"Message sender (must be a contract) declares app as a super app\",\"params\":{\"configWord\":\"The super app manifest configuration, flags are defined in `SuperAppDefinitions`\"}},\"registerAppWithKey(uint256,string)\":{\"details\":\"Message sender declares itself as a super app.\",\"params\":{\"configWord\":\"The super app manifest configuration, flags are defined in `SuperAppDefinitions`\",\"registrationKey\":\"The registration key issued by the governance, needed to register on a mainnet.\"}},\"removeFromAgreementClassesBitmap(uint256,bytes32)\":{\"details\":\"agreementType is the keccak256 hash of: \\\"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\\\"\",\"params\":{\"bitmap\":\"Agreement class bitmap\"}},\"replaceGovernance(address)\":{\"details\":\"Replace the current governance with a new one\"},\"updateAgreementClass(address)\":{\"custom:modifiers\":\"  - onlyGovernance\",\"details\":\"Update code of an agreement class\",\"params\":{\"agreementClassLogic\":\"New code for the agreement class\"}},\"updateSuperTokenFactory(address)\":{\"details\":\"Update super token factory\",\"params\":{\"newFactory\":\"New factory logic\"}},\"updateSuperTokenLogic(address)\":{\"details\":\"Refer to ISuperTokenFactory.Upgradability for expected behaviours\"}},\"title\":\"Host interface\",\"version\":1},\"userdoc\":{\"events\":{\"AgreementClassRegistered(bytes32,address)\":{\"notice\":\"Agreement class registered event\"},\"AgreementClassUpdated(bytes32,address)\":{\"notice\":\"Agreement class updated event\"}},\"kind\":\"user\",\"methods\":{\"addToAgreementClassesBitmap(uint256,bytes32)\":{\"notice\":\"Create a new bitmask by adding a agreement class to it\"},\"callAppAction(address,bytes)\":{\"notice\":\"Call app action\"},\"getAgreementClass(bytes32)\":{\"notice\":\"Get agreement class\"},\"isAgreementTypeListed(bytes32)\":{\"notice\":\"Check if the agreement type is whitelisted\"},\"registerAppByFactory(address,uint256)\":{\"notice\":\"On mainnet deployments, only factory contracts pre-authorized by governance can use this. See https://github.com/superfluid-finance/protocol-monorepo/wiki/Super-App-White-listing-Guide\"},\"registerAppWithKey(uint256,string)\":{\"notice\":\"See https://github.com/superfluid-finance/protocol-monorepo/wiki/Super-App-White-listing-Guide On testnets or in dev environment, a placeholder (e.g. empty string) can be used. While the message sender must be the super app itself, the transaction sender (tx.origin) must be the deployer account the registration key was issued for.\"},\"removeFromAgreementClassesBitmap(uint256,bytes32)\":{\"notice\":\"Create a new bitmask by removing a agreement class from it\"},\"updateSuperTokenLogic(address)\":{\"notice\":\"Update the super token logic to the latest\"}},\"notice\":\"This is the central contract of the system where super agreement, super app and super token features are connected. The Superfluid host contract is also the entry point for the protocol users, where batch call and meta transaction are provided for UX improvements.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":\"ISuperfluid\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x6cc4b0724d977190c7441dfc3be6c6e48b43b555c3370af32ef5b6600f15f53f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3e89c944642772a42429f21a11017b57deb98a9198f8e4f8749f00aaee71299e\",\"dweb:/ipfs/QmaSv9GvqikcGHJ3tcwATDHSpQw6mfnHPDtcfqcZSS7LF6\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0x2ccec11f964b165f64e453192793991bf28e1054069b6f709a39849a8286aeb4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://edbaf6db0b9c6803dcdb7c91a2ddbdba503a41ecc5cecf9c27a43643669bfff1\",\"dweb:/ipfs/QmYpf7XFKrnB2ZAPf8cDqfvZDfyoxMHA1x2FQSYzDFE3KZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x316aa6cd16167569d5ee47fb2e4673b1def2117c7ea56969290ab6aec97cd263\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a5eb13acce613a227c2c2b3da2b88ad6361c9e541ca59ccee0bb5cf42cffccc6\",\"dweb:/ipfs/QmceA9RWHL1BWk4cPnYY55FjAdsEi1LfXrC11RbF8Wb8eW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64\",\"dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229\",\"dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"AgreementClassRegistered(bytes32,address)": {
								"notice": "Agreement class registered event"
							},
							"AgreementClassUpdated(bytes32,address)": {
								"notice": "Agreement class updated event"
							}
						},
						"kind": "user",
						"methods": {
							"addToAgreementClassesBitmap(uint256,bytes32)": {
								"notice": "Create a new bitmask by adding a agreement class to it"
							},
							"callAppAction(address,bytes)": {
								"notice": "Call app action"
							},
							"getAgreementClass(bytes32)": {
								"notice": "Get agreement class"
							},
							"isAgreementTypeListed(bytes32)": {
								"notice": "Check if the agreement type is whitelisted"
							},
							"registerAppByFactory(address,uint256)": {
								"notice": "On mainnet deployments, only factory contracts pre-authorized by governance can use this. See https://github.com/superfluid-finance/protocol-monorepo/wiki/Super-App-White-listing-Guide"
							},
							"registerAppWithKey(uint256,string)": {
								"notice": "See https://github.com/superfluid-finance/protocol-monorepo/wiki/Super-App-White-listing-Guide On testnets or in dev environment, a placeholder (e.g. empty string) can be used. While the message sender must be the super app itself, the transaction sender (tx.origin) must be the deployer account the registration key was issued for."
							},
							"removeFromAgreementClassesBitmap(uint256,bytes32)": {
								"notice": "Create a new bitmask by removing a agreement class from it"
							},
							"updateSuperTokenLogic(address)": {
								"notice": "Update the super token logic to the latest"
							}
						},
						"notice": "This is the central contract of the system where super agreement, super app and super token features are connected. The Superfluid host contract is also the entry point for the protocol users, where batch call and meta transaction are provided for UX improvements.",
						"version": 1
					}
				}
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
				"ISuperfluidGovernance": {
					"abi": [
						{
							"inputs": [],
							"name": "SF_GOV_ARRAYS_NOT_SAME_LENGTH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_GOV_INVALID_LIQUIDATION_OR_PATRICIAN_PERIOD",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_GOV_MUST_BE_CONTRACT",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluid",
									"name": "host",
									"type": "address"
								},
								{
									"internalType": "contract ISuperToken[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "batchUpdateSuperTokenLogic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluid",
									"name": "host",
									"type": "address"
								},
								{
									"internalType": "contract ISuperfluidToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "clearConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluid",
									"name": "host",
									"type": "address"
								},
								{
									"internalType": "contract ISuperfluidToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "getConfigAsAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "value",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluid",
									"name": "host",
									"type": "address"
								},
								{
									"internalType": "contract ISuperfluidToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "getConfigAsUint256",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluid",
									"name": "host",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								}
							],
							"name": "registerAgreementClass",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluid",
									"name": "host",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newGov",
									"type": "address"
								}
							],
							"name": "replaceGovernance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluid",
									"name": "host",
									"type": "address"
								},
								{
									"internalType": "contract ISuperfluidToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "value",
									"type": "address"
								}
							],
							"name": "setConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluid",
									"name": "host",
									"type": "address"
								},
								{
									"internalType": "contract ISuperfluidToken",
									"name": "superToken",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "setConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISuperfluid",
									"name": "host",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "hostNewLogic",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "agreementClassNewLogics",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "superTokenFactoryNewLogic",
									"type": "address"
								}
							],
							"name": "updateContracts",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Superfluid",
						"kind": "dev",
						"methods": {
							"batchUpdateSuperTokenLogic(address,address[])": {
								"details": "Update supertoken logic contract to the latest that is managed by the super token factory"
							},
							"clearConfig(address,address,bytes32)": {
								"details": "Clear configuration"
							},
							"getConfigAsAddress(address,address,bytes32)": {
								"details": "Get configuration as address value"
							},
							"getConfigAsUint256(address,address,bytes32)": {
								"details": "Get configuration as uint256 value"
							},
							"registerAgreementClass(address,address)": {
								"details": "Register a new agreement class"
							},
							"replaceGovernance(address,address)": {
								"details": "Replace the current governance with a new governance"
							},
							"setConfig(address,address,bytes32,address)": {
								"details": "Set configuration as address value"
							},
							"setConfig(address,address,bytes32,uint256)": {
								"details": "Set configuration as uint256 value"
							},
							"updateContracts(address,address,address[],address)": {
								"custom:note": " - Because they might have inter-dependencies, it is good to have one single function to update them all",
								"details": "Update logics of the contracts"
							}
						},
						"title": "Superfluid governance interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"batchUpdateSuperTokenLogic(address,address[])": "42148deb",
							"clearConfig(address,address,bytes32)": "640b6cc9",
							"getConfigAsAddress(address,address,bytes32)": "8369a0f1",
							"getConfigAsUint256(address,address,bytes32)": "80f70cba",
							"registerAgreementClass(address,address)": "cadf8f85",
							"replaceGovernance(address,address)": "44864b25",
							"setConfig(address,address,bytes32,address)": "78707cb8",
							"setConfig(address,address,bytes32,uint256)": "f79a8e63",
							"updateContracts(address,address,address[],address)": "427942a4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SF_GOV_ARRAYS_NOT_SAME_LENGTH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_GOV_INVALID_LIQUIDATION_OR_PATRICIAN_PERIOD\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_GOV_MUST_BE_CONTRACT\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract ISuperToken[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"batchUpdateSuperTokenLogic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"clearConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"getConfigAsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"getConfigAsUint256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"}],\"name\":\"registerAgreementClass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newGov\",\"type\":\"address\"}],\"name\":\"replaceGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"hostNewLogic\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"agreementClassNewLogics\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"superTokenFactoryNewLogic\",\"type\":\"address\"}],\"name\":\"updateContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{\"batchUpdateSuperTokenLogic(address,address[])\":{\"details\":\"Update supertoken logic contract to the latest that is managed by the super token factory\"},\"clearConfig(address,address,bytes32)\":{\"details\":\"Clear configuration\"},\"getConfigAsAddress(address,address,bytes32)\":{\"details\":\"Get configuration as address value\"},\"getConfigAsUint256(address,address,bytes32)\":{\"details\":\"Get configuration as uint256 value\"},\"registerAgreementClass(address,address)\":{\"details\":\"Register a new agreement class\"},\"replaceGovernance(address,address)\":{\"details\":\"Replace the current governance with a new governance\"},\"setConfig(address,address,bytes32,address)\":{\"details\":\"Set configuration as address value\"},\"setConfig(address,address,bytes32,uint256)\":{\"details\":\"Set configuration as uint256 value\"},\"updateContracts(address,address,address[],address)\":{\"custom:note\":\" - Because they might have inter-dependencies, it is good to have one single function to update them all\",\"details\":\"Update logics of the contracts\"}},\"title\":\"Superfluid governance interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":\"ISuperfluidGovernance\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x6cc4b0724d977190c7441dfc3be6c6e48b43b555c3370af32ef5b6600f15f53f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3e89c944642772a42429f21a11017b57deb98a9198f8e4f8749f00aaee71299e\",\"dweb:/ipfs/QmaSv9GvqikcGHJ3tcwATDHSpQw6mfnHPDtcfqcZSS7LF6\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0x2ccec11f964b165f64e453192793991bf28e1054069b6f709a39849a8286aeb4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://edbaf6db0b9c6803dcdb7c91a2ddbdba503a41ecc5cecf9c27a43643669bfff1\",\"dweb:/ipfs/QmYpf7XFKrnB2ZAPf8cDqfvZDfyoxMHA1x2FQSYzDFE3KZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x316aa6cd16167569d5ee47fb2e4673b1def2117c7ea56969290ab6aec97cd263\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a5eb13acce613a227c2c2b3da2b88ad6361c9e541ca59ccee0bb5cf42cffccc6\",\"dweb:/ipfs/QmceA9RWHL1BWk4cPnYY55FjAdsEi1LfXrC11RbF8Wb8eW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64\",\"dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229\",\"dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
				"ISuperfluidToken": {
					"abi": [
						{
							"inputs": [],
							"name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_TOKEN_ONLY_HOST",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SF_TOKEN_ONLY_LISTED_AGREEMENT",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"name": "AgreementCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "penaltyAccount",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "rewardAccount",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"name": "AgreementLiquidated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "liquidatorAccount",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "penaltyAccount",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "bondAccount",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bailoutAmount",
									"type": "uint256"
								}
							],
							"name": "AgreementLiquidatedBy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "liquidatorAccount",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "targetAccount",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "rewardAmountReceiver",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "targetAccountBalanceDelta",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "liquidationTypeData",
									"type": "bytes"
								}
							],
							"name": "AgreementLiquidatedV2",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "slotId",
									"type": "uint256"
								}
							],
							"name": "AgreementStateUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "AgreementTerminated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"name": "AgreementUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "bailoutAccount",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bailoutAmount",
									"type": "uint256"
								}
							],
							"name": "Bailout",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"name": "createAgreement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getAccountActiveAgreements",
							"outputs": [
								{
									"internalType": "contract ISuperAgreement[]",
									"name": "activeAgreements",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "dataLength",
									"type": "uint256"
								}
							],
							"name": "getAgreementData",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "agreementClass",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "slotId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "dataLength",
									"type": "uint256"
								}
							],
							"name": "getAgreementStateSlot",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "slotData",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHost",
							"outputs": [
								{
									"internalType": "address",
									"name": "host",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "isAccountCritical",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isCritical",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAccountCriticalNow",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isCritical",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "isAccountSolvent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isSolvent",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAccountSolventNow",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isSolvent",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "liquidationTypeData",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "liquidatorAccount",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "useDefaultRewardAccount",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "targetAccount",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								},
								{
									"internalType": "int256",
									"name": "targetAccountBalanceDelta",
									"type": "int256"
								}
							],
							"name": "makeLiquidationPayoutsV2",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "realtimeBalanceOf",
							"outputs": [
								{
									"internalType": "int256",
									"name": "availableBalance",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "deposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "owedDeposit",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "realtimeBalanceOfNow",
							"outputs": [
								{
									"internalType": "int256",
									"name": "availableBalance",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "deposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "owedDeposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "int256",
									"name": "delta",
									"type": "int256"
								}
							],
							"name": "settleBalance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "dataLength",
									"type": "uint256"
								}
							],
							"name": "terminateAgreement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32[]",
									"name": "data",
									"type": "bytes32[]"
								}
							],
							"name": "updateAgreementData",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "slotId",
									"type": "uint256"
								},
								{
									"internalType": "bytes32[]",
									"name": "slotData",
									"type": "bytes32[]"
								}
							],
							"name": "updateAgreementStateSlot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Superfluid",
						"events": {
							"AgreementCreated(address,bytes32,bytes32[])": {
								"details": "Agreement created event",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"data": "Agreement data",
									"id": "Agreement ID"
								}
							},
							"AgreementLiquidated(address,bytes32,address,address,uint256)": {
								"custom:deprecated": "Use AgreementLiquidatedV2 instead",
								"details": "Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"id": "Agreement ID",
									"penaltyAccount": "Account of the agreement to be penalized",
									"rewardAccount": "Account that collect the reward",
									"rewardAmount": "Amount of liquidation reward"
								}
							},
							"AgreementLiquidatedBy(address,address,bytes32,address,address,uint256,uint256)": {
								"custom:deprecated": "Use AgreementLiquidatedV2 instead",
								"custom:note": " Reward account rule: - if bailout is equal to 0, then   - the bondAccount will get the rewardAmount,   - the penaltyAccount will pay for the rewardAmount. - if bailout is larger than 0, then   - the liquidatorAccount will get the rewardAmouont,   - the bondAccount will pay for both the rewardAmount and bailoutAmount,   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.",
								"details": "Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"bailoutAmount": "Amount of liquidation bailouot",
									"bondAccount": "Account that collect the reward or bailout accounts",
									"id": "Agreement ID",
									"liquidatorAccount": "Account of the agent that performed the liquidation.",
									"penaltyAccount": "Account of the agreement to be penalized",
									"rewardAmount": "Amount of liquidation reward"
								}
							},
							"AgreementLiquidatedV2(address,bytes32,address,address,address,uint256,int256,bytes)": {
								"custom:note": " Reward account rule: - if the agreement is liquidated during the PIC period   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount   - the targetAccount will pay for the rewardAmount - if the agreement is liquidated after the PIC period AND the targetAccount is solvent   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)   - the targetAccount will pay for the rewardAmount - if the targetAccount is insolvent   - the liquidatorAccount will get the rewardAmount (single deposit)   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount   - the targetAccount will receive the bailoutAmount",
								"details": "Agreement liquidation event v2 (including agent account)",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"id": "Agreement ID",
									"liquidationTypeData": "The encoded liquidation type data including the version (how to decode)",
									"liquidatorAccount": "Address of the executor of the liquidation",
									"rewardAmount": "The amount the reward recipient account balance should change by",
									"rewardAmountReceiver": "Account that collects the reward or bails out insolvent accounts",
									"targetAccount": "Account of the stream sender",
									"targetAccountBalanceDelta": "The amount the sender account balance should change by"
								}
							},
							"AgreementStateUpdated(address,address,uint256)": {
								"details": "Agreement account state updated event",
								"params": {
									"account": "Account updated",
									"agreementClass": "Contract address of the agreement",
									"slotId": "slot id of the agreement state"
								}
							},
							"AgreementTerminated(address,bytes32)": {
								"details": "Agreement terminated event",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"id": "Agreement ID"
								}
							},
							"AgreementUpdated(address,bytes32,bytes32[])": {
								"details": "Agreement updated event",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"data": "Agreement data",
									"id": "Agreement ID"
								}
							},
							"Bailout(address,uint256)": {
								"custom:deprecated": "Use AgreementLiquidatedV2 instead",
								"details": "System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)",
								"params": {
									"bailoutAccount": "Account that bailout the penalty account",
									"bailoutAmount": "Amount of account bailout"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"createAgreement(bytes32,bytes32[])": {
								"details": "Create a new agreement",
								"params": {
									"data": "Agreement data",
									"id": "Agreement ID"
								}
							},
							"getAccountActiveAgreements(address)": {
								"details": "An active agreement is one that has state for the account",
								"params": {
									"account": "Account to query"
								},
								"returns": {
									"activeAgreements": "List of accounts that have non-zero states for the account"
								}
							},
							"getAgreementData(address,bytes32,uint256)": {
								"details": "Get data of the agreement",
								"params": {
									"agreementClass": "Contract address of the agreement",
									"id": "Agreement ID"
								},
								"returns": {
									"data": "Data of the agreement"
								}
							},
							"getAgreementStateSlot(address,address,uint256,uint256)": {
								"details": "Get data of the slot of the state of an agreement",
								"params": {
									"account": "Account to query",
									"agreementClass": "Contract address of the agreement",
									"dataLength": "length of the state data",
									"slotId": "slot id of the state"
								}
							},
							"getHost()": {
								"details": "Get superfluid host contract address"
							},
							"isAccountCritical(address,uint256)": {
								"details": "A critical account is when availableBalance < 0",
								"params": {
									"account": "The account to check",
									"timestamp": "The time we'd like to check if the account is critical (should use future)"
								},
								"returns": {
									"isCritical": "Whether the account is critical"
								}
							},
							"isAccountCriticalNow(address)": {
								"details": "A critical account is when availableBalance < 0",
								"params": {
									"account": "The account to check"
								},
								"returns": {
									"isCritical": "Whether the account is critical"
								}
							},
							"isAccountSolvent(address,uint256)": {
								"details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
								"params": {
									"account": "The account to check",
									"timestamp": "The time we'd like to check if the account is solvent (should use future)"
								},
								"returns": {
									"isSolvent": "True if the account is solvent, false otherwise"
								}
							},
							"isAccountSolventNow(address)": {
								"details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
								"params": {
									"account": "The account to check"
								},
								"returns": {
									"isSolvent": "True if the account is solvent, false otherwise"
								}
							},
							"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": {
								"custom:modifiers": "  - onlyAgreement",
								"custom:note": " - If a bailout is required (bailoutAmount > 0)   - the actual reward (single deposit) goes to the executor,   - while the reward account becomes the bailout account   - total bailout include: bailout amount + reward amount   - the targetAccount will be bailed out - If a bailout is not required   - the targetAccount will pay the rewardAmount   - the liquidator (reward account in PIC period) will receive the rewardAmount",
								"details": "Make liquidation payouts (v2)",
								"params": {
									"id": "Agreement ID",
									"liquidationTypeData": "Data regarding the version of the liquidation schema and the type",
									"liquidatorAccount": "Address of the executor of the liquidation",
									"rewardAmount": "The amount the rewarded account will receive",
									"targetAccount": "Account to be liquidated",
									"targetAccountBalanceDelta": "The delta amount the target account balance should change by",
									"useDefaultRewardAccount": "Whether or not the default reward account receives the rewardAmount"
								}
							},
							"realtimeBalanceOf(address,uint256)": {
								"details": "Calculate the real balance of a user, taking in consideration all agreements of the account",
								"params": {
									"account": "for the query",
									"timestamp": "Time of balance"
								},
								"returns": {
									"availableBalance": "Real-time balance",
									"deposit": "Account deposit",
									"owedDeposit": "Account owed Deposit"
								}
							},
							"realtimeBalanceOfNow(address)": {
								"details": "realtimeBalanceOf with timestamp equals to block timestamp",
								"params": {
									"account": "for the query"
								},
								"returns": {
									"availableBalance": "Real-time balance",
									"deposit": "Account deposit",
									"owedDeposit": "Account owed Deposit"
								}
							},
							"settleBalance(address,int256)": {
								"custom:modifiers": "  - onlyAgreement",
								"details": "The agreement needs to make sure that the balance delta is balanced afterwards",
								"params": {
									"account": "Account to query.",
									"delta": "Amount of balance delta to be settled"
								}
							},
							"terminateAgreement(bytes32,uint256)": {
								"details": "Close the agreement",
								"params": {
									"id": "Agreement ID"
								}
							},
							"updateAgreementData(bytes32,bytes32[])": {
								"details": "Create a new agreement",
								"params": {
									"data": "Agreement data",
									"id": "Agreement ID"
								}
							},
							"updateAgreementStateSlot(address,uint256,bytes32[])": {
								"custom:note": " - To clear the storage out, provide zero-ed array of intended length",
								"details": "Update agreement state slot",
								"params": {
									"account": "Account to be updated"
								}
							}
						},
						"title": "Superfluid token interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createAgreement(bytes32,bytes32[])": "12a6a3f8",
							"getAccountActiveAgreements(address)": "386fa221",
							"getAgreementData(address,bytes32,uint256)": "6c2d9f2f",
							"getAgreementStateSlot(address,address,uint256,uint256)": "4b61cc33",
							"getHost()": "20bc4425",
							"isAccountCritical(address,uint256)": "d9d078d6",
							"isAccountCriticalNow(address)": "79359f6f",
							"isAccountSolvent(address,uint256)": "b84cdd4a",
							"isAccountSolventNow(address)": "bb0d196e",
							"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": "1863e809",
							"realtimeBalanceOf(address,uint256)": "eb3537cc",
							"realtimeBalanceOfNow(address)": "2ec8eec7",
							"settleBalance(address,int256)": "cf97256d",
							"terminateAgreement(bytes32,uint256)": "27048397",
							"updateAgreementData(bytes32,bytes32[])": "a1b2bf8b",
							"updateAgreementStateSlot(address,uint256,bytes32[])": "090c415e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_ALREADY_EXISTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_DOES_NOT_EXIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_BURN_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_MOVE_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_LISTED_AGREEMENT\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidatedBy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardAmountReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"}],\"name\":\"AgreementLiquidatedV2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"}],\"name\":\"AgreementStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"AgreementTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bailoutAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"Bailout\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountActiveAgreements\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"activeAgreements\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementData\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementStateSlot\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountCritical\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountCriticalNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountSolvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountSolventNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useDefaultRewardAccount\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"}],\"name\":\"makeLiquidationPayoutsV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"realtimeBalanceOfNow\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"settleBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementStateSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"events\":{\"AgreementCreated(address,bytes32,bytes32[])\":{\"details\":\"Agreement created event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"AgreementLiquidated(address,bytes32,address,address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAccount\":\"Account that collect the reward\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedBy(address,address,bytes32,address,address,uint256,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"custom:note\":\" Reward account rule: - if bailout is equal to 0, then   - the bondAccount will get the rewardAmount,   - the penaltyAccount will pay for the rewardAmount. - if bailout is larger than 0, then   - the liquidatorAccount will get the rewardAmouont,   - the bondAccount will pay for both the rewardAmount and bailoutAmount,   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"bailoutAmount\":\"Amount of liquidation bailouot\",\"bondAccount\":\"Account that collect the reward or bailout accounts\",\"id\":\"Agreement ID\",\"liquidatorAccount\":\"Account of the agent that performed the liquidation.\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedV2(address,bytes32,address,address,address,uint256,int256,bytes)\":{\"custom:note\":\" Reward account rule: - if the agreement is liquidated during the PIC period   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount   - the targetAccount will pay for the rewardAmount - if the agreement is liquidated after the PIC period AND the targetAccount is solvent   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)   - the targetAccount will pay for the rewardAmount - if the targetAccount is insolvent   - the liquidatorAccount will get the rewardAmount (single deposit)   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount   - the targetAccount will receive the bailoutAmount\",\"details\":\"Agreement liquidation event v2 (including agent account)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"liquidationTypeData\":\"The encoded liquidation type data including the version (how to decode)\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the reward recipient account balance should change by\",\"rewardAmountReceiver\":\"Account that collects the reward or bails out insolvent accounts\",\"targetAccount\":\"Account of the stream sender\",\"targetAccountBalanceDelta\":\"The amount the sender account balance should change by\"}},\"AgreementStateUpdated(address,address,uint256)\":{\"details\":\"Agreement account state updated event\",\"params\":{\"account\":\"Account updated\",\"agreementClass\":\"Contract address of the agreement\",\"slotId\":\"slot id of the agreement state\"}},\"AgreementTerminated(address,bytes32)\":{\"details\":\"Agreement terminated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"}},\"AgreementUpdated(address,bytes32,bytes32[])\":{\"details\":\"Agreement updated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"Bailout(address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"bailoutAccount\":\"Account that bailout the penalty account\",\"bailoutAmount\":\"Amount of account bailout\"}}},\"kind\":\"dev\",\"methods\":{\"createAgreement(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"getAccountActiveAgreements(address)\":{\"details\":\"An active agreement is one that has state for the account\",\"params\":{\"account\":\"Account to query\"},\"returns\":{\"activeAgreements\":\"List of accounts that have non-zero states for the account\"}},\"getAgreementData(address,bytes32,uint256)\":{\"details\":\"Get data of the agreement\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"},\"returns\":{\"data\":\"Data of the agreement\"}},\"getAgreementStateSlot(address,address,uint256,uint256)\":{\"details\":\"Get data of the slot of the state of an agreement\",\"params\":{\"account\":\"Account to query\",\"agreementClass\":\"Contract address of the agreement\",\"dataLength\":\"length of the state data\",\"slotId\":\"slot id of the state\"}},\"getHost()\":{\"details\":\"Get superfluid host contract address\"},\"isAccountCritical(address,uint256)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is critical (should use future)\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountCriticalNow(address)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountSolvent(address,uint256)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is solvent (should use future)\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isAccountSolventNow(address)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)\":{\"custom:modifiers\":\"  - onlyAgreement\",\"custom:note\":\" - If a bailout is required (bailoutAmount > 0)   - the actual reward (single deposit) goes to the executor,   - while the reward account becomes the bailout account   - total bailout include: bailout amount + reward amount   - the targetAccount will be bailed out - If a bailout is not required   - the targetAccount will pay the rewardAmount   - the liquidator (reward account in PIC period) will receive the rewardAmount\",\"details\":\"Make liquidation payouts (v2)\",\"params\":{\"id\":\"Agreement ID\",\"liquidationTypeData\":\"Data regarding the version of the liquidation schema and the type\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the rewarded account will receive\",\"targetAccount\":\"Account to be liquidated\",\"targetAccountBalanceDelta\":\"The delta amount the target account balance should change by\",\"useDefaultRewardAccount\":\"Whether or not the default reward account receives the rewardAmount\"}},\"realtimeBalanceOf(address,uint256)\":{\"details\":\"Calculate the real balance of a user, taking in consideration all agreements of the account\",\"params\":{\"account\":\"for the query\",\"timestamp\":\"Time of balance\"},\"returns\":{\"availableBalance\":\"Real-time balance\",\"deposit\":\"Account deposit\",\"owedDeposit\":\"Account owed Deposit\"}},\"realtimeBalanceOfNow(address)\":{\"details\":\"realtimeBalanceOf with timestamp equals to block timestamp\",\"params\":{\"account\":\"for the query\"},\"returns\":{\"availableBalance\":\"Real-time balance\",\"deposit\":\"Account deposit\",\"owedDeposit\":\"Account owed Deposit\"}},\"settleBalance(address,int256)\":{\"custom:modifiers\":\"  - onlyAgreement\",\"details\":\"The agreement needs to make sure that the balance delta is balanced afterwards\",\"params\":{\"account\":\"Account to query.\",\"delta\":\"Amount of balance delta to be settled\"}},\"terminateAgreement(bytes32,uint256)\":{\"details\":\"Close the agreement\",\"params\":{\"id\":\"Agreement ID\"}},\"updateAgreementData(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"updateAgreementStateSlot(address,uint256,bytes32[])\":{\"custom:note\":\" - To clear the storage out, provide zero-ed array of intended length\",\"details\":\"Update agreement state slot\",\"params\":{\"account\":\"Account to be updated\"}}},\"title\":\"Superfluid token interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAccountActiveAgreements(address)\":{\"notice\":\"Get a list of agreements that is active for the account\"},\"isAccountCritical(address,uint256)\":{\"notice\":\"Check if account is critical\"},\"isAccountCriticalNow(address)\":{\"notice\":\"Check if account is critical now (current host.getNow())\"},\"isAccountSolvent(address,uint256)\":{\"notice\":\"Check if account is solvent\"},\"isAccountSolventNow(address)\":{\"notice\":\"Check if account is solvent now\"},\"realtimeBalanceOfNow(address)\":{\"notice\":\"Calculate the realtime balance given the current host.getNow() value\"},\"settleBalance(address,int256)\":{\"notice\":\"Settle balance from an account by the agreement\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":\"ISuperfluidToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getAccountActiveAgreements(address)": {
								"notice": "Get a list of agreements that is active for the account"
							},
							"isAccountCritical(address,uint256)": {
								"notice": "Check if account is critical"
							},
							"isAccountCriticalNow(address)": {
								"notice": "Check if account is critical now (current host.getNow())"
							},
							"isAccountSolvent(address,uint256)": {
								"notice": "Check if account is solvent"
							},
							"isAccountSolventNow(address)": {
								"notice": "Check if account is solvent now"
							},
							"realtimeBalanceOfNow(address)": {
								"notice": "Calculate the realtime balance given the current host.getNow() value"
							},
							"settleBalance(address,int256)": {
								"notice": "Settle balance from an account by the agreement"
							}
						},
						"version": 1
					}
				}
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
				"ERC20WithTokenInfo": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Superfluid",
						"details": "Using abstract contract instead of interfaces because old solidity      does not support interface inheriting other interfaces solhint-disable-next-line no-empty-blocks",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"title": "ERC20 token with token info interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"Using abstract contract instead of interfaces because old solidity      does not support interface inheriting other interfaces solhint-disable-next-line no-empty-blocks\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"title\":\"ERC20 token with token info interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":\"ERC20WithTokenInfo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
				"TokenInfo": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Superfluid",
						"details": "ERC20 standard interface does not specify these functions, but      often the token implementations have them.",
						"kind": "dev",
						"methods": {
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							}
						},
						"title": "ERC20 token info interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"ERC20 standard interface does not specify these functions, but      often the token implementations have them.\",\"kind\":\"dev\",\"methods\":{\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"}},\"title\":\"ERC20 token info interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":\"TokenInfo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OurSuperToken.sol": {
				"OurSuperToken": {
					"abi": [
						{
							"inputs": [],
							"name": "Initialized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factory",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialAddress",
									"type": "address"
								}
							],
							"name": "initializeProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "t",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"author": "jtriley.eth",
						"kind": "dev",
						"methods": {
							"initialize(address,string,string,uint256,address,bytes)": {
								"params": {
									"factory": "Super token factory for initialization",
									"name": "Name of Super Token",
									"symbol": "Symbol of Super Token"
								}
							},
							"initializeProxy(address)": {
								"details": "Called by the SuperTokenFactory contract on upgrade",
								"params": {
									"initialAddress": "logic contract address"
								}
							},
							"mint(address,uint256,bytes)": {
								"params": {
									"amount": "Amount to mint",
									"receiver": "Receiver of minted tokens"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "Mintable Pure Super Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/OurSuperToken.sol\":285:1574  contract OurSuperToken is SuperTokenBase, Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/OurSuperToken.sol\":285:1574  contract OurSuperToken is SuperTokenBase, Ownable {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  0x20\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x20\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/OurSuperToken.sol\":285:1574  contract OurSuperToken is SuperTokenBase, Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/OurSuperToken.sol\":285:1574  contract OurSuperToken is SuperTokenBase, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x94d008ef\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x94d008ef\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa6a05598\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe1f21c67\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xfe9d9303\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x15dacbea\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4a0687ef\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2898:2909  _fallback() */\n      tag_16\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2898:2907  _fallback */\n      tag_17\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2898:2909  _fallback() */\n      jump\t// in\n    tag_16:\n        /* \"contracts/OurSuperToken.sol\":285:1574  contract OurSuperToken is SuperTokenBase, Ownable {... */\n      stop\n    tag_2:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2675:2686  _fallback() */\n      tag_20\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2675:2684  _fallback */\n      tag_17\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2675:2686  _fallback() */\n      jump\t// in\n    tag_20:\n        /* \"contracts/OurSuperToken.sol\":285:1574  contract OurSuperToken is SuperTokenBase, Ownable {... */\n      stop\n        /* \"contracts/OurSuperToken.sol\":1292:1452  function transferFrom(address holder,address spender, address recipient,uint256 amount) external {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/OurSuperToken.sol\":1070:1156  function totalSupply() external view returns (uint t) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/base/UUPSProxy.sol\":1049:1295  function initializeProxy(address initialAddress) external {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OurSuperToken.sol\":933:1064  function mint(address receiver, uint256 amount, bytes memory userData) external onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/OurSuperToken.sol\":542:795  function initialize(... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/OurSuperToken.sol\":1161:1286  function approve(address account,address spender,uint256 amount) external {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/OurSuperToken.sol\":1458:1570  function burn(uint256 amount, bytes memory userData) external {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2370:2387  _beforeFallback() */\n      tag_69\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2370:2385  _beforeFallback */\n      tag_70\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2370:2387  _beforeFallback() */\n      jump\t// in\n    tag_69:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      tag_71\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2407:2424  _implementation() */\n      tag_72\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2407:2422  _implementation */\n      tag_73\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2407:2424  _implementation() */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2397:2406  _delegate */\n      tag_74\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"contracts/OurSuperToken.sol\":1292:1452  function transferFrom(address holder,address spender, address recipient,uint256 amount) external {... */\n    tag_25:\n        /* \"contracts/OurSuperToken.sol\":1399:1445  _transferFrom(holder,spender,recipient,amount) */\n      tag_76\n        /* \"contracts/OurSuperToken.sol\":1413:1419  holder */\n      dup5\n        /* \"contracts/OurSuperToken.sol\":1420:1427  spender */\n      dup5\n        /* \"contracts/OurSuperToken.sol\":1428:1437  recipient */\n      dup5\n        /* \"contracts/OurSuperToken.sol\":1438:1444  amount */\n      dup5\n        /* \"contracts/OurSuperToken.sol\":1399:1412  _transferFrom */\n      tag_77\n        /* \"contracts/OurSuperToken.sol\":1399:1445  _transferFrom(holder,spender,recipient,amount) */\n      jump\t// in\n    tag_76:\n        /* \"contracts/OurSuperToken.sol\":1292:1452  function transferFrom(address holder,address spender, address recipient,uint256 amount) external {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OurSuperToken.sol\":1070:1156  function totalSupply() external view returns (uint t) {... */\n    tag_28:\n        /* \"contracts/OurSuperToken.sol\":1116:1122  uint t */\n      0x00\n        /* \"contracts/OurSuperToken.sol\":1134:1148  _totalSupply() */\n      tag_79\n        /* \"contracts/OurSuperToken.sol\":1134:1146  _totalSupply */\n      tag_80\n        /* \"contracts/OurSuperToken.sol\":1134:1148  _totalSupply() */\n      jump\t// in\n    tag_79:\n      pop\n        /* \"contracts/OurSuperToken.sol\":1070:1156  function totalSupply() external view returns (uint t) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/base/UUPSProxy.sol\":1049:1295  function initializeProxy(address initialAddress) external {... */\n    tag_35:\n        /* \"contracts/base/UUPSProxy.sol\":1141:1142  0 */\n      0x00\n        /* \"contracts/base/UUPSProxy.sol\":1115:1143  initialAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/base/UUPSProxy.sol\":1115:1129  initialAddress */\n      dup2\n        /* \"contracts/base/UUPSProxy.sol\":1115:1143  initialAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/base/UUPSProxy.sol\":1111:1165  if (initialAddress == address(0)) revert ZeroAddress() */\n      tag_82\n      jumpi\n        /* \"contracts/base/UUPSProxy.sol\":1152:1165  ZeroAddress() */\n      mload(0x40)\n      0xd92e233d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/base/UUPSProxy.sol\":1111:1165  if (initialAddress == address(0)) revert ZeroAddress() */\n    tag_82:\n        /* \"contracts/base/UUPSProxy.sol\":1202:1203  0 */\n      0x00\n        /* \"contracts/base/UUPSProxy.sol\":1173:1204  _implementation() != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/base/UUPSProxy.sol\":1173:1190  _implementation() */\n      tag_83\n        /* \"contracts/base/UUPSProxy.sol\":1173:1188  _implementation */\n      tag_73\n        /* \"contracts/base/UUPSProxy.sol\":1173:1190  _implementation() */\n      jump\t// in\n    tag_83:\n        /* \"contracts/base/UUPSProxy.sol\":1173:1204  _implementation() != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/base/UUPSProxy.sol\":1169:1226  if (_implementation() != address(0)) revert Initialized() */\n      tag_84\n      jumpi\n        /* \"contracts/base/UUPSProxy.sol\":1213:1226  Initialized() */\n      mload(0x40)\n      0x5daa87a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/base/UUPSProxy.sol\":1169:1226  if (_implementation() != address(0)) revert Initialized() */\n    tag_84:\n        /* \"contracts/base/UUPSProxy.sol\":1273:1287  initialAddress */\n      dup1\n        /* \"contracts/base/UUPSProxy.sol\":1251:1271  _IMPLEMENTATION_SLOT */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/base/UUPSProxy.sol\":1244:1288  sstore(_IMPLEMENTATION_SLOT, initialAddress) */\n      sstore\n        /* \"contracts/base/UUPSProxy.sol\":1049:1295  function initializeProxy(address initialAddress) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      0x20\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/OurSuperToken.sol\":933:1064  function mint(address receiver, uint256 amount, bytes memory userData) external onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_93:\n        /* \"contracts/OurSuperToken.sol\":1027:1060  _mint(receiver, amount, userData) */\n      tag_95\n        /* \"contracts/OurSuperToken.sol\":1033:1041  receiver */\n      dup4\n        /* \"contracts/OurSuperToken.sol\":1043:1049  amount */\n      dup4\n        /* \"contracts/OurSuperToken.sol\":1051:1059  userData */\n      dup4\n        /* \"contracts/OurSuperToken.sol\":1027:1032  _mint */\n      tag_96\n        /* \"contracts/OurSuperToken.sol\":1027:1060  _mint(receiver, amount, userData) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/OurSuperToken.sol\":933:1064  function mint(address receiver, uint256 amount, bytes memory userData) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OurSuperToken.sol\":542:795  function initialize(... */\n    tag_53:\n        /* \"contracts/OurSuperToken.sol\":713:747  _initialize(factory, name, symbol) */\n      tag_98\n        /* \"contracts/OurSuperToken.sol\":725:732  factory */\n      dup7\n        /* \"contracts/OurSuperToken.sol\":734:738  name */\n      dup7\n        /* \"contracts/OurSuperToken.sol\":740:746  symbol */\n      dup7\n        /* \"contracts/OurSuperToken.sol\":713:724  _initialize */\n      tag_99\n        /* \"contracts/OurSuperToken.sol\":713:747  _initialize(factory, name, symbol) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/OurSuperToken.sol\":751:791  _mint(receiver, initialSupply, userData) */\n      tag_100\n        /* \"contracts/OurSuperToken.sol\":757:765  receiver */\n      dup3\n        /* \"contracts/OurSuperToken.sol\":767:780  initialSupply */\n      dup5\n        /* \"contracts/OurSuperToken.sol\":782:790  userData */\n      dup4\n        /* \"contracts/OurSuperToken.sol\":751:756  _mint */\n      tag_96\n        /* \"contracts/OurSuperToken.sol\":751:791  _mint(receiver, initialSupply, userData) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/OurSuperToken.sol\":542:795  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OurSuperToken.sol\":1161:1286  function approve(address account,address spender,uint256 amount) external {... */\n    tag_58:\n        /* \"contracts/OurSuperToken.sol\":1245:1279  _approve(account, spender, amount) */\n      tag_102\n        /* \"contracts/OurSuperToken.sol\":1254:1261  account */\n      dup4\n        /* \"contracts/OurSuperToken.sol\":1263:1270  spender */\n      dup4\n        /* \"contracts/OurSuperToken.sol\":1272:1278  amount */\n      dup4\n        /* \"contracts/OurSuperToken.sol\":1245:1253  _approve */\n      tag_103\n        /* \"contracts/OurSuperToken.sol\":1245:1279  _approve(account, spender, amount) */\n      jump\t// in\n    tag_102:\n        /* \"contracts/OurSuperToken.sol\":1161:1286  function approve(address account,address spender,uint256 amount) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/OurSuperToken.sol\":1458:1570  function burn(uint256 amount, bytes memory userData) external {... */\n    tag_67:\n        /* \"contracts/OurSuperToken.sol\":1530:1563  _burn(msg.sender,amount,userData) */\n      tag_112\n        /* \"contracts/OurSuperToken.sol\":1536:1546  msg.sender */\n      caller\n        /* \"contracts/OurSuperToken.sol\":1547:1553  amount */\n      dup4\n        /* \"contracts/OurSuperToken.sol\":1554:1562  userData */\n      dup4\n        /* \"contracts/OurSuperToken.sol\":1530:1535  _burn */\n      tag_113\n        /* \"contracts/OurSuperToken.sol\":1530:1563  _burn(msg.sender,amount,userData) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/OurSuperToken.sol\":1458:1570  function burn(uint256 amount, bytes memory userData) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":3198:3244  function _beforeFallback() internal virtual {} */\n    tag_70:\n      jump\t// out\n        /* \"contracts/base/UUPSProxy.sol\":1395:1547  function _implementation()... */\n    tag_73:\n        /* \"contracts/base/UUPSProxy.sol\":1472:1484  address impl */\n      0x00\n        /* \"contracts/base/UUPSProxy.sol\":1519:1539  _IMPLEMENTATION_SLOT */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/base/UUPSProxy.sol\":1513:1540  sload(_IMPLEMENTATION_SLOT) */\n      sload\n        /* \"contracts/base/UUPSProxy.sol\":1505:1540  impl := sload(_IMPLEMENTATION_SLOT) */\n      swap1\n      pop\n        /* \"contracts/base/UUPSProxy.sol\":1395:1547  function _implementation()... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":948:1843  function _delegate(address implementation) internal virtual {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1286:1300  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1283:1284  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1280:1281  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1267:1301  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1500:1501  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1497:1498  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1481:1495  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1478:1479  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1462:1476  implementation */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1455:1460  gas() */\n      gas\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1442:1502  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1576:1592  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1573:1574  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1570:1571  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1555:1593  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1614:1620  result */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1686:1687  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1681:1747  case 0 {... */\n      dup2\n      eq\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1796:1812  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1793:1794  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1786:1813  return(0, returndatasize()) */\n      return\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1681:1747  case 0 {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1716:1732  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1713:1714  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1706:1733  revert(0, returndatasize()) */\n      revert\n        /* \"contracts/base/SuperTokenBase.sol\":2858:3056  function _transferFrom(... */\n    tag_77:\n        /* \"contracts/base/SuperTokenBase.sol\":2993:2997  this */\n      address\n        /* \"contracts/base/SuperTokenBase.sol\":2973:3016  ISuperToken(address(this)).selfTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x41b706be\n        /* \"contracts/base/SuperTokenBase.sol\":3017:3023  holder */\n      dup6\n        /* \"contracts/base/SuperTokenBase.sol\":3025:3032  spender */\n      dup6\n        /* \"contracts/base/SuperTokenBase.sol\":3034:3043  recipient */\n      dup6\n        /* \"contracts/base/SuperTokenBase.sol\":3045:3051  amount */\n      dup6\n        /* \"contracts/base/SuperTokenBase.sol\":2973:3052  ISuperToken(address(this)).selfTransferFrom(holder, spender, recipient, amount) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/base/SuperTokenBase.sol\":2858:3056  function _transferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/base/SuperTokenBase.sol\":1324:1437  function _totalSupply() internal view returns (uint256 t) {... */\n    tag_80:\n        /* \"contracts/base/SuperTokenBase.sol\":1371:1380  uint256 t */\n      0x00\n        /* \"contracts/base/SuperTokenBase.sol\":1413:1417  this */\n      address\n        /* \"contracts/base/SuperTokenBase.sol\":1393:1431  ISuperToken(address(this)).totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/base/SuperTokenBase.sol\":1393:1433  ISuperToken(address(this)).totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"contracts/base/SuperTokenBase.sol\":1386:1433  return ISuperToken(address(this)).totalSupply() */\n      swap1\n      pop\n        /* \"contracts/base/SuperTokenBase.sol\":1324:1437  function _totalSupply() internal view returns (uint256 t) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      0x20\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x20\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/base/SuperTokenBase.sol\":1676:1826  function _mint(address account, uint256 amount, bytes memory userData) internal {... */\n    tag_96:\n        /* \"contracts/base/SuperTokenBase.sol\":1780:1784  this */\n      address\n        /* \"contracts/base/SuperTokenBase.sol\":1760:1795  ISuperToken(address(this)).selfMint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc68d4283\n        /* \"contracts/base/SuperTokenBase.sol\":1796:1803  account */\n      dup5\n        /* \"contracts/base/SuperTokenBase.sol\":1805:1811  amount */\n      dup5\n        /* \"contracts/base/SuperTokenBase.sol\":1813:1821  userData */\n      dup5\n        /* \"contracts/base/SuperTokenBase.sol\":1760:1822  ISuperToken(address(this)).selfMint(account, amount, userData) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/base/SuperTokenBase.sol\":1676:1826  function _mint(address account, uint256 amount, bytes memory userData) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/base/SuperTokenBase.sol\":1021:1266  function _initialize(address factory, string memory name, string memory symbol) internal {... */\n    tag_99:\n        /* \"contracts/base/SuperTokenBase.sol\":1133:1140  factory */\n      dup3\n        /* \"contracts/base/SuperTokenBase.sol\":1114:1168  ISuperTokenFactory(factory).initializeCustomSuperToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd412d344\n        /* \"contracts/base/SuperTokenBase.sol\":1177:1181  this */\n      address\n        /* \"contracts/base/SuperTokenBase.sol\":1114:1183  ISuperTokenFactory(factory).initializeCustomSuperToken(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_145:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_148\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/base/SuperTokenBase.sol\":1207:1211  this */\n      address\n        /* \"contracts/base/SuperTokenBase.sol\":1187:1224  ISuperToken(address(this)).initialize */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42fe0980\n        /* \"contracts/base/SuperTokenBase.sol\":1240:1241  0 */\n      0x00\n        /* \"contracts/base/SuperTokenBase.sol\":1245:1247  18 */\n      0x12\n        /* \"contracts/base/SuperTokenBase.sol\":1249:1253  name */\n      dup6\n        /* \"contracts/base/SuperTokenBase.sol\":1255:1261  symbol */\n      dup6\n        /* \"contracts/base/SuperTokenBase.sol\":1187:1262  ISuperToken(address(this)).initialize(IERC20(address(0)), 18, name, symbol) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/base/SuperTokenBase.sol\":1021:1266  function _initialize(address factory, string memory name, string memory symbol) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/base/SuperTokenBase.sol\":2409:2561  function _approve(address account, address spender, uint256 amount) internal {... */\n    tag_103:\n        /* \"contracts/base/SuperTokenBase.sol\":2510:2514  this */\n      address\n        /* \"contracts/base/SuperTokenBase.sol\":2490:2531  ISuperToken(address(this)).selfApproveFor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x66a12fb6\n        /* \"contracts/base/SuperTokenBase.sol\":2532:2539  account */\n      dup5\n        /* \"contracts/base/SuperTokenBase.sol\":2541:2548  spender */\n      dup5\n        /* \"contracts/base/SuperTokenBase.sol\":2550:2556  amount */\n      dup5\n        /* \"contracts/base/SuperTokenBase.sol\":2490:2557  ISuperToken(address(this)).selfApproveFor(account, spender, amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/base/SuperTokenBase.sol\":2409:2561  function _approve(address account, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/base/SuperTokenBase.sol\":2055:2199  function _burn(address from, uint256 amount, bytes memory userData) internal {... */\n    tag_113:\n        /* \"contracts/base/SuperTokenBase.sol\":2156:2160  this */\n      address\n        /* \"contracts/base/SuperTokenBase.sol\":2136:2171  ISuperToken(address(this)).selfBurn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9d876741\n        /* \"contracts/base/SuperTokenBase.sol\":2172:2176  from */\n      dup5\n        /* \"contracts/base/SuperTokenBase.sol\":2178:2184  amount */\n      dup5\n        /* \"contracts/base/SuperTokenBase.sol\":2186:2194  userData */\n      dup5\n        /* \"contracts/base/SuperTokenBase.sol\":2136:2195  ISuperToken(address(this)).selfBurn(from, amount, userData) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_161:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_164:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/base/SuperTokenBase.sol\":2055:2199  function _burn(address from, uint256 amount, bytes memory userData) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_166:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_167:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_168:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_169:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_170:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_218\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_169\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_171:\n        /* \"#utility.yul\":641:665   */\n      tag_220\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_170\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_221\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_221:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_172:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_223\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_171\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_173:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_174:\n        /* \"#utility.yul\":997:1021   */\n      tag_226\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_173\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_227\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_227:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_175:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_229\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_174\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1962   */\n    tag_24:\n        /* \"#utility.yul\":1283:1289   */\n      0x00\n        /* \"#utility.yul\":1291:1297   */\n      dup1\n        /* \"#utility.yul\":1299:1305   */\n      0x00\n        /* \"#utility.yul\":1307:1313   */\n      dup1\n        /* \"#utility.yul\":1356:1359   */\n      0x80\n        /* \"#utility.yul\":1344:1353   */\n      dup6\n        /* \"#utility.yul\":1335:1342   */\n      dup8\n        /* \"#utility.yul\":1331:1354   */\n      sub\n        /* \"#utility.yul\":1327:1360   */\n      slt\n        /* \"#utility.yul\":1324:1444   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":1363:1442   */\n      tag_232\n      tag_167\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":1324:1444   */\n    tag_231:\n        /* \"#utility.yul\":1483:1484   */\n      0x00\n        /* \"#utility.yul\":1508:1561   */\n      tag_233\n        /* \"#utility.yul\":1553:1560   */\n      dup8\n        /* \"#utility.yul\":1544:1550   */\n      dup3\n        /* \"#utility.yul\":1533:1542   */\n      dup9\n        /* \"#utility.yul\":1529:1551   */\n      add\n        /* \"#utility.yul\":1508:1561   */\n      tag_172\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":1498:1561   */\n      swap5\n      pop\n        /* \"#utility.yul\":1454:1571   */\n      pop\n        /* \"#utility.yul\":1610:1612   */\n      0x20\n        /* \"#utility.yul\":1636:1689   */\n      tag_234\n        /* \"#utility.yul\":1681:1688   */\n      dup8\n        /* \"#utility.yul\":1672:1678   */\n      dup3\n        /* \"#utility.yul\":1661:1670   */\n      dup9\n        /* \"#utility.yul\":1657:1679   */\n      add\n        /* \"#utility.yul\":1636:1689   */\n      tag_172\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":1626:1689   */\n      swap4\n      pop\n        /* \"#utility.yul\":1581:1699   */\n      pop\n        /* \"#utility.yul\":1738:1740   */\n      0x40\n        /* \"#utility.yul\":1764:1817   */\n      tag_235\n        /* \"#utility.yul\":1809:1816   */\n      dup8\n        /* \"#utility.yul\":1800:1806   */\n      dup3\n        /* \"#utility.yul\":1789:1798   */\n      dup9\n        /* \"#utility.yul\":1785:1807   */\n      add\n        /* \"#utility.yul\":1764:1817   */\n      tag_172\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":1754:1817   */\n      swap3\n      pop\n        /* \"#utility.yul\":1709:1827   */\n      pop\n        /* \"#utility.yul\":1866:1868   */\n      0x60\n        /* \"#utility.yul\":1892:1945   */\n      tag_236\n        /* \"#utility.yul\":1937:1944   */\n      dup8\n        /* \"#utility.yul\":1928:1934   */\n      dup3\n        /* \"#utility.yul\":1917:1926   */\n      dup9\n        /* \"#utility.yul\":1913:1935   */\n      add\n        /* \"#utility.yul\":1892:1945   */\n      tag_175\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":1882:1945   */\n      swap2\n      pop\n        /* \"#utility.yul\":1837:1955   */\n      pop\n        /* \"#utility.yul\":1197:1962   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1968:2086   */\n    tag_176:\n        /* \"#utility.yul\":2055:2079   */\n      tag_238\n        /* \"#utility.yul\":2073:2078   */\n      dup2\n        /* \"#utility.yul\":2055:2079   */\n      tag_173\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2050:2053   */\n      dup3\n        /* \"#utility.yul\":2043:2080   */\n      mstore\n        /* \"#utility.yul\":1968:2086   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2092:2314   */\n    tag_30:\n        /* \"#utility.yul\":2185:2189   */\n      0x00\n        /* \"#utility.yul\":2223:2225   */\n      0x20\n        /* \"#utility.yul\":2212:2221   */\n      dup3\n        /* \"#utility.yul\":2208:2226   */\n      add\n        /* \"#utility.yul\":2200:2226   */\n      swap1\n      pop\n        /* \"#utility.yul\":2236:2307   */\n      tag_240\n        /* \"#utility.yul\":2304:2305   */\n      0x00\n        /* \"#utility.yul\":2293:2302   */\n      dup4\n        /* \"#utility.yul\":2289:2306   */\n      add\n        /* \"#utility.yul\":2280:2286   */\n      dup5\n        /* \"#utility.yul\":2236:2307   */\n      tag_176\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":2092:2314   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2320:2649   */\n    tag_34:\n        /* \"#utility.yul\":2379:2385   */\n      0x00\n        /* \"#utility.yul\":2428:2430   */\n      0x20\n        /* \"#utility.yul\":2416:2425   */\n      dup3\n        /* \"#utility.yul\":2407:2414   */\n      dup5\n        /* \"#utility.yul\":2403:2426   */\n      sub\n        /* \"#utility.yul\":2399:2431   */\n      slt\n        /* \"#utility.yul\":2396:2515   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":2434:2513   */\n      tag_243\n      tag_167\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2396:2515   */\n    tag_242:\n        /* \"#utility.yul\":2554:2555   */\n      0x00\n        /* \"#utility.yul\":2579:2632   */\n      tag_244\n        /* \"#utility.yul\":2624:2631   */\n      dup5\n        /* \"#utility.yul\":2615:2621   */\n      dup3\n        /* \"#utility.yul\":2604:2613   */\n      dup6\n        /* \"#utility.yul\":2600:2622   */\n      add\n        /* \"#utility.yul\":2579:2632   */\n      tag_172\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":2569:2632   */\n      swap2\n      pop\n        /* \"#utility.yul\":2525:2642   */\n      pop\n        /* \"#utility.yul\":2320:2649   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2655:2773   */\n    tag_177:\n        /* \"#utility.yul\":2742:2766   */\n      tag_246\n        /* \"#utility.yul\":2760:2765   */\n      dup2\n        /* \"#utility.yul\":2742:2766   */\n      tag_170\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":2737:2740   */\n      dup3\n        /* \"#utility.yul\":2730:2767   */\n      mstore\n        /* \"#utility.yul\":2655:2773   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2779:3001   */\n    tag_43:\n        /* \"#utility.yul\":2872:2876   */\n      0x00\n        /* \"#utility.yul\":2910:2912   */\n      0x20\n        /* \"#utility.yul\":2899:2908   */\n      dup3\n        /* \"#utility.yul\":2895:2913   */\n      add\n        /* \"#utility.yul\":2887:2913   */\n      swap1\n      pop\n        /* \"#utility.yul\":2923:2994   */\n      tag_248\n        /* \"#utility.yul\":2991:2992   */\n      0x00\n        /* \"#utility.yul\":2980:2989   */\n      dup4\n        /* \"#utility.yul\":2976:2993   */\n      add\n        /* \"#utility.yul\":2967:2973   */\n      dup5\n        /* \"#utility.yul\":2923:2994   */\n      tag_177\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":2779:3001   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3007:3124   */\n    tag_178:\n        /* \"#utility.yul\":3116:3117   */\n      0x00\n        /* \"#utility.yul\":3113:3114   */\n      dup1\n        /* \"#utility.yul\":3106:3118   */\n      revert\n        /* \"#utility.yul\":3130:3247   */\n    tag_179:\n        /* \"#utility.yul\":3239:3240   */\n      0x00\n        /* \"#utility.yul\":3236:3237   */\n      dup1\n        /* \"#utility.yul\":3229:3241   */\n      revert\n        /* \"#utility.yul\":3253:3355   */\n    tag_180:\n        /* \"#utility.yul\":3294:3300   */\n      0x00\n        /* \"#utility.yul\":3345:3347   */\n      0x1f\n        /* \"#utility.yul\":3341:3348   */\n      not\n        /* \"#utility.yul\":3336:3338   */\n      0x1f\n        /* \"#utility.yul\":3329:3334   */\n      dup4\n        /* \"#utility.yul\":3325:3339   */\n      add\n        /* \"#utility.yul\":3321:3349   */\n      and\n        /* \"#utility.yul\":3311:3349   */\n      swap1\n      pop\n        /* \"#utility.yul\":3253:3355   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3361:3541   */\n    tag_181:\n        /* \"#utility.yul\":3409:3486   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3406:3407   */\n      0x00\n        /* \"#utility.yul\":3399:3487   */\n      mstore\n        /* \"#utility.yul\":3506:3510   */\n      0x41\n        /* \"#utility.yul\":3503:3504   */\n      0x04\n        /* \"#utility.yul\":3496:3511   */\n      mstore\n        /* \"#utility.yul\":3530:3534   */\n      0x24\n        /* \"#utility.yul\":3527:3528   */\n      0x00\n        /* \"#utility.yul\":3520:3535   */\n      revert\n        /* \"#utility.yul\":3547:3828   */\n    tag_182:\n        /* \"#utility.yul\":3630:3657   */\n      tag_254\n        /* \"#utility.yul\":3652:3656   */\n      dup3\n        /* \"#utility.yul\":3630:3657   */\n      tag_180\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":3622:3628   */\n      dup2\n        /* \"#utility.yul\":3618:3658   */\n      add\n        /* \"#utility.yul\":3760:3766   */\n      dup2\n        /* \"#utility.yul\":3748:3758   */\n      dup2\n        /* \"#utility.yul\":3745:3767   */\n      lt\n        /* \"#utility.yul\":3724:3742   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3712:3722   */\n      dup3\n        /* \"#utility.yul\":3709:3743   */\n      gt\n        /* \"#utility.yul\":3706:3768   */\n      or\n        /* \"#utility.yul\":3703:3791   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":3771:3789   */\n      tag_256\n      tag_181\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":3703:3791   */\n    tag_255:\n        /* \"#utility.yul\":3811:3821   */\n      dup1\n        /* \"#utility.yul\":3807:3809   */\n      0x40\n        /* \"#utility.yul\":3800:3822   */\n      mstore\n        /* \"#utility.yul\":3590:3828   */\n      pop\n        /* \"#utility.yul\":3547:3828   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3834:3963   */\n    tag_183:\n        /* \"#utility.yul\":3868:3874   */\n      0x00\n        /* \"#utility.yul\":3895:3915   */\n      tag_258\n      tag_166\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":3885:3915   */\n      swap1\n      pop\n        /* \"#utility.yul\":3924:3957   */\n      tag_259\n        /* \"#utility.yul\":3952:3956   */\n      dup3\n        /* \"#utility.yul\":3944:3950   */\n      dup3\n        /* \"#utility.yul\":3924:3957   */\n      tag_182\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":3834:3963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3969:4276   */\n    tag_184:\n        /* \"#utility.yul\":4030:4034   */\n      0x00\n        /* \"#utility.yul\":4120:4138   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4112:4118   */\n      dup3\n        /* \"#utility.yul\":4109:4139   */\n      gt\n        /* \"#utility.yul\":4106:4162   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":4142:4160   */\n      tag_262\n      tag_181\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":4106:4162   */\n    tag_261:\n        /* \"#utility.yul\":4180:4209   */\n      tag_263\n        /* \"#utility.yul\":4202:4208   */\n      dup3\n        /* \"#utility.yul\":4180:4209   */\n      tag_180\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":4172:4209   */\n      swap1\n      pop\n        /* \"#utility.yul\":4264:4268   */\n      0x20\n        /* \"#utility.yul\":4258:4262   */\n      dup2\n        /* \"#utility.yul\":4254:4269   */\n      add\n        /* \"#utility.yul\":4246:4269   */\n      swap1\n      pop\n        /* \"#utility.yul\":3969:4276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4282:4428   */\n    tag_185:\n        /* \"#utility.yul\":4379:4385   */\n      dup3\n        /* \"#utility.yul\":4374:4377   */\n      dup2\n        /* \"#utility.yul\":4369:4372   */\n      dup4\n        /* \"#utility.yul\":4356:4386   */\n      calldatacopy\n        /* \"#utility.yul\":4420:4421   */\n      0x00\n        /* \"#utility.yul\":4411:4417   */\n      dup4\n        /* \"#utility.yul\":4406:4409   */\n      dup4\n        /* \"#utility.yul\":4402:4418   */\n      add\n        /* \"#utility.yul\":4395:4422   */\n      mstore\n        /* \"#utility.yul\":4282:4428   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4434:4857   */\n    tag_186:\n        /* \"#utility.yul\":4511:4516   */\n      0x00\n        /* \"#utility.yul\":4536:4601   */\n      tag_266\n        /* \"#utility.yul\":4552:4600   */\n      tag_267\n        /* \"#utility.yul\":4593:4599   */\n      dup5\n        /* \"#utility.yul\":4552:4600   */\n      tag_184\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":4536:4601   */\n      tag_183\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":4527:4601   */\n      swap1\n      pop\n        /* \"#utility.yul\":4624:4630   */\n      dup3\n        /* \"#utility.yul\":4617:4622   */\n      dup2\n        /* \"#utility.yul\":4610:4631   */\n      mstore\n        /* \"#utility.yul\":4662:4666   */\n      0x20\n        /* \"#utility.yul\":4655:4660   */\n      dup2\n        /* \"#utility.yul\":4651:4667   */\n      add\n        /* \"#utility.yul\":4700:4703   */\n      dup5\n        /* \"#utility.yul\":4691:4697   */\n      dup5\n        /* \"#utility.yul\":4686:4689   */\n      dup5\n        /* \"#utility.yul\":4682:4698   */\n      add\n        /* \"#utility.yul\":4679:4704   */\n      gt\n        /* \"#utility.yul\":4676:4788   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":4707:4786   */\n      tag_269\n      tag_179\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":4676:4788   */\n    tag_268:\n        /* \"#utility.yul\":4797:4851   */\n      tag_270\n        /* \"#utility.yul\":4844:4850   */\n      dup5\n        /* \"#utility.yul\":4839:4842   */\n      dup3\n        /* \"#utility.yul\":4834:4837   */\n      dup6\n        /* \"#utility.yul\":4797:4851   */\n      tag_185\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":4517:4857   */\n      pop\n        /* \"#utility.yul\":4434:4857   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4876:5214   */\n    tag_187:\n        /* \"#utility.yul\":4931:4936   */\n      0x00\n        /* \"#utility.yul\":4980:4983   */\n      dup3\n        /* \"#utility.yul\":4973:4977   */\n      0x1f\n        /* \"#utility.yul\":4965:4971   */\n      dup4\n        /* \"#utility.yul\":4961:4978   */\n      add\n        /* \"#utility.yul\":4957:4984   */\n      slt\n        /* \"#utility.yul\":4947:5069   */\n      tag_272\n      jumpi\n        /* \"#utility.yul\":4988:5067   */\n      tag_273\n      tag_178\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4947:5069   */\n    tag_272:\n        /* \"#utility.yul\":5105:5111   */\n      dup2\n        /* \"#utility.yul\":5092:5112   */\n      calldataload\n        /* \"#utility.yul\":5130:5208   */\n      tag_274\n        /* \"#utility.yul\":5204:5207   */\n      dup5\n        /* \"#utility.yul\":5196:5202   */\n      dup3\n        /* \"#utility.yul\":5189:5193   */\n      0x20\n        /* \"#utility.yul\":5181:5187   */\n      dup7\n        /* \"#utility.yul\":5177:5194   */\n      add\n        /* \"#utility.yul\":5130:5208   */\n      tag_186\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":5121:5208   */\n      swap2\n      pop\n        /* \"#utility.yul\":4937:5214   */\n      pop\n        /* \"#utility.yul\":4876:5214   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5220:6017   */\n    tag_47:\n        /* \"#utility.yul\":5306:5312   */\n      0x00\n        /* \"#utility.yul\":5314:5320   */\n      dup1\n        /* \"#utility.yul\":5322:5328   */\n      0x00\n        /* \"#utility.yul\":5371:5373   */\n      0x60\n        /* \"#utility.yul\":5359:5368   */\n      dup5\n        /* \"#utility.yul\":5350:5357   */\n      dup7\n        /* \"#utility.yul\":5346:5369   */\n      sub\n        /* \"#utility.yul\":5342:5374   */\n      slt\n        /* \"#utility.yul\":5339:5458   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":5377:5456   */\n      tag_277\n      tag_167\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":5339:5458   */\n    tag_276:\n        /* \"#utility.yul\":5497:5498   */\n      0x00\n        /* \"#utility.yul\":5522:5575   */\n      tag_278\n        /* \"#utility.yul\":5567:5574   */\n      dup7\n        /* \"#utility.yul\":5558:5564   */\n      dup3\n        /* \"#utility.yul\":5547:5556   */\n      dup8\n        /* \"#utility.yul\":5543:5565   */\n      add\n        /* \"#utility.yul\":5522:5575   */\n      tag_172\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":5512:5575   */\n      swap4\n      pop\n        /* \"#utility.yul\":5468:5585   */\n      pop\n        /* \"#utility.yul\":5624:5626   */\n      0x20\n        /* \"#utility.yul\":5650:5703   */\n      tag_279\n        /* \"#utility.yul\":5695:5702   */\n      dup7\n        /* \"#utility.yul\":5686:5692   */\n      dup3\n        /* \"#utility.yul\":5675:5684   */\n      dup8\n        /* \"#utility.yul\":5671:5693   */\n      add\n        /* \"#utility.yul\":5650:5703   */\n      tag_175\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":5640:5703   */\n      swap3\n      pop\n        /* \"#utility.yul\":5595:5713   */\n      pop\n        /* \"#utility.yul\":5780:5782   */\n      0x40\n        /* \"#utility.yul\":5769:5778   */\n      dup5\n        /* \"#utility.yul\":5765:5783   */\n      add\n        /* \"#utility.yul\":5752:5784   */\n      calldataload\n        /* \"#utility.yul\":5811:5829   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5803:5809   */\n      dup2\n        /* \"#utility.yul\":5800:5830   */\n      gt\n        /* \"#utility.yul\":5797:5914   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":5833:5912   */\n      tag_281\n      tag_168\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":5797:5914   */\n    tag_280:\n        /* \"#utility.yul\":5938:6000   */\n      tag_282\n        /* \"#utility.yul\":5992:5999   */\n      dup7\n        /* \"#utility.yul\":5983:5989   */\n      dup3\n        /* \"#utility.yul\":5972:5981   */\n      dup8\n        /* \"#utility.yul\":5968:5990   */\n      add\n        /* \"#utility.yul\":5938:6000   */\n      tag_187\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":5928:6000   */\n      swap2\n      pop\n        /* \"#utility.yul\":5723:6010   */\n      pop\n        /* \"#utility.yul\":5220:6017   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6023:6331   */\n    tag_188:\n        /* \"#utility.yul\":6085:6089   */\n      0x00\n        /* \"#utility.yul\":6175:6193   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6167:6173   */\n      dup3\n        /* \"#utility.yul\":6164:6194   */\n      gt\n        /* \"#utility.yul\":6161:6217   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":6197:6215   */\n      tag_285\n      tag_181\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":6161:6217   */\n    tag_284:\n        /* \"#utility.yul\":6235:6264   */\n      tag_286\n        /* \"#utility.yul\":6257:6263   */\n      dup3\n        /* \"#utility.yul\":6235:6264   */\n      tag_180\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":6227:6264   */\n      swap1\n      pop\n        /* \"#utility.yul\":6319:6323   */\n      0x20\n        /* \"#utility.yul\":6313:6317   */\n      dup2\n        /* \"#utility.yul\":6309:6324   */\n      add\n        /* \"#utility.yul\":6301:6324   */\n      swap1\n      pop\n        /* \"#utility.yul\":6023:6331   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6337:6762   */\n    tag_189:\n        /* \"#utility.yul\":6415:6420   */\n      0x00\n        /* \"#utility.yul\":6440:6506   */\n      tag_288\n        /* \"#utility.yul\":6456:6505   */\n      tag_289\n        /* \"#utility.yul\":6498:6504   */\n      dup5\n        /* \"#utility.yul\":6456:6505   */\n      tag_188\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":6440:6506   */\n      tag_183\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":6431:6506   */\n      swap1\n      pop\n        /* \"#utility.yul\":6529:6535   */\n      dup3\n        /* \"#utility.yul\":6522:6527   */\n      dup2\n        /* \"#utility.yul\":6515:6536   */\n      mstore\n        /* \"#utility.yul\":6567:6571   */\n      0x20\n        /* \"#utility.yul\":6560:6565   */\n      dup2\n        /* \"#utility.yul\":6556:6572   */\n      add\n        /* \"#utility.yul\":6605:6608   */\n      dup5\n        /* \"#utility.yul\":6596:6602   */\n      dup5\n        /* \"#utility.yul\":6591:6594   */\n      dup5\n        /* \"#utility.yul\":6587:6603   */\n      add\n        /* \"#utility.yul\":6584:6609   */\n      gt\n        /* \"#utility.yul\":6581:6693   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":6612:6691   */\n      tag_291\n      tag_179\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":6581:6693   */\n    tag_290:\n        /* \"#utility.yul\":6702:6756   */\n      tag_292\n        /* \"#utility.yul\":6749:6755   */\n      dup5\n        /* \"#utility.yul\":6744:6747   */\n      dup3\n        /* \"#utility.yul\":6739:6742   */\n      dup6\n        /* \"#utility.yul\":6702:6756   */\n      tag_185\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":6421:6762   */\n      pop\n        /* \"#utility.yul\":6337:6762   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6782:7122   */\n    tag_190:\n        /* \"#utility.yul\":6838:6843   */\n      0x00\n        /* \"#utility.yul\":6887:6890   */\n      dup3\n        /* \"#utility.yul\":6880:6884   */\n      0x1f\n        /* \"#utility.yul\":6872:6878   */\n      dup4\n        /* \"#utility.yul\":6868:6885   */\n      add\n        /* \"#utility.yul\":6864:6891   */\n      slt\n        /* \"#utility.yul\":6854:6976   */\n      tag_294\n      jumpi\n        /* \"#utility.yul\":6895:6974   */\n      tag_295\n      tag_178\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":6854:6976   */\n    tag_294:\n        /* \"#utility.yul\":7012:7018   */\n      dup2\n        /* \"#utility.yul\":6999:7019   */\n      calldataload\n        /* \"#utility.yul\":7037:7116   */\n      tag_296\n        /* \"#utility.yul\":7112:7115   */\n      dup5\n        /* \"#utility.yul\":7104:7110   */\n      dup3\n        /* \"#utility.yul\":7097:7101   */\n      0x20\n        /* \"#utility.yul\":7089:7095   */\n      dup7\n        /* \"#utility.yul\":7085:7102   */\n      add\n        /* \"#utility.yul\":7037:7116   */\n      tag_189\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":7028:7116   */\n      swap2\n      pop\n        /* \"#utility.yul\":6844:7122   */\n      pop\n        /* \"#utility.yul\":6782:7122   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7128:8723   */\n    tag_52:\n        /* \"#utility.yul\":7261:7267   */\n      0x00\n        /* \"#utility.yul\":7269:7275   */\n      dup1\n        /* \"#utility.yul\":7277:7283   */\n      0x00\n        /* \"#utility.yul\":7285:7291   */\n      dup1\n        /* \"#utility.yul\":7293:7299   */\n      0x00\n        /* \"#utility.yul\":7301:7307   */\n      dup1\n        /* \"#utility.yul\":7350:7353   */\n      0xc0\n        /* \"#utility.yul\":7338:7347   */\n      dup8\n        /* \"#utility.yul\":7329:7336   */\n      dup10\n        /* \"#utility.yul\":7325:7348   */\n      sub\n        /* \"#utility.yul\":7321:7354   */\n      slt\n        /* \"#utility.yul\":7318:7438   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":7357:7436   */\n      tag_299\n      tag_167\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":7318:7438   */\n    tag_298:\n        /* \"#utility.yul\":7477:7478   */\n      0x00\n        /* \"#utility.yul\":7502:7555   */\n      tag_300\n        /* \"#utility.yul\":7547:7554   */\n      dup10\n        /* \"#utility.yul\":7538:7544   */\n      dup3\n        /* \"#utility.yul\":7527:7536   */\n      dup11\n        /* \"#utility.yul\":7523:7545   */\n      add\n        /* \"#utility.yul\":7502:7555   */\n      tag_172\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":7492:7555   */\n      swap7\n      pop\n        /* \"#utility.yul\":7448:7565   */\n      pop\n        /* \"#utility.yul\":7632:7634   */\n      0x20\n        /* \"#utility.yul\":7621:7630   */\n      dup8\n        /* \"#utility.yul\":7617:7635   */\n      add\n        /* \"#utility.yul\":7604:7636   */\n      calldataload\n        /* \"#utility.yul\":7663:7681   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7655:7661   */\n      dup2\n        /* \"#utility.yul\":7652:7682   */\n      gt\n        /* \"#utility.yul\":7649:7766   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":7685:7764   */\n      tag_302\n      tag_168\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":7649:7766   */\n    tag_301:\n        /* \"#utility.yul\":7790:7853   */\n      tag_303\n        /* \"#utility.yul\":7845:7852   */\n      dup10\n        /* \"#utility.yul\":7836:7842   */\n      dup3\n        /* \"#utility.yul\":7825:7834   */\n      dup11\n        /* \"#utility.yul\":7821:7843   */\n      add\n        /* \"#utility.yul\":7790:7853   */\n      tag_190\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":7780:7853   */\n      swap6\n      pop\n        /* \"#utility.yul\":7575:7863   */\n      pop\n        /* \"#utility.yul\":7930:7932   */\n      0x40\n        /* \"#utility.yul\":7919:7928   */\n      dup8\n        /* \"#utility.yul\":7915:7933   */\n      add\n        /* \"#utility.yul\":7902:7934   */\n      calldataload\n        /* \"#utility.yul\":7961:7979   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7953:7959   */\n      dup2\n        /* \"#utility.yul\":7950:7980   */\n      gt\n        /* \"#utility.yul\":7947:8064   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":7983:8062   */\n      tag_305\n      tag_168\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":7947:8064   */\n    tag_304:\n        /* \"#utility.yul\":8088:8151   */\n      tag_306\n        /* \"#utility.yul\":8143:8150   */\n      dup10\n        /* \"#utility.yul\":8134:8140   */\n      dup3\n        /* \"#utility.yul\":8123:8132   */\n      dup11\n        /* \"#utility.yul\":8119:8141   */\n      add\n        /* \"#utility.yul\":8088:8151   */\n      tag_190\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":8078:8151   */\n      swap5\n      pop\n        /* \"#utility.yul\":7873:8161   */\n      pop\n        /* \"#utility.yul\":8200:8202   */\n      0x60\n        /* \"#utility.yul\":8226:8279   */\n      tag_307\n        /* \"#utility.yul\":8271:8278   */\n      dup10\n        /* \"#utility.yul\":8262:8268   */\n      dup3\n        /* \"#utility.yul\":8251:8260   */\n      dup11\n        /* \"#utility.yul\":8247:8269   */\n      add\n        /* \"#utility.yul\":8226:8279   */\n      tag_175\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":8216:8279   */\n      swap4\n      pop\n        /* \"#utility.yul\":8171:8289   */\n      pop\n        /* \"#utility.yul\":8328:8331   */\n      0x80\n        /* \"#utility.yul\":8355:8408   */\n      tag_308\n        /* \"#utility.yul\":8400:8407   */\n      dup10\n        /* \"#utility.yul\":8391:8397   */\n      dup3\n        /* \"#utility.yul\":8380:8389   */\n      dup11\n        /* \"#utility.yul\":8376:8398   */\n      add\n        /* \"#utility.yul\":8355:8408   */\n      tag_172\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":8345:8408   */\n      swap3\n      pop\n        /* \"#utility.yul\":8299:8418   */\n      pop\n        /* \"#utility.yul\":8485:8488   */\n      0xa0\n        /* \"#utility.yul\":8474:8483   */\n      dup8\n        /* \"#utility.yul\":8470:8489   */\n      add\n        /* \"#utility.yul\":8457:8490   */\n      calldataload\n        /* \"#utility.yul\":8517:8535   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8509:8515   */\n      dup2\n        /* \"#utility.yul\":8506:8536   */\n      gt\n        /* \"#utility.yul\":8503:8620   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":8539:8618   */\n      tag_310\n      tag_168\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":8503:8620   */\n    tag_309:\n        /* \"#utility.yul\":8644:8706   */\n      tag_311\n        /* \"#utility.yul\":8698:8705   */\n      dup10\n        /* \"#utility.yul\":8689:8695   */\n      dup3\n        /* \"#utility.yul\":8678:8687   */\n      dup11\n        /* \"#utility.yul\":8674:8696   */\n      add\n        /* \"#utility.yul\":8644:8706   */\n      tag_187\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":8634:8706   */\n      swap2\n      pop\n        /* \"#utility.yul\":8428:8716   */\n      pop\n        /* \"#utility.yul\":7128:8723   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":8729:9348   */\n    tag_57:\n        /* \"#utility.yul\":8806:8812   */\n      0x00\n        /* \"#utility.yul\":8814:8820   */\n      dup1\n        /* \"#utility.yul\":8822:8828   */\n      0x00\n        /* \"#utility.yul\":8871:8873   */\n      0x60\n        /* \"#utility.yul\":8859:8868   */\n      dup5\n        /* \"#utility.yul\":8850:8857   */\n      dup7\n        /* \"#utility.yul\":8846:8869   */\n      sub\n        /* \"#utility.yul\":8842:8874   */\n      slt\n        /* \"#utility.yul\":8839:8958   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":8877:8956   */\n      tag_314\n      tag_167\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":8839:8958   */\n    tag_313:\n        /* \"#utility.yul\":8997:8998   */\n      0x00\n        /* \"#utility.yul\":9022:9075   */\n      tag_315\n        /* \"#utility.yul\":9067:9074   */\n      dup7\n        /* \"#utility.yul\":9058:9064   */\n      dup3\n        /* \"#utility.yul\":9047:9056   */\n      dup8\n        /* \"#utility.yul\":9043:9065   */\n      add\n        /* \"#utility.yul\":9022:9075   */\n      tag_172\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":9012:9075   */\n      swap4\n      pop\n        /* \"#utility.yul\":8968:9085   */\n      pop\n        /* \"#utility.yul\":9124:9126   */\n      0x20\n        /* \"#utility.yul\":9150:9203   */\n      tag_316\n        /* \"#utility.yul\":9195:9202   */\n      dup7\n        /* \"#utility.yul\":9186:9192   */\n      dup3\n        /* \"#utility.yul\":9175:9184   */\n      dup8\n        /* \"#utility.yul\":9171:9193   */\n      add\n        /* \"#utility.yul\":9150:9203   */\n      tag_172\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":9140:9203   */\n      swap3\n      pop\n        /* \"#utility.yul\":9095:9213   */\n      pop\n        /* \"#utility.yul\":9252:9254   */\n      0x40\n        /* \"#utility.yul\":9278:9331   */\n      tag_317\n        /* \"#utility.yul\":9323:9330   */\n      dup7\n        /* \"#utility.yul\":9314:9320   */\n      dup3\n        /* \"#utility.yul\":9303:9312   */\n      dup8\n        /* \"#utility.yul\":9299:9321   */\n      add\n        /* \"#utility.yul\":9278:9331   */\n      tag_175\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":9268:9331   */\n      swap2\n      pop\n        /* \"#utility.yul\":9223:9341   */\n      pop\n        /* \"#utility.yul\":8729:9348   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":9354:10006   */\n    tag_66:\n        /* \"#utility.yul\":9431:9437   */\n      0x00\n        /* \"#utility.yul\":9439:9445   */\n      dup1\n        /* \"#utility.yul\":9488:9490   */\n      0x40\n        /* \"#utility.yul\":9476:9485   */\n      dup4\n        /* \"#utility.yul\":9467:9474   */\n      dup6\n        /* \"#utility.yul\":9463:9486   */\n      sub\n        /* \"#utility.yul\":9459:9491   */\n      slt\n        /* \"#utility.yul\":9456:9575   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":9494:9573   */\n      tag_320\n      tag_167\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":9456:9575   */\n    tag_319:\n        /* \"#utility.yul\":9614:9615   */\n      0x00\n        /* \"#utility.yul\":9639:9692   */\n      tag_321\n        /* \"#utility.yul\":9684:9691   */\n      dup6\n        /* \"#utility.yul\":9675:9681   */\n      dup3\n        /* \"#utility.yul\":9664:9673   */\n      dup7\n        /* \"#utility.yul\":9660:9682   */\n      add\n        /* \"#utility.yul\":9639:9692   */\n      tag_175\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":9629:9692   */\n      swap3\n      pop\n        /* \"#utility.yul\":9585:9702   */\n      pop\n        /* \"#utility.yul\":9769:9771   */\n      0x20\n        /* \"#utility.yul\":9758:9767   */\n      dup4\n        /* \"#utility.yul\":9754:9772   */\n      add\n        /* \"#utility.yul\":9741:9773   */\n      calldataload\n        /* \"#utility.yul\":9800:9818   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9792:9798   */\n      dup2\n        /* \"#utility.yul\":9789:9819   */\n      gt\n        /* \"#utility.yul\":9786:9903   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":9822:9901   */\n      tag_323\n      tag_168\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":9786:9903   */\n    tag_322:\n        /* \"#utility.yul\":9927:9989   */\n      tag_324\n        /* \"#utility.yul\":9981:9988   */\n      dup6\n        /* \"#utility.yul\":9972:9978   */\n      dup3\n        /* \"#utility.yul\":9961:9970   */\n      dup7\n        /* \"#utility.yul\":9957:9979   */\n      add\n        /* \"#utility.yul\":9927:9989   */\n      tag_187\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":9917:9989   */\n      swap2\n      pop\n        /* \"#utility.yul\":9712:9999   */\n      pop\n        /* \"#utility.yul\":9354:10006   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10012:10181   */\n    tag_191:\n        /* \"#utility.yul\":10096:10107   */\n      0x00\n        /* \"#utility.yul\":10130:10136   */\n      dup3\n        /* \"#utility.yul\":10125:10128   */\n      dup3\n        /* \"#utility.yul\":10118:10137   */\n      mstore\n        /* \"#utility.yul\":10170:10174   */\n      0x20\n        /* \"#utility.yul\":10165:10168   */\n      dup3\n        /* \"#utility.yul\":10161:10175   */\n      add\n        /* \"#utility.yul\":10146:10175   */\n      swap1\n      pop\n        /* \"#utility.yul\":10012:10181   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10187:10412   */\n    tag_192:\n        /* \"#utility.yul\":10327:10361   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":10323:10324   */\n      0x00\n        /* \"#utility.yul\":10315:10321   */\n      dup3\n        /* \"#utility.yul\":10311:10325   */\n      add\n        /* \"#utility.yul\":10304:10362   */\n      mstore\n        /* \"#utility.yul\":10396:10404   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10391:10393   */\n      0x20\n        /* \"#utility.yul\":10383:10389   */\n      dup3\n        /* \"#utility.yul\":10379:10394   */\n      add\n        /* \"#utility.yul\":10372:10405   */\n      mstore\n        /* \"#utility.yul\":10187:10412   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10418:10784   */\n    tag_193:\n        /* \"#utility.yul\":10560:10563   */\n      0x00\n        /* \"#utility.yul\":10581:10648   */\n      tag_328\n        /* \"#utility.yul\":10645:10647   */\n      0x26\n        /* \"#utility.yul\":10640:10643   */\n      dup4\n        /* \"#utility.yul\":10581:10648   */\n      tag_191\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":10574:10648   */\n      swap2\n      pop\n        /* \"#utility.yul\":10657:10750   */\n      tag_329\n        /* \"#utility.yul\":10746:10749   */\n      dup3\n        /* \"#utility.yul\":10657:10750   */\n      tag_192\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":10775:10777   */\n      0x40\n        /* \"#utility.yul\":10770:10773   */\n      dup3\n        /* \"#utility.yul\":10766:10778   */\n      add\n        /* \"#utility.yul\":10759:10778   */\n      swap1\n      pop\n        /* \"#utility.yul\":10418:10784   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10790:11209   */\n    tag_109:\n        /* \"#utility.yul\":10956:10960   */\n      0x00\n        /* \"#utility.yul\":10994:10996   */\n      0x20\n        /* \"#utility.yul\":10983:10992   */\n      dup3\n        /* \"#utility.yul\":10979:10997   */\n      add\n        /* \"#utility.yul\":10971:10997   */\n      swap1\n      pop\n        /* \"#utility.yul\":11043:11052   */\n      dup2\n        /* \"#utility.yul\":11037:11041   */\n      dup2\n        /* \"#utility.yul\":11033:11053   */\n      sub\n        /* \"#utility.yul\":11029:11030   */\n      0x00\n        /* \"#utility.yul\":11018:11027   */\n      dup4\n        /* \"#utility.yul\":11014:11031   */\n      add\n        /* \"#utility.yul\":11007:11054   */\n      mstore\n        /* \"#utility.yul\":11071:11202   */\n      tag_331\n        /* \"#utility.yul\":11197:11201   */\n      dup2\n        /* \"#utility.yul\":11071:11202   */\n      tag_193\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":11063:11202   */\n      swap1\n      pop\n        /* \"#utility.yul\":10790:11209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11215:11768   */\n    tag_121:\n        /* \"#utility.yul\":11392:11396   */\n      0x00\n        /* \"#utility.yul\":11430:11433   */\n      0x80\n        /* \"#utility.yul\":11419:11428   */\n      dup3\n        /* \"#utility.yul\":11415:11434   */\n      add\n        /* \"#utility.yul\":11407:11434   */\n      swap1\n      pop\n        /* \"#utility.yul\":11444:11515   */\n      tag_333\n        /* \"#utility.yul\":11512:11513   */\n      0x00\n        /* \"#utility.yul\":11501:11510   */\n      dup4\n        /* \"#utility.yul\":11497:11514   */\n      add\n        /* \"#utility.yul\":11488:11494   */\n      dup8\n        /* \"#utility.yul\":11444:11515   */\n      tag_177\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":11525:11597   */\n      tag_334\n        /* \"#utility.yul\":11593:11595   */\n      0x20\n        /* \"#utility.yul\":11582:11591   */\n      dup4\n        /* \"#utility.yul\":11578:11596   */\n      add\n        /* \"#utility.yul\":11569:11575   */\n      dup7\n        /* \"#utility.yul\":11525:11597   */\n      tag_177\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":11607:11679   */\n      tag_335\n        /* \"#utility.yul\":11675:11677   */\n      0x40\n        /* \"#utility.yul\":11664:11673   */\n      dup4\n        /* \"#utility.yul\":11660:11678   */\n      add\n        /* \"#utility.yul\":11651:11657   */\n      dup6\n        /* \"#utility.yul\":11607:11679   */\n      tag_177\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":11689:11761   */\n      tag_336\n        /* \"#utility.yul\":11757:11759   */\n      0x60\n        /* \"#utility.yul\":11746:11755   */\n      dup4\n        /* \"#utility.yul\":11742:11760   */\n      add\n        /* \"#utility.yul\":11733:11739   */\n      dup5\n        /* \"#utility.yul\":11689:11761   */\n      tag_176\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":11215:11768   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11774:11917   */\n    tag_194:\n        /* \"#utility.yul\":11831:11836   */\n      0x00\n        /* \"#utility.yul\":11862:11868   */\n      dup2\n        /* \"#utility.yul\":11856:11869   */\n      mload\n        /* \"#utility.yul\":11847:11869   */\n      swap1\n      pop\n        /* \"#utility.yul\":11878:11911   */\n      tag_338\n        /* \"#utility.yul\":11905:11910   */\n      dup2\n        /* \"#utility.yul\":11878:11911   */\n      tag_174\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":11774:11917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11923:12274   */\n    tag_129:\n        /* \"#utility.yul\":11993:11999   */\n      0x00\n        /* \"#utility.yul\":12042:12044   */\n      0x20\n        /* \"#utility.yul\":12030:12039   */\n      dup3\n        /* \"#utility.yul\":12021:12028   */\n      dup5\n        /* \"#utility.yul\":12017:12040   */\n      sub\n        /* \"#utility.yul\":12013:12045   */\n      slt\n        /* \"#utility.yul\":12010:12129   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":12048:12127   */\n      tag_341\n      tag_167\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":12010:12129   */\n    tag_340:\n        /* \"#utility.yul\":12168:12169   */\n      0x00\n        /* \"#utility.yul\":12193:12257   */\n      tag_342\n        /* \"#utility.yul\":12249:12256   */\n      dup5\n        /* \"#utility.yul\":12240:12246   */\n      dup3\n        /* \"#utility.yul\":12229:12238   */\n      dup6\n        /* \"#utility.yul\":12225:12247   */\n      add\n        /* \"#utility.yul\":12193:12257   */\n      tag_194\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":12183:12257   */\n      swap2\n      pop\n        /* \"#utility.yul\":12139:12267   */\n      pop\n        /* \"#utility.yul\":11923:12274   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12280:12462   */\n    tag_195:\n        /* \"#utility.yul\":12420:12454   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12416:12417   */\n      0x00\n        /* \"#utility.yul\":12408:12414   */\n      dup3\n        /* \"#utility.yul\":12404:12418   */\n      add\n        /* \"#utility.yul\":12397:12455   */\n      mstore\n        /* \"#utility.yul\":12280:12462   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12468:12834   */\n    tag_196:\n        /* \"#utility.yul\":12610:12613   */\n      0x00\n        /* \"#utility.yul\":12631:12698   */\n      tag_345\n        /* \"#utility.yul\":12695:12697   */\n      0x20\n        /* \"#utility.yul\":12690:12693   */\n      dup4\n        /* \"#utility.yul\":12631:12698   */\n      tag_191\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":12624:12698   */\n      swap2\n      pop\n        /* \"#utility.yul\":12707:12800   */\n      tag_346\n        /* \"#utility.yul\":12796:12799   */\n      dup3\n        /* \"#utility.yul\":12707:12800   */\n      tag_195\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":12825:12827   */\n      0x20\n        /* \"#utility.yul\":12820:12823   */\n      dup3\n        /* \"#utility.yul\":12816:12828   */\n      add\n        /* \"#utility.yul\":12809:12828   */\n      swap1\n      pop\n        /* \"#utility.yul\":12468:12834   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12840:13259   */\n    tag_136:\n        /* \"#utility.yul\":13006:13010   */\n      0x00\n        /* \"#utility.yul\":13044:13046   */\n      0x20\n        /* \"#utility.yul\":13033:13042   */\n      dup3\n        /* \"#utility.yul\":13029:13047   */\n      add\n        /* \"#utility.yul\":13021:13047   */\n      swap1\n      pop\n        /* \"#utility.yul\":13093:13102   */\n      dup2\n        /* \"#utility.yul\":13087:13091   */\n      dup2\n        /* \"#utility.yul\":13083:13103   */\n      sub\n        /* \"#utility.yul\":13079:13080   */\n      0x00\n        /* \"#utility.yul\":13068:13077   */\n      dup4\n        /* \"#utility.yul\":13064:13081   */\n      add\n        /* \"#utility.yul\":13057:13104   */\n      mstore\n        /* \"#utility.yul\":13121:13252   */\n      tag_348\n        /* \"#utility.yul\":13247:13251   */\n      dup2\n        /* \"#utility.yul\":13121:13252   */\n      tag_196\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":13113:13252   */\n      swap1\n      pop\n        /* \"#utility.yul\":12840:13259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13265:13363   */\n    tag_197:\n        /* \"#utility.yul\":13316:13322   */\n      0x00\n        /* \"#utility.yul\":13350:13355   */\n      dup2\n        /* \"#utility.yul\":13344:13356   */\n      mload\n        /* \"#utility.yul\":13334:13356   */\n      swap1\n      pop\n        /* \"#utility.yul\":13265:13363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13369:13537   */\n    tag_198:\n        /* \"#utility.yul\":13452:13463   */\n      0x00\n        /* \"#utility.yul\":13486:13492   */\n      dup3\n        /* \"#utility.yul\":13481:13484   */\n      dup3\n        /* \"#utility.yul\":13474:13493   */\n      mstore\n        /* \"#utility.yul\":13526:13530   */\n      0x20\n        /* \"#utility.yul\":13521:13524   */\n      dup3\n        /* \"#utility.yul\":13517:13531   */\n      add\n        /* \"#utility.yul\":13502:13531   */\n      swap1\n      pop\n        /* \"#utility.yul\":13369:13537   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13543:13789   */\n    tag_199:\n        /* \"#utility.yul\":13624:13625   */\n      0x00\n        /* \"#utility.yul\":13634:13747   */\n    tag_352:\n        /* \"#utility.yul\":13648:13654   */\n      dup4\n        /* \"#utility.yul\":13645:13646   */\n      dup2\n        /* \"#utility.yul\":13642:13655   */\n      lt\n        /* \"#utility.yul\":13634:13747   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":13733:13734   */\n      dup1\n        /* \"#utility.yul\":13728:13731   */\n      dup3\n        /* \"#utility.yul\":13724:13735   */\n      add\n        /* \"#utility.yul\":13718:13736   */\n      mload\n        /* \"#utility.yul\":13714:13715   */\n      dup2\n        /* \"#utility.yul\":13709:13712   */\n      dup5\n        /* \"#utility.yul\":13705:13716   */\n      add\n        /* \"#utility.yul\":13698:13737   */\n      mstore\n        /* \"#utility.yul\":13670:13672   */\n      0x20\n        /* \"#utility.yul\":13667:13668   */\n      dup2\n        /* \"#utility.yul\":13663:13673   */\n      add\n        /* \"#utility.yul\":13658:13673   */\n      swap1\n      pop\n        /* \"#utility.yul\":13634:13747   */\n      jump(tag_352)\n    tag_354:\n        /* \"#utility.yul\":13781:13782   */\n      0x00\n        /* \"#utility.yul\":13772:13778   */\n      dup5\n        /* \"#utility.yul\":13767:13770   */\n      dup5\n        /* \"#utility.yul\":13763:13779   */\n      add\n        /* \"#utility.yul\":13756:13783   */\n      mstore\n        /* \"#utility.yul\":13605:13789   */\n      pop\n        /* \"#utility.yul\":13543:13789   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13795:14168   */\n    tag_200:\n        /* \"#utility.yul\":13881:13884   */\n      0x00\n        /* \"#utility.yul\":13909:13947   */\n      tag_356\n        /* \"#utility.yul\":13941:13946   */\n      dup3\n        /* \"#utility.yul\":13909:13947   */\n      tag_197\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":13963:14033   */\n      tag_357\n        /* \"#utility.yul\":14026:14032   */\n      dup2\n        /* \"#utility.yul\":14021:14024   */\n      dup6\n        /* \"#utility.yul\":13963:14033   */\n      tag_198\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":13956:14033   */\n      swap4\n      pop\n        /* \"#utility.yul\":14042:14107   */\n      tag_358\n        /* \"#utility.yul\":14100:14106   */\n      dup2\n        /* \"#utility.yul\":14095:14098   */\n      dup6\n        /* \"#utility.yul\":14088:14092   */\n      0x20\n        /* \"#utility.yul\":14081:14086   */\n      dup7\n        /* \"#utility.yul\":14077:14093   */\n      add\n        /* \"#utility.yul\":14042:14107   */\n      tag_199\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":14132:14161   */\n      tag_359\n        /* \"#utility.yul\":14154:14160   */\n      dup2\n        /* \"#utility.yul\":14132:14161   */\n      tag_180\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":14127:14130   */\n      dup5\n        /* \"#utility.yul\":14123:14162   */\n      add\n        /* \"#utility.yul\":14116:14162   */\n      swap2\n      pop\n        /* \"#utility.yul\":13885:14168   */\n      pop\n        /* \"#utility.yul\":13795:14168   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14174:14703   */\n    tag_140:\n        /* \"#utility.yul\":14341:14345   */\n      0x00\n        /* \"#utility.yul\":14379:14381   */\n      0x60\n        /* \"#utility.yul\":14368:14377   */\n      dup3\n        /* \"#utility.yul\":14364:14382   */\n      add\n        /* \"#utility.yul\":14356:14382   */\n      swap1\n      pop\n        /* \"#utility.yul\":14392:14463   */\n      tag_361\n        /* \"#utility.yul\":14460:14461   */\n      0x00\n        /* \"#utility.yul\":14449:14458   */\n      dup4\n        /* \"#utility.yul\":14445:14462   */\n      add\n        /* \"#utility.yul\":14436:14442   */\n      dup7\n        /* \"#utility.yul\":14392:14463   */\n      tag_177\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":14473:14545   */\n      tag_362\n        /* \"#utility.yul\":14541:14543   */\n      0x20\n        /* \"#utility.yul\":14530:14539   */\n      dup4\n        /* \"#utility.yul\":14526:14544   */\n      add\n        /* \"#utility.yul\":14517:14523   */\n      dup6\n        /* \"#utility.yul\":14473:14545   */\n      tag_176\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":14592:14601   */\n      dup2\n        /* \"#utility.yul\":14586:14590   */\n      dup2\n        /* \"#utility.yul\":14582:14602   */\n      sub\n        /* \"#utility.yul\":14577:14579   */\n      0x40\n        /* \"#utility.yul\":14566:14575   */\n      dup4\n        /* \"#utility.yul\":14562:14580   */\n      add\n        /* \"#utility.yul\":14555:14603   */\n      mstore\n        /* \"#utility.yul\":14620:14696   */\n      tag_363\n        /* \"#utility.yul\":14691:14695   */\n      dup2\n        /* \"#utility.yul\":14682:14688   */\n      dup5\n        /* \"#utility.yul\":14620:14696   */\n      tag_200\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":14612:14696   */\n      swap1\n      pop\n        /* \"#utility.yul\":14174:14703   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14709:14769   */\n    tag_201:\n        /* \"#utility.yul\":14737:14740   */\n      0x00\n        /* \"#utility.yul\":14758:14763   */\n      dup2\n        /* \"#utility.yul\":14751:14763   */\n      swap1\n      pop\n        /* \"#utility.yul\":14709:14769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14775:14917   */\n    tag_202:\n        /* \"#utility.yul\":14825:14834   */\n      0x00\n        /* \"#utility.yul\":14858:14911   */\n      tag_366\n        /* \"#utility.yul\":14876:14910   */\n      tag_367\n        /* \"#utility.yul\":14885:14909   */\n      tag_368\n        /* \"#utility.yul\":14903:14908   */\n      dup5\n        /* \"#utility.yul\":14885:14909   */\n      tag_169\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":14876:14910   */\n      tag_201\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":14858:14911   */\n      tag_169\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":14845:14911   */\n      swap1\n      pop\n        /* \"#utility.yul\":14775:14917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14923:15049   */\n    tag_203:\n        /* \"#utility.yul\":14973:14982   */\n      0x00\n        /* \"#utility.yul\":15006:15043   */\n      tag_370\n        /* \"#utility.yul\":15037:15042   */\n      dup3\n        /* \"#utility.yul\":15006:15043   */\n      tag_202\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":14993:15043   */\n      swap1\n      pop\n        /* \"#utility.yul\":14923:15049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15055:15195   */\n    tag_204:\n        /* \"#utility.yul\":15119:15128   */\n      0x00\n        /* \"#utility.yul\":15152:15189   */\n      tag_372\n        /* \"#utility.yul\":15183:15188   */\n      dup3\n        /* \"#utility.yul\":15152:15189   */\n      tag_203\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":15139:15189   */\n      swap1\n      pop\n        /* \"#utility.yul\":15055:15195   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15201:15360   */\n    tag_205:\n        /* \"#utility.yul\":15302:15353   */\n      tag_374\n        /* \"#utility.yul\":15347:15352   */\n      dup2\n        /* \"#utility.yul\":15302:15353   */\n      tag_204\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":15297:15300   */\n      dup3\n        /* \"#utility.yul\":15290:15354   */\n      mstore\n        /* \"#utility.yul\":15201:15360   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15366:15452   */\n    tag_206:\n        /* \"#utility.yul\":15412:15419   */\n      0x00\n        /* \"#utility.yul\":15441:15446   */\n      dup2\n        /* \"#utility.yul\":15430:15446   */\n      swap1\n      pop\n        /* \"#utility.yul\":15366:15452   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15458:15544   */\n    tag_207:\n        /* \"#utility.yul\":15493:15500   */\n      0x00\n        /* \"#utility.yul\":15533:15537   */\n      0xff\n        /* \"#utility.yul\":15526:15531   */\n      dup3\n        /* \"#utility.yul\":15522:15538   */\n      and\n        /* \"#utility.yul\":15511:15538   */\n      swap1\n      pop\n        /* \"#utility.yul\":15458:15544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15550:15706   */\n    tag_208:\n        /* \"#utility.yul\":15607:15616   */\n      0x00\n        /* \"#utility.yul\":15640:15700   */\n      tag_378\n        /* \"#utility.yul\":15656:15699   */\n      tag_379\n        /* \"#utility.yul\":15665:15698   */\n      tag_380\n        /* \"#utility.yul\":15692:15697   */\n      dup5\n        /* \"#utility.yul\":15665:15698   */\n      tag_206\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":15656:15699   */\n      tag_201\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":15640:15700   */\n      tag_207\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":15627:15700   */\n      swap1\n      pop\n        /* \"#utility.yul\":15550:15706   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15712:15857   */\n    tag_209:\n        /* \"#utility.yul\":15806:15850   */\n      tag_382\n        /* \"#utility.yul\":15844:15849   */\n      dup2\n        /* \"#utility.yul\":15806:15850   */\n      tag_208\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":15801:15804   */\n      dup3\n        /* \"#utility.yul\":15794:15851   */\n      mstore\n        /* \"#utility.yul\":15712:15857   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15863:15962   */\n    tag_210:\n        /* \"#utility.yul\":15915:15921   */\n      0x00\n        /* \"#utility.yul\":15949:15954   */\n      dup2\n        /* \"#utility.yul\":15943:15955   */\n      mload\n        /* \"#utility.yul\":15933:15955   */\n      swap1\n      pop\n        /* \"#utility.yul\":15863:15962   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15968:16345   */\n    tag_211:\n        /* \"#utility.yul\":16056:16059   */\n      0x00\n        /* \"#utility.yul\":16084:16123   */\n      tag_385\n        /* \"#utility.yul\":16117:16122   */\n      dup3\n        /* \"#utility.yul\":16084:16123   */\n      tag_210\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":16139:16210   */\n      tag_386\n        /* \"#utility.yul\":16203:16209   */\n      dup2\n        /* \"#utility.yul\":16198:16201   */\n      dup6\n        /* \"#utility.yul\":16139:16210   */\n      tag_191\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":16132:16210   */\n      swap4\n      pop\n        /* \"#utility.yul\":16219:16284   */\n      tag_387\n        /* \"#utility.yul\":16277:16283   */\n      dup2\n        /* \"#utility.yul\":16272:16275   */\n      dup6\n        /* \"#utility.yul\":16265:16269   */\n      0x20\n        /* \"#utility.yul\":16258:16263   */\n      dup7\n        /* \"#utility.yul\":16254:16270   */\n      add\n        /* \"#utility.yul\":16219:16284   */\n      tag_199\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":16309:16338   */\n      tag_388\n        /* \"#utility.yul\":16331:16337   */\n      dup2\n        /* \"#utility.yul\":16309:16338   */\n      tag_180\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":16304:16307   */\n      dup5\n        /* \"#utility.yul\":16300:16339   */\n      add\n        /* \"#utility.yul\":16293:16339   */\n      swap2\n      pop\n        /* \"#utility.yul\":16060:16345   */\n      pop\n        /* \"#utility.yul\":15968:16345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16351:17128   */\n    tag_150:\n        /* \"#utility.yul\":16589:16593   */\n      0x00\n        /* \"#utility.yul\":16627:16630   */\n      0x80\n        /* \"#utility.yul\":16616:16625   */\n      dup3\n        /* \"#utility.yul\":16612:16631   */\n      add\n        /* \"#utility.yul\":16604:16631   */\n      swap1\n      pop\n        /* \"#utility.yul\":16641:16726   */\n      tag_390\n        /* \"#utility.yul\":16723:16724   */\n      0x00\n        /* \"#utility.yul\":16712:16721   */\n      dup4\n        /* \"#utility.yul\":16708:16725   */\n      add\n        /* \"#utility.yul\":16699:16705   */\n      dup8\n        /* \"#utility.yul\":16641:16726   */\n      tag_205\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":16736:16815   */\n      tag_391\n        /* \"#utility.yul\":16811:16813   */\n      0x20\n        /* \"#utility.yul\":16800:16809   */\n      dup4\n        /* \"#utility.yul\":16796:16814   */\n      add\n        /* \"#utility.yul\":16787:16793   */\n      dup7\n        /* \"#utility.yul\":16736:16815   */\n      tag_209\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":16862:16871   */\n      dup2\n        /* \"#utility.yul\":16856:16860   */\n      dup2\n        /* \"#utility.yul\":16852:16872   */\n      sub\n        /* \"#utility.yul\":16847:16849   */\n      0x40\n        /* \"#utility.yul\":16836:16845   */\n      dup4\n        /* \"#utility.yul\":16832:16850   */\n      add\n        /* \"#utility.yul\":16825:16873   */\n      mstore\n        /* \"#utility.yul\":16890:16968   */\n      tag_392\n        /* \"#utility.yul\":16963:16967   */\n      dup2\n        /* \"#utility.yul\":16954:16960   */\n      dup6\n        /* \"#utility.yul\":16890:16968   */\n      tag_211\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":16882:16968   */\n      swap1\n      pop\n        /* \"#utility.yul\":17015:17024   */\n      dup2\n        /* \"#utility.yul\":17009:17013   */\n      dup2\n        /* \"#utility.yul\":17005:17025   */\n      sub\n        /* \"#utility.yul\":17000:17002   */\n      0x60\n        /* \"#utility.yul\":16989:16998   */\n      dup4\n        /* \"#utility.yul\":16985:17003   */\n      add\n        /* \"#utility.yul\":16978:17026   */\n      mstore\n        /* \"#utility.yul\":17043:17121   */\n      tag_393\n        /* \"#utility.yul\":17116:17120   */\n      dup2\n        /* \"#utility.yul\":17107:17113   */\n      dup5\n        /* \"#utility.yul\":17043:17121   */\n      tag_211\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":17035:17121   */\n      swap1\n      pop\n        /* \"#utility.yul\":16351:17128   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17134:17576   */\n    tag_156:\n        /* \"#utility.yul\":17283:17287   */\n      0x00\n        /* \"#utility.yul\":17321:17323   */\n      0x60\n        /* \"#utility.yul\":17310:17319   */\n      dup3\n        /* \"#utility.yul\":17306:17324   */\n      add\n        /* \"#utility.yul\":17298:17324   */\n      swap1\n      pop\n        /* \"#utility.yul\":17334:17405   */\n      tag_395\n        /* \"#utility.yul\":17402:17403   */\n      0x00\n        /* \"#utility.yul\":17391:17400   */\n      dup4\n        /* \"#utility.yul\":17387:17404   */\n      add\n        /* \"#utility.yul\":17378:17384   */\n      dup7\n        /* \"#utility.yul\":17334:17405   */\n      tag_177\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":17415:17487   */\n      tag_396\n        /* \"#utility.yul\":17483:17485   */\n      0x20\n        /* \"#utility.yul\":17472:17481   */\n      dup4\n        /* \"#utility.yul\":17468:17486   */\n      add\n        /* \"#utility.yul\":17459:17465   */\n      dup6\n        /* \"#utility.yul\":17415:17487   */\n      tag_177\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":17497:17569   */\n      tag_397\n        /* \"#utility.yul\":17565:17567   */\n      0x40\n        /* \"#utility.yul\":17554:17563   */\n      dup4\n        /* \"#utility.yul\":17550:17568   */\n      add\n        /* \"#utility.yul\":17541:17547   */\n      dup5\n        /* \"#utility.yul\":17497:17569   */\n      tag_176\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":17134:17576   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122076fecc16430e00f96c163f9bf0806d89204dd350e2c045a612cdb05b3cbac5c964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_417": {
									"entryPoint": 50,
									"id": 417,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 58,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x100 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x20 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x12C0 DUP1 PUSH2 0x10F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x95 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x94D008EF GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x94D008EF EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xA6A05598 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xE1F21C67 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0xFE9D9303 EQ PUSH2 0x211 JUMPI PUSH2 0xA4 JUMP JUMPDEST DUP1 PUSH4 0x15DACBEA EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x4A0687EF EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x142 JUMPI PUSH2 0xA4 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA4 JUMPI PUSH2 0xA2 PUSH2 0x23A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAC PUSH2 0x23A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x9F4 JUMP JUMPDEST PUSH2 0x254 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0x274 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH2 0x36D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x381 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x474 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x242 PUSH2 0x483 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x24D PUSH2 0x485 JUMP JUMPDEST PUSH2 0x4AE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x260 DUP5 DUP5 DUP5 DUP5 PUSH2 0x4D4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x270 PUSH2 0x54B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2DA JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2FA PUSH2 0x485 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x347 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5DAA87A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE POP JUMP JUMPDEST PUSH2 0x375 PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x37F PUSH1 0x0 PUSH2 0x63F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3B3 PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x3BE DUP4 DUP4 DUP4 PUSH2 0x705 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3CE DUP7 DUP7 DUP7 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x3D9 DUP3 DUP5 DUP4 PUSH2 0x705 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3EC DUP4 DUP4 DUP4 PUSH2 0x85C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x471 DUP2 PUSH2 0x63F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x47F CALLER DUP4 DUP4 PUSH2 0x8D0 JUMP JUMPDEST POP POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4CF JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41B706BE DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x513 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF65 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x541 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x598 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0xFBF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5C9 PUSH2 0x944 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5E7 PUSH2 0x381 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x634 SWAP1 PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x20 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC68D4283 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x742 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x770 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD412D344 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B2 SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42FE0980 PUSH1 0x0 PUSH1 0x12 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x825 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x83F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x853 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x66A12FB6 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x899 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1253 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9D876741 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x927 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x93B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98B DUP3 PUSH2 0x960 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99B DUP2 PUSH2 0x980 JUMP JUMPDEST DUP2 EQ PUSH2 0x9A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9B8 DUP2 PUSH2 0x992 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D1 DUP2 PUSH2 0x9BE JUMP JUMPDEST DUP2 EQ PUSH2 0x9DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9EE DUP2 PUSH2 0x9C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xA0E JUMPI PUSH2 0xA0D PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA1C DUP8 DUP3 DUP9 ADD PUSH2 0x9A9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xA2D DUP8 DUP3 DUP9 ADD PUSH2 0x9A9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xA3E DUP8 DUP3 DUP9 ADD PUSH2 0x9A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xA4F DUP8 DUP3 DUP9 ADD PUSH2 0x9DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0xA64 DUP2 PUSH2 0x9BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA7F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA9B JUMPI PUSH2 0xA9A PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAA9 DUP5 DUP3 DUP6 ADD PUSH2 0x9A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xABB DUP2 PUSH2 0x980 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAD6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xB2F DUP3 PUSH2 0xAE6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xB4E JUMPI PUSH2 0xB4D PUSH2 0xAF7 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB61 PUSH2 0x94C JUMP JUMPDEST SWAP1 POP PUSH2 0xB6D DUP3 DUP3 PUSH2 0xB26 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xB8D JUMPI PUSH2 0xB8C PUSH2 0xAF7 JUMP JUMPDEST JUMPDEST PUSH2 0xB96 DUP3 PUSH2 0xAE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC5 PUSH2 0xBC0 DUP5 PUSH2 0xB72 JUMP JUMPDEST PUSH2 0xB57 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xBE1 JUMPI PUSH2 0xBE0 PUSH2 0xAE1 JUMP JUMPDEST JUMPDEST PUSH2 0xBEC DUP5 DUP3 DUP6 PUSH2 0xBA3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC09 JUMPI PUSH2 0xC08 PUSH2 0xADC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC19 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC3B JUMPI PUSH2 0xC3A PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC49 DUP7 DUP3 DUP8 ADD PUSH2 0x9A9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC5A DUP7 DUP3 DUP8 ADD PUSH2 0x9DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC7B JUMPI PUSH2 0xC7A PUSH2 0x95B JUMP JUMPDEST JUMPDEST PUSH2 0xC87 DUP7 DUP3 DUP8 ADD PUSH2 0xBF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCAC JUMPI PUSH2 0xCAB PUSH2 0xAF7 JUMP JUMPDEST JUMPDEST PUSH2 0xCB5 DUP3 PUSH2 0xAE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD5 PUSH2 0xCD0 DUP5 PUSH2 0xC91 JUMP JUMPDEST PUSH2 0xB57 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xCF1 JUMPI PUSH2 0xCF0 PUSH2 0xAE1 JUMP JUMPDEST JUMPDEST PUSH2 0xCFC DUP5 DUP3 DUP6 PUSH2 0xBA3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD19 JUMPI PUSH2 0xD18 PUSH2 0xADC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD29 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xCC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xD4F JUMPI PUSH2 0xD4E PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD5D DUP10 DUP3 DUP11 ADD PUSH2 0x9A9 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD7E JUMPI PUSH2 0xD7D PUSH2 0x95B JUMP JUMPDEST JUMPDEST PUSH2 0xD8A DUP10 DUP3 DUP11 ADD PUSH2 0xD04 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDAB JUMPI PUSH2 0xDAA PUSH2 0x95B JUMP JUMPDEST JUMPDEST PUSH2 0xDB7 DUP10 DUP3 DUP11 ADD PUSH2 0xD04 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0xDC8 DUP10 DUP3 DUP11 ADD PUSH2 0x9DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0xDD9 DUP10 DUP3 DUP11 ADD PUSH2 0x9A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDFA JUMPI PUSH2 0xDF9 PUSH2 0x95B JUMP JUMPDEST JUMPDEST PUSH2 0xE06 DUP10 DUP3 DUP11 ADD PUSH2 0xBF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE2C JUMPI PUSH2 0xE2B PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE3A DUP7 DUP3 DUP8 ADD PUSH2 0x9A9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE4B DUP7 DUP3 DUP8 ADD PUSH2 0x9A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE5C DUP7 DUP3 DUP8 ADD PUSH2 0x9DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE7D JUMPI PUSH2 0xE7C PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE8B DUP6 DUP3 DUP7 ADD PUSH2 0x9DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEAC JUMPI PUSH2 0xEAB PUSH2 0x95B JUMP JUMPDEST JUMPDEST PUSH2 0xEB8 DUP6 DUP3 DUP7 ADD PUSH2 0xBF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2F PUSH1 0x26 DUP4 PUSH2 0xEC2 JUMP JUMPDEST SWAP2 POP PUSH2 0xF3A DUP3 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF5E DUP2 PUSH2 0xF22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xF7A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0xF87 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0xF94 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0xFA1 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xA5B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFB9 DUP2 PUSH2 0x9C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD5 JUMPI PUSH2 0xFD4 PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFE3 DUP5 DUP3 DUP6 ADD PUSH2 0xFAA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1022 PUSH1 0x20 DUP4 PUSH2 0xEC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x102D DUP3 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1051 DUP2 PUSH2 0x1015 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1092 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A9 DUP3 PUSH2 0x1058 JUMP JUMPDEST PUSH2 0x10B3 DUP2 DUP6 PUSH2 0x1063 JUMP JUMPDEST SWAP4 POP PUSH2 0x10C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x10CC DUP2 PUSH2 0xAE6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10EC PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x10F9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA5B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x110B DUP2 DUP5 PUSH2 0x109E JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113A PUSH2 0x1135 PUSH2 0x1130 DUP5 PUSH2 0x960 JUMP JUMPDEST PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x960 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114C DUP3 PUSH2 0x111F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115E DUP3 PUSH2 0x1141 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x116E DUP2 PUSH2 0x1153 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A6 PUSH2 0x11A1 PUSH2 0x119C DUP5 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x117E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B6 DUP2 PUSH2 0x118B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D2 DUP3 PUSH2 0x11BC JUMP JUMPDEST PUSH2 0x11DC DUP2 DUP6 PUSH2 0xEC2 JUMP JUMPDEST SWAP4 POP PUSH2 0x11EC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x11F5 DUP2 PUSH2 0xAE6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1215 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1165 JUMP JUMPDEST PUSH2 0x1222 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x11AD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1234 DUP2 DUP6 PUSH2 0x11C7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1248 DUP2 DUP5 PUSH2 0x11C7 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1268 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x1275 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x1282 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA5B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xFECC16430E00F96C163F9BF0806D89204DD350E2C045A6 SLT 0xCD 0xB0 JUMPDEST EXTCODECOPY 0xBA 0xC5 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "285:1289:15:-:0;;;;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;285:1289:15;;640:96:4;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;285:1289:15:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_150": {
									"entryPoint": null,
									"id": 150,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_158": {
									"entryPoint": null,
									"id": 158,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_2790": {
									"entryPoint": 2140,
									"id": 2790,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeFallback_163": {
									"entryPoint": 1155,
									"id": 163,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_burn_2767": {
									"entryPoint": 2256,
									"id": 2767,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 1473,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_123": {
									"entryPoint": 1198,
									"id": 123,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_142": {
									"entryPoint": 570,
									"id": 142,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_implementation_2880": {
									"entryPoint": 1157,
									"id": 2880,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initialize_2705": {
									"entryPoint": 1913,
									"id": 2705,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_2744": {
									"entryPoint": 1797,
									"id": 2744,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_417": {
									"entryPoint": 2372,
									"id": 417,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_totalSupply_2721": {
									"entryPoint": 1355,
									"id": 2721,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferFrom_2816": {
									"entryPoint": 1236,
									"id": 2816,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 1599,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@approve_2614": {
									"entryPoint": 993,
									"id": 2614,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@burn_2648": {
									"entryPoint": 1140,
									"id": 2648,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@initializeProxy_2871": {
									"entryPoint": 628,
									"id": 2871,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@initialize_2570": {
									"entryPoint": 963,
									"id": 2570,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@mint_2589": {
									"entryPoint": 939,
									"id": 2589,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 897,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 877,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_2598": {
									"entryPoint": 614,
									"id": 2598,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_2633": {
									"entryPoint": 596,
									"id": 2633,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 1009,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 2994,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 3266,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 3060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 3332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256": {
									"entryPoint": 2548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_bytes_memory_ptr": {
									"entryPoint": 3378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_bytes_memory_ptr": {
									"entryPoint": 3686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$242_to_t_address_fromStack": {
									"entryPoint": 4453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_18_by_1_to_t_uint8_fromStack": {
									"entryPoint": 4525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3941,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4691,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4311,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$242_t_rational_18_by_1_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_uint8_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4608,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2380,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 2930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 3217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 4184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_18_by_1": {
									"entryPoint": 4468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$242_to_t_address": {
									"entryPoint": 4435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_18_by_1_to_t_uint8": {
									"entryPoint": 4491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 2979,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4212,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 2854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 4373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 2807,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2780,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 2785,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2395,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2390,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 3795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17579:19",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:19",
														"type": ""
													}
												],
												"src": "7:75:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:19",
														"type": ""
													}
												],
												"src": "334:126:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:19",
														"type": ""
													}
												],
												"src": "466:96:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:19"
															},
															"nodeType": "YulIf",
															"src": "621:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:19",
														"type": ""
													}
												],
												"src": "568:122:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:19"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:19",
														"type": ""
													}
												],
												"src": "696:139:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:19",
														"type": ""
													}
												],
												"src": "841:77:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:19"
															},
															"nodeType": "YulIf",
															"src": "977:63:19"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:19",
														"type": ""
													}
												],
												"src": "924:122:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:19"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:19",
														"type": ""
													}
												],
												"src": "1052:139:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1314:648:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1361:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1363:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1363:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1363:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1335:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1344:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1331:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1331:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1356:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1327:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1327:33:19"
															},
															"nodeType": "YulIf",
															"src": "1324:120:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "1454:117:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1469:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1483:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1473:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1498:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1533:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1544:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1529:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1529:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1553:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1508:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1508:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1498:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1581:118:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1596:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1610:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1600:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1626:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1661:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1672:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1657:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1657:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1681:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1636:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1636:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1626:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1709:118:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1724:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1738:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1728:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1754:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1789:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1800:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1785:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1785:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1809:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1764:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1754:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1837:118:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1852:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:19",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1856:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1882:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1917:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1928:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1913:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1913:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1937:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1892:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1892:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1882:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1260:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1271:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1283:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1291:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1299:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1307:6:19",
														"type": ""
													}
												],
												"src": "1197:765:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2033:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2050:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2073:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2055:17:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2055:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2043:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2043:37:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2043:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2021:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2028:3:19",
														"type": ""
													}
												],
												"src": "1968:118:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2190:124:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2200:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2212:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2223:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2208:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2208:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2200:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2280:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2293:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2304:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2289:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2289:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2236:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:71:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2236:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2162:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2174:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2185:4:19",
														"type": ""
													}
												],
												"src": "2092:222:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2386:263:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2432:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2434:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2434:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2434:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2407:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2416:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2403:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2403:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2428:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2399:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2399:32:19"
															},
															"nodeType": "YulIf",
															"src": "2396:119:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "2525:117:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2540:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2554:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2544:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2569:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2604:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2615:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2600:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2600:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2624:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2579:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2579:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2569:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2356:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2367:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2379:6:19",
														"type": ""
													}
												],
												"src": "2320:329:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2720:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2737:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2760:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2742:17:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2742:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2730:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2730:37:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2730:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2708:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2715:3:19",
														"type": ""
													}
												],
												"src": "2655:118:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2877:124:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2887:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2899:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2910:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2895:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2895:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2887:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2967:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2980:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2991:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2976:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2976:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2923:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2923:71:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2923:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2849:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2861:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2872:4:19",
														"type": ""
													}
												],
												"src": "2779:222:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3096:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3113:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3116:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3106:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3106:12:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3106:12:19"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3007:117:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3219:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3236:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3239:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3229:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3229:12:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3229:12:19"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3130:117:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3301:54:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3311:38:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3329:5:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3336:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3325:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3325:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3345:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3341:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3341:7:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3321:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3321:28:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3311:6:19"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3284:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3294:6:19",
														"type": ""
													}
												],
												"src": "3253:102:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3389:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3406:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3409:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3399:88:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3399:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3503:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3506:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3496:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3496:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3496:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3527:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3530:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3520:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3520:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3520:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3361:180:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3590:238:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3600:58:19",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3622:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3652:4:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3630:21:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3630:27:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3618:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3618:40:19"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3604:10:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3769:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3771:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3771:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3771:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3712:10:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3724:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3709:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3709:34:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3748:10:19"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3760:6:19"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3745:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3745:22:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3706:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3706:62:19"
															},
															"nodeType": "YulIf",
															"src": "3703:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:2:19",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3811:10:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:22:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:22:19"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3576:6:19",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3584:4:19",
														"type": ""
													}
												],
												"src": "3547:281:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3875:88:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3885:30:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "3895:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3895:20:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3885:6:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3944:6:19"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3952:4:19"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3924:19:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3924:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3924:33:19"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3859:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3868:6:19",
														"type": ""
													}
												],
												"src": "3834:129:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4035:241:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4140:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4142:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4142:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4142:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4112:6:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4120:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4109:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4109:30:19"
															},
															"nodeType": "YulIf",
															"src": "4106:56:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4172:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4202:6:19"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "4180:21:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4180:29:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4172:4:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4246:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "4258:4:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4264:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4254:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4254:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4246:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4019:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4030:4:19",
														"type": ""
													}
												],
												"src": "3969:307:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4346:82:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4369:3:19"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4374:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4379:6:19"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4356:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4356:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4356:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4406:3:19"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4411:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4402:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4402:16:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4420:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4395:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4395:27:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4395:27:19"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4328:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4333:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4338:6:19",
														"type": ""
													}
												],
												"src": "4282:146:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4517:340:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4527:74:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4593:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4552:40:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4552:48:19"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4536:15:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4536:65:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4527:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4617:5:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4624:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4610:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4610:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4610:21:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4640:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4655:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4662:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4651:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4651:16:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4644:3:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4705:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "4707:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4707:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4707:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4686:3:19"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4691:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4682:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4682:16:19"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4700:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4679:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4679:25:19"
															},
															"nodeType": "YulIf",
															"src": "4676:112:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4834:3:19"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4839:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4844:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "4797:36:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4797:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4797:54:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4490:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4495:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4503:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4511:5:19",
														"type": ""
													}
												],
												"src": "4434:423:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4937:277:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4986:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4988:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4988:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4988:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4965:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4973:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4961:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4961:17:19"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4980:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4957:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4957:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4950:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4950:35:19"
															},
															"nodeType": "YulIf",
															"src": "4947:122:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5078:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5105:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5092:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5092:20:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5082:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5121:87:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5181:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5189:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5177:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5177:17:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5196:6:19"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5204:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5130:46:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:78:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5121:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4915:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4923:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4931:5:19",
														"type": ""
													}
												],
												"src": "4876:338:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5329:688:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5375:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5377:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5377:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5377:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5350:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5359:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5346:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5346:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5371:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5342:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5342:32:19"
															},
															"nodeType": "YulIf",
															"src": "5339:119:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "5468:117:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5483:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5497:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5487:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5512:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5547:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5558:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5543:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5543:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5567:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5522:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5522:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5512:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5595:118:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5610:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5624:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5614:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5640:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5675:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5686:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5671:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5671:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5695:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5650:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5650:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5640:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5723:287:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5738:46:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5769:9:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5780:2:19",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5765:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5765:18:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5752:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5752:32:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5742:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5831:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5833:77:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5833:79:19"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5833:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5803:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5811:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5800:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5800:30:19"
																	},
																	"nodeType": "YulIf",
																	"src": "5797:117:19"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5928:72:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5972:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5983:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5968:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5968:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5992:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5938:29:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5938:62:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5928:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5283:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5294:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5306:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5314:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5322:6:19",
														"type": ""
													}
												],
												"src": "5220:797:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6090:241:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6195:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6197:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6197:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6197:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6167:6:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6175:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6164:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6164:30:19"
															},
															"nodeType": "YulIf",
															"src": "6161:56:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6227:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6257:6:19"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "6235:21:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6235:29:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6227:4:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6301:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6313:4:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6319:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6309:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6309:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6301:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6074:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6085:4:19",
														"type": ""
													}
												],
												"src": "6023:308:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6421:341:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6431:75:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6498:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6456:41:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6456:49:19"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6440:15:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:66:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6431:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6522:5:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6529:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6515:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6515:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6515:21:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6545:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6560:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6567:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:16:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6549:3:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6610:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "6612:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6612:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6612:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6591:3:19"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6596:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6587:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6587:16:19"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6605:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6584:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6584:25:19"
															},
															"nodeType": "YulIf",
															"src": "6581:112:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6739:3:19"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6744:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6749:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "6702:36:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6702:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6702:54:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6394:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6399:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6407:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6415:5:19",
														"type": ""
													}
												],
												"src": "6337:425:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6844:278:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6893:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "6895:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6895:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6895:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6872:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6880:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6868:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6868:17:19"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6887:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6864:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6857:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6857:35:19"
															},
															"nodeType": "YulIf",
															"src": "6854:122:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6985:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7012:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6999:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6999:20:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6989:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7028:88:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7089:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7097:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7085:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7085:17:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7104:6:19"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7112:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7037:47:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7037:79:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7028:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6822:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6830:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6838:5:19",
														"type": ""
													}
												],
												"src": "6782:340:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7308:1415:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7355:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7357:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7357:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7357:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7329:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7338:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7325:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7325:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7350:3:19",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7321:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7321:33:19"
															},
															"nodeType": "YulIf",
															"src": "7318:120:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "7448:117:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7463:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7477:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7467:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7492:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7527:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7538:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7523:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7523:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7547:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7502:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7502:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7492:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7575:288:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7590:46:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7621:9:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7632:2:19",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7617:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7617:18:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7604:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7604:32:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7594:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7683:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7685:77:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7685:79:19"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7685:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7655:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7663:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7652:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7652:30:19"
																	},
																	"nodeType": "YulIf",
																	"src": "7649:117:19"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7780:73:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7825:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7836:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7821:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7821:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7845:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7790:30:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7790:63:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7780:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7873:288:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7888:46:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7919:9:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7930:2:19",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7915:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7915:18:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7902:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7902:32:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7892:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7981:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7983:77:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7983:79:19"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7983:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7953:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7961:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7950:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7950:30:19"
																	},
																	"nodeType": "YulIf",
																	"src": "7947:117:19"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8078:73:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8123:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8134:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8119:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8143:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8088:30:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8088:63:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8078:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8171:118:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8186:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8200:2:19",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8190:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8216:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8251:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8262:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8247:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8247:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8271:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8226:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8226:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "8216:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8299:119:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8314:17:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8328:3:19",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8318:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8345:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8380:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8391:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8376:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8376:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8400:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8355:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8355:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "8345:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8428:288:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8443:47:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8474:9:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8485:3:19",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8470:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8470:19:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8457:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8457:33:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8447:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8537:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8539:77:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8539:79:19"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8539:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8509:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8517:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8506:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8506:30:19"
																	},
																	"nodeType": "YulIf",
																	"src": "8503:117:19"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8634:72:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8678:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8689:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8674:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8674:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8698:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8644:29:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8644:62:19"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "8634:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7238:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7249:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7261:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7269:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7277:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7285:6:19",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7293:6:19",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "7301:6:19",
														"type": ""
													}
												],
												"src": "7128:1595:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8829:519:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8875:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8877:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8877:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8877:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8850:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8859:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8846:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8846:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8871:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8842:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8842:32:19"
															},
															"nodeType": "YulIf",
															"src": "8839:119:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "8968:117:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8983:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8997:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8987:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9012:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9047:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9058:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9043:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9043:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9067:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9022:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9022:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9012:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9095:118:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9110:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9124:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9114:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9140:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9175:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9186:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9171:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9171:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9195:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9150:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9150:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9140:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9223:118:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9238:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9252:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9242:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9268:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9303:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9314:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9299:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9299:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9323:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9278:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9278:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9268:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8783:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8794:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8806:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8814:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8822:6:19",
														"type": ""
													}
												],
												"src": "8729:619:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9446:560:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9492:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9494:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9494:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9494:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9467:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9476:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9463:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9463:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9488:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9459:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9459:32:19"
															},
															"nodeType": "YulIf",
															"src": "9456:119:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "9585:117:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9600:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9614:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9604:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9629:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9664:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9675:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9660:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9660:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9684:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9639:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9639:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9629:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9712:287:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9727:46:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9758:9:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9769:2:19",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9754:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9754:18:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9741:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9741:32:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9731:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9820:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9822:77:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9822:79:19"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9822:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9792:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9800:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9789:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9789:30:19"
																	},
																	"nodeType": "YulIf",
																	"src": "9786:117:19"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9917:72:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9961:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9972:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9957:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9957:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9981:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9927:29:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9927:62:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9917:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9408:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9419:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9431:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9439:6:19",
														"type": ""
													}
												],
												"src": "9354:652:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10108:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10125:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10130:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10118:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10118:19:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10118:19:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10146:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10165:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10170:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10161:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10161:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10146:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10080:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10085:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10096:11:19",
														"type": ""
													}
												],
												"src": "10012:169:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10293:119:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10315:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10323:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10311:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10311:14:19"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10327:34:19",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10304:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10304:58:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10304:58:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10383:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10391:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10379:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10379:15:19"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10396:8:19",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10372:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10372:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10372:33:19"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10285:6:19",
														"type": ""
													}
												],
												"src": "10187:225:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10564:220:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10574:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10640:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10645:2:19",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10581:58:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10581:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10574:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10746:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "10657:88:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10657:93:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10657:93:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10759:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10770:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10775:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10766:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10766:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10759:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10552:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10560:3:19",
														"type": ""
													}
												],
												"src": "10418:366:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10961:248:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10971:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10983:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10994:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10979:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10979:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10971:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11018:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11029:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11014:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11014:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11037:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11043:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11033:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11033:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11007:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11007:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11007:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11063:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11197:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11071:124:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11071:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11063:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10941:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10956:4:19",
														"type": ""
													}
												],
												"src": "10790:419:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11397:371:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11407:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11419:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11430:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11415:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11415:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11407:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11488:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11501:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11512:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11497:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11497:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11444:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11444:71:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11444:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11569:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11582:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11593:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11578:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11578:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11525:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11525:72:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11525:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11651:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11664:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11675:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11660:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11660:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11607:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11607:72:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11607:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11733:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11746:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11757:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11742:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11742:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11689:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11689:72:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11689:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11345:9:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11357:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11365:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11373:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11381:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11392:4:19",
														"type": ""
													}
												],
												"src": "11215:553:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11837:80:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11847:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11862:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11856:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11856:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11847:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11905:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11878:26:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11878:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11878:33:19"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11815:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11823:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11831:5:19",
														"type": ""
													}
												],
												"src": "11774:143:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12000:274:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12046:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12048:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12048:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12048:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12021:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12030:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12017:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12017:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12042:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12013:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12013:32:19"
															},
															"nodeType": "YulIf",
															"src": "12010:119:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "12139:128:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12154:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12168:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12158:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12183:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12229:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12240:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12225:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12225:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12249:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "12193:31:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12193:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12183:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11970:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11981:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11993:6:19",
														"type": ""
													}
												],
												"src": "11923:351:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12386:76:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12408:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12416:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12404:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12404:14:19"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12420:34:19",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12397:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12397:58:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12397:58:19"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12378:6:19",
														"type": ""
													}
												],
												"src": "12280:182:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12614:220:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12624:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12690:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12695:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12631:58:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12631:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12624:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12796:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "12707:88:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12707:93:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12707:93:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12809:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12820:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12825:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12816:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12816:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12809:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12602:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12610:3:19",
														"type": ""
													}
												],
												"src": "12468:366:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13011:248:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13021:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13033:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13044:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13029:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13029:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13021:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13068:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13079:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13064:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13064:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13087:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13093:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13083:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13083:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13057:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13057:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13057:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13113:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13247:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13121:124:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13121:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13113:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12991:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13006:4:19",
														"type": ""
													}
												],
												"src": "12840:419:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13323:40:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13334:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13350:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13344:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13344:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13334:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13306:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13316:6:19",
														"type": ""
													}
												],
												"src": "13265:98:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13464:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13481:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13486:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13474:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13474:19:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13474:19:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13502:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13521:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13526:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13517:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13517:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13502:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13436:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13441:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13452:11:19",
														"type": ""
													}
												],
												"src": "13369:168:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13605:184:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13615:10:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13624:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "13619:1:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13684:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13709:3:19"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "13714:1:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13705:3:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13705:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "13728:3:19"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "13733:1:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13724:3:19"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13724:11:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "13718:5:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13718:18:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13698:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13698:39:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13698:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13645:1:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13648:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13642:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13642:13:19"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13656:19:19",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13658:15:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13667:1:19"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13670:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13663:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13663:10:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13658:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13638:3:19",
																"statements": []
															},
															"src": "13634:113:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "13767:3:19"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13772:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13763:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13763:16:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13781:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13756:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13756:27:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13756:27:19"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "13587:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "13592:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13597:6:19",
														"type": ""
													}
												],
												"src": "13543:246:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13885:283:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13895:52:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13941:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13909:31:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13909:38:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13899:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13956:77:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14021:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14026:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13963:57:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13963:70:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13956:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14081:5:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14088:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14077:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14077:16:19"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14095:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14100:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "14042:34:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14042:65:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14042:65:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14116:46:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14127:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14154:6:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "14132:21:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14132:29:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14123:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14123:39:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14116:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13866:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13873:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13881:3:19",
														"type": ""
													}
												],
												"src": "13795:373:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14346:357:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14356:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14368:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14379:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14364:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14364:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14356:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14436:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14449:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14460:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14445:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14445:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14392:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14392:71:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14392:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14517:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14530:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14541:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14526:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14526:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14473:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14473:72:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14473:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14566:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14577:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14562:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14562:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14586:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14592:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14582:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14582:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14555:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14555:48:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14555:48:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14612:84:19",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14682:6:19"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14691:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14620:61:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14620:76:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14612:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14302:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14314:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14322:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14330:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14341:4:19",
														"type": ""
													}
												],
												"src": "14174:529:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14741:28:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14751:12:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14758:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14751:3:19"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14727:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14737:3:19",
														"type": ""
													}
												],
												"src": "14709:60:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14835:82:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14845:66:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14903:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "14885:17:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14885:24:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "14876:8:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14876:34:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "14858:17:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14858:53:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "14845:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14815:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "14825:9:19",
														"type": ""
													}
												],
												"src": "14775:142:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14983:66:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14993:50:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15037:5:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "15006:30:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15006:37:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "14993:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14963:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "14973:9:19",
														"type": ""
													}
												],
												"src": "14923:126:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15129:66:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15139:50:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15183:5:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "15152:30:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15152:37:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "15139:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$242_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15109:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "15119:9:19",
														"type": ""
													}
												],
												"src": "15055:140:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15280:80:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15297:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15347:5:19"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$242_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15302:44:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15302:51:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15290:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15290:64:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15290:64:19"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$242_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15268:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15275:3:19",
														"type": ""
													}
												],
												"src": "15201:159:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15420:32:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15430:16:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15441:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15430:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_18_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15402:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15412:7:19",
														"type": ""
													}
												],
												"src": "15366:86:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15501:43:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15511:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15526:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15533:4:19",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15522:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15522:16:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15511:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15483:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15493:7:19",
														"type": ""
													}
												],
												"src": "15458:86:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15617:89:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15627:73:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15692:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_18_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "15665:26:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15665:33:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "15656:8:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15656:43:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "15640:15:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15640:60:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "15627:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_18_by_1_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15597:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "15607:9:19",
														"type": ""
													}
												],
												"src": "15550:156:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15784:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15801:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15844:5:19"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_18_by_1_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "15806:37:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15806:44:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15794:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15794:57:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15794:57:19"
														}
													]
												},
												"name": "abi_encode_t_rational_18_by_1_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15772:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15779:3:19",
														"type": ""
													}
												],
												"src": "15712:145:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15922:40:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15933:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15949:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15943:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15943:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "15933:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15905:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15915:6:19",
														"type": ""
													}
												],
												"src": "15863:99:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16060:285:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16070:53:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16117:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16084:32:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16084:39:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16074:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16132:78:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16198:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16203:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16139:58:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16139:71:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16132:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16258:5:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16265:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16254:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16254:16:19"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16272:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16277:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "16219:34:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16219:65:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16219:65:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16293:46:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16304:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16331:6:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "16309:21:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16309:29:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16300:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16300:39:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16293:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16041:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16048:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16056:3:19",
														"type": ""
													}
												],
												"src": "15968:377:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16594:534:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16604:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16616:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16627:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16612:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16612:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16604:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16699:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16712:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16723:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16708:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16708:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$242_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16641:57:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16641:85:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16641:85:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16787:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16800:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16811:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16796:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16796:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_18_by_1_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16736:50:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16736:79:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16736:79:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16836:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16847:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16832:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16832:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16856:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16862:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16852:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16852:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16825:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16825:48:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16825:48:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16882:86:19",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16954:6:19"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16963:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16890:63:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16890:78:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16882:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16989:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17000:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16985:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16985:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17009:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17015:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17005:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17005:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16978:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16978:48:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16978:48:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17035:86:19",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "17107:6:19"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17116:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17043:63:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17043:78:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17035:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$242_t_rational_18_by_1_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_uint8_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16542:9:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16554:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16562:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16570:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16578:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16589:4:19",
														"type": ""
													}
												],
												"src": "16351:777:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17288:288:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17298:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17310:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17321:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17306:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17306:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17298:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17378:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17391:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17402:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17387:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17387:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17334:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17334:71:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17334:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17459:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17472:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17483:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17468:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17468:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17415:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17415:72:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17415:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17541:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17554:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17565:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17550:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17550:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17497:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17497:72:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17497:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17244:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17256:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17264:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17272:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17283:4:19",
														"type": ""
													}
												],
												"src": "17134:442:19"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$242_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$242_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$242_to_t_address(value))\n    }\n\n    function cleanup_t_rational_18_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_rational_18_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_18_by_1(value)))\n    }\n\n    function abi_encode_t_rational_18_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_18_by_1_to_t_uint8(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$242_t_rational_18_by_1_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_uint8_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IERC20_$242_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_18_by_1_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100955760003560e01c806394d008ef1161005957806394d008ef1461016d578063a6a0559814610196578063e1f21c67146101bf578063f2fde38b146101e8578063fe9d930314610211576100a4565b806315dacbea146100ae57806318160ddd146100d75780634a0687ef14610102578063715018a61461012b5780638da5cb5b14610142576100a4565b366100a4576100a261023a565b005b6100ac61023a565b005b3480156100ba57600080fd5b506100d560048036038101906100d091906109f4565b610254565b005b3480156100e357600080fd5b506100ec610266565b6040516100f99190610a6a565b60405180910390f35b34801561010e57600080fd5b5061012960048036038101906101249190610a85565b610274565b005b34801561013757600080fd5b5061014061036d565b005b34801561014e57600080fd5b50610157610381565b6040516101649190610ac1565b60405180910390f35b34801561017957600080fd5b50610194600480360381019061018f9190610c22565b6103ab565b005b3480156101a257600080fd5b506101bd60048036038101906101b89190610d32565b6103c3565b005b3480156101cb57600080fd5b506101e660048036038101906101e19190610e13565b6103e1565b005b3480156101f457600080fd5b5061020f600480360381019061020a9190610a85565b6103f1565b005b34801561021d57600080fd5b5061023860048036038101906102339190610e66565b610474565b005b610242610483565b61025261024d610485565b6104ae565b565b610260848484846104d4565b50505050565b600061027061054b565b5090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102da576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166102fa610485565b73ffffffffffffffffffffffffffffffffffffffff1614610347576040517f5daa87a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5550565b6103756105c1565b61037f600061063f565b565b6000602060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103b36105c1565b6103be838383610705565b505050565b6103ce868686610779565b6103d9828483610705565b505050505050565b6103ec83838361085c565b505050565b6103f96105c1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045f90610f45565b60405180910390fd5b6104718161063f565b50565b61047f3383836108d0565b5050565b565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54905090565b3660008037600080366000845af43d6000803e80600081146104cf573d6000f35b3d6000fd5b3073ffffffffffffffffffffffffffffffffffffffff166341b706be858585856040518563ffffffff1660e01b81526004016105139493929190610f65565b600060405180830381600087803b15801561052d57600080fd5b505af1158015610541573d6000803e3d6000fd5b5050505050505050565b60003073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610598573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bc9190610fbf565b905090565b6105c9610944565b73ffffffffffffffffffffffffffffffffffffffff166105e7610381565b73ffffffffffffffffffffffffffffffffffffffff161461063d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063490611038565b60405180910390fd5b565b6000602060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081602060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b3073ffffffffffffffffffffffffffffffffffffffff1663c68d42838484846040518463ffffffff1660e01b8152600401610742939291906110d7565b600060405180830381600087803b15801561075c57600080fd5b505af1158015610770573d6000803e3d6000fd5b50505050505050565b8273ffffffffffffffffffffffffffffffffffffffff1663d412d344306040518263ffffffff1660e01b81526004016107b29190610ac1565b600060405180830381600087803b1580156107cc57600080fd5b505af11580156107e0573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff166342fe09806000601285856040518563ffffffff1660e01b81526004016108259493929190611200565b600060405180830381600087803b15801561083f57600080fd5b505af1158015610853573d6000803e3d6000fd5b50505050505050565b3073ffffffffffffffffffffffffffffffffffffffff166366a12fb68484846040518463ffffffff1660e01b815260040161089993929190611253565b600060405180830381600087803b1580156108b357600080fd5b505af11580156108c7573d6000803e3d6000fd5b50505050505050565b3073ffffffffffffffffffffffffffffffffffffffff16639d8767418484846040518463ffffffff1660e01b815260040161090d939291906110d7565b600060405180830381600087803b15801561092757600080fd5b505af115801561093b573d6000803e3d6000fd5b50505050505050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061098b82610960565b9050919050565b61099b81610980565b81146109a657600080fd5b50565b6000813590506109b881610992565b92915050565b6000819050919050565b6109d1816109be565b81146109dc57600080fd5b50565b6000813590506109ee816109c8565b92915050565b60008060008060808587031215610a0e57610a0d610956565b5b6000610a1c878288016109a9565b9450506020610a2d878288016109a9565b9350506040610a3e878288016109a9565b9250506060610a4f878288016109df565b91505092959194509250565b610a64816109be565b82525050565b6000602082019050610a7f6000830184610a5b565b92915050565b600060208284031215610a9b57610a9a610956565b5b6000610aa9848285016109a9565b91505092915050565b610abb81610980565b82525050565b6000602082019050610ad66000830184610ab2565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b2f82610ae6565b810181811067ffffffffffffffff82111715610b4e57610b4d610af7565b5b80604052505050565b6000610b6161094c565b9050610b6d8282610b26565b919050565b600067ffffffffffffffff821115610b8d57610b8c610af7565b5b610b9682610ae6565b9050602081019050919050565b82818337600083830152505050565b6000610bc5610bc084610b72565b610b57565b905082815260208101848484011115610be157610be0610ae1565b5b610bec848285610ba3565b509392505050565b600082601f830112610c0957610c08610adc565b5b8135610c19848260208601610bb2565b91505092915050565b600080600060608486031215610c3b57610c3a610956565b5b6000610c49868287016109a9565b9350506020610c5a868287016109df565b925050604084013567ffffffffffffffff811115610c7b57610c7a61095b565b5b610c8786828701610bf4565b9150509250925092565b600067ffffffffffffffff821115610cac57610cab610af7565b5b610cb582610ae6565b9050602081019050919050565b6000610cd5610cd084610c91565b610b57565b905082815260208101848484011115610cf157610cf0610ae1565b5b610cfc848285610ba3565b509392505050565b600082601f830112610d1957610d18610adc565b5b8135610d29848260208601610cc2565b91505092915050565b60008060008060008060c08789031215610d4f57610d4e610956565b5b6000610d5d89828a016109a9565b965050602087013567ffffffffffffffff811115610d7e57610d7d61095b565b5b610d8a89828a01610d04565b955050604087013567ffffffffffffffff811115610dab57610daa61095b565b5b610db789828a01610d04565b9450506060610dc889828a016109df565b9350506080610dd989828a016109a9565b92505060a087013567ffffffffffffffff811115610dfa57610df961095b565b5b610e0689828a01610bf4565b9150509295509295509295565b600080600060608486031215610e2c57610e2b610956565b5b6000610e3a868287016109a9565b9350506020610e4b868287016109a9565b9250506040610e5c868287016109df565b9150509250925092565b60008060408385031215610e7d57610e7c610956565b5b6000610e8b858286016109df565b925050602083013567ffffffffffffffff811115610eac57610eab61095b565b5b610eb885828601610bf4565b9150509250929050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610f2f602683610ec2565b9150610f3a82610ed3565b604082019050919050565b60006020820190508181036000830152610f5e81610f22565b9050919050565b6000608082019050610f7a6000830187610ab2565b610f876020830186610ab2565b610f946040830185610ab2565b610fa16060830184610a5b565b95945050505050565b600081519050610fb9816109c8565b92915050565b600060208284031215610fd557610fd4610956565b5b6000610fe384828501610faa565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611022602083610ec2565b915061102d82610fec565b602082019050919050565b6000602082019050818103600083015261105181611015565b9050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611092578082015181840152602081019050611077565b60008484015250505050565b60006110a982611058565b6110b38185611063565b93506110c3818560208601611074565b6110cc81610ae6565b840191505092915050565b60006060820190506110ec6000830186610ab2565b6110f96020830185610a5b565b818103604083015261110b818461109e565b9050949350505050565b6000819050919050565b600061113a61113561113084610960565b611115565b610960565b9050919050565b600061114c8261111f565b9050919050565b600061115e82611141565b9050919050565b61116e81611153565b82525050565b6000819050919050565b600060ff82169050919050565b60006111a66111a161119c84611174565b611115565b61117e565b9050919050565b6111b68161118b565b82525050565b600081519050919050565b60006111d2826111bc565b6111dc8185610ec2565b93506111ec818560208601611074565b6111f581610ae6565b840191505092915050565b60006080820190506112156000830187611165565b61122260208301866111ad565b818103604083015261123481856111c7565b9050818103606083015261124881846111c7565b905095945050505050565b60006060820190506112686000830186610ab2565b6112756020830185610ab2565b6112826040830184610a5b565b94935050505056fea264697066735822122076fecc16430e00f96c163f9bf0806d89204dd350e2c045a612cdb05b3cbac5c964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x95 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x94D008EF GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x94D008EF EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xA6A05598 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xE1F21C67 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0xFE9D9303 EQ PUSH2 0x211 JUMPI PUSH2 0xA4 JUMP JUMPDEST DUP1 PUSH4 0x15DACBEA EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x4A0687EF EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x142 JUMPI PUSH2 0xA4 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA4 JUMPI PUSH2 0xA2 PUSH2 0x23A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAC PUSH2 0x23A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x9F4 JUMP JUMPDEST PUSH2 0x254 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0x274 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH2 0x36D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x381 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x474 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x242 PUSH2 0x483 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x24D PUSH2 0x485 JUMP JUMPDEST PUSH2 0x4AE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x260 DUP5 DUP5 DUP5 DUP5 PUSH2 0x4D4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x270 PUSH2 0x54B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2DA JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2FA PUSH2 0x485 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x347 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5DAA87A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE POP JUMP JUMPDEST PUSH2 0x375 PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x37F PUSH1 0x0 PUSH2 0x63F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3B3 PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x3BE DUP4 DUP4 DUP4 PUSH2 0x705 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3CE DUP7 DUP7 DUP7 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x3D9 DUP3 DUP5 DUP4 PUSH2 0x705 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3EC DUP4 DUP4 DUP4 PUSH2 0x85C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x471 DUP2 PUSH2 0x63F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x47F CALLER DUP4 DUP4 PUSH2 0x8D0 JUMP JUMPDEST POP POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4CF JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41B706BE DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x513 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF65 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x541 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x598 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0xFBF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5C9 PUSH2 0x944 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5E7 PUSH2 0x381 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x634 SWAP1 PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x20 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC68D4283 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x742 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x770 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD412D344 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B2 SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42FE0980 PUSH1 0x0 PUSH1 0x12 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x825 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x83F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x853 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x66A12FB6 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x899 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1253 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9D876741 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x927 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x93B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98B DUP3 PUSH2 0x960 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99B DUP2 PUSH2 0x980 JUMP JUMPDEST DUP2 EQ PUSH2 0x9A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9B8 DUP2 PUSH2 0x992 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D1 DUP2 PUSH2 0x9BE JUMP JUMPDEST DUP2 EQ PUSH2 0x9DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9EE DUP2 PUSH2 0x9C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xA0E JUMPI PUSH2 0xA0D PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA1C DUP8 DUP3 DUP9 ADD PUSH2 0x9A9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xA2D DUP8 DUP3 DUP9 ADD PUSH2 0x9A9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xA3E DUP8 DUP3 DUP9 ADD PUSH2 0x9A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xA4F DUP8 DUP3 DUP9 ADD PUSH2 0x9DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0xA64 DUP2 PUSH2 0x9BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA7F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA9B JUMPI PUSH2 0xA9A PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAA9 DUP5 DUP3 DUP6 ADD PUSH2 0x9A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xABB DUP2 PUSH2 0x980 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAD6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xB2F DUP3 PUSH2 0xAE6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xB4E JUMPI PUSH2 0xB4D PUSH2 0xAF7 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB61 PUSH2 0x94C JUMP JUMPDEST SWAP1 POP PUSH2 0xB6D DUP3 DUP3 PUSH2 0xB26 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xB8D JUMPI PUSH2 0xB8C PUSH2 0xAF7 JUMP JUMPDEST JUMPDEST PUSH2 0xB96 DUP3 PUSH2 0xAE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC5 PUSH2 0xBC0 DUP5 PUSH2 0xB72 JUMP JUMPDEST PUSH2 0xB57 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xBE1 JUMPI PUSH2 0xBE0 PUSH2 0xAE1 JUMP JUMPDEST JUMPDEST PUSH2 0xBEC DUP5 DUP3 DUP6 PUSH2 0xBA3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC09 JUMPI PUSH2 0xC08 PUSH2 0xADC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC19 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC3B JUMPI PUSH2 0xC3A PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC49 DUP7 DUP3 DUP8 ADD PUSH2 0x9A9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC5A DUP7 DUP3 DUP8 ADD PUSH2 0x9DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC7B JUMPI PUSH2 0xC7A PUSH2 0x95B JUMP JUMPDEST JUMPDEST PUSH2 0xC87 DUP7 DUP3 DUP8 ADD PUSH2 0xBF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCAC JUMPI PUSH2 0xCAB PUSH2 0xAF7 JUMP JUMPDEST JUMPDEST PUSH2 0xCB5 DUP3 PUSH2 0xAE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD5 PUSH2 0xCD0 DUP5 PUSH2 0xC91 JUMP JUMPDEST PUSH2 0xB57 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xCF1 JUMPI PUSH2 0xCF0 PUSH2 0xAE1 JUMP JUMPDEST JUMPDEST PUSH2 0xCFC DUP5 DUP3 DUP6 PUSH2 0xBA3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD19 JUMPI PUSH2 0xD18 PUSH2 0xADC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD29 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xCC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xD4F JUMPI PUSH2 0xD4E PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD5D DUP10 DUP3 DUP11 ADD PUSH2 0x9A9 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD7E JUMPI PUSH2 0xD7D PUSH2 0x95B JUMP JUMPDEST JUMPDEST PUSH2 0xD8A DUP10 DUP3 DUP11 ADD PUSH2 0xD04 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDAB JUMPI PUSH2 0xDAA PUSH2 0x95B JUMP JUMPDEST JUMPDEST PUSH2 0xDB7 DUP10 DUP3 DUP11 ADD PUSH2 0xD04 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0xDC8 DUP10 DUP3 DUP11 ADD PUSH2 0x9DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0xDD9 DUP10 DUP3 DUP11 ADD PUSH2 0x9A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDFA JUMPI PUSH2 0xDF9 PUSH2 0x95B JUMP JUMPDEST JUMPDEST PUSH2 0xE06 DUP10 DUP3 DUP11 ADD PUSH2 0xBF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE2C JUMPI PUSH2 0xE2B PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE3A DUP7 DUP3 DUP8 ADD PUSH2 0x9A9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE4B DUP7 DUP3 DUP8 ADD PUSH2 0x9A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE5C DUP7 DUP3 DUP8 ADD PUSH2 0x9DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE7D JUMPI PUSH2 0xE7C PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE8B DUP6 DUP3 DUP7 ADD PUSH2 0x9DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEAC JUMPI PUSH2 0xEAB PUSH2 0x95B JUMP JUMPDEST JUMPDEST PUSH2 0xEB8 DUP6 DUP3 DUP7 ADD PUSH2 0xBF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2F PUSH1 0x26 DUP4 PUSH2 0xEC2 JUMP JUMPDEST SWAP2 POP PUSH2 0xF3A DUP3 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF5E DUP2 PUSH2 0xF22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xF7A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0xF87 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0xF94 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0xFA1 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xA5B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFB9 DUP2 PUSH2 0x9C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD5 JUMPI PUSH2 0xFD4 PUSH2 0x956 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFE3 DUP5 DUP3 DUP6 ADD PUSH2 0xFAA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1022 PUSH1 0x20 DUP4 PUSH2 0xEC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x102D DUP3 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1051 DUP2 PUSH2 0x1015 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1092 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A9 DUP3 PUSH2 0x1058 JUMP JUMPDEST PUSH2 0x10B3 DUP2 DUP6 PUSH2 0x1063 JUMP JUMPDEST SWAP4 POP PUSH2 0x10C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x10CC DUP2 PUSH2 0xAE6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10EC PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x10F9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA5B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x110B DUP2 DUP5 PUSH2 0x109E JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113A PUSH2 0x1135 PUSH2 0x1130 DUP5 PUSH2 0x960 JUMP JUMPDEST PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x960 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114C DUP3 PUSH2 0x111F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115E DUP3 PUSH2 0x1141 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x116E DUP2 PUSH2 0x1153 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A6 PUSH2 0x11A1 PUSH2 0x119C DUP5 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x117E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B6 DUP2 PUSH2 0x118B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D2 DUP3 PUSH2 0x11BC JUMP JUMPDEST PUSH2 0x11DC DUP2 DUP6 PUSH2 0xEC2 JUMP JUMPDEST SWAP4 POP PUSH2 0x11EC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x11F5 DUP2 PUSH2 0xAE6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1215 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1165 JUMP JUMPDEST PUSH2 0x1222 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x11AD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1234 DUP2 DUP6 PUSH2 0x11C7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1248 DUP2 DUP5 PUSH2 0x11C7 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1268 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x1275 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x1282 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA5B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xFECC16430E00F96C163F9BF0806D89204DD350E2C045A6 SLT 0xCD 0xB0 JUMPDEST EXTCODECOPY 0xBA 0xC5 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "285:1289:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2898:11:1;:9;:11::i;:::-;285:1289:15;;2675:11:1;:9;:11::i;:::-;285:1289:15;1292:160;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1070:86;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1049:246:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;1201:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;933:131:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;542:253;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1161:125;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1458:112:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2322:110:1;2370:17;:15;:17::i;:::-;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;1292:160:15:-;1399:46;1413:6;1420:7;1428:9;1438:6;1399:13;:46::i;:::-;1292:160;;;;:::o;1070:86::-;1116:6;1134:14;:12;:14::i;:::-;;1070:86;:::o;1049:246:18:-;1141:1;1115:28;;:14;:28;;;1111:54;;1152:13;;;;;;;;;;;;;;1111:54;1202:1;1173:31;;:17;:15;:17::i;:::-;:31;;;1169:57;;1213:13;;;;;;;;;;;;;;1169:57;1273:14;1251:20;1244:44;1049:246;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;933:131:15:-;1094:13:0;:11;:13::i;:::-;1027:33:15::1;1033:8;1043:6;1051:8;1027:5;:33::i;:::-;933:131:::0;;;:::o;542:253::-;713:34;725:7;734:4;740:6;713:11;:34::i;:::-;751:40;757:8;767:13;782:8;751:5;:40::i;:::-;542:253;;;;;;:::o;1161:125::-;1245:34;1254:7;1263;1272:6;1245:8;:34::i;:::-;1161:125;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1458:112:15:-;1530:33;1536:10;1547:6;1554:8;1530:5;:33::i;:::-;1458:112;;:::o;3198:46:1:-;:::o;1395:152:18:-;1472:12;1519:20;1513:27;1505:35;;1395:152;:::o;948:895:1:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1686:1;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;2858:198:16;2993:4;2973:43;;;3017:6;3025:7;3034:9;3045:6;2973:79;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2858:198;;;;:::o;1324:113::-;1371:9;1413:4;1393:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1386:47;;1324:113;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;1676:150:16:-;1780:4;1760:35;;;1796:7;1805:6;1813:8;1760:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1676:150;;;:::o;1021:245::-;1133:7;1114:54;;;1177:4;1114:69;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1207:4;1187:37;;;1240:1;1245:2;1249:4;1255:6;1187:75;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1021:245;;;:::o;2409:152::-;2510:4;2490:41;;;2532:7;2541;2550:6;2490:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2409:152;;;:::o;2055:144::-;2156:4;2136:35;;;2172:4;2178:6;2186:8;2136:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2055:144;;;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;7:75:19:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:765::-;1283:6;1291;1299;1307;1356:3;1344:9;1335:7;1331:23;1327:33;1324:120;;;1363:79;;:::i;:::-;1324:120;1483:1;1508:53;1553:7;1544:6;1533:9;1529:22;1508:53;:::i;:::-;1498:63;;1454:117;1610:2;1636:53;1681:7;1672:6;1661:9;1657:22;1636:53;:::i;:::-;1626:63;;1581:118;1738:2;1764:53;1809:7;1800:6;1789:9;1785:22;1764:53;:::i;:::-;1754:63;;1709:118;1866:2;1892:53;1937:7;1928:6;1917:9;1913:22;1892:53;:::i;:::-;1882:63;;1837:118;1197:765;;;;;;;:::o;1968:118::-;2055:24;2073:5;2055:24;:::i;:::-;2050:3;2043:37;1968:118;;:::o;2092:222::-;2185:4;2223:2;2212:9;2208:18;2200:26;;2236:71;2304:1;2293:9;2289:17;2280:6;2236:71;:::i;:::-;2092:222;;;;:::o;2320:329::-;2379:6;2428:2;2416:9;2407:7;2403:23;2399:32;2396:119;;;2434:79;;:::i;:::-;2396:119;2554:1;2579:53;2624:7;2615:6;2604:9;2600:22;2579:53;:::i;:::-;2569:63;;2525:117;2320:329;;;;:::o;2655:118::-;2742:24;2760:5;2742:24;:::i;:::-;2737:3;2730:37;2655:118;;:::o;2779:222::-;2872:4;2910:2;2899:9;2895:18;2887:26;;2923:71;2991:1;2980:9;2976:17;2967:6;2923:71;:::i;:::-;2779:222;;;;:::o;3007:117::-;3116:1;3113;3106:12;3130:117;3239:1;3236;3229:12;3253:102;3294:6;3345:2;3341:7;3336:2;3329:5;3325:14;3321:28;3311:38;;3253:102;;;:::o;3361:180::-;3409:77;3406:1;3399:88;3506:4;3503:1;3496:15;3530:4;3527:1;3520:15;3547:281;3630:27;3652:4;3630:27;:::i;:::-;3622:6;3618:40;3760:6;3748:10;3745:22;3724:18;3712:10;3709:34;3706:62;3703:88;;;3771:18;;:::i;:::-;3703:88;3811:10;3807:2;3800:22;3590:238;3547:281;;:::o;3834:129::-;3868:6;3895:20;;:::i;:::-;3885:30;;3924:33;3952:4;3944:6;3924:33;:::i;:::-;3834:129;;;:::o;3969:307::-;4030:4;4120:18;4112:6;4109:30;4106:56;;;4142:18;;:::i;:::-;4106:56;4180:29;4202:6;4180:29;:::i;:::-;4172:37;;4264:4;4258;4254:15;4246:23;;3969:307;;;:::o;4282:146::-;4379:6;4374:3;4369;4356:30;4420:1;4411:6;4406:3;4402:16;4395:27;4282:146;;;:::o;4434:423::-;4511:5;4536:65;4552:48;4593:6;4552:48;:::i;:::-;4536:65;:::i;:::-;4527:74;;4624:6;4617:5;4610:21;4662:4;4655:5;4651:16;4700:3;4691:6;4686:3;4682:16;4679:25;4676:112;;;4707:79;;:::i;:::-;4676:112;4797:54;4844:6;4839:3;4834;4797:54;:::i;:::-;4517:340;4434:423;;;;;:::o;4876:338::-;4931:5;4980:3;4973:4;4965:6;4961:17;4957:27;4947:122;;4988:79;;:::i;:::-;4947:122;5105:6;5092:20;5130:78;5204:3;5196:6;5189:4;5181:6;5177:17;5130:78;:::i;:::-;5121:87;;4937:277;4876:338;;;;:::o;5220:797::-;5306:6;5314;5322;5371:2;5359:9;5350:7;5346:23;5342:32;5339:119;;;5377:79;;:::i;:::-;5339:119;5497:1;5522:53;5567:7;5558:6;5547:9;5543:22;5522:53;:::i;:::-;5512:63;;5468:117;5624:2;5650:53;5695:7;5686:6;5675:9;5671:22;5650:53;:::i;:::-;5640:63;;5595:118;5780:2;5769:9;5765:18;5752:32;5811:18;5803:6;5800:30;5797:117;;;5833:79;;:::i;:::-;5797:117;5938:62;5992:7;5983:6;5972:9;5968:22;5938:62;:::i;:::-;5928:72;;5723:287;5220:797;;;;;:::o;6023:308::-;6085:4;6175:18;6167:6;6164:30;6161:56;;;6197:18;;:::i;:::-;6161:56;6235:29;6257:6;6235:29;:::i;:::-;6227:37;;6319:4;6313;6309:15;6301:23;;6023:308;;;:::o;6337:425::-;6415:5;6440:66;6456:49;6498:6;6456:49;:::i;:::-;6440:66;:::i;:::-;6431:75;;6529:6;6522:5;6515:21;6567:4;6560:5;6556:16;6605:3;6596:6;6591:3;6587:16;6584:25;6581:112;;;6612:79;;:::i;:::-;6581:112;6702:54;6749:6;6744:3;6739;6702:54;:::i;:::-;6421:341;6337:425;;;;;:::o;6782:340::-;6838:5;6887:3;6880:4;6872:6;6868:17;6864:27;6854:122;;6895:79;;:::i;:::-;6854:122;7012:6;6999:20;7037:79;7112:3;7104:6;7097:4;7089:6;7085:17;7037:79;:::i;:::-;7028:88;;6844:278;6782:340;;;;:::o;7128:1595::-;7261:6;7269;7277;7285;7293;7301;7350:3;7338:9;7329:7;7325:23;7321:33;7318:120;;;7357:79;;:::i;:::-;7318:120;7477:1;7502:53;7547:7;7538:6;7527:9;7523:22;7502:53;:::i;:::-;7492:63;;7448:117;7632:2;7621:9;7617:18;7604:32;7663:18;7655:6;7652:30;7649:117;;;7685:79;;:::i;:::-;7649:117;7790:63;7845:7;7836:6;7825:9;7821:22;7790:63;:::i;:::-;7780:73;;7575:288;7930:2;7919:9;7915:18;7902:32;7961:18;7953:6;7950:30;7947:117;;;7983:79;;:::i;:::-;7947:117;8088:63;8143:7;8134:6;8123:9;8119:22;8088:63;:::i;:::-;8078:73;;7873:288;8200:2;8226:53;8271:7;8262:6;8251:9;8247:22;8226:53;:::i;:::-;8216:63;;8171:118;8328:3;8355:53;8400:7;8391:6;8380:9;8376:22;8355:53;:::i;:::-;8345:63;;8299:119;8485:3;8474:9;8470:19;8457:33;8517:18;8509:6;8506:30;8503:117;;;8539:79;;:::i;:::-;8503:117;8644:62;8698:7;8689:6;8678:9;8674:22;8644:62;:::i;:::-;8634:72;;8428:288;7128:1595;;;;;;;;:::o;8729:619::-;8806:6;8814;8822;8871:2;8859:9;8850:7;8846:23;8842:32;8839:119;;;8877:79;;:::i;:::-;8839:119;8997:1;9022:53;9067:7;9058:6;9047:9;9043:22;9022:53;:::i;:::-;9012:63;;8968:117;9124:2;9150:53;9195:7;9186:6;9175:9;9171:22;9150:53;:::i;:::-;9140:63;;9095:118;9252:2;9278:53;9323:7;9314:6;9303:9;9299:22;9278:53;:::i;:::-;9268:63;;9223:118;8729:619;;;;;:::o;9354:652::-;9431:6;9439;9488:2;9476:9;9467:7;9463:23;9459:32;9456:119;;;9494:79;;:::i;:::-;9456:119;9614:1;9639:53;9684:7;9675:6;9664:9;9660:22;9639:53;:::i;:::-;9629:63;;9585:117;9769:2;9758:9;9754:18;9741:32;9800:18;9792:6;9789:30;9786:117;;;9822:79;;:::i;:::-;9786:117;9927:62;9981:7;9972:6;9961:9;9957:22;9927:62;:::i;:::-;9917:72;;9712:287;9354:652;;;;;:::o;10012:169::-;10096:11;10130:6;10125:3;10118:19;10170:4;10165:3;10161:14;10146:29;;10012:169;;;;:::o;10187:225::-;10327:34;10323:1;10315:6;10311:14;10304:58;10396:8;10391:2;10383:6;10379:15;10372:33;10187:225;:::o;10418:366::-;10560:3;10581:67;10645:2;10640:3;10581:67;:::i;:::-;10574:74;;10657:93;10746:3;10657:93;:::i;:::-;10775:2;10770:3;10766:12;10759:19;;10418:366;;;:::o;10790:419::-;10956:4;10994:2;10983:9;10979:18;10971:26;;11043:9;11037:4;11033:20;11029:1;11018:9;11014:17;11007:47;11071:131;11197:4;11071:131;:::i;:::-;11063:139;;10790:419;;;:::o;11215:553::-;11392:4;11430:3;11419:9;11415:19;11407:27;;11444:71;11512:1;11501:9;11497:17;11488:6;11444:71;:::i;:::-;11525:72;11593:2;11582:9;11578:18;11569:6;11525:72;:::i;:::-;11607;11675:2;11664:9;11660:18;11651:6;11607:72;:::i;:::-;11689;11757:2;11746:9;11742:18;11733:6;11689:72;:::i;:::-;11215:553;;;;;;;:::o;11774:143::-;11831:5;11862:6;11856:13;11847:22;;11878:33;11905:5;11878:33;:::i;:::-;11774:143;;;;:::o;11923:351::-;11993:6;12042:2;12030:9;12021:7;12017:23;12013:32;12010:119;;;12048:79;;:::i;:::-;12010:119;12168:1;12193:64;12249:7;12240:6;12229:9;12225:22;12193:64;:::i;:::-;12183:74;;12139:128;11923:351;;;;:::o;12280:182::-;12420:34;12416:1;12408:6;12404:14;12397:58;12280:182;:::o;12468:366::-;12610:3;12631:67;12695:2;12690:3;12631:67;:::i;:::-;12624:74;;12707:93;12796:3;12707:93;:::i;:::-;12825:2;12820:3;12816:12;12809:19;;12468:366;;;:::o;12840:419::-;13006:4;13044:2;13033:9;13029:18;13021:26;;13093:9;13087:4;13083:20;13079:1;13068:9;13064:17;13057:47;13121:131;13247:4;13121:131;:::i;:::-;13113:139;;12840:419;;;:::o;13265:98::-;13316:6;13350:5;13344:12;13334:22;;13265:98;;;:::o;13369:168::-;13452:11;13486:6;13481:3;13474:19;13526:4;13521:3;13517:14;13502:29;;13369:168;;;;:::o;13543:246::-;13624:1;13634:113;13648:6;13645:1;13642:13;13634:113;;;13733:1;13728:3;13724:11;13718:18;13714:1;13709:3;13705:11;13698:39;13670:2;13667:1;13663:10;13658:15;;13634:113;;;13781:1;13772:6;13767:3;13763:16;13756:27;13605:184;13543:246;;;:::o;13795:373::-;13881:3;13909:38;13941:5;13909:38;:::i;:::-;13963:70;14026:6;14021:3;13963:70;:::i;:::-;13956:77;;14042:65;14100:6;14095:3;14088:4;14081:5;14077:16;14042:65;:::i;:::-;14132:29;14154:6;14132:29;:::i;:::-;14127:3;14123:39;14116:46;;13885:283;13795:373;;;;:::o;14174:529::-;14341:4;14379:2;14368:9;14364:18;14356:26;;14392:71;14460:1;14449:9;14445:17;14436:6;14392:71;:::i;:::-;14473:72;14541:2;14530:9;14526:18;14517:6;14473:72;:::i;:::-;14592:9;14586:4;14582:20;14577:2;14566:9;14562:18;14555:48;14620:76;14691:4;14682:6;14620:76;:::i;:::-;14612:84;;14174:529;;;;;;:::o;14709:60::-;14737:3;14758:5;14751:12;;14709:60;;;:::o;14775:142::-;14825:9;14858:53;14876:34;14885:24;14903:5;14885:24;:::i;:::-;14876:34;:::i;:::-;14858:53;:::i;:::-;14845:66;;14775:142;;;:::o;14923:126::-;14973:9;15006:37;15037:5;15006:37;:::i;:::-;14993:50;;14923:126;;;:::o;15055:140::-;15119:9;15152:37;15183:5;15152:37;:::i;:::-;15139:50;;15055:140;;;:::o;15201:159::-;15302:51;15347:5;15302:51;:::i;:::-;15297:3;15290:64;15201:159;;:::o;15366:86::-;15412:7;15441:5;15430:16;;15366:86;;;:::o;15458:::-;15493:7;15533:4;15526:5;15522:16;15511:27;;15458:86;;;:::o;15550:156::-;15607:9;15640:60;15656:43;15665:33;15692:5;15665:33;:::i;:::-;15656:43;:::i;:::-;15640:60;:::i;:::-;15627:73;;15550:156;;;:::o;15712:145::-;15806:44;15844:5;15806:44;:::i;:::-;15801:3;15794:57;15712:145;;:::o;15863:99::-;15915:6;15949:5;15943:12;15933:22;;15863:99;;;:::o;15968:377::-;16056:3;16084:39;16117:5;16084:39;:::i;:::-;16139:71;16203:6;16198:3;16139:71;:::i;:::-;16132:78;;16219:65;16277:6;16272:3;16265:4;16258:5;16254:16;16219:65;:::i;:::-;16309:29;16331:6;16309:29;:::i;:::-;16304:3;16300:39;16293:46;;16060:285;15968:377;;;;:::o;16351:777::-;16589:4;16627:3;16616:9;16612:19;16604:27;;16641:85;16723:1;16712:9;16708:17;16699:6;16641:85;:::i;:::-;16736:79;16811:2;16800:9;16796:18;16787:6;16736:79;:::i;:::-;16862:9;16856:4;16852:20;16847:2;16836:9;16832:18;16825:48;16890:78;16963:4;16954:6;16890:78;:::i;:::-;16882:86;;17015:9;17009:4;17005:20;17000:2;16989:9;16985:18;16978:48;17043:78;17116:4;17107:6;17043:78;:::i;:::-;17035:86;;16351:777;;;;;;;:::o;17134:442::-;17283:4;17321:2;17310:9;17306:18;17298:26;;17334:71;17402:1;17391:9;17387:17;17378:6;17334:71;:::i;:::-;17415:72;17483:2;17472:9;17468:18;17459:6;17415:72;:::i;:::-;17497;17565:2;17554:9;17550:18;17541:6;17497:72;:::i;:::-;17134:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "960000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"approve(address,address,uint256)": "infinite",
								"burn(uint256,bytes)": "infinite",
								"initialize(address,string,string,uint256,address,bytes)": "infinite",
								"initializeProxy(address)": "24811",
								"mint(address,uint256,bytes)": "infinite",
								"owner()": "2611",
								"renounceOwnership()": "30465",
								"totalSupply()": "infinite",
								"transferFrom(address,address,address,uint256)": "infinite",
								"transferOwnership(address)": "30810"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 285,
									"end": 1574,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "tag",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 1574,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122076fecc16430e00f96c163f9bf0806d89204dd350e2c045a612cdb05b3cbac5c964736f6c63430008120033",
									".code": [
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH",
											"source": 15,
											"value": "94D008EF"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH",
											"source": 15,
											"value": "94D008EF"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH",
											"source": 15,
											"value": "A6A05598"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH",
											"source": 15,
											"value": "E1F21C67"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH",
											"source": 15,
											"value": "F2FDE38B"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH",
											"source": 15,
											"value": "FE9D9303"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "tag",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH",
											"source": 15,
											"value": "15DACBEA"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH",
											"source": 15,
											"value": "18160DDD"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH",
											"source": 15,
											"value": "4A0687EF"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH",
											"source": 15,
											"value": "715018A6"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH",
											"source": 15,
											"value": "8DA5CB5B"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2898,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "tag",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2675,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2675,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 285,
											"end": 1574,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "tag",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "tag",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1292,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 1292,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "tag",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "tag",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "tag",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 1070,
											"end": 1156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "tag",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 1070,
											"end": 1156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "34"
										},
										{
											"begin": 1049,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "35"
										},
										{
											"begin": 1049,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "tag",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "tag",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 933,
											"end": 1064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "tag",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 933,
											"end": 1064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "tag",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "tag",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 542,
											"end": 795,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 542,
											"end": 795,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 542,
											"end": 795,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "tag",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 542,
											"end": 795,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 542,
											"end": 795,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 542,
											"end": 795,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 542,
											"end": 795,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 542,
											"end": 795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "tag",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 542,
											"end": 795,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 542,
											"end": 795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 542,
											"end": 795,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "tag",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "tag",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 1161,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "tag",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 1161,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "tag",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "tag",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "tag",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 1458,
											"end": 1570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 1458,
											"end": 1570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2370,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2370,
											"end": 2387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2407,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2407,
											"end": 2424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2397,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2397,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "tag",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1399,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 1413,
											"end": 1419,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1420,
											"end": 1427,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1438,
											"end": 1444,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1399,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 1399,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1399,
											"end": 1445,
											"name": "tag",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 1399,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1292,
											"end": 1452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "tag",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1116,
											"end": 1122,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1134,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 1134,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 1134,
											"end": 1148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1134,
											"end": 1148,
											"name": "tag",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 1134,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1134,
											"end": 1148,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 18,
											"value": "35"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1141,
											"end": 1142,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1115,
											"end": 1143,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1115,
											"end": 1143,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1115,
											"end": 1129,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1115,
											"end": 1143,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1115,
											"end": 1143,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1115,
											"end": 1143,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 1111,
											"end": 1165,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 18,
											"value": "D92E233D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1165,
											"name": "tag",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 1111,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1202,
											"end": 1203,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1204,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1173,
											"end": 1204,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "73"
										},
										{
											"begin": 1173,
											"end": 1190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1190,
											"name": "tag",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 1173,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1204,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1173,
											"end": 1204,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1204,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1169,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 1169,
											"end": 1226,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "PUSH",
											"source": 18,
											"value": "5DAA87A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1169,
											"end": 1226,
											"name": "tag",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 1169,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1273,
											"end": 1287,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1271,
											"name": "PUSH",
											"source": 18,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1244,
											"end": 1288,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "tag",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 1033,
											"end": 1041,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1043,
											"end": 1049,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1051,
											"end": 1059,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1027,
											"end": 1032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 1027,
											"end": 1060,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1027,
											"end": 1060,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 1027,
											"end": 1060,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 933,
											"end": 1064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "tag",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 542,
											"end": 795,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 713,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "98"
										},
										{
											"begin": 725,
											"end": 732,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 734,
											"end": 738,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 740,
											"end": 746,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 713,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "99"
										},
										{
											"begin": 713,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 713,
											"end": 747,
											"name": "tag",
											"source": 15,
											"value": "98"
										},
										{
											"begin": 713,
											"end": 747,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 751,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 757,
											"end": 765,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 767,
											"end": 780,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 782,
											"end": 790,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 751,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 751,
											"end": 791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 751,
											"end": 791,
											"name": "tag",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 751,
											"end": 791,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 542,
											"end": 795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 1254,
											"end": 1261,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1263,
											"end": 1270,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1272,
											"end": 1278,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 1245,
											"end": 1279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 1279,
											"name": "tag",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 1245,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "tag",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1530,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "112"
										},
										{
											"begin": 1536,
											"end": 1546,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 1547,
											"end": 1553,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1554,
											"end": 1562,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1530,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 1530,
											"end": 1563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1530,
											"end": 1563,
											"name": "tag",
											"source": 15,
											"value": "112"
										},
										{
											"begin": 1530,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1547,
											"name": "tag",
											"source": 18,
											"value": "73"
										},
										{
											"begin": 1395,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1472,
											"end": 1484,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1539,
											"name": "PUSH",
											"source": 18,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1513,
											"end": 1540,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1505,
											"end": 1540,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1505,
											"end": 1540,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1395,
											"end": 1547,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1395,
											"end": 1547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1281,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1301,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1495,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1460,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1502,
											"name": "DELEGATECALL",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1592,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1593,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1687,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1813,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1732,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1733,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 3056,
											"name": "tag",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 2858,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2993,
											"end": 2997,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3016,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2973,
											"end": 3016,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3016,
											"name": "PUSH",
											"source": 16,
											"value": "41B706BE"
										},
										{
											"begin": 3017,
											"end": 3023,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3025,
											"end": 3032,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3034,
											"end": 3043,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3045,
											"end": 3051,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "121"
										},
										{
											"begin": 2973,
											"end": 3052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "tag",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "EXTCODESIZE",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "122"
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "tag",
											"source": 16,
											"value": "122"
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "124"
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "tag",
											"source": 16,
											"value": "124"
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2858,
											"end": 3056,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2858,
											"end": 3056,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2858,
											"end": 3056,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2858,
											"end": 3056,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2858,
											"end": 3056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1324,
											"end": 1437,
											"name": "tag",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1324,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1417,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1431,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1393,
											"end": 1431,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1431,
											"name": "PUSH",
											"source": 16,
											"value": "18160DDD"
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "127"
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "tag",
											"source": 16,
											"value": "127"
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "128"
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "129"
										},
										{
											"begin": 1393,
											"end": 1433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "tag",
											"source": 16,
											"value": "128"
										},
										{
											"begin": 1393,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1386,
											"end": 1433,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1386,
											"end": 1433,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1324,
											"end": 1437,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1324,
											"end": 1437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1826,
											"name": "tag",
											"source": 16,
											"value": "96"
										},
										{
											"begin": 1676,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1780,
											"end": 1784,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1795,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1795,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1795,
											"name": "PUSH",
											"source": 16,
											"value": "C68D4283"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1813,
											"end": 1821,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "139"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 1760,
											"end": 1822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "tag",
											"source": 16,
											"value": "139"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "EXTCODESIZE",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "141"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "tag",
											"source": 16,
											"value": "141"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "tag",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1760,
											"end": 1822,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1676,
											"end": 1826,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1676,
											"end": 1826,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1676,
											"end": 1826,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1676,
											"end": 1826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1021,
											"end": 1266,
											"name": "tag",
											"source": 16,
											"value": "99"
										},
										{
											"begin": 1021,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1133,
											"end": 1140,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1168,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1114,
											"end": 1168,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1168,
											"name": "PUSH",
											"source": 16,
											"value": "D412D344"
										},
										{
											"begin": 1177,
											"end": 1181,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "145"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "43"
										},
										{
											"begin": 1114,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "tag",
											"source": 16,
											"value": "145"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "EXTCODESIZE",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "146"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "tag",
											"source": 16,
											"value": "146"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "148"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "tag",
											"source": 16,
											"value": "148"
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1114,
											"end": 1183,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1207,
											"end": 1211,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1224,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1187,
											"end": 1224,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1224,
											"name": "PUSH",
											"source": 16,
											"value": "42FE0980"
										},
										{
											"begin": 1240,
											"end": 1241,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1247,
											"name": "PUSH",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 1249,
											"end": 1253,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1255,
											"end": 1261,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "150"
										},
										{
											"begin": 1187,
											"end": 1262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "tag",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "EXTCODESIZE",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "tag",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "153"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "tag",
											"source": 16,
											"value": "153"
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1262,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1021,
											"end": 1266,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1021,
											"end": 1266,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1021,
											"end": 1266,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1021,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2409,
											"end": 2561,
											"name": "tag",
											"source": 16,
											"value": "103"
										},
										{
											"begin": 2409,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2510,
											"end": 2514,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2531,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2490,
											"end": 2531,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2531,
											"name": "PUSH",
											"source": 16,
											"value": "66A12FB6"
										},
										{
											"begin": 2532,
											"end": 2539,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2550,
											"end": 2556,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "155"
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "156"
										},
										{
											"begin": 2490,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "tag",
											"source": 16,
											"value": "155"
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "EXTCODESIZE",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "157"
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "tag",
											"source": 16,
											"value": "157"
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "159"
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "tag",
											"source": 16,
											"value": "159"
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2557,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2409,
											"end": 2561,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2409,
											"end": 2561,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2409,
											"end": 2561,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2409,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2055,
											"end": 2199,
											"name": "tag",
											"source": 16,
											"value": "113"
										},
										{
											"begin": 2055,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2156,
											"end": 2160,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2171,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2136,
											"end": 2171,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2171,
											"name": "PUSH",
											"source": 16,
											"value": "9D876741"
										},
										{
											"begin": 2172,
											"end": 2176,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2178,
											"end": 2184,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2186,
											"end": 2194,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "161"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 2136,
											"end": 2195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "tag",
											"source": 16,
											"value": "161"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "EXTCODESIZE",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "162"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "tag",
											"source": 16,
											"value": "162"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "164"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "tag",
											"source": 16,
											"value": "164"
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2136,
											"end": 2195,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2055,
											"end": 2199,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2055,
											"end": 2199,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2055,
											"end": 2199,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2055,
											"end": 2199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 19,
											"value": "166"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 19,
											"value": "167"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 19,
											"value": "168"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 19,
											"value": "169"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 19,
											"value": "170"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "218"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "169"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 19,
											"value": "218"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 19,
											"value": "171"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "220"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "170"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 19,
											"value": "220"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "221"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 19,
											"value": "221"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 19,
											"value": "172"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "223"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "171"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 19,
											"value": "223"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 19,
											"value": "173"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 19,
											"value": "174"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "226"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "173"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 19,
											"value": "226"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "227"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 19,
											"value": "227"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 19,
											"value": "175"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "229"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "174"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 19,
											"value": "229"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "tag",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1297,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1299,
											"end": 1305,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1356,
											"end": 1359,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 1344,
											"end": 1353,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1335,
											"end": 1342,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 1331,
											"end": 1354,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1327,
											"end": 1360,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "231"
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1363,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "232"
										},
										{
											"begin": 1363,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "167"
										},
										{
											"begin": 1363,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1363,
											"end": 1442,
											"name": "tag",
											"source": 19,
											"value": "232"
										},
										{
											"begin": 1363,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "tag",
											"source": 19,
											"value": "231"
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1483,
											"end": 1484,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "233"
										},
										{
											"begin": 1553,
											"end": 1560,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 1544,
											"end": 1550,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 1529,
											"end": 1551,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "172"
										},
										{
											"begin": 1508,
											"end": 1561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "tag",
											"source": 19,
											"value": "233"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1454,
											"end": 1571,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1610,
											"end": 1612,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "234"
										},
										{
											"begin": 1681,
											"end": 1688,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 1672,
											"end": 1678,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "172"
										},
										{
											"begin": 1636,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "tag",
											"source": 19,
											"value": "234"
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1626,
											"end": 1689,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 1626,
											"end": 1689,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1581,
											"end": 1699,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1738,
											"end": 1740,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "235"
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1789,
											"end": 1798,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "172"
										},
										{
											"begin": 1764,
											"end": 1817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "tag",
											"source": 19,
											"value": "235"
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1754,
											"end": 1817,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1754,
											"end": 1817,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1709,
											"end": 1827,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 1892,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "236"
										},
										{
											"begin": 1937,
											"end": 1944,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1917,
											"end": 1926,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1892,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "175"
										},
										{
											"begin": 1892,
											"end": 1945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1892,
											"end": 1945,
											"name": "tag",
											"source": 19,
											"value": "236"
										},
										{
											"begin": 1892,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1882,
											"end": 1945,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1882,
											"end": 1945,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1837,
											"end": 1955,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1968,
											"end": 2086,
											"name": "tag",
											"source": 19,
											"value": "176"
										},
										{
											"begin": 1968,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "238"
										},
										{
											"begin": 2073,
											"end": 2078,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "173"
										},
										{
											"begin": 2055,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "tag",
											"source": 19,
											"value": "238"
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2050,
											"end": 2053,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2043,
											"end": 2080,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1968,
											"end": 2086,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1968,
											"end": 2086,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1968,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2092,
											"end": 2314,
											"name": "tag",
											"source": 19,
											"value": "30"
										},
										{
											"begin": 2092,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2185,
											"end": 2189,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2225,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2212,
											"end": 2221,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2208,
											"end": 2226,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2200,
											"end": 2226,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2200,
											"end": 2226,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2236,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "240"
										},
										{
											"begin": 2304,
											"end": 2305,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2302,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2280,
											"end": 2286,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2236,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "176"
										},
										{
											"begin": 2236,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2236,
											"end": 2307,
											"name": "tag",
											"source": 19,
											"value": "240"
										},
										{
											"begin": 2236,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2092,
											"end": 2314,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2092,
											"end": 2314,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2092,
											"end": 2314,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2092,
											"end": 2314,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2092,
											"end": 2314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2320,
											"end": 2649,
											"name": "tag",
											"source": 19,
											"value": "34"
										},
										{
											"begin": 2320,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2379,
											"end": 2385,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2430,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2403,
											"end": 2426,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2399,
											"end": 2431,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 2396,
											"end": 2515,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2396,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "242"
										},
										{
											"begin": 2396,
											"end": 2515,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "243"
										},
										{
											"begin": 2434,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "167"
										},
										{
											"begin": 2434,
											"end": 2513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2434,
											"end": 2513,
											"name": "tag",
											"source": 19,
											"value": "243"
										},
										{
											"begin": 2434,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2396,
											"end": 2515,
											"name": "tag",
											"source": 19,
											"value": "242"
										},
										{
											"begin": 2396,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2554,
											"end": 2555,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "244"
										},
										{
											"begin": 2624,
											"end": 2631,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2604,
											"end": 2613,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2600,
											"end": 2622,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2579,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "172"
										},
										{
											"begin": 2579,
											"end": 2632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2579,
											"end": 2632,
											"name": "tag",
											"source": 19,
											"value": "244"
										},
										{
											"begin": 2579,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2569,
											"end": 2632,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2569,
											"end": 2632,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2525,
											"end": 2642,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2320,
											"end": 2649,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2320,
											"end": 2649,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2320,
											"end": 2649,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2320,
											"end": 2649,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2320,
											"end": 2649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2655,
											"end": 2773,
											"name": "tag",
											"source": 19,
											"value": "177"
										},
										{
											"begin": 2655,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "246"
										},
										{
											"begin": 2760,
											"end": 2765,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "170"
										},
										{
											"begin": 2742,
											"end": 2766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "tag",
											"source": 19,
											"value": "246"
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2737,
											"end": 2740,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2730,
											"end": 2767,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2655,
											"end": 2773,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2655,
											"end": 2773,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2655,
											"end": 2773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2779,
											"end": 3001,
											"name": "tag",
											"source": 19,
											"value": "43"
										},
										{
											"begin": 2779,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2872,
											"end": 2876,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2910,
											"end": 2912,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2899,
											"end": 2908,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2895,
											"end": 2913,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2887,
											"end": 2913,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2887,
											"end": 2913,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2923,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "248"
										},
										{
											"begin": 2991,
											"end": 2992,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2980,
											"end": 2989,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2976,
											"end": 2993,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2967,
											"end": 2973,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2923,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "177"
										},
										{
											"begin": 2923,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2923,
											"end": 2994,
											"name": "tag",
											"source": 19,
											"value": "248"
										},
										{
											"begin": 2923,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2779,
											"end": 3001,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2779,
											"end": 3001,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2779,
											"end": 3001,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2779,
											"end": 3001,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2779,
											"end": 3001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3007,
											"end": 3124,
											"name": "tag",
											"source": 19,
											"value": "178"
										},
										{
											"begin": 3007,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3116,
											"end": 3117,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3114,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3106,
											"end": 3118,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3130,
											"end": 3247,
											"name": "tag",
											"source": 19,
											"value": "179"
										},
										{
											"begin": 3130,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3239,
											"end": 3240,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3236,
											"end": 3237,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3229,
											"end": 3241,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3253,
											"end": 3355,
											"name": "tag",
											"source": 19,
											"value": "180"
										},
										{
											"begin": 3253,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3294,
											"end": 3300,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3347,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 3341,
											"end": 3348,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 3336,
											"end": 3338,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 3329,
											"end": 3334,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3325,
											"end": 3339,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3321,
											"end": 3349,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3311,
											"end": 3349,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3311,
											"end": 3349,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3253,
											"end": 3355,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3253,
											"end": 3355,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3253,
											"end": 3355,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3253,
											"end": 3355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3361,
											"end": 3541,
											"name": "tag",
											"source": 19,
											"value": "181"
										},
										{
											"begin": 3361,
											"end": 3541,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3409,
											"end": 3486,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3406,
											"end": 3407,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3487,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3506,
											"end": 3510,
											"name": "PUSH",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 3503,
											"end": 3504,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 3496,
											"end": 3511,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3530,
											"end": 3534,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 3527,
											"end": 3528,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3520,
											"end": 3535,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3547,
											"end": 3828,
											"name": "tag",
											"source": 19,
											"value": "182"
										},
										{
											"begin": 3547,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3630,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "254"
										},
										{
											"begin": 3652,
											"end": 3656,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3630,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "180"
										},
										{
											"begin": 3630,
											"end": 3657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3630,
											"end": 3657,
											"name": "tag",
											"source": 19,
											"value": "254"
										},
										{
											"begin": 3630,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3622,
											"end": 3628,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3618,
											"end": 3658,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3760,
											"end": 3766,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3748,
											"end": 3758,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3745,
											"end": 3767,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 3724,
											"end": 3742,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3712,
											"end": 3722,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3709,
											"end": 3743,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 3706,
											"end": 3768,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 3703,
											"end": 3791,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3703,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "255"
										},
										{
											"begin": 3703,
											"end": 3791,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "256"
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "181"
										},
										{
											"begin": 3771,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "tag",
											"source": 19,
											"value": "256"
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3703,
											"end": 3791,
											"name": "tag",
											"source": 19,
											"value": "255"
										},
										{
											"begin": 3703,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3807,
											"end": 3809,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3590,
											"end": 3828,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3547,
											"end": 3828,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3547,
											"end": 3828,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3547,
											"end": 3828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3834,
											"end": 3963,
											"name": "tag",
											"source": 19,
											"value": "183"
										},
										{
											"begin": 3834,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3868,
											"end": 3874,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3915,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "258"
										},
										{
											"begin": 3895,
											"end": 3915,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "166"
										},
										{
											"begin": 3895,
											"end": 3915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3895,
											"end": 3915,
											"name": "tag",
											"source": 19,
											"value": "258"
										},
										{
											"begin": 3895,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3885,
											"end": 3915,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3885,
											"end": 3915,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3924,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "259"
										},
										{
											"begin": 3952,
											"end": 3956,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3944,
											"end": 3950,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3924,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "182"
										},
										{
											"begin": 3924,
											"end": 3957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3924,
											"end": 3957,
											"name": "tag",
											"source": 19,
											"value": "259"
										},
										{
											"begin": 3924,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3834,
											"end": 3963,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3834,
											"end": 3963,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3834,
											"end": 3963,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3834,
											"end": 3963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3969,
											"end": 4276,
											"name": "tag",
											"source": 19,
											"value": "184"
										},
										{
											"begin": 3969,
											"end": 4276,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4030,
											"end": 4034,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4120,
											"end": 4138,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4112,
											"end": 4118,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4109,
											"end": 4139,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 4106,
											"end": 4162,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4106,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "261"
										},
										{
											"begin": 4106,
											"end": 4162,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4142,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "262"
										},
										{
											"begin": 4142,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "181"
										},
										{
											"begin": 4142,
											"end": 4160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4142,
											"end": 4160,
											"name": "tag",
											"source": 19,
											"value": "262"
										},
										{
											"begin": 4142,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4106,
											"end": 4162,
											"name": "tag",
											"source": 19,
											"value": "261"
										},
										{
											"begin": 4106,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4180,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "263"
										},
										{
											"begin": 4202,
											"end": 4208,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4180,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "180"
										},
										{
											"begin": 4180,
											"end": 4209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4180,
											"end": 4209,
											"name": "tag",
											"source": 19,
											"value": "263"
										},
										{
											"begin": 4180,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4172,
											"end": 4209,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4172,
											"end": 4209,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4264,
											"end": 4268,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4258,
											"end": 4262,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4254,
											"end": 4269,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4246,
											"end": 4269,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4246,
											"end": 4269,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3969,
											"end": 4276,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3969,
											"end": 4276,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3969,
											"end": 4276,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3969,
											"end": 4276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4282,
											"end": 4428,
											"name": "tag",
											"source": 19,
											"value": "185"
										},
										{
											"begin": 4282,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4374,
											"end": 4377,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4369,
											"end": 4372,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4356,
											"end": 4386,
											"name": "CALLDATACOPY",
											"source": 19
										},
										{
											"begin": 4420,
											"end": 4421,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4411,
											"end": 4417,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4406,
											"end": 4409,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4402,
											"end": 4418,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4395,
											"end": 4422,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4282,
											"end": 4428,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4282,
											"end": 4428,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4282,
											"end": 4428,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4282,
											"end": 4428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4434,
											"end": 4857,
											"name": "tag",
											"source": 19,
											"value": "186"
										},
										{
											"begin": 4434,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4511,
											"end": 4516,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 4601,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "266"
										},
										{
											"begin": 4552,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "267"
										},
										{
											"begin": 4593,
											"end": 4599,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4552,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "184"
										},
										{
											"begin": 4552,
											"end": 4600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4552,
											"end": 4600,
											"name": "tag",
											"source": 19,
											"value": "267"
										},
										{
											"begin": 4552,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4536,
											"end": 4601,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "183"
										},
										{
											"begin": 4536,
											"end": 4601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4536,
											"end": 4601,
											"name": "tag",
											"source": 19,
											"value": "266"
										},
										{
											"begin": 4536,
											"end": 4601,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4527,
											"end": 4601,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4527,
											"end": 4601,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4624,
											"end": 4630,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4617,
											"end": 4622,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4662,
											"end": 4666,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4655,
											"end": 4660,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4651,
											"end": 4667,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4700,
											"end": 4703,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4691,
											"end": 4697,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4686,
											"end": 4689,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4682,
											"end": 4698,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4679,
											"end": 4704,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 4676,
											"end": 4788,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4676,
											"end": 4788,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 4676,
											"end": 4788,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4707,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "269"
										},
										{
											"begin": 4707,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "179"
										},
										{
											"begin": 4707,
											"end": 4786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4707,
											"end": 4786,
											"name": "tag",
											"source": 19,
											"value": "269"
										},
										{
											"begin": 4707,
											"end": 4786,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4676,
											"end": 4788,
											"name": "tag",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 4676,
											"end": 4788,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4797,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "270"
										},
										{
											"begin": 4844,
											"end": 4850,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4839,
											"end": 4842,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4834,
											"end": 4837,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4797,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "185"
										},
										{
											"begin": 4797,
											"end": 4851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4797,
											"end": 4851,
											"name": "tag",
											"source": 19,
											"value": "270"
										},
										{
											"begin": 4797,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4517,
											"end": 4857,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4434,
											"end": 4857,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 4434,
											"end": 4857,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4434,
											"end": 4857,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4434,
											"end": 4857,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4434,
											"end": 4857,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4434,
											"end": 4857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4876,
											"end": 5214,
											"name": "tag",
											"source": 19,
											"value": "187"
										},
										{
											"begin": 4876,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4980,
											"end": 4983,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4973,
											"end": 4977,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 4965,
											"end": 4971,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4961,
											"end": 4978,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4957,
											"end": 4984,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 4947,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "272"
										},
										{
											"begin": 4947,
											"end": 5069,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4988,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "273"
										},
										{
											"begin": 4988,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "178"
										},
										{
											"begin": 4988,
											"end": 5067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4988,
											"end": 5067,
											"name": "tag",
											"source": 19,
											"value": "273"
										},
										{
											"begin": 4988,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4947,
											"end": 5069,
											"name": "tag",
											"source": 19,
											"value": "272"
										},
										{
											"begin": 4947,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5105,
											"end": 5111,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5092,
											"end": 5112,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 5130,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "274"
										},
										{
											"begin": 5204,
											"end": 5207,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5196,
											"end": 5202,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5189,
											"end": 5193,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5181,
											"end": 5187,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5177,
											"end": 5194,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5130,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "186"
										},
										{
											"begin": 5130,
											"end": 5208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5130,
											"end": 5208,
											"name": "tag",
											"source": 19,
											"value": "274"
										},
										{
											"begin": 5130,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5121,
											"end": 5208,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5121,
											"end": 5208,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4937,
											"end": 5214,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4876,
											"end": 5214,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4876,
											"end": 5214,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4876,
											"end": 5214,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4876,
											"end": 5214,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4876,
											"end": 5214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5220,
											"end": 6017,
											"name": "tag",
											"source": 19,
											"value": "47"
										},
										{
											"begin": 5220,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5306,
											"end": 5312,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5320,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5322,
											"end": 5328,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5371,
											"end": 5373,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 5359,
											"end": 5368,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5350,
											"end": 5357,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5346,
											"end": 5369,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5342,
											"end": 5374,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 5339,
											"end": 5458,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5339,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "276"
										},
										{
											"begin": 5339,
											"end": 5458,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5377,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "277"
										},
										{
											"begin": 5377,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "167"
										},
										{
											"begin": 5377,
											"end": 5456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5377,
											"end": 5456,
											"name": "tag",
											"source": 19,
											"value": "277"
										},
										{
											"begin": 5377,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5339,
											"end": 5458,
											"name": "tag",
											"source": 19,
											"value": "276"
										},
										{
											"begin": 5339,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5497,
											"end": 5498,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5522,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "278"
										},
										{
											"begin": 5567,
											"end": 5574,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5558,
											"end": 5564,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5547,
											"end": 5556,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5543,
											"end": 5565,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5522,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "172"
										},
										{
											"begin": 5522,
											"end": 5575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5522,
											"end": 5575,
											"name": "tag",
											"source": 19,
											"value": "278"
										},
										{
											"begin": 5522,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5512,
											"end": 5575,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5512,
											"end": 5575,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5468,
											"end": 5585,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5624,
											"end": 5626,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5650,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "279"
										},
										{
											"begin": 5695,
											"end": 5702,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5686,
											"end": 5692,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5675,
											"end": 5684,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5671,
											"end": 5693,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5650,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "175"
										},
										{
											"begin": 5650,
											"end": 5703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5650,
											"end": 5703,
											"name": "tag",
											"source": 19,
											"value": "279"
										},
										{
											"begin": 5650,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5640,
											"end": 5703,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5640,
											"end": 5703,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5595,
											"end": 5713,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5780,
											"end": 5782,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5769,
											"end": 5778,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5765,
											"end": 5783,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5752,
											"end": 5784,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 5811,
											"end": 5829,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5803,
											"end": 5809,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5800,
											"end": 5830,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 5797,
											"end": 5914,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5797,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "280"
										},
										{
											"begin": 5797,
											"end": 5914,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5833,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "281"
										},
										{
											"begin": 5833,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "168"
										},
										{
											"begin": 5833,
											"end": 5912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5833,
											"end": 5912,
											"name": "tag",
											"source": 19,
											"value": "281"
										},
										{
											"begin": 5833,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5797,
											"end": 5914,
											"name": "tag",
											"source": 19,
											"value": "280"
										},
										{
											"begin": 5797,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5938,
											"end": 6000,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "282"
										},
										{
											"begin": 5992,
											"end": 5999,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5983,
											"end": 5989,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5972,
											"end": 5981,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5968,
											"end": 5990,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5938,
											"end": 6000,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "187"
										},
										{
											"begin": 5938,
											"end": 6000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5938,
											"end": 6000,
											"name": "tag",
											"source": 19,
											"value": "282"
										},
										{
											"begin": 5938,
											"end": 6000,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5928,
											"end": 6000,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5928,
											"end": 6000,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5723,
											"end": 6010,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5220,
											"end": 6017,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5220,
											"end": 6017,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5220,
											"end": 6017,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5220,
											"end": 6017,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5220,
											"end": 6017,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5220,
											"end": 6017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6023,
											"end": 6331,
											"name": "tag",
											"source": 19,
											"value": "188"
										},
										{
											"begin": 6023,
											"end": 6331,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6085,
											"end": 6089,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6167,
											"end": 6173,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6164,
											"end": 6194,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6161,
											"end": 6217,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6161,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "284"
										},
										{
											"begin": 6161,
											"end": 6217,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6197,
											"end": 6215,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "285"
										},
										{
											"begin": 6197,
											"end": 6215,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "181"
										},
										{
											"begin": 6197,
											"end": 6215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6197,
											"end": 6215,
											"name": "tag",
											"source": 19,
											"value": "285"
										},
										{
											"begin": 6197,
											"end": 6215,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6161,
											"end": 6217,
											"name": "tag",
											"source": 19,
											"value": "284"
										},
										{
											"begin": 6161,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6235,
											"end": 6264,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "286"
										},
										{
											"begin": 6257,
											"end": 6263,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6235,
											"end": 6264,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "180"
										},
										{
											"begin": 6235,
											"end": 6264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6235,
											"end": 6264,
											"name": "tag",
											"source": 19,
											"value": "286"
										},
										{
											"begin": 6235,
											"end": 6264,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6227,
											"end": 6264,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6227,
											"end": 6264,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6319,
											"end": 6323,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6313,
											"end": 6317,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6309,
											"end": 6324,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6301,
											"end": 6324,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6301,
											"end": 6324,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6023,
											"end": 6331,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6023,
											"end": 6331,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6023,
											"end": 6331,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6023,
											"end": 6331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6337,
											"end": 6762,
											"name": "tag",
											"source": 19,
											"value": "189"
										},
										{
											"begin": 6337,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6415,
											"end": 6420,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6440,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "288"
										},
										{
											"begin": 6456,
											"end": 6505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "289"
										},
										{
											"begin": 6498,
											"end": 6504,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6456,
											"end": 6505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "188"
										},
										{
											"begin": 6456,
											"end": 6505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6456,
											"end": 6505,
											"name": "tag",
											"source": 19,
											"value": "289"
										},
										{
											"begin": 6456,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6440,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "183"
										},
										{
											"begin": 6440,
											"end": 6506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6440,
											"end": 6506,
											"name": "tag",
											"source": 19,
											"value": "288"
										},
										{
											"begin": 6440,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6431,
											"end": 6506,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6431,
											"end": 6506,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6529,
											"end": 6535,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6522,
											"end": 6527,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6567,
											"end": 6571,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6560,
											"end": 6565,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6556,
											"end": 6572,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6605,
											"end": 6608,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6596,
											"end": 6602,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6591,
											"end": 6594,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6587,
											"end": 6603,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6584,
											"end": 6609,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6581,
											"end": 6693,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6581,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "290"
										},
										{
											"begin": 6581,
											"end": 6693,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6612,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "291"
										},
										{
											"begin": 6612,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "179"
										},
										{
											"begin": 6612,
											"end": 6691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6612,
											"end": 6691,
											"name": "tag",
											"source": 19,
											"value": "291"
										},
										{
											"begin": 6612,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6581,
											"end": 6693,
											"name": "tag",
											"source": 19,
											"value": "290"
										},
										{
											"begin": 6581,
											"end": 6693,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6702,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "292"
										},
										{
											"begin": 6749,
											"end": 6755,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6744,
											"end": 6747,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6739,
											"end": 6742,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6702,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "185"
										},
										{
											"begin": 6702,
											"end": 6756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6702,
											"end": 6756,
											"name": "tag",
											"source": 19,
											"value": "292"
										},
										{
											"begin": 6702,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6421,
											"end": 6762,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6337,
											"end": 6762,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 6337,
											"end": 6762,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6337,
											"end": 6762,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6337,
											"end": 6762,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6337,
											"end": 6762,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6337,
											"end": 6762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6782,
											"end": 7122,
											"name": "tag",
											"source": 19,
											"value": "190"
										},
										{
											"begin": 6782,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6838,
											"end": 6843,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6890,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6880,
											"end": 6884,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 6872,
											"end": 6878,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6868,
											"end": 6885,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6864,
											"end": 6891,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 6854,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 6854,
											"end": 6976,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6895,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "295"
										},
										{
											"begin": 6895,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "178"
										},
										{
											"begin": 6895,
											"end": 6974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6895,
											"end": 6974,
											"name": "tag",
											"source": 19,
											"value": "295"
										},
										{
											"begin": 6895,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6854,
											"end": 6976,
											"name": "tag",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 6854,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7012,
											"end": 7018,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6999,
											"end": 7019,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7037,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "296"
										},
										{
											"begin": 7112,
											"end": 7115,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7104,
											"end": 7110,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7097,
											"end": 7101,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7089,
											"end": 7095,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7037,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "189"
										},
										{
											"begin": 7037,
											"end": 7116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7037,
											"end": 7116,
											"name": "tag",
											"source": 19,
											"value": "296"
										},
										{
											"begin": 7037,
											"end": 7116,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7028,
											"end": 7116,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7028,
											"end": 7116,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6844,
											"end": 7122,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6782,
											"end": 7122,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6782,
											"end": 7122,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6782,
											"end": 7122,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6782,
											"end": 7122,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6782,
											"end": 7122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7128,
											"end": 8723,
											"name": "tag",
											"source": 19,
											"value": "52"
										},
										{
											"begin": 7128,
											"end": 8723,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7261,
											"end": 7267,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7269,
											"end": 7275,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7277,
											"end": 7283,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7285,
											"end": 7291,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7293,
											"end": 7299,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7301,
											"end": 7307,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7350,
											"end": 7353,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 7338,
											"end": 7347,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 7329,
											"end": 7336,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 7325,
											"end": 7348,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 7321,
											"end": 7354,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 7318,
											"end": 7438,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7318,
											"end": 7438,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 7318,
											"end": 7438,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7357,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "299"
										},
										{
											"begin": 7357,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "167"
										},
										{
											"begin": 7357,
											"end": 7436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7357,
											"end": 7436,
											"name": "tag",
											"source": 19,
											"value": "299"
										},
										{
											"begin": 7357,
											"end": 7436,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7318,
											"end": 7438,
											"name": "tag",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 7318,
											"end": 7438,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7477,
											"end": 7478,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7502,
											"end": 7555,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "300"
										},
										{
											"begin": 7547,
											"end": 7554,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 7538,
											"end": 7544,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7527,
											"end": 7536,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 7523,
											"end": 7545,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7502,
											"end": 7555,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "172"
										},
										{
											"begin": 7502,
											"end": 7555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7502,
											"end": 7555,
											"name": "tag",
											"source": 19,
											"value": "300"
										},
										{
											"begin": 7502,
											"end": 7555,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7492,
											"end": 7555,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 7492,
											"end": 7555,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7448,
											"end": 7565,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7632,
											"end": 7634,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7621,
											"end": 7630,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 7617,
											"end": 7635,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7604,
											"end": 7636,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7663,
											"end": 7681,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7655,
											"end": 7661,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7652,
											"end": 7682,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 7649,
											"end": 7766,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7649,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "301"
										},
										{
											"begin": 7649,
											"end": 7766,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7685,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "302"
										},
										{
											"begin": 7685,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "168"
										},
										{
											"begin": 7685,
											"end": 7764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7685,
											"end": 7764,
											"name": "tag",
											"source": 19,
											"value": "302"
										},
										{
											"begin": 7685,
											"end": 7764,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7649,
											"end": 7766,
											"name": "tag",
											"source": 19,
											"value": "301"
										},
										{
											"begin": 7649,
											"end": 7766,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7790,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 7845,
											"end": 7852,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 7836,
											"end": 7842,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7825,
											"end": 7834,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 7821,
											"end": 7843,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7790,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "190"
										},
										{
											"begin": 7790,
											"end": 7853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7790,
											"end": 7853,
											"name": "tag",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 7790,
											"end": 7853,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7780,
											"end": 7853,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 7780,
											"end": 7853,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7575,
											"end": 7863,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7930,
											"end": 7932,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 7919,
											"end": 7928,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 7915,
											"end": 7933,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7902,
											"end": 7934,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7961,
											"end": 7979,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7953,
											"end": 7959,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7950,
											"end": 7980,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 7947,
											"end": 8064,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7947,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "304"
										},
										{
											"begin": 7947,
											"end": 8064,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7983,
											"end": 8062,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "305"
										},
										{
											"begin": 7983,
											"end": 8062,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "168"
										},
										{
											"begin": 7983,
											"end": 8062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7983,
											"end": 8062,
											"name": "tag",
											"source": 19,
											"value": "305"
										},
										{
											"begin": 7983,
											"end": 8062,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7947,
											"end": 8064,
											"name": "tag",
											"source": 19,
											"value": "304"
										},
										{
											"begin": 7947,
											"end": 8064,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8088,
											"end": 8151,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 8143,
											"end": 8150,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 8134,
											"end": 8140,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8123,
											"end": 8132,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 8119,
											"end": 8141,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8088,
											"end": 8151,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "190"
										},
										{
											"begin": 8088,
											"end": 8151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8088,
											"end": 8151,
											"name": "tag",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 8088,
											"end": 8151,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8078,
											"end": 8151,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 8078,
											"end": 8151,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7873,
											"end": 8161,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8200,
											"end": 8202,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 8226,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "307"
										},
										{
											"begin": 8271,
											"end": 8278,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 8262,
											"end": 8268,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8251,
											"end": 8260,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 8247,
											"end": 8269,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8226,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "175"
										},
										{
											"begin": 8226,
											"end": 8279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8226,
											"end": 8279,
											"name": "tag",
											"source": 19,
											"value": "307"
										},
										{
											"begin": 8226,
											"end": 8279,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8216,
											"end": 8279,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 8216,
											"end": 8279,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8171,
											"end": 8289,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8328,
											"end": 8331,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 8355,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "308"
										},
										{
											"begin": 8400,
											"end": 8407,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 8391,
											"end": 8397,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8380,
											"end": 8389,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 8376,
											"end": 8398,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8355,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "172"
										},
										{
											"begin": 8355,
											"end": 8408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8355,
											"end": 8408,
											"name": "tag",
											"source": 19,
											"value": "308"
										},
										{
											"begin": 8355,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8345,
											"end": 8408,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8345,
											"end": 8408,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8299,
											"end": 8418,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8485,
											"end": 8488,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 8474,
											"end": 8483,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 8470,
											"end": 8489,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8457,
											"end": 8490,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 8517,
											"end": 8535,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8509,
											"end": 8515,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8506,
											"end": 8536,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 8503,
											"end": 8620,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8503,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 8503,
											"end": 8620,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8539,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "310"
										},
										{
											"begin": 8539,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "168"
										},
										{
											"begin": 8539,
											"end": 8618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8539,
											"end": 8618,
											"name": "tag",
											"source": 19,
											"value": "310"
										},
										{
											"begin": 8539,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8503,
											"end": 8620,
											"name": "tag",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 8503,
											"end": 8620,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8644,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 8698,
											"end": 8705,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 8689,
											"end": 8695,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8678,
											"end": 8687,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 8674,
											"end": 8696,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8644,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "187"
										},
										{
											"begin": 8644,
											"end": 8706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8644,
											"end": 8706,
											"name": "tag",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 8644,
											"end": 8706,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8634,
											"end": 8706,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8634,
											"end": 8706,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8428,
											"end": 8716,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7128,
											"end": 8723,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7128,
											"end": 8723,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 7128,
											"end": 8723,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7128,
											"end": 8723,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7128,
											"end": 8723,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 7128,
											"end": 8723,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7128,
											"end": 8723,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7128,
											"end": 8723,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 7128,
											"end": 8723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8729,
											"end": 9348,
											"name": "tag",
											"source": 19,
											"value": "57"
										},
										{
											"begin": 8729,
											"end": 9348,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8806,
											"end": 8812,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8814,
											"end": 8820,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8822,
											"end": 8828,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8871,
											"end": 8873,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 8859,
											"end": 8868,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8850,
											"end": 8857,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 8846,
											"end": 8869,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 8842,
											"end": 8874,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 8839,
											"end": 8958,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8839,
											"end": 8958,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 8839,
											"end": 8958,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8877,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "314"
										},
										{
											"begin": 8877,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "167"
										},
										{
											"begin": 8877,
											"end": 8956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8877,
											"end": 8956,
											"name": "tag",
											"source": 19,
											"value": "314"
										},
										{
											"begin": 8877,
											"end": 8956,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8839,
											"end": 8958,
											"name": "tag",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 8839,
											"end": 8958,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8997,
											"end": 8998,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9022,
											"end": 9075,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "315"
										},
										{
											"begin": 9067,
											"end": 9074,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 9058,
											"end": 9064,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9047,
											"end": 9056,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 9043,
											"end": 9065,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9022,
											"end": 9075,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "172"
										},
										{
											"begin": 9022,
											"end": 9075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9022,
											"end": 9075,
											"name": "tag",
											"source": 19,
											"value": "315"
										},
										{
											"begin": 9022,
											"end": 9075,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9012,
											"end": 9075,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 9012,
											"end": 9075,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8968,
											"end": 9085,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9124,
											"end": 9126,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9150,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "316"
										},
										{
											"begin": 9195,
											"end": 9202,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 9186,
											"end": 9192,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9175,
											"end": 9184,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 9171,
											"end": 9193,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9150,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "172"
										},
										{
											"begin": 9150,
											"end": 9203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9150,
											"end": 9203,
											"name": "tag",
											"source": 19,
											"value": "316"
										},
										{
											"begin": 9150,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9140,
											"end": 9203,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9140,
											"end": 9203,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9095,
											"end": 9213,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9252,
											"end": 9254,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 9278,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "317"
										},
										{
											"begin": 9323,
											"end": 9330,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 9314,
											"end": 9320,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9303,
											"end": 9312,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 9299,
											"end": 9321,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9278,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "175"
										},
										{
											"begin": 9278,
											"end": 9331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9278,
											"end": 9331,
											"name": "tag",
											"source": 19,
											"value": "317"
										},
										{
											"begin": 9278,
											"end": 9331,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9268,
											"end": 9331,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9268,
											"end": 9331,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9223,
											"end": 9341,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8729,
											"end": 9348,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8729,
											"end": 9348,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8729,
											"end": 9348,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8729,
											"end": 9348,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8729,
											"end": 9348,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8729,
											"end": 9348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9354,
											"end": 10006,
											"name": "tag",
											"source": 19,
											"value": "66"
										},
										{
											"begin": 9354,
											"end": 10006,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9431,
											"end": 9437,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9439,
											"end": 9445,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9488,
											"end": 9490,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 9476,
											"end": 9485,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9467,
											"end": 9474,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9463,
											"end": 9486,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9459,
											"end": 9491,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 9456,
											"end": 9575,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9456,
											"end": 9575,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "319"
										},
										{
											"begin": 9456,
											"end": 9575,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9494,
											"end": 9573,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 9494,
											"end": 9573,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "167"
										},
										{
											"begin": 9494,
											"end": 9573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9494,
											"end": 9573,
											"name": "tag",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 9494,
											"end": 9573,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9456,
											"end": 9575,
											"name": "tag",
											"source": 19,
											"value": "319"
										},
										{
											"begin": 9456,
											"end": 9575,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9614,
											"end": 9615,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9639,
											"end": 9692,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 9684,
											"end": 9691,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9675,
											"end": 9681,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9664,
											"end": 9673,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 9660,
											"end": 9682,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9639,
											"end": 9692,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "175"
										},
										{
											"begin": 9639,
											"end": 9692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9639,
											"end": 9692,
											"name": "tag",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 9639,
											"end": 9692,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9629,
											"end": 9692,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9629,
											"end": 9692,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9585,
											"end": 9702,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9769,
											"end": 9771,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9758,
											"end": 9767,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9754,
											"end": 9772,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9741,
											"end": 9773,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 9800,
											"end": 9818,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9792,
											"end": 9798,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9789,
											"end": 9819,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 9786,
											"end": 9903,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9786,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "322"
										},
										{
											"begin": 9786,
											"end": 9903,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9822,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 9822,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "168"
										},
										{
											"begin": 9822,
											"end": 9901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9822,
											"end": 9901,
											"name": "tag",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 9822,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9786,
											"end": 9903,
											"name": "tag",
											"source": 19,
											"value": "322"
										},
										{
											"begin": 9786,
											"end": 9903,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9927,
											"end": 9989,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "324"
										},
										{
											"begin": 9981,
											"end": 9988,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9972,
											"end": 9978,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9961,
											"end": 9970,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 9957,
											"end": 9979,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9927,
											"end": 9989,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "187"
										},
										{
											"begin": 9927,
											"end": 9989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9927,
											"end": 9989,
											"name": "tag",
											"source": 19,
											"value": "324"
										},
										{
											"begin": 9927,
											"end": 9989,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9917,
											"end": 9989,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9917,
											"end": 9989,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9712,
											"end": 9999,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9354,
											"end": 10006,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9354,
											"end": 10006,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9354,
											"end": 10006,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9354,
											"end": 10006,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9354,
											"end": 10006,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9354,
											"end": 10006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10012,
											"end": 10181,
											"name": "tag",
											"source": 19,
											"value": "191"
										},
										{
											"begin": 10012,
											"end": 10181,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10096,
											"end": 10107,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10130,
											"end": 10136,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10125,
											"end": 10128,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10118,
											"end": 10137,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10170,
											"end": 10174,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10165,
											"end": 10168,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10161,
											"end": 10175,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10146,
											"end": 10175,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10146,
											"end": 10175,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10012,
											"end": 10181,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10012,
											"end": 10181,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10012,
											"end": 10181,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10012,
											"end": 10181,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10012,
											"end": 10181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10187,
											"end": 10412,
											"name": "tag",
											"source": 19,
											"value": "192"
										},
										{
											"begin": 10187,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10327,
											"end": 10361,
											"name": "PUSH",
											"source": 19,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 10323,
											"end": 10324,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10315,
											"end": 10321,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10311,
											"end": 10325,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10304,
											"end": 10362,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10396,
											"end": 10404,
											"name": "PUSH",
											"source": 19,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10391,
											"end": 10393,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10383,
											"end": 10389,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10379,
											"end": 10394,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10372,
											"end": 10405,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10187,
											"end": 10412,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10187,
											"end": 10412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10418,
											"end": 10784,
											"name": "tag",
											"source": 19,
											"value": "193"
										},
										{
											"begin": 10418,
											"end": 10784,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10560,
											"end": 10563,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10581,
											"end": 10648,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 10645,
											"end": 10647,
											"name": "PUSH",
											"source": 19,
											"value": "26"
										},
										{
											"begin": 10640,
											"end": 10643,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10581,
											"end": 10648,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "191"
										},
										{
											"begin": 10581,
											"end": 10648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10581,
											"end": 10648,
											"name": "tag",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 10581,
											"end": 10648,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10574,
											"end": 10648,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10574,
											"end": 10648,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10657,
											"end": 10750,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 10746,
											"end": 10749,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10657,
											"end": 10750,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "192"
										},
										{
											"begin": 10657,
											"end": 10750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10657,
											"end": 10750,
											"name": "tag",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 10657,
											"end": 10750,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10775,
											"end": 10777,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 10770,
											"end": 10773,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10766,
											"end": 10778,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10759,
											"end": 10778,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10759,
											"end": 10778,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10418,
											"end": 10784,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10418,
											"end": 10784,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10418,
											"end": 10784,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10418,
											"end": 10784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10790,
											"end": 11209,
											"name": "tag",
											"source": 19,
											"value": "109"
										},
										{
											"begin": 10790,
											"end": 11209,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10956,
											"end": 10960,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10994,
											"end": 10996,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10983,
											"end": 10992,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10979,
											"end": 10997,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10971,
											"end": 10997,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10971,
											"end": 10997,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11043,
											"end": 11052,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11037,
											"end": 11041,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11033,
											"end": 11053,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 11029,
											"end": 11030,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11018,
											"end": 11027,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11014,
											"end": 11031,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11007,
											"end": 11054,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11071,
											"end": 11202,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 11197,
											"end": 11201,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11071,
											"end": 11202,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "193"
										},
										{
											"begin": 11071,
											"end": 11202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11071,
											"end": 11202,
											"name": "tag",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 11071,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11063,
											"end": 11202,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11063,
											"end": 11202,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10790,
											"end": 11209,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10790,
											"end": 11209,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10790,
											"end": 11209,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10790,
											"end": 11209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11215,
											"end": 11768,
											"name": "tag",
											"source": 19,
											"value": "121"
										},
										{
											"begin": 11215,
											"end": 11768,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11392,
											"end": 11396,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11430,
											"end": 11433,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 11419,
											"end": 11428,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11415,
											"end": 11434,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11407,
											"end": 11434,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11407,
											"end": 11434,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11444,
											"end": 11515,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 11512,
											"end": 11513,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11501,
											"end": 11510,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11497,
											"end": 11514,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11488,
											"end": 11494,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 11444,
											"end": 11515,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "177"
										},
										{
											"begin": 11444,
											"end": 11515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11444,
											"end": 11515,
											"name": "tag",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 11444,
											"end": 11515,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 11593,
											"end": 11595,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11582,
											"end": 11591,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11578,
											"end": 11596,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11569,
											"end": 11575,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "177"
										},
										{
											"begin": 11525,
											"end": 11597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "tag",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11607,
											"end": 11679,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 11675,
											"end": 11677,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 11664,
											"end": 11673,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11660,
											"end": 11678,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11651,
											"end": 11657,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11607,
											"end": 11679,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "177"
										},
										{
											"begin": 11607,
											"end": 11679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11607,
											"end": 11679,
											"name": "tag",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 11607,
											"end": 11679,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11689,
											"end": 11761,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 11757,
											"end": 11759,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 11746,
											"end": 11755,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11742,
											"end": 11760,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11733,
											"end": 11739,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11689,
											"end": 11761,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "176"
										},
										{
											"begin": 11689,
											"end": 11761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11689,
											"end": 11761,
											"name": "tag",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 11689,
											"end": 11761,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11215,
											"end": 11768,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 11215,
											"end": 11768,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 11215,
											"end": 11768,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11215,
											"end": 11768,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11215,
											"end": 11768,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11215,
											"end": 11768,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11215,
											"end": 11768,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11215,
											"end": 11768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11774,
											"end": 11917,
											"name": "tag",
											"source": 19,
											"value": "194"
										},
										{
											"begin": 11774,
											"end": 11917,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11831,
											"end": 11836,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11862,
											"end": 11868,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11856,
											"end": 11869,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 11847,
											"end": 11869,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11847,
											"end": 11869,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11878,
											"end": 11911,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 11905,
											"end": 11910,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11878,
											"end": 11911,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "174"
										},
										{
											"begin": 11878,
											"end": 11911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11878,
											"end": 11911,
											"name": "tag",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 11878,
											"end": 11911,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11774,
											"end": 11917,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11774,
											"end": 11917,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11774,
											"end": 11917,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11774,
											"end": 11917,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11774,
											"end": 11917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11923,
											"end": 12274,
											"name": "tag",
											"source": 19,
											"value": "129"
										},
										{
											"begin": 11923,
											"end": 12274,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11993,
											"end": 11999,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12042,
											"end": 12044,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12030,
											"end": 12039,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12021,
											"end": 12028,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 12017,
											"end": 12040,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 12013,
											"end": 12045,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 12010,
											"end": 12129,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 12010,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 12010,
											"end": 12129,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12048,
											"end": 12127,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 12048,
											"end": 12127,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "167"
										},
										{
											"begin": 12048,
											"end": 12127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12048,
											"end": 12127,
											"name": "tag",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 12048,
											"end": 12127,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12010,
											"end": 12129,
											"name": "tag",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 12010,
											"end": 12129,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12168,
											"end": 12169,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12193,
											"end": 12257,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 12249,
											"end": 12256,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 12240,
											"end": 12246,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12229,
											"end": 12238,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12225,
											"end": 12247,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12193,
											"end": 12257,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "194"
										},
										{
											"begin": 12193,
											"end": 12257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12193,
											"end": 12257,
											"name": "tag",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 12193,
											"end": 12257,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12183,
											"end": 12257,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12183,
											"end": 12257,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12139,
											"end": 12267,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11923,
											"end": 12274,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11923,
											"end": 12274,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11923,
											"end": 12274,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11923,
											"end": 12274,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11923,
											"end": 12274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12280,
											"end": 12462,
											"name": "tag",
											"source": 19,
											"value": "195"
										},
										{
											"begin": 12280,
											"end": 12462,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12420,
											"end": 12454,
											"name": "PUSH",
											"source": 19,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12416,
											"end": 12417,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12408,
											"end": 12414,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12404,
											"end": 12418,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12397,
											"end": 12455,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12280,
											"end": 12462,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12280,
											"end": 12462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12468,
											"end": 12834,
											"name": "tag",
											"source": 19,
											"value": "196"
										},
										{
											"begin": 12468,
											"end": 12834,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12610,
											"end": 12613,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12631,
											"end": 12698,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "345"
										},
										{
											"begin": 12695,
											"end": 12697,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12690,
											"end": 12693,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12631,
											"end": 12698,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "191"
										},
										{
											"begin": 12631,
											"end": 12698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12631,
											"end": 12698,
											"name": "tag",
											"source": 19,
											"value": "345"
										},
										{
											"begin": 12631,
											"end": 12698,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12624,
											"end": 12698,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12624,
											"end": 12698,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12707,
											"end": 12800,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "346"
										},
										{
											"begin": 12796,
											"end": 12799,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12707,
											"end": 12800,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "195"
										},
										{
											"begin": 12707,
											"end": 12800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12707,
											"end": 12800,
											"name": "tag",
											"source": 19,
											"value": "346"
										},
										{
											"begin": 12707,
											"end": 12800,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12825,
											"end": 12827,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12820,
											"end": 12823,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12816,
											"end": 12828,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12809,
											"end": 12828,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12809,
											"end": 12828,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12468,
											"end": 12834,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12468,
											"end": 12834,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12468,
											"end": 12834,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12468,
											"end": 12834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12840,
											"end": 13259,
											"name": "tag",
											"source": 19,
											"value": "136"
										},
										{
											"begin": 12840,
											"end": 13259,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13006,
											"end": 13010,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13044,
											"end": 13046,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13033,
											"end": 13042,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13029,
											"end": 13047,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13021,
											"end": 13047,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13021,
											"end": 13047,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13093,
											"end": 13102,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13087,
											"end": 13091,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13083,
											"end": 13103,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 13079,
											"end": 13080,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13068,
											"end": 13077,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13064,
											"end": 13081,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13121,
											"end": 13252,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 13247,
											"end": 13251,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13121,
											"end": 13252,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "196"
										},
										{
											"begin": 13121,
											"end": 13252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13121,
											"end": 13252,
											"name": "tag",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 13121,
											"end": 13252,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13113,
											"end": 13252,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13113,
											"end": 13252,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12840,
											"end": 13259,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12840,
											"end": 13259,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12840,
											"end": 13259,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12840,
											"end": 13259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13265,
											"end": 13363,
											"name": "tag",
											"source": 19,
											"value": "197"
										},
										{
											"begin": 13265,
											"end": 13363,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13316,
											"end": 13322,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13350,
											"end": 13355,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13344,
											"end": 13356,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 13334,
											"end": 13356,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13334,
											"end": 13356,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13265,
											"end": 13363,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13265,
											"end": 13363,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13265,
											"end": 13363,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13265,
											"end": 13363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13369,
											"end": 13537,
											"name": "tag",
											"source": 19,
											"value": "198"
										},
										{
											"begin": 13369,
											"end": 13537,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13452,
											"end": 13463,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13486,
											"end": 13492,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13481,
											"end": 13484,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13474,
											"end": 13493,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13526,
											"end": 13530,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13521,
											"end": 13524,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13517,
											"end": 13531,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13502,
											"end": 13531,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13502,
											"end": 13531,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13369,
											"end": 13537,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 13369,
											"end": 13537,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13369,
											"end": 13537,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13369,
											"end": 13537,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13369,
											"end": 13537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13543,
											"end": 13789,
											"name": "tag",
											"source": 19,
											"value": "199"
										},
										{
											"begin": 13543,
											"end": 13789,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13624,
											"end": 13625,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13634,
											"end": 13747,
											"name": "tag",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 13634,
											"end": 13747,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13648,
											"end": 13654,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13645,
											"end": 13646,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13642,
											"end": 13655,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 13634,
											"end": 13747,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 13634,
											"end": 13747,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "354"
										},
										{
											"begin": 13634,
											"end": 13747,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 13733,
											"end": 13734,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 13728,
											"end": 13731,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13724,
											"end": 13735,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13718,
											"end": 13736,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 13714,
											"end": 13715,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13709,
											"end": 13712,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13705,
											"end": 13716,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13698,
											"end": 13737,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13670,
											"end": 13672,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13667,
											"end": 13668,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13663,
											"end": 13673,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13658,
											"end": 13673,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13658,
											"end": 13673,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13634,
											"end": 13747,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 13634,
											"end": 13747,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13634,
											"end": 13747,
											"name": "tag",
											"source": 19,
											"value": "354"
										},
										{
											"begin": 13634,
											"end": 13747,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13781,
											"end": 13782,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13772,
											"end": 13778,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13767,
											"end": 13770,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13763,
											"end": 13779,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13756,
											"end": 13783,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13605,
											"end": 13789,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13543,
											"end": 13789,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13543,
											"end": 13789,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13543,
											"end": 13789,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13543,
											"end": 13789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13795,
											"end": 14168,
											"name": "tag",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 13795,
											"end": 14168,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13881,
											"end": 13884,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13909,
											"end": 13947,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "356"
										},
										{
											"begin": 13941,
											"end": 13946,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13909,
											"end": 13947,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "197"
										},
										{
											"begin": 13909,
											"end": 13947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13909,
											"end": 13947,
											"name": "tag",
											"source": 19,
											"value": "356"
										},
										{
											"begin": 13909,
											"end": 13947,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13963,
											"end": 14033,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "357"
										},
										{
											"begin": 14026,
											"end": 14032,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14021,
											"end": 14024,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 13963,
											"end": 14033,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "198"
										},
										{
											"begin": 13963,
											"end": 14033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13963,
											"end": 14033,
											"name": "tag",
											"source": 19,
											"value": "357"
										},
										{
											"begin": 13963,
											"end": 14033,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13956,
											"end": 14033,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 13956,
											"end": 14033,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14042,
											"end": 14107,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "358"
										},
										{
											"begin": 14100,
											"end": 14106,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14095,
											"end": 14098,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 14088,
											"end": 14092,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14081,
											"end": 14086,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 14077,
											"end": 14093,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14042,
											"end": 14107,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "199"
										},
										{
											"begin": 14042,
											"end": 14107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14042,
											"end": 14107,
											"name": "tag",
											"source": 19,
											"value": "358"
										},
										{
											"begin": 14042,
											"end": 14107,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14132,
											"end": 14161,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "359"
										},
										{
											"begin": 14154,
											"end": 14160,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14132,
											"end": 14161,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "180"
										},
										{
											"begin": 14132,
											"end": 14161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14132,
											"end": 14161,
											"name": "tag",
											"source": 19,
											"value": "359"
										},
										{
											"begin": 14132,
											"end": 14161,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14127,
											"end": 14130,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14123,
											"end": 14162,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14116,
											"end": 14162,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14116,
											"end": 14162,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13885,
											"end": 14168,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13795,
											"end": 14168,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 13795,
											"end": 14168,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13795,
											"end": 14168,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13795,
											"end": 14168,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13795,
											"end": 14168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14174,
											"end": 14703,
											"name": "tag",
											"source": 19,
											"value": "140"
										},
										{
											"begin": 14174,
											"end": 14703,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14341,
											"end": 14345,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14379,
											"end": 14381,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 14368,
											"end": 14377,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14364,
											"end": 14382,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14356,
											"end": 14382,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14356,
											"end": 14382,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14392,
											"end": 14463,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 14460,
											"end": 14461,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14449,
											"end": 14458,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14445,
											"end": 14462,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14436,
											"end": 14442,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 14392,
											"end": 14463,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "177"
										},
										{
											"begin": 14392,
											"end": 14463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14392,
											"end": 14463,
											"name": "tag",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 14392,
											"end": 14463,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14473,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 14541,
											"end": 14543,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14530,
											"end": 14539,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14517,
											"end": 14523,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 14473,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "176"
										},
										{
											"begin": 14473,
											"end": 14545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14473,
											"end": 14545,
											"name": "tag",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 14473,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14592,
											"end": 14601,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14586,
											"end": 14590,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14582,
											"end": 14602,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 14577,
											"end": 14579,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 14566,
											"end": 14575,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14562,
											"end": 14580,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14555,
											"end": 14603,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14620,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "363"
										},
										{
											"begin": 14691,
											"end": 14695,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14682,
											"end": 14688,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14620,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 14620,
											"end": 14696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14620,
											"end": 14696,
											"name": "tag",
											"source": 19,
											"value": "363"
										},
										{
											"begin": 14620,
											"end": 14696,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14612,
											"end": 14696,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14612,
											"end": 14696,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14174,
											"end": 14703,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 14174,
											"end": 14703,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 14174,
											"end": 14703,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14174,
											"end": 14703,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14174,
											"end": 14703,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14174,
											"end": 14703,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14174,
											"end": 14703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14709,
											"end": 14769,
											"name": "tag",
											"source": 19,
											"value": "201"
										},
										{
											"begin": 14709,
											"end": 14769,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14737,
											"end": 14740,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14758,
											"end": 14763,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14751,
											"end": 14763,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14751,
											"end": 14763,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14709,
											"end": 14769,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14709,
											"end": 14769,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14709,
											"end": 14769,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14709,
											"end": 14769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14775,
											"end": 14917,
											"name": "tag",
											"source": 19,
											"value": "202"
										},
										{
											"begin": 14775,
											"end": 14917,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14825,
											"end": 14834,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14858,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "366"
										},
										{
											"begin": 14876,
											"end": 14910,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "367"
										},
										{
											"begin": 14885,
											"end": 14909,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "368"
										},
										{
											"begin": 14903,
											"end": 14908,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14885,
											"end": 14909,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "169"
										},
										{
											"begin": 14885,
											"end": 14909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14885,
											"end": 14909,
											"name": "tag",
											"source": 19,
											"value": "368"
										},
										{
											"begin": 14885,
											"end": 14909,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14876,
											"end": 14910,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "201"
										},
										{
											"begin": 14876,
											"end": 14910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14876,
											"end": 14910,
											"name": "tag",
											"source": 19,
											"value": "367"
										},
										{
											"begin": 14876,
											"end": 14910,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14858,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "169"
										},
										{
											"begin": 14858,
											"end": 14911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14858,
											"end": 14911,
											"name": "tag",
											"source": 19,
											"value": "366"
										},
										{
											"begin": 14858,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14845,
											"end": 14911,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14845,
											"end": 14911,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14775,
											"end": 14917,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14775,
											"end": 14917,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14775,
											"end": 14917,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14775,
											"end": 14917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14923,
											"end": 15049,
											"name": "tag",
											"source": 19,
											"value": "203"
										},
										{
											"begin": 14923,
											"end": 15049,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14973,
											"end": 14982,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15006,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "370"
										},
										{
											"begin": 15037,
											"end": 15042,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15006,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "202"
										},
										{
											"begin": 15006,
											"end": 15043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15006,
											"end": 15043,
											"name": "tag",
											"source": 19,
											"value": "370"
										},
										{
											"begin": 15006,
											"end": 15043,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14993,
											"end": 15043,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14993,
											"end": 15043,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14923,
											"end": 15049,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14923,
											"end": 15049,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14923,
											"end": 15049,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14923,
											"end": 15049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15055,
											"end": 15195,
											"name": "tag",
											"source": 19,
											"value": "204"
										},
										{
											"begin": 15055,
											"end": 15195,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15119,
											"end": 15128,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15152,
											"end": 15189,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 15183,
											"end": 15188,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15152,
											"end": 15189,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "203"
										},
										{
											"begin": 15152,
											"end": 15189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15152,
											"end": 15189,
											"name": "tag",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 15152,
											"end": 15189,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15139,
											"end": 15189,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15139,
											"end": 15189,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15055,
											"end": 15195,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15055,
											"end": 15195,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15055,
											"end": 15195,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15055,
											"end": 15195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15201,
											"end": 15360,
											"name": "tag",
											"source": 19,
											"value": "205"
										},
										{
											"begin": 15201,
											"end": 15360,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15302,
											"end": 15353,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "374"
										},
										{
											"begin": 15347,
											"end": 15352,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15302,
											"end": 15353,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "204"
										},
										{
											"begin": 15302,
											"end": 15353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15302,
											"end": 15353,
											"name": "tag",
											"source": 19,
											"value": "374"
										},
										{
											"begin": 15302,
											"end": 15353,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15297,
											"end": 15300,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15290,
											"end": 15354,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15201,
											"end": 15360,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15201,
											"end": 15360,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15201,
											"end": 15360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15366,
											"end": 15452,
											"name": "tag",
											"source": 19,
											"value": "206"
										},
										{
											"begin": 15366,
											"end": 15452,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15412,
											"end": 15419,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15441,
											"end": 15446,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15430,
											"end": 15446,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15430,
											"end": 15446,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15366,
											"end": 15452,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15366,
											"end": 15452,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15366,
											"end": 15452,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15366,
											"end": 15452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15458,
											"end": 15544,
											"name": "tag",
											"source": 19,
											"value": "207"
										},
										{
											"begin": 15458,
											"end": 15544,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15493,
											"end": 15500,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15533,
											"end": 15537,
											"name": "PUSH",
											"source": 19,
											"value": "FF"
										},
										{
											"begin": 15526,
											"end": 15531,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15522,
											"end": 15538,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 15511,
											"end": 15538,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15511,
											"end": 15538,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15458,
											"end": 15544,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15458,
											"end": 15544,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15458,
											"end": 15544,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15458,
											"end": 15544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15550,
											"end": 15706,
											"name": "tag",
											"source": 19,
											"value": "208"
										},
										{
											"begin": 15550,
											"end": 15706,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15607,
											"end": 15616,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15640,
											"end": 15700,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "378"
										},
										{
											"begin": 15656,
											"end": 15699,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "379"
										},
										{
											"begin": 15665,
											"end": 15698,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "380"
										},
										{
											"begin": 15692,
											"end": 15697,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15665,
											"end": 15698,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "206"
										},
										{
											"begin": 15665,
											"end": 15698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15665,
											"end": 15698,
											"name": "tag",
											"source": 19,
											"value": "380"
										},
										{
											"begin": 15665,
											"end": 15698,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15656,
											"end": 15699,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "201"
										},
										{
											"begin": 15656,
											"end": 15699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15656,
											"end": 15699,
											"name": "tag",
											"source": 19,
											"value": "379"
										},
										{
											"begin": 15656,
											"end": 15699,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15640,
											"end": 15700,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "207"
										},
										{
											"begin": 15640,
											"end": 15700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15640,
											"end": 15700,
											"name": "tag",
											"source": 19,
											"value": "378"
										},
										{
											"begin": 15640,
											"end": 15700,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15627,
											"end": 15700,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15627,
											"end": 15700,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15550,
											"end": 15706,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15550,
											"end": 15706,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15550,
											"end": 15706,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15550,
											"end": 15706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15712,
											"end": 15857,
											"name": "tag",
											"source": 19,
											"value": "209"
										},
										{
											"begin": 15712,
											"end": 15857,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15806,
											"end": 15850,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "382"
										},
										{
											"begin": 15844,
											"end": 15849,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15806,
											"end": 15850,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "208"
										},
										{
											"begin": 15806,
											"end": 15850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15806,
											"end": 15850,
											"name": "tag",
											"source": 19,
											"value": "382"
										},
										{
											"begin": 15806,
											"end": 15850,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15801,
											"end": 15804,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15794,
											"end": 15851,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15712,
											"end": 15857,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15712,
											"end": 15857,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15712,
											"end": 15857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15863,
											"end": 15962,
											"name": "tag",
											"source": 19,
											"value": "210"
										},
										{
											"begin": 15863,
											"end": 15962,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15915,
											"end": 15921,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15949,
											"end": 15954,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15943,
											"end": 15955,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 15933,
											"end": 15955,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15933,
											"end": 15955,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15863,
											"end": 15962,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15863,
											"end": 15962,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15863,
											"end": 15962,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15863,
											"end": 15962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15968,
											"end": 16345,
											"name": "tag",
											"source": 19,
											"value": "211"
										},
										{
											"begin": 15968,
											"end": 16345,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16056,
											"end": 16059,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16084,
											"end": 16123,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "385"
										},
										{
											"begin": 16117,
											"end": 16122,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16084,
											"end": 16123,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "210"
										},
										{
											"begin": 16084,
											"end": 16123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16084,
											"end": 16123,
											"name": "tag",
											"source": 19,
											"value": "385"
										},
										{
											"begin": 16084,
											"end": 16123,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16139,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 16203,
											"end": 16209,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16198,
											"end": 16201,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16139,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "191"
										},
										{
											"begin": 16139,
											"end": 16210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16139,
											"end": 16210,
											"name": "tag",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 16139,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16132,
											"end": 16210,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 16132,
											"end": 16210,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16219,
											"end": 16284,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "387"
										},
										{
											"begin": 16277,
											"end": 16283,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16272,
											"end": 16275,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16265,
											"end": 16269,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16258,
											"end": 16263,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 16254,
											"end": 16270,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16219,
											"end": 16284,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "199"
										},
										{
											"begin": 16219,
											"end": 16284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16219,
											"end": 16284,
											"name": "tag",
											"source": 19,
											"value": "387"
										},
										{
											"begin": 16219,
											"end": 16284,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16309,
											"end": 16338,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "388"
										},
										{
											"begin": 16331,
											"end": 16337,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16309,
											"end": 16338,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "180"
										},
										{
											"begin": 16309,
											"end": 16338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16309,
											"end": 16338,
											"name": "tag",
											"source": 19,
											"value": "388"
										},
										{
											"begin": 16309,
											"end": 16338,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16304,
											"end": 16307,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 16300,
											"end": 16339,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16293,
											"end": 16339,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16293,
											"end": 16339,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16060,
											"end": 16345,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15968,
											"end": 16345,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 15968,
											"end": 16345,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15968,
											"end": 16345,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15968,
											"end": 16345,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15968,
											"end": 16345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16351,
											"end": 17128,
											"name": "tag",
											"source": 19,
											"value": "150"
										},
										{
											"begin": 16351,
											"end": 17128,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16589,
											"end": 16593,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16627,
											"end": 16630,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 16616,
											"end": 16625,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16612,
											"end": 16631,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16604,
											"end": 16631,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16604,
											"end": 16631,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16641,
											"end": 16726,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "390"
										},
										{
											"begin": 16723,
											"end": 16724,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16712,
											"end": 16721,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16708,
											"end": 16725,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16699,
											"end": 16705,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 16641,
											"end": 16726,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "205"
										},
										{
											"begin": 16641,
											"end": 16726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16641,
											"end": 16726,
											"name": "tag",
											"source": 19,
											"value": "390"
										},
										{
											"begin": 16641,
											"end": 16726,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16736,
											"end": 16815,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 16811,
											"end": 16813,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16800,
											"end": 16809,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16796,
											"end": 16814,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16787,
											"end": 16793,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 16736,
											"end": 16815,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "209"
										},
										{
											"begin": 16736,
											"end": 16815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16736,
											"end": 16815,
											"name": "tag",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 16736,
											"end": 16815,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16862,
											"end": 16871,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16856,
											"end": 16860,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16852,
											"end": 16872,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 16847,
											"end": 16849,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 16836,
											"end": 16845,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16832,
											"end": 16850,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16825,
											"end": 16873,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16890,
											"end": 16968,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 16963,
											"end": 16967,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16954,
											"end": 16960,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16890,
											"end": 16968,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "211"
										},
										{
											"begin": 16890,
											"end": 16968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16890,
											"end": 16968,
											"name": "tag",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 16890,
											"end": 16968,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16882,
											"end": 16968,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16882,
											"end": 16968,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17015,
											"end": 17024,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17009,
											"end": 17013,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17005,
											"end": 17025,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 17000,
											"end": 17002,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 16989,
											"end": 16998,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16985,
											"end": 17003,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16978,
											"end": 17026,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17043,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 17116,
											"end": 17120,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17107,
											"end": 17113,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 17043,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "211"
										},
										{
											"begin": 17043,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17043,
											"end": 17121,
											"name": "tag",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 17043,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17035,
											"end": 17121,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17035,
											"end": 17121,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16351,
											"end": 17128,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 16351,
											"end": 17128,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 16351,
											"end": 17128,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16351,
											"end": 17128,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16351,
											"end": 17128,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16351,
											"end": 17128,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16351,
											"end": 17128,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16351,
											"end": 17128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17134,
											"end": 17576,
											"name": "tag",
											"source": 19,
											"value": "156"
										},
										{
											"begin": 17134,
											"end": 17576,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17283,
											"end": 17287,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17321,
											"end": 17323,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 17310,
											"end": 17319,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17306,
											"end": 17324,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17298,
											"end": 17324,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17298,
											"end": 17324,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17334,
											"end": 17405,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 17402,
											"end": 17403,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17391,
											"end": 17400,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17387,
											"end": 17404,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17378,
											"end": 17384,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 17334,
											"end": 17405,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "177"
										},
										{
											"begin": 17334,
											"end": 17405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17334,
											"end": 17405,
											"name": "tag",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 17334,
											"end": 17405,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17415,
											"end": 17487,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 17483,
											"end": 17485,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17472,
											"end": 17481,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17468,
											"end": 17486,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17459,
											"end": 17465,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 17415,
											"end": 17487,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "177"
										},
										{
											"begin": 17415,
											"end": 17487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17415,
											"end": 17487,
											"name": "tag",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 17415,
											"end": 17487,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17497,
											"end": 17569,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "397"
										},
										{
											"begin": 17565,
											"end": 17567,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 17554,
											"end": 17563,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17550,
											"end": 17568,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17541,
											"end": 17547,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 17497,
											"end": 17569,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "176"
										},
										{
											"begin": 17497,
											"end": 17569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17497,
											"end": 17569,
											"name": "tag",
											"source": 19,
											"value": "397"
										},
										{
											"begin": 17497,
											"end": 17569,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17134,
											"end": 17576,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 17134,
											"end": 17576,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 17134,
											"end": 17576,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17134,
											"end": 17576,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17134,
											"end": 17576,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17134,
											"end": 17576,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17134,
											"end": 17576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC777/IERC777.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
								"contracts/OurSuperToken.sol",
								"contracts/base/SuperTokenBase.sol",
								"contracts/base/SuperTokenStorage.sol",
								"contracts/base/UUPSProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,address,uint256)": "e1f21c67",
							"burn(uint256,bytes)": "fe9d9303",
							"initialize(address,string,string,uint256,address,bytes)": "a6a05598",
							"initializeProxy(address)": "4a0687ef",
							"mint(address,uint256,bytes)": "94d008ef",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,address,uint256)": "15dacbea",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Initialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAddress\",\"type\":\"address\"}],\"name\":\"initializeProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"t\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"jtriley.eth\",\"kind\":\"dev\",\"methods\":{\"initialize(address,string,string,uint256,address,bytes)\":{\"params\":{\"factory\":\"Super token factory for initialization\",\"name\":\"Name of Super Token\",\"symbol\":\"Symbol of Super Token\"}},\"initializeProxy(address)\":{\"details\":\"Called by the SuperTokenFactory contract on upgrade\",\"params\":{\"initialAddress\":\"logic contract address\"}},\"mint(address,uint256,bytes)\":{\"params\":{\"amount\":\"Amount to mint\",\"receiver\":\"Receiver of minted tokens\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Mintable Pure Super Token\",\"version\":1},\"userdoc\":{\"errors\":{\"Initialized()\":[{\"notice\":\"Thrown when the logic contract has been set\"}],\"ZeroAddress()\":[{\"notice\":\"Thrown when the logic contract address is zero\"}]},\"kind\":\"user\",\"methods\":{\"initialize(address,string,string,uint256,address,bytes)\":{\"notice\":\"Initializer, used AFTER factory upgrade\"},\"initializeProxy(address)\":{\"notice\":\"Stores the logic contract address only once.\"},\"mint(address,uint256,bytes)\":{\"notice\":\"Mints tokens, only the owner may do this\"}},\"notice\":\"Only the owner may mint\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OurSuperToken.sol\":\"OurSuperToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x6cc4b0724d977190c7441dfc3be6c6e48b43b555c3370af32ef5b6600f15f53f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3e89c944642772a42429f21a11017b57deb98a9198f8e4f8749f00aaee71299e\",\"dweb:/ipfs/QmaSv9GvqikcGHJ3tcwATDHSpQw6mfnHPDtcfqcZSS7LF6\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0x2ccec11f964b165f64e453192793991bf28e1054069b6f709a39849a8286aeb4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://edbaf6db0b9c6803dcdb7c91a2ddbdba503a41ecc5cecf9c27a43643669bfff1\",\"dweb:/ipfs/QmYpf7XFKrnB2ZAPf8cDqfvZDfyoxMHA1x2FQSYzDFE3KZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x316aa6cd16167569d5ee47fb2e4673b1def2117c7ea56969290ab6aec97cd263\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a5eb13acce613a227c2c2b3da2b88ad6361c9e541ca59ccee0bb5cf42cffccc6\",\"dweb:/ipfs/QmceA9RWHL1BWk4cPnYY55FjAdsEi1LfXrC11RbF8Wb8eW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64\",\"dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229\",\"dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]},\"contracts/OurSuperToken.sol\":{\"keccak256\":\"0x397ed17fa403f3d8b0cd40b79a8f9b648d9ad60510fe2949e90353e64d51cc70\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6eb438f4cdedeec574fd590c9471562e07e48915a338fdb041675817c4b80eae\",\"dweb:/ipfs/QmZbQG9Vks9u26fykAt7XeDB2F6CxGnWHAJmjBAmFpPe2m\"]},\"contracts/base/SuperTokenBase.sol\":{\"keccak256\":\"0x20ad0c53399cd71f9e2af49c7f2f99a423bacdf7da4c64dfa65e5aca40dac571\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://1c6ab8fe1ae02242871cf5d805fbd8b753f5a1df9515658802cdea7b44c3914c\",\"dweb:/ipfs/QmfWFs8zVLnpDMZBRQTTLgmT9VdSmEchZhR2SoAzrdygzq\"]},\"contracts/base/SuperTokenStorage.sol\":{\"keccak256\":\"0x8e08c8b78f0e7fbdbcd378bf2fa2d518deba7d9591d20a9457571fceb9f95687\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5f0323df5e91e7fafd940ea9a8f808c61b5cd6f30974d6d071b25b350ce1ef26\",\"dweb:/ipfs/Qmd5qFWZsW8NGuswNJW3dLkiktNu1MymbZ26VjVRypy3A8\"]},\"contracts/base/UUPSProxy.sol\":{\"keccak256\":\"0xd3e51b5fc04238364c4ed9068e31e88bd44e20546089e4fb76422ea1c2eac1ca\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://041548f8c5c4bf62fcf02677272196f953f320774ff784a7a93351e4c45956aa\",\"dweb:/ipfs/QmPvKxXbCFrWcHnwbTbSdEa96j4No8DHeuzXG1ftKPHwf1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2824,
								"contract": "contracts/OurSuperToken.sol:OurSuperToken",
								"label": "_storagePaddings",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_uint256)32_storage"
							},
							{
								"astId": 7,
								"contract": "contracts/OurSuperToken.sol:OurSuperToken",
								"label": "_owner",
								"offset": 0,
								"slot": "32",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)32_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[32]",
								"numberOfBytes": "1024"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"Initialized()": [
								{
									"notice": "Thrown when the logic contract has been set"
								}
							],
							"ZeroAddress()": [
								{
									"notice": "Thrown when the logic contract address is zero"
								}
							]
						},
						"kind": "user",
						"methods": {
							"initialize(address,string,string,uint256,address,bytes)": {
								"notice": "Initializer, used AFTER factory upgrade"
							},
							"initializeProxy(address)": {
								"notice": "Stores the logic contract address only once."
							},
							"mint(address,uint256,bytes)": {
								"notice": "Mints tokens, only the owner may do this"
							}
						},
						"notice": "Only the owner may mint",
						"version": 1
					}
				}
			},
			"contracts/base/SuperTokenBase.sol": {
				"SuperTokenBase": {
					"abi": [
						{
							"inputs": [],
							"name": "Initialized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialAddress",
									"type": "address"
								}
							],
							"name": "initializeProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"author": "jtriley.eth",
						"details": "The initial supply may be zero, in the event the token is mintable. Inheriting contracts MUST have an initializer calling this function!",
						"kind": "dev",
						"methods": {
							"initializeProxy(address)": {
								"details": "Called by the SuperTokenFactory contract on upgrade",
								"params": {
									"initialAddress": "logic contract address"
								}
							}
						},
						"title": "Abstract contract containing a thin layer of abstraction for aux logic.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"initializeProxy(address)": "4a0687ef"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Initialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAddress\",\"type\":\"address\"}],\"name\":\"initializeProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"jtriley.eth\",\"details\":\"The initial supply may be zero, in the event the token is mintable. Inheriting contracts MUST have an initializer calling this function!\",\"kind\":\"dev\",\"methods\":{\"initializeProxy(address)\":{\"details\":\"Called by the SuperTokenFactory contract on upgrade\",\"params\":{\"initialAddress\":\"logic contract address\"}}},\"title\":\"Abstract contract containing a thin layer of abstraction for aux logic.\",\"version\":1},\"userdoc\":{\"errors\":{\"Initialized()\":[{\"notice\":\"Thrown when the logic contract has been set\"}],\"ZeroAddress()\":[{\"notice\":\"Thrown when the logic contract address is zero\"}]},\"kind\":\"user\",\"methods\":{\"initializeProxy(address)\":{\"notice\":\"Stores the logic contract address only once.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/SuperTokenBase.sol\":\"SuperTokenBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x6cc4b0724d977190c7441dfc3be6c6e48b43b555c3370af32ef5b6600f15f53f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3e89c944642772a42429f21a11017b57deb98a9198f8e4f8749f00aaee71299e\",\"dweb:/ipfs/QmaSv9GvqikcGHJ3tcwATDHSpQw6mfnHPDtcfqcZSS7LF6\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0x2ccec11f964b165f64e453192793991bf28e1054069b6f709a39849a8286aeb4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://edbaf6db0b9c6803dcdb7c91a2ddbdba503a41ecc5cecf9c27a43643669bfff1\",\"dweb:/ipfs/QmYpf7XFKrnB2ZAPf8cDqfvZDfyoxMHA1x2FQSYzDFE3KZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x316aa6cd16167569d5ee47fb2e4673b1def2117c7ea56969290ab6aec97cd263\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a5eb13acce613a227c2c2b3da2b88ad6361c9e541ca59ccee0bb5cf42cffccc6\",\"dweb:/ipfs/QmceA9RWHL1BWk4cPnYY55FjAdsEi1LfXrC11RbF8Wb8eW\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64\",\"dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229\",\"dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]},\"contracts/base/SuperTokenBase.sol\":{\"keccak256\":\"0x20ad0c53399cd71f9e2af49c7f2f99a423bacdf7da4c64dfa65e5aca40dac571\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://1c6ab8fe1ae02242871cf5d805fbd8b753f5a1df9515658802cdea7b44c3914c\",\"dweb:/ipfs/QmfWFs8zVLnpDMZBRQTTLgmT9VdSmEchZhR2SoAzrdygzq\"]},\"contracts/base/SuperTokenStorage.sol\":{\"keccak256\":\"0x8e08c8b78f0e7fbdbcd378bf2fa2d518deba7d9591d20a9457571fceb9f95687\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5f0323df5e91e7fafd940ea9a8f808c61b5cd6f30974d6d071b25b350ce1ef26\",\"dweb:/ipfs/Qmd5qFWZsW8NGuswNJW3dLkiktNu1MymbZ26VjVRypy3A8\"]},\"contracts/base/UUPSProxy.sol\":{\"keccak256\":\"0xd3e51b5fc04238364c4ed9068e31e88bd44e20546089e4fb76422ea1c2eac1ca\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://041548f8c5c4bf62fcf02677272196f953f320774ff784a7a93351e4c45956aa\",\"dweb:/ipfs/QmPvKxXbCFrWcHnwbTbSdEa96j4No8DHeuzXG1ftKPHwf1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2824,
								"contract": "contracts/base/SuperTokenBase.sol:SuperTokenBase",
								"label": "_storagePaddings",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_uint256)32_storage"
							}
						],
						"types": {
							"t_array(t_uint256)32_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[32]",
								"numberOfBytes": "1024"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"Initialized()": [
								{
									"notice": "Thrown when the logic contract has been set"
								}
							],
							"ZeroAddress()": [
								{
									"notice": "Thrown when the logic contract address is zero"
								}
							]
						},
						"kind": "user",
						"methods": {
							"initializeProxy(address)": {
								"notice": "Stores the logic contract address only once."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/base/SuperTokenStorage.sol": {
				"SuperTokenStorage": {
					"abi": [],
					"devdoc": {
						"author": "Superfluid",
						"details": "MUST be the FIRST contract inherited to pad the first 32 slots. The slots are padded to ensure the implementation contract (SuperToken.sol) does not override any auxiliary state variables. For more info see `./docs/StorageLayout.md`.",
						"kind": "dev",
						"methods": {},
						"title": "Abstract Storage Contract to pad the first 32 slots of storage",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"MUST be the FIRST contract inherited to pad the first 32 slots. The slots are padded to ensure the implementation contract (SuperToken.sol) does not override any auxiliary state variables. For more info see `./docs/StorageLayout.md`.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Abstract Storage Contract to pad the first 32 slots of storage\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/SuperTokenStorage.sol\":\"SuperTokenStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/base/SuperTokenStorage.sol\":{\"keccak256\":\"0x8e08c8b78f0e7fbdbcd378bf2fa2d518deba7d9591d20a9457571fceb9f95687\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5f0323df5e91e7fafd940ea9a8f808c61b5cd6f30974d6d071b25b350ce1ef26\",\"dweb:/ipfs/Qmd5qFWZsW8NGuswNJW3dLkiktNu1MymbZ26VjVRypy3A8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2824,
								"contract": "contracts/base/SuperTokenStorage.sol:SuperTokenStorage",
								"label": "_storagePaddings",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_uint256)32_storage"
							}
						],
						"types": {
							"t_array(t_uint256)32_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[32]",
								"numberOfBytes": "1024"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/base/UUPSProxy.sol": {
				"UUPSProxy": {
					"abi": [
						{
							"inputs": [],
							"name": "Initialized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialAddress",
									"type": "address"
								}
							],
							"name": "initializeProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"author": "jtriley.eth",
						"details": "`initializeProxy(address)` is called by the Super Token Factory The call to the factory should be in the same transaction to avoid being front run",
						"kind": "dev",
						"methods": {
							"initializeProxy(address)": {
								"details": "Called by the SuperTokenFactory contract on upgrade",
								"params": {
									"initialAddress": "logic contract address"
								}
							}
						},
						"title": "UUPS Proxy implementation contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/base/UUPSProxy.sol\":434:1549  contract UUPSProxy is Proxy {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/base/UUPSProxy.sol\":434:1549  contract UUPSProxy is Proxy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4a0687ef\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2898:2909  _fallback() */\n      tag_6\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2898:2907  _fallback */\n      tag_7\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2898:2909  _fallback() */\n      jump\t// in\n    tag_6:\n        /* \"contracts/base/UUPSProxy.sol\":434:1549  contract UUPSProxy is Proxy {... */\n      stop\n    tag_2:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2675:2686  _fallback() */\n      tag_10\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2675:2684  _fallback */\n      tag_7\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2675:2686  _fallback() */\n      jump\t// in\n    tag_10:\n        /* \"contracts/base/UUPSProxy.sol\":434:1549  contract UUPSProxy is Proxy {... */\n      stop\n        /* \"contracts/base/UUPSProxy.sol\":1049:1295  function initializeProxy(address initialAddress) external {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2370:2387  _beforeFallback() */\n      tag_17\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2370:2385  _beforeFallback */\n      tag_18\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2370:2387  _beforeFallback() */\n      jump\t// in\n    tag_17:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      tag_19\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2407:2424  _implementation() */\n      tag_20\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2407:2422  _implementation */\n      tag_21\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2407:2424  _implementation() */\n      jump\t// in\n    tag_20:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2397:2406  _delegate */\n      tag_22\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      jump\t// in\n    tag_19:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"contracts/base/UUPSProxy.sol\":1049:1295  function initializeProxy(address initialAddress) external {... */\n    tag_15:\n        /* \"contracts/base/UUPSProxy.sol\":1141:1142  0 */\n      0x00\n        /* \"contracts/base/UUPSProxy.sol\":1115:1143  initialAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/base/UUPSProxy.sol\":1115:1129  initialAddress */\n      dup2\n        /* \"contracts/base/UUPSProxy.sol\":1115:1143  initialAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/base/UUPSProxy.sol\":1111:1165  if (initialAddress == address(0)) revert ZeroAddress() */\n      tag_24\n      jumpi\n        /* \"contracts/base/UUPSProxy.sol\":1152:1165  ZeroAddress() */\n      mload(0x40)\n      0xd92e233d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/base/UUPSProxy.sol\":1111:1165  if (initialAddress == address(0)) revert ZeroAddress() */\n    tag_24:\n        /* \"contracts/base/UUPSProxy.sol\":1202:1203  0 */\n      0x00\n        /* \"contracts/base/UUPSProxy.sol\":1173:1204  _implementation() != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/base/UUPSProxy.sol\":1173:1190  _implementation() */\n      tag_25\n        /* \"contracts/base/UUPSProxy.sol\":1173:1188  _implementation */\n      tag_21\n        /* \"contracts/base/UUPSProxy.sol\":1173:1190  _implementation() */\n      jump\t// in\n    tag_25:\n        /* \"contracts/base/UUPSProxy.sol\":1173:1204  _implementation() != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/base/UUPSProxy.sol\":1169:1226  if (_implementation() != address(0)) revert Initialized() */\n      tag_26\n      jumpi\n        /* \"contracts/base/UUPSProxy.sol\":1213:1226  Initialized() */\n      mload(0x40)\n      0x5daa87a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/base/UUPSProxy.sol\":1169:1226  if (_implementation() != address(0)) revert Initialized() */\n    tag_26:\n        /* \"contracts/base/UUPSProxy.sol\":1273:1287  initialAddress */\n      dup1\n        /* \"contracts/base/UUPSProxy.sol\":1251:1271  _IMPLEMENTATION_SLOT */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/base/UUPSProxy.sol\":1244:1288  sstore(_IMPLEMENTATION_SLOT, initialAddress) */\n      sstore\n        /* \"contracts/base/UUPSProxy.sol\":1049:1295  function initializeProxy(address initialAddress) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":3198:3244  function _beforeFallback() internal virtual {} */\n    tag_18:\n      jump\t// out\n        /* \"contracts/base/UUPSProxy.sol\":1395:1547  function _implementation()... */\n    tag_21:\n        /* \"contracts/base/UUPSProxy.sol\":1472:1484  address impl */\n      0x00\n        /* \"contracts/base/UUPSProxy.sol\":1519:1539  _IMPLEMENTATION_SLOT */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/base/UUPSProxy.sol\":1513:1540  sload(_IMPLEMENTATION_SLOT) */\n      sload\n        /* \"contracts/base/UUPSProxy.sol\":1505:1540  impl := sload(_IMPLEMENTATION_SLOT) */\n      swap1\n      pop\n        /* \"contracts/base/UUPSProxy.sol\":1395:1547  function _implementation()... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":948:1843  function _delegate(address implementation) internal virtual {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1286:1300  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1283:1284  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1280:1281  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1267:1301  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1500:1501  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1497:1498  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1481:1495  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1478:1479  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1462:1476  implementation */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1455:1460  gas() */\n      gas\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1442:1502  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1576:1592  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1573:1574  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1570:1571  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1555:1593  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1614:1620  result */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1686:1687  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1681:1747  case 0 {... */\n      dup2\n      eq\n      tag_31\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1796:1812  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1793:1794  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1786:1813  return(0, returndatasize()) */\n      return\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1681:1747  case 0 {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1716:1732  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1713:1714  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1706:1733  revert(0, returndatasize()) */\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_33:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_35:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_36:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_45\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_35\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_37:\n        /* \"#utility.yul\":641:665   */\n      tag_47\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_36\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_48\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_48:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_38:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_50\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_37\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_14:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_53\n      tag_33\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":917:1036   */\n    tag_52:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_54\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_38\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122080a137255c6ffc8a4d4838fe8a7bcf014ae8796438aec993b2aaa206ce78697964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061028e806100206000396000f3fe6080604052600436106100225760003560e01c80634a0687ef1461003b57610031565b366100315761002f610064565b005b610039610064565b005b34801561004757600080fd5b50610062600480360381019061005d919061022b565b61007e565b005b61006c610177565b61007c610077610179565b6101a2565b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100e4576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16610104610179565b73ffffffffffffffffffffffffffffffffffffffff1614610151576040517f5daa87a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5550565b565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54905090565b3660008037600080366000845af43d6000803e80600081146101c3573d6000f35b3d6000fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f8826101cd565b9050919050565b610208816101ed565b811461021357600080fd5b50565b600081359050610225816101ff565b92915050565b600060208284031215610241576102406101c8565b5b600061024f84828501610216565b9150509291505056fea264697066735822122080a137255c6ffc8a4d4838fe8a7bcf014ae8796438aec993b2aaa206ce78697964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4A0687EF EQ PUSH2 0x3B JUMPI PUSH2 0x31 JUMP JUMPDEST CALLDATASIZE PUSH2 0x31 JUMPI PUSH2 0x2F PUSH2 0x64 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39 PUSH2 0x64 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D SWAP2 SWAP1 PUSH2 0x22B JUMP JUMPDEST PUSH2 0x7E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6C PUSH2 0x177 JUMP JUMPDEST PUSH2 0x7C PUSH2 0x77 PUSH2 0x179 JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x104 PUSH2 0x179 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x151 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5DAA87A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C3 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8 DUP3 PUSH2 0x1CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x208 DUP2 PUSH2 0x1ED JUMP JUMPDEST DUP2 EQ PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x225 DUP2 PUSH2 0x1FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x241 JUMPI PUSH2 0x240 PUSH2 0x1C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24F DUP5 DUP3 DUP6 ADD PUSH2 0x216 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 LOG1 CALLDATACOPY 0x25 0x5C PUSH16 0xFC8A4D4838FE8A7BCF014AE8796438AE 0xC9 SWAP4 0xB2 0xAA LOG2 MOD 0xCE PUSH25 0x697964736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "434:1115:18:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_150": {
									"entryPoint": null,
									"id": 150,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_158": {
									"entryPoint": null,
									"id": 158,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_beforeFallback_163": {
									"entryPoint": 375,
									"id": 163,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_123": {
									"entryPoint": 418,
									"id": 123,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_142": {
									"entryPoint": 100,
									"id": 142,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_implementation_2880": {
									"entryPoint": 377,
									"id": 2880,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initializeProxy_2871": {
									"entryPoint": 126,
									"id": 2871,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 456,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1173:19",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:19",
														"type": ""
													}
												],
												"src": "7:75:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:19",
														"type": ""
													}
												],
												"src": "334:126:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:19",
														"type": ""
													}
												],
												"src": "466:96:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:19"
															},
															"nodeType": "YulIf",
															"src": "621:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:19",
														"type": ""
													}
												],
												"src": "568:122:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:19"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:19",
														"type": ""
													}
												],
												"src": "696:139:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:19"
															},
															"nodeType": "YulIf",
															"src": "917:119:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:19",
														"type": ""
													}
												],
												"src": "841:329:19"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100225760003560e01c80634a0687ef1461003b57610031565b366100315761002f610064565b005b610039610064565b005b34801561004757600080fd5b50610062600480360381019061005d919061022b565b61007e565b005b61006c610177565b61007c610077610179565b6101a2565b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100e4576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16610104610179565b73ffffffffffffffffffffffffffffffffffffffff1614610151576040517f5daa87a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5550565b565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54905090565b3660008037600080366000845af43d6000803e80600081146101c3573d6000f35b3d6000fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f8826101cd565b9050919050565b610208816101ed565b811461021357600080fd5b50565b600081359050610225816101ff565b92915050565b600060208284031215610241576102406101c8565b5b600061024f84828501610216565b9150509291505056fea264697066735822122080a137255c6ffc8a4d4838fe8a7bcf014ae8796438aec993b2aaa206ce78697964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4A0687EF EQ PUSH2 0x3B JUMPI PUSH2 0x31 JUMP JUMPDEST CALLDATASIZE PUSH2 0x31 JUMPI PUSH2 0x2F PUSH2 0x64 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39 PUSH2 0x64 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D SWAP2 SWAP1 PUSH2 0x22B JUMP JUMPDEST PUSH2 0x7E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6C PUSH2 0x177 JUMP JUMPDEST PUSH2 0x7C PUSH2 0x77 PUSH2 0x179 JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x104 PUSH2 0x179 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x151 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5DAA87A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C3 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8 DUP3 PUSH2 0x1CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x208 DUP2 PUSH2 0x1ED JUMP JUMPDEST DUP2 EQ PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x225 DUP2 PUSH2 0x1FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x241 JUMPI PUSH2 0x240 PUSH2 0x1C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24F DUP5 DUP3 DUP6 ADD PUSH2 0x216 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 LOG1 CALLDATACOPY 0x25 0x5C PUSH16 0xFC8A4D4838FE8A7BCF014AE8796438AE 0xC9 SWAP4 0xB2 0xAA LOG2 MOD 0xCE PUSH25 0x697964736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "434:1115:18:-:0;;;;;;;;;;;;;;;;;;;;;;;2898:11:1;:9;:11::i;:::-;434:1115:18;;2675:11:1;:9;:11::i;:::-;434:1115:18;1049:246;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2322:110:1;2370:17;:15;:17::i;:::-;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;1049:246:18:-;1141:1;1115:28;;:14;:28;;;1111:54;;1152:13;;;;;;;;;;;;;;1111:54;1202:1;1173:31;;:17;:15;:17::i;:::-;:31;;;1169:57;;1213:13;;;;;;;;;;;;;;1169:57;1273:14;1251:20;1244:44;1049:246;:::o;3198:46:1:-;:::o;1395:152:18:-;1472:12;1519:20;1513:27;1505:35;;1395:152;:::o;948:895:1:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1686:1;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;88:117:19;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "130800",
								"executionCost": "177",
								"totalCost": "130977"
							},
							"external": {
								"": "infinite",
								"initializeProxy(address)": "24744"
							},
							"internal": {
								"_implementation()": "2123"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 434,
									"end": 1549,
									"name": "PUSH",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "CALLVALUE",
									"source": 18
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 434,
									"end": 1549,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122080a137255c6ffc8a4d4838fe8a7bcf014ae8796438aec993b2aaa206ce78697964736f6c63430008120033",
									".code": [
										{
											"begin": 434,
											"end": 1549,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "PUSH",
											"source": 18,
											"value": "4A0687EF"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "tag",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2898,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "tag",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2675,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2675,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 434,
											"end": 1549,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 1049,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 1049,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2370,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2370,
											"end": 2387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2407,
											"end": 2424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2397,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2397,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1141,
											"end": 1142,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1115,
											"end": 1143,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1115,
											"end": 1143,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1115,
											"end": 1129,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1115,
											"end": 1143,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1115,
											"end": 1143,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1115,
											"end": 1143,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 1111,
											"end": 1165,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 18,
											"value": "D92E233D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1165,
											"name": "tag",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 1111,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1202,
											"end": 1203,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1204,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1173,
											"end": 1204,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 1173,
											"end": 1190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1190,
											"name": "tag",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 1173,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1204,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1173,
											"end": 1204,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1204,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1169,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 1169,
											"end": 1226,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "PUSH",
											"source": 18,
											"value": "5DAA87A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1169,
											"end": 1226,
											"name": "tag",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 1169,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1273,
											"end": 1287,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1251,
											"end": 1271,
											"name": "PUSH",
											"source": 18,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1244,
											"end": 1288,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1547,
											"name": "tag",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 1395,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1472,
											"end": 1484,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1539,
											"name": "PUSH",
											"source": 18,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1513,
											"end": 1540,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1505,
											"end": 1540,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1505,
											"end": 1540,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1395,
											"end": 1547,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1395,
											"end": 1547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1281,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1301,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1495,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1460,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1502,
											"name": "DELEGATECALL",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1592,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1593,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1687,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1813,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1732,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1733,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 19,
											"value": "33"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 19,
											"value": "35"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 19,
											"value": "36"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "45"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "35"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 19,
											"value": "45"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 19,
											"value": "37"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "47"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "36"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 19,
											"value": "47"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "48"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 19,
											"value": "48"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 19,
											"value": "38"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "50"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "37"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 19,
											"value": "50"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 19,
											"value": "14"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "52"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "53"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "33"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 19,
											"value": "53"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 19,
											"value": "52"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "54"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "38"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 19,
											"value": "54"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC777/IERC777.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
								"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
								"contracts/OurSuperToken.sol",
								"contracts/base/SuperTokenBase.sol",
								"contracts/base/SuperTokenStorage.sol",
								"contracts/base/UUPSProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"initializeProxy(address)": "4a0687ef"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Initialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAddress\",\"type\":\"address\"}],\"name\":\"initializeProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"jtriley.eth\",\"details\":\"`initializeProxy(address)` is called by the Super Token Factory The call to the factory should be in the same transaction to avoid being front run\",\"kind\":\"dev\",\"methods\":{\"initializeProxy(address)\":{\"details\":\"Called by the SuperTokenFactory contract on upgrade\",\"params\":{\"initialAddress\":\"logic contract address\"}}},\"title\":\"UUPS Proxy implementation contract\",\"version\":1},\"userdoc\":{\"errors\":{\"Initialized()\":[{\"notice\":\"Thrown when the logic contract has been set\"}],\"ZeroAddress()\":[{\"notice\":\"Thrown when the logic contract address is zero\"}]},\"kind\":\"user\",\"methods\":{\"initializeProxy(address)\":{\"notice\":\"Stores the logic contract address only once.\"}},\"notice\":\"Stores the logic contract's address at the _IMPLEMENTATION_SLOT\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/UUPSProxy.sol\":\"UUPSProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"contracts/base/UUPSProxy.sol\":{\"keccak256\":\"0xd3e51b5fc04238364c4ed9068e31e88bd44e20546089e4fb76422ea1c2eac1ca\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://041548f8c5c4bf62fcf02677272196f953f320774ff784a7a93351e4c45956aa\",\"dweb:/ipfs/QmPvKxXbCFrWcHnwbTbSdEa96j4No8DHeuzXG1ftKPHwf1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"Initialized()": [
								{
									"notice": "Thrown when the logic contract has been set"
								}
							],
							"ZeroAddress()": [
								{
									"notice": "Thrown when the logic contract address is zero"
								}
							]
						},
						"kind": "user",
						"methods": {
							"initializeProxy(address)": {
								"notice": "Stores the logic contract address only once."
							}
						},
						"notice": "Stores the logic contract's address at the _IMPLEMENTATION_SLOT",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/OurSuperToken.sol:36:51:\n   |\n36 |     function totalSupply() external view returns (uint t) {\n   |                                                   ^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1122,
					"file": "contracts/OurSuperToken.sol",
					"start": 1116
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [427],
						"Ownable": [112]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 428,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": ["683:7:0"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 427,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [112, 427],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": ["1875:9:0"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": ["2141:9:0"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [98],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [164]
					},
					"id": 165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "99:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "124:598:1",
								"text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 164,
							"linearizedBaseContracts": [164],
							"name": "Proxy",
							"nameLocation": "741:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1008:835:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1027:810:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1283:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1286:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1286:14:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1267:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1267:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1267:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1428:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1455:5:1"
																	},
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "1462:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1478:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1481:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1481:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1497:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1500:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "1442:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:60:1"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "1432:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1570:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1576:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1576:16:1"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1555:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1555:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1555:38:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1688:59:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1713:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1716:14:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1716:16:1"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1706:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1706:27:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1706:27:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1681:66:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:1:1",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1768:59:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1793:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1796:14:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1796:16:1"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "1786:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1786:27:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1786:27:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1760:67:1",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "1614:6:1"
															},
															"nodeType": "YulSwitch",
															"src": "1607:220:1"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 118,
														"isOffset": false,
														"isSlot": false,
														"src": "1462:14:1",
														"valueSize": 1
													}
												],
												"id": 121,
												"nodeType": "InlineAssembly",
												"src": "1018:819:1"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "753:190:1",
										"text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "957:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "975:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "967:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:24:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:0:1"
									},
									"scope": 164,
									"src": "948:895:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "1849:173:1",
										"text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n and {_fallback} should delegate."
									},
									"id": 129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2036:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2085:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2085:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2084:9:1"
									},
									"scope": 164,
									"src": "2027:67:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2360:72:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 133,
														"name": "_beforeFallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2370:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "2370:17:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 137,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "2407:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2407:17:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 136,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2397:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2397:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2397:28:1"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "2100:217:1",
										"text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "2331:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2340:2:1"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2360:0:1"
									},
									"scope": 164,
									"src": "2322:110:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "2665:28:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 146,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2675:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2675:11:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "2675:11:1"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2438:186:1",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
									},
									"id": 150,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2637:2:1"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2665:0:1"
									},
									"scope": 164,
									"src": "2629:64:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "2888:28:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2898:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:11:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "2898:11:1"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "2699:149:1",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."
									},
									"id": 158,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:2:1"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2888:0:1"
									},
									"scope": 164,
									"src": "2853:63:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "3242:2:1",
										"statements": []
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "2922:271:1",
										"text": " @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overridden should call `super._beforeFallback()`."
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeFallback",
									"nameLocation": "3207:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3222:2:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3242:0:1"
									},
									"scope": 164,
									"src": "3198:46:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 165,
							"src": "723:2523:1",
							"usedErrors": []
						}
					],
					"src": "99:3148:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [242]
					},
					"id": 243,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 166,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 167,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 242,
							"linearizedBaseContracts": [242],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 176,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 185,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 242,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 242,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 242,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 242,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 242,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 242,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 243,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC777/IERC777.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
					"exportedSymbols": {
						"IERC777": [405]
					},
					"id": 406,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 244,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "108:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC777",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 245,
								"nodeType": "StructuredDocumentation",
								"src": "133:372:3",
								"text": " @dev Interface of the ERC777Token standard as defined in the EIP.\n This contract uses the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n token holders and recipients react to token movements by using setting implementers\n for the associated interfaces in said registry. See {IERC1820Registry} and\n {ERC1820Implementer}."
							},
							"fullyImplemented": false,
							"id": 405,
							"linearizedBaseContracts": [405],
							"name": "IERC777",
							"nameLocation": "516:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "530:199:3",
										"text": " @dev Emitted when `amount` tokens are created by `operator` and assigned to `to`.\n Note that some additional user `data` and `operatorData` can be logged in the event."
									},
									"eventSelector": "2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d",
									"id": 258,
									"name": "Minted",
									"nameLocation": "740:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "763:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "747:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "789:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "773:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "801:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "815:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "809:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "827:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "821:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "821:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:94:3"
									},
									"src": "734:107:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "847:187:3",
										"text": " @dev Emitted when `operator` destroys `amount` tokens from `account`.\n Note that some additional user `data` and `operatorData` can be logged in the event."
									},
									"eventSelector": "a78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a4098",
									"id": 271,
									"name": "Burned",
									"nameLocation": "1045:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1068:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1052:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1094:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1078:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1108:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1100:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1100:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1122:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1116:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1116:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "1134:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1128:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1128:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1051:96:3"
									},
									"src": "1039:109:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "1154:83:3",
										"text": " @dev Emitted when `operator` is made operator for `tokenHolder`."
									},
									"eventSelector": "f4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f9",
									"id": 278,
									"name": "AuthorizedOperator",
									"nameLocation": "1248:18:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1283:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1267:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "1309:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1293:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1293:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:55:3"
									},
									"src": "1242:80:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "1328:97:3",
										"text": " @dev Emitted when `operator` is revoked its operator status for `tokenHolder`."
									},
									"eventSelector": "50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa1",
									"id": 285,
									"name": "RevokedOperator",
									"nameLocation": "1436:15:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1468:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "1452:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "1494:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "1478:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1478:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:55:3"
									},
									"src": "1430:77:3"
								},
								{
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "1513:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 291,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1581:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1585:2:3"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "1611:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 288,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1611:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1610:15:3"
									},
									"scope": 405,
									"src": "1572:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "1632:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1748:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1754:2:3"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1780:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 294,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1780:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:15:3"
									},
									"scope": 405,
									"src": "1739:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "1801:287:3",
										"text": " @dev Returns the smallest part of the token that is not divisible. This\n means all token operations (creation, movement and destruction) must have\n amounts that are a multiple of this number.\n For most token contracts, this value will equal 1."
									},
									"functionSelector": "556f0dc7",
									"id": 303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "granularity",
									"nameLocation": "2102:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2113:2:3"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2139:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2138:9:3"
									},
									"scope": 405,
									"src": "2093:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "2154:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2234:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2245:2:3"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "2271:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2270:9:3"
									},
									"scope": 405,
									"src": "2225:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "2286:83:3",
										"text": " @dev Returns the amount of tokens owned by an account (`owner`)."
									},
									"functionSelector": "70a08231",
									"id": 317,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2383:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2401:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2393:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2392:15:3"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2431:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:9:3"
									},
									"scope": 405,
									"src": "2374:66:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "2446:585:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n If send or receive hooks are registered for the caller and `recipient`,\n the corresponding functions will be called with `data` and empty\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - the caller must have at least `amount` tokens.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"functionSelector": "9bd9bbc6",
									"id": 327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "3045:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3067:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "3059:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3059:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3094:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "3086:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3125:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "3110:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 323,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3110:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:86:3"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3144:0:3"
									},
									"scope": 405,
									"src": "3036:109:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "3151:404:3",
										"text": " @dev Destroys `amount` tokens from the caller's account, reducing the\n total supply.\n If a send hook is registered for the caller, the corresponding function\n will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - the caller must have at least `amount` tokens."
									},
									"functionSelector": "fe9d9303",
									"id": 335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3569:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3582:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "3574:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3574:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3605:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "3590:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 331,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3590:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3573:37:3"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3619:0:3"
									},
									"scope": 405,
									"src": "3560:60:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "3626:249:3",
										"text": " @dev Returns true if an account is an operator of `tokenHolder`.\n Operators can send and burn tokens on behalf of their owners. All\n accounts are their own operator.\n See {operatorSend} and {operatorBurn}."
									},
									"functionSelector": "d95b6371",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOperatorFor",
									"nameLocation": "3889:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3911:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "3903:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "3929:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "3921:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3921:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3902:39:3"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "3965:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3965:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3964:6:3"
									},
									"scope": 405,
									"src": "3880:91:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "3977:233:3",
										"text": " @dev Make an account an operator of the caller.\n See {isOperatorFor}.\n Emits an {AuthorizedOperator} event.\n Requirements\n - `operator` cannot be calling address."
									},
									"functionSelector": "959b8c3f",
									"id": 351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "authorizeOperator",
									"nameLocation": "4224:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4250:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "4242:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4242:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4241:18:3"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4268:0:3"
									},
									"scope": 405,
									"src": "4215:54:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "4275:261:3",
										"text": " @dev Revoke an account's operator status for the caller.\n See {isOperatorFor} and {defaultOperators}.\n Emits a {RevokedOperator} event.\n Requirements\n - `operator` cannot be calling address."
									},
									"functionSelector": "fad8b32a",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeOperator",
									"nameLocation": "4550:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4573:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "4565:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4565:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:18:3"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4591:0:3"
									},
									"scope": 405,
									"src": "4541:51:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "4598:338:3",
										"text": " @dev Returns the list of default operators. These accounts are operators\n for all token holders, even if {authorizeOperator} was never called on\n them.\n This list is immutable, but individual holders may revoke these via\n {revokeOperator}, in which case {isOperatorFor} will return false."
									},
									"functionSelector": "06e48538",
									"id": 364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "defaultOperators",
									"nameLocation": "4950:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4966:2:3"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "4992:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 360,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4992:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 361,
													"nodeType": "ArrayTypeName",
													"src": "4992:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4991:18:3"
									},
									"scope": 405,
									"src": "4941:69:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "5016:714:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n be an operator of `sender`.\n If send or receive hooks are registered for `sender` and `recipient`,\n the corresponding functions will be called with `data` and\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - `sender` cannot be the zero address.\n - `sender` must have at least `amount` tokens.\n - the caller must be an operator for `sender`.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"functionSelector": "62ad1b83",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operatorSend",
									"nameLocation": "5744:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5774:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "5766:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5766:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5798:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "5790:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5825:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "5817:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5817:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "5841:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 372,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5841:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "5885:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "5870:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5870:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5756:147:3"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5912:0:3"
									},
									"scope": 405,
									"src": "5735:178:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "5919:532:3",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the total supply.\n The caller must be an operator of `account`.\n If a send hook is registered for `account`, the corresponding function\n will be called with `data` and `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n - the caller must be an operator for `account`."
									},
									"functionSelector": "fc673c4f",
									"id": 390,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operatorBurn",
									"nameLocation": "6465:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6495:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "6487:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6487:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6520:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "6512:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6512:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6551:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "6536:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 384,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6536:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "6580:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "6565:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6565:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6477:121:3"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6607:0:3"
									},
									"scope": 405,
									"src": "6456:152:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987",
									"id": 404,
									"name": "Sent",
									"nameLocation": "6620:4:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6650:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "6634:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6684:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "6668:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6714:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "6698:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6698:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6734:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "6726:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6726:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6756:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "6750:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 399,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6750:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "6776:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "6770:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 401,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6770:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6624:170:3"
									},
									"src": "6614:181:3"
								}
							],
							"scope": 406,
							"src": "506:6291:3",
							"usedErrors": []
						}
					],
					"src": "108:6690:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [427]
					},
					"id": 428,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 407,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 408,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 427,
							"linearizedBaseContracts": [427],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 413,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 412,
												"id": 415,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 427,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 422,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 421,
												"id": 424,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 427,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 428,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
				"ast": {
					"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
					"exportedSymbols": {
						"BatchOperation": [787],
						"ContextDefinitions": [666],
						"FlowOperatorDefinitions": [753],
						"SuperAppDefinitions": [590],
						"SuperfluidGovernanceConfigs": [888]
					},
					"id": 889,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 429,
							"literals": ["solidity", ">=", "0.8", ".4"],
							"nodeType": "PragmaDirective",
							"src": "35:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SuperAppDefinitions",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 430,
								"nodeType": "StructuredDocumentation",
								"src": "62:69:5",
								"text": " @title Super app definitions library\n @author Superfluid"
							},
							"fullyImplemented": true,
							"id": 590,
							"linearizedBaseContracts": [590],
							"name": "SuperAppDefinitions",
							"nameLocation": "140:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 433,
									"mutability": "constant",
									"name": "APP_LEVEL_MASK",
									"nameLocation": "615:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "589:47:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 431,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "589:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30784646",
										"id": 432,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "632:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0xFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 438,
									"mutability": "constant",
									"name": "APP_LEVEL_FINAL",
									"nameLocation": "760:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "734:50:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 434,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "734:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"id": 437,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 435,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "778:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "30",
											"id": 436,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "783:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "778:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 443,
									"mutability": "constant",
									"name": "APP_LEVEL_SECOND",
									"nameLocation": "915:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "889:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 439,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "889:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"id": 442,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 440,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "934:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "31",
											"id": 441,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "939:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "934:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "1026:58:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 452,
																"name": "configWord",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "1049:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 453,
																"name": "APP_LEVEL_MASK",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "1062:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1049:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1043:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 450,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1043:5:5",
															"typeDescriptions": {}
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1043:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 449,
												"id": 456,
												"nodeType": "Return",
												"src": "1036:41:5"
											}
										]
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAppCallbackLevel",
									"nameLocation": "956:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "configWord",
												"nameLocation": "984:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "976:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:20:5"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1019:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 447,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1019:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:7:5"
									},
									"scope": 590,
									"src": "947:137:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 463,
									"mutability": "constant",
									"name": "APP_JAIL_BIT",
									"nameLocation": "1116:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "1090:48:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 459,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1090:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_32768_by_1",
											"typeString": "int_const 32768"
										},
										"id": 462,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 460,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1131:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "3135",
											"id": 461,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1136:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_15_by_1",
												"typeString": "int_const 15"
											},
											"value": "15"
										},
										"src": "1131:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32768_by_1",
											"typeString": "int_const 32768"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "1214:75:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 470,
																	"name": "configWord",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "1232:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"expression": {
																		"id": 471,
																		"name": "SuperAppDefinitions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "1245:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SuperAppDefinitions_$590_$",
																			"typeString": "type(library SuperAppDefinitions)"
																		}
																	},
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1265:12:5",
																	"memberName": "APP_JAIL_BIT",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 463,
																	"src": "1245:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1232:45:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 474,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1231:47:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1281:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1231:51:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 469,
												"id": 477,
												"nodeType": "Return",
												"src": "1224:58:5"
											}
										]
									},
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAppJailed",
									"nameLocation": "1153:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "configWord",
												"nameLocation": "1173:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1165:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1165:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1164:20:5"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1208:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 467,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1208:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1207:6:5"
									},
									"scope": 590,
									"src": "1144:145:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 484,
									"mutability": "constant",
									"name": "AGREEMENT_CALLBACK_NOOP_BITMASKS",
									"nameLocation": "1522:32:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "1496:71:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 480,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1496:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1095216660480_by_1",
											"typeString": "int_const 1095216660480"
										},
										"id": 483,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "30784646",
											"id": 481,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1557:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_255_by_1",
												"typeString": "int_const 255"
											},
											"value": "0xFF"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "3332",
											"id": 482,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1565:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_32_by_1",
												"typeString": "int_const 32"
											},
											"value": "32"
										},
										"src": "1557:10:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1095216660480_by_1",
											"typeString": "int_const 1095216660480"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 492,
									"mutability": "constant",
									"name": "BEFORE_AGREEMENT_CREATED_NOOP",
									"nameLocation": "1599:29:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "1573:71:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 485,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1573:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_4294967296_by_1",
											"typeString": "int_const 4294967296"
										},
										"id": 491,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 486,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1631:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_32_by_1",
														"typeString": "int_const 32"
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3332",
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1637:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "30",
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1642:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1637:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_32_by_1",
														"typeString": "int_const 32"
													}
												}
											],
											"id": 490,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1636:8:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_32_by_1",
												"typeString": "int_const 32"
											}
										},
										"src": "1631:13:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4294967296_by_1",
											"typeString": "int_const 4294967296"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 500,
									"mutability": "constant",
									"name": "AFTER_AGREEMENT_CREATED_NOOP",
									"nameLocation": "1676:28:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "1650:70:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 493,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1650:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_8589934592_by_1",
											"typeString": "int_const 8589934592"
										},
										"id": 499,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 494,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1707:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_33_by_1",
														"typeString": "int_const 33"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3332",
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1713:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1718:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1713:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_33_by_1",
														"typeString": "int_const 33"
													}
												}
											],
											"id": 498,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1712:8:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_33_by_1",
												"typeString": "int_const 33"
											}
										},
										"src": "1707:13:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8589934592_by_1",
											"typeString": "int_const 8589934592"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 508,
									"mutability": "constant",
									"name": "BEFORE_AGREEMENT_UPDATED_NOOP",
									"nameLocation": "1752:29:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "1726:71:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 501,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1726:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_17179869184_by_1",
											"typeString": "int_const 17179869184"
										},
										"id": 507,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 502,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1784:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_34_by_1",
														"typeString": "int_const 34"
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3332",
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1790:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "32",
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1795:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1790:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_34_by_1",
														"typeString": "int_const 34"
													}
												}
											],
											"id": 506,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1789:8:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_34_by_1",
												"typeString": "int_const 34"
											}
										},
										"src": "1784:13:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17179869184_by_1",
											"typeString": "int_const 17179869184"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 516,
									"mutability": "constant",
									"name": "AFTER_AGREEMENT_UPDATED_NOOP",
									"nameLocation": "1829:28:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "1803:70:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 509,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1803:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_34359738368_by_1",
											"typeString": "int_const 34359738368"
										},
										"id": 515,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 510,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1860:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_35_by_1",
														"typeString": "int_const 35"
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3332",
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1866:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "33",
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1871:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1866:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_35_by_1",
														"typeString": "int_const 35"
													}
												}
											],
											"id": 514,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1865:8:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_35_by_1",
												"typeString": "int_const 35"
											}
										},
										"src": "1860:13:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_34359738368_by_1",
											"typeString": "int_const 34359738368"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 524,
									"mutability": "constant",
									"name": "BEFORE_AGREEMENT_TERMINATED_NOOP",
									"nameLocation": "1905:32:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "1879:74:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 517,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1879:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_68719476736_by_1",
											"typeString": "int_const 68719476736"
										},
										"id": 523,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 518,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1940:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_36_by_1",
														"typeString": "int_const 36"
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3332",
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1946:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "34",
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1951:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "1946:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_36_by_1",
														"typeString": "int_const 36"
													}
												}
											],
											"id": 522,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1945:8:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_36_by_1",
												"typeString": "int_const 36"
											}
										},
										"src": "1940:13:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_68719476736_by_1",
											"typeString": "int_const 68719476736"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 532,
									"mutability": "constant",
									"name": "AFTER_AGREEMENT_TERMINATED_NOOP",
									"nameLocation": "1985:31:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "1959:73:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 525,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1959:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_137438953472_by_1",
											"typeString": "int_const 137438953472"
										},
										"id": 531,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 526,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2019:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_37_by_1",
														"typeString": "int_const 37"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3332",
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2025:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "35",
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2030:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "2025:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_37_by_1",
														"typeString": "int_const 37"
													}
												}
											],
											"id": 530,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2024:8:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_37_by_1",
												"typeString": "int_const 37"
											}
										},
										"src": "2019:13:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_137438953472_by_1",
											"typeString": "int_const 137438953472"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 535,
									"mutability": "constant",
									"name": "APP_RULE_REGISTRATION_ONLY_IN_CONSTRUCTOR",
									"nameLocation": "2250:41:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "2224:71:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 533,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2224:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 534,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2294:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 538,
									"mutability": "constant",
									"name": "APP_RULE_NO_REGISTRATION_FOR_EOA",
									"nameLocation": "2327:32:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "2301:62:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 536,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2301:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 537,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2362:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 541,
									"mutability": "constant",
									"name": "APP_RULE_NO_REVERT_ON_TERMINATION_CALLBACK",
									"nameLocation": "2395:42:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "2369:73:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 539,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2369:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 540,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2440:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 544,
									"mutability": "constant",
									"name": "APP_RULE_NO_CRITICAL_SENDER_ACCOUNT",
									"nameLocation": "2474:35:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "2448:66:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 542,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2448:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3131",
										"id": 543,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2512:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_11_by_1",
											"typeString": "int_const 11"
										},
										"value": "11"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 547,
									"mutability": "constant",
									"name": "APP_RULE_NO_CRITICAL_RECEIVER_ACCOUNT",
									"nameLocation": "2546:37:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "2520:68:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 545,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2520:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3132",
										"id": 546,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2586:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_12_by_1",
											"typeString": "int_const 12"
										},
										"value": "12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 550,
									"mutability": "constant",
									"name": "APP_RULE_CTX_IS_READONLY",
									"nameLocation": "2620:24:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "2594:55:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 548,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2594:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 549,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2647:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 553,
									"mutability": "constant",
									"name": "APP_RULE_CTX_IS_NOT_CLEAN",
									"nameLocation": "2681:25:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "2655:56:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 551,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2655:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3231",
										"id": 552,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2709:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_21_by_1",
											"typeString": "int_const 21"
										},
										"value": "21"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 556,
									"mutability": "constant",
									"name": "APP_RULE_CTX_IS_MALFORMATED",
									"nameLocation": "2743:27:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "2717:58:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 554,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2717:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3232",
										"id": 555,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2773:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_22_by_1",
											"typeString": "int_const 22"
										},
										"value": "22"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 559,
									"mutability": "constant",
									"name": "APP_RULE_COMPOSITE_APP_IS_NOT_WHITELISTED",
									"nameLocation": "2807:41:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "2781:72:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 557,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2781:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 558,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2851:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										},
										"value": "30"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 562,
									"mutability": "constant",
									"name": "APP_RULE_COMPOSITE_APP_IS_JAILED",
									"nameLocation": "2885:32:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "2859:63:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 560,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2859:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3331",
										"id": 561,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2920:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31_by_1",
											"typeString": "int_const 31"
										},
										"value": "31"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 565,
									"mutability": "constant",
									"name": "APP_RULE_MAX_APP_LEVEL_REACHED",
									"nameLocation": "2954:30:5",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "2928:61:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 563,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2928:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3430",
										"id": 564,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2987:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_40_by_1",
											"typeString": "int_const 40"
										},
										"value": "40"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "3182:120:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 572,
																	"name": "configWord",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "3200:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "~",
																	"prefix": true,
																	"src": "3213:67:5",
																	"subExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 577,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 575,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 573,
																						"name": "APP_LEVEL_MASK",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 433,
																						"src": "3215:14:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 574,
																						"name": "APP_JAIL_BIT",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 463,
																						"src": "3232:12:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3215:29:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "|",
																				"rightExpression": {
																					"id": 576,
																					"name": "AGREEMENT_CALLBACK_NOOP_BITMASKS",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 484,
																					"src": "3247:32:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3215:64:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 578,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3214:66:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3200:80:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 581,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3199:82:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3293:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3285:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 582,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3285:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3285:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3199:96:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 571,
												"id": 587,
												"nodeType": "Return",
												"src": "3192:103:5"
											}
										]
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isConfigWordClean",
									"nameLocation": "3115:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "configWord",
												"nameLocation": "3141:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "3133:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3133:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3132:20:5"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "3176:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3176:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3175:6:5"
									},
									"scope": 590,
									"src": "3106:196:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 889,
							"src": "132:3172:5",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ContextDefinitions",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 591,
								"nodeType": "StructuredDocumentation",
								"src": "3306:67:5",
								"text": " @title Context definitions library\n @author Superfluid"
							},
							"fullyImplemented": true,
							"id": 666,
							"linearizedBaseContracts": [666],
							"name": "ContextDefinitions",
							"nameLocation": "3382:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 594,
									"mutability": "constant",
									"name": "CALL_INFO_APP_LEVEL_MASK",
									"nameLocation": "3629:24:5",
									"nodeType": "VariableDeclaration",
									"scope": 666,
									"src": "3603:57:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 592,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3603:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30784646",
										"id": 593,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3656:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0xFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 597,
									"mutability": "constant",
									"name": "CALL_INFO_CALL_TYPE_SHIFT",
									"nameLocation": "3710:25:5",
									"nodeType": "VariableDeclaration",
									"scope": 666,
									"src": "3684:56:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 595,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3684:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3332",
										"id": 596,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3738:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 602,
									"mutability": "constant",
									"name": "CALL_INFO_CALL_TYPE_MASK",
									"nameLocation": "3772:24:5",
									"nodeType": "VariableDeclaration",
									"scope": 666,
									"src": "3746:85:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 598,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3746:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 601,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "307846",
											"id": 599,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3799:3:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_15_by_1",
												"typeString": "int_const 15"
											},
											"value": "0xF"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"id": 600,
											"name": "CALL_INFO_CALL_TYPE_SHIFT",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 597,
											"src": "3806:25:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3799:32:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 605,
									"mutability": "constant",
									"name": "CALL_INFO_CALL_TYPE_AGREEMENT",
									"nameLocation": "3861:29:5",
									"nodeType": "VariableDeclaration",
									"scope": 666,
									"src": "3837:57:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 603,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3837:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 604,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3893:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 608,
									"mutability": "constant",
									"name": "CALL_INFO_CALL_TYPE_APP_ACTION",
									"nameLocation": "3924:30:5",
									"nodeType": "VariableDeclaration",
									"scope": 666,
									"src": "3900:58:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 606,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3900:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 607,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3957:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 611,
									"mutability": "constant",
									"name": "CALL_INFO_CALL_TYPE_APP_CALLBACK",
									"nameLocation": "3988:32:5",
									"nodeType": "VariableDeclaration",
									"scope": 666,
									"src": "3964:60:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 609,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3964:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 610,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4023:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "4156:172:5",
										"statements": [
											{
												"expression": {
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 620,
														"name": "appCallbackLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "4166:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 623,
																	"name": "callInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "4191:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 624,
																	"name": "CALL_INFO_APP_LEVEL_MASK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "4202:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4191:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4185:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 621,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "4185:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4185:42:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4166:61:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "4166:61:5"
											},
											{
												"expression": {
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 629,
														"name": "callType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "4237:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 632,
																				"name": "callInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 613,
																				"src": "4255:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"id": 633,
																				"name": "CALL_INFO_CALL_TYPE_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 602,
																				"src": "4266:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4255:35:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 635,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4254:37:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 636,
																	"name": "CALL_INFO_CALL_TYPE_SHIFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "4295:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4254:66:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4248:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 630,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "4248:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4248:73:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4237:84:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "4237:84:5"
											}
										]
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeCallInfo",
									"nameLocation": "4040:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "callInfo",
												"nameLocation": "4063:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "4055:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4055:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4054:18:5"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "appCallbackLevel",
												"nameLocation": "4118:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "4112:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 615,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4112:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "callType",
												"nameLocation": "4142:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "4136:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 617,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4136:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4111:40:5"
									},
									"scope": 666,
									"src": "4031:297:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "4459:100:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 653,
																"name": "appCallbackLevel",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "4484:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4476:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 651,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4476:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4476:25:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "|",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 657,
																			"name": "callType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 646,
																			"src": "4513:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4505:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 655,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4505:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4505:17:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"id": 659,
																	"name": "CALL_INFO_CALL_TYPE_SHIFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "4526:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4505:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 661,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4504:48:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4476:76:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 650,
												"id": 663,
												"nodeType": "Return",
												"src": "4469:83:5"
											}
										]
									},
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encodeCallInfo",
									"nameLocation": "4343:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "appCallbackLevel",
												"nameLocation": "4364:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "4358:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 643,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4358:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "callType",
												"nameLocation": "4388:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "4382:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 645,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4382:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4357:40:5"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "callInfo",
												"nameLocation": "4445:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "4437:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4437:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4436:18:5"
									},
									"scope": 666,
									"src": "4334:225:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 889,
							"src": "3374:1188:5",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FlowOperatorDefinitions",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 667,
								"nodeType": "StructuredDocumentation",
								"src": "4564:74:5",
								"text": " @title Flow Operator definitions library\n @author Superfluid"
							},
							"fullyImplemented": true,
							"id": 753,
							"linearizedBaseContracts": [753],
							"name": "FlowOperatorDefinitions",
							"nameLocation": "4648:23:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 675,
									"mutability": "constant",
									"name": "AUTHORIZE_FLOW_OPERATOR_CREATE",
									"nameLocation": "4702:30:5",
									"nodeType": "VariableDeclaration",
									"scope": 753,
									"src": "4678:70:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 668,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4678:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"id": 674,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"arguments": [
												{
													"hexValue": "31",
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4741:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													}
												],
												"id": 670,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "4735:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint8_$",
													"typeString": "type(uint8)"
												},
												"typeName": {
													"id": 669,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:5",
													"typeDescriptions": {}
												}
											},
											"id": 672,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "4735:8:5",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "30",
											"id": 673,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4747:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "4735:13:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 683,
									"mutability": "constant",
									"name": "AUTHORIZE_FLOW_OPERATOR_UPDATE",
									"nameLocation": "4778:30:5",
									"nodeType": "VariableDeclaration",
									"scope": 753,
									"src": "4754:70:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 676,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4754:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"id": 682,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"arguments": [
												{
													"hexValue": "31",
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4817:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													}
												],
												"id": 678,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "4811:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint8_$",
													"typeString": "type(uint8)"
												},
												"typeName": {
													"id": 677,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4811:5:5",
													"typeDescriptions": {}
												}
											},
											"id": 680,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "4811:8:5",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "31",
											"id": 681,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4823:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "4811:13:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 691,
									"mutability": "constant",
									"name": "AUTHORIZE_FLOW_OPERATOR_DELETE",
									"nameLocation": "4854:30:5",
									"nodeType": "VariableDeclaration",
									"scope": 753,
									"src": "4830:70:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 684,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4830:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"id": 690,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"arguments": [
												{
													"hexValue": "31",
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4893:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													}
												],
												"id": 686,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "4887:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint8_$",
													"typeString": "type(uint8)"
												},
												"typeName": {
													"id": 685,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4887:5:5",
													"typeDescriptions": {}
												}
											},
											"id": 688,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "4887:8:5",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "32",
											"id": 689,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4899:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"src": "4887:13:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 698,
									"mutability": "constant",
									"name": "AUTHORIZE_FULL_CONTROL",
									"nameLocation": "4930:22:5",
									"nodeType": "VariableDeclaration",
									"scope": 753,
									"src": "4906:153:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 692,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4906:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"id": 697,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"id": 695,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"id": 693,
												"name": "AUTHORIZE_FLOW_OPERATOR_CREATE",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 675,
												"src": "4963:30:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "|",
											"rightExpression": {
												"id": 694,
												"name": "AUTHORIZE_FLOW_OPERATOR_UPDATE",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 683,
												"src": "4996:30:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"src": "4963:63:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "|",
										"rightExpression": {
											"id": 696,
											"name": "AUTHORIZE_FLOW_OPERATOR_DELETE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 691,
											"src": "5029:30:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"src": "4963:96:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 708,
									"mutability": "constant",
									"name": "REVOKE_FLOW_OPERATOR_CREATE",
									"nameLocation": "5089:27:5",
									"nodeType": "VariableDeclaration",
									"scope": 753,
									"src": "5065:70:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 699,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "5065:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"id": 707,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "5119:16:5",
										"subExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5127:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5121:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 700,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "5121:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5121:8:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "30",
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5133:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5121:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												}
											],
											"id": 706,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "5120:15:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 718,
									"mutability": "constant",
									"name": "REVOKE_FLOW_OPERATOR_UPDATE",
									"nameLocation": "5165:27:5",
									"nodeType": "VariableDeclaration",
									"scope": 753,
									"src": "5141:70:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 709,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "5141:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"id": 717,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "5195:16:5",
										"subExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5203:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5197:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 710,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "5197:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5197:8:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "31",
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5209:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5197:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												}
											],
											"id": 716,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "5196:15:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 728,
									"mutability": "constant",
									"name": "REVOKE_FLOW_OPERATOR_DELETE",
									"nameLocation": "5241:27:5",
									"nodeType": "VariableDeclaration",
									"scope": 753,
									"src": "5217:70:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 719,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "5217:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"id": 727,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "5271:16:5",
										"subExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5279:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5273:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 720,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "5273:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5273:8:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "32",
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5285:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "5273:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												}
											],
											"id": 726,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "5272:15:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "5370:209:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 735,
																	"name": "permissions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "5401:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "~",
																	"prefix": true,
																	"src": "5415:131:5",
																	"subExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 740,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					"id": 738,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 736,
																						"name": "AUTHORIZE_FLOW_OPERATOR_CREATE",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 675,
																						"src": "5417:30:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 737,
																						"name": "AUTHORIZE_FLOW_OPERATOR_UPDATE",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 683,
																						"src": "5466:30:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "5417:79:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "|",
																				"rightExpression": {
																					"id": 739,
																					"name": "AUTHORIZE_FLOW_OPERATOR_DELETE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 691,
																					"src": "5515:30:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "5417:128:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 741,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5416:130:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5401:145:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"id": 744,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5387:173:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5570:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5564:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 745,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "5564:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5564:8:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5387:185:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 734,
												"id": 750,
												"nodeType": "Return",
												"src": "5380:192:5"
											}
										]
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isPermissionsClean",
									"nameLocation": "5303:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "permissions",
												"nameLocation": "5328:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5322:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 729,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5322:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5321:19:5"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5364:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5364:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5363:6:5"
									},
									"scope": 753,
									"src": "5294:285:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 889,
							"src": "4640:942:5",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BatchOperation",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 754,
								"nodeType": "StructuredDocumentation",
								"src": "5584:63:5",
								"text": " @title Batch operation library\n @author Superfluid"
							},
							"fullyImplemented": true,
							"id": 787,
							"linearizedBaseContracts": [787],
							"name": "BatchOperation",
							"nameLocation": "5656:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "5677:200:5",
										"text": " @dev ERC20.approve batch operation type\n Call spec:\n ISuperToken(target).operationApprove(\n     abi.decode(data, (address spender, uint256 amount))\n )"
									},
									"id": 758,
									"mutability": "constant",
									"name": "OPERATION_TYPE_ERC20_APPROVE",
									"nameLocation": "5907:28:5",
									"nodeType": "VariableDeclaration",
									"scope": 787,
									"src": "5882:57:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 756,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "5882:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 757,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5938:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "5945:227:5",
										"text": " @dev ERC20.transferFrom batch operation type\n Call spec:\n ISuperToken(target).operationTransferFrom(\n     abi.decode(data, (address sender, address recipient, uint256 amount)\n )"
									},
									"id": 762,
									"mutability": "constant",
									"name": "OPERATION_TYPE_ERC20_TRANSFER_FROM",
									"nameLocation": "6202:34:5",
									"nodeType": "VariableDeclaration",
									"scope": 787,
									"src": "6177:63:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 760,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "6177:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 761,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6239:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "6246:187:5",
										"text": " @dev SuperToken.upgrade batch operation type\n Call spec:\n ISuperToken(target).operationUpgrade(\n     abi.decode(data, (uint256 amount)\n )"
									},
									"id": 768,
									"mutability": "constant",
									"name": "OPERATION_TYPE_SUPERTOKEN_UPGRADE",
									"nameLocation": "6463:33:5",
									"nodeType": "VariableDeclaration",
									"scope": 787,
									"src": "6438:68:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 764,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "6438:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_101_by_1",
											"typeString": "int_const 101"
										},
										"id": 767,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 765,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "6499:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"hexValue": "313030",
											"id": 766,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "6503:3:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "6499:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_101_by_1",
											"typeString": "int_const 101"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "6512:191:5",
										"text": " @dev SuperToken.downgrade batch operation type\n Call spec:\n ISuperToken(target).operationDowngrade(\n     abi.decode(data, (uint256 amount)\n )"
									},
									"id": 774,
									"mutability": "constant",
									"name": "OPERATION_TYPE_SUPERTOKEN_DOWNGRADE",
									"nameLocation": "6733:35:5",
									"nodeType": "VariableDeclaration",
									"scope": 787,
									"src": "6708:70:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 770,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "6708:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_102_by_1",
											"typeString": "int_const 102"
										},
										"id": 773,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "32",
											"id": 771,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "6771:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"hexValue": "313030",
											"id": 772,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "6775:3:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "6771:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_102_by_1",
											"typeString": "int_const 102"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "6784:223:5",
										"text": " @dev Superfluid.callAgreement batch operation type\n Call spec:\n callAgreement(\n     ISuperAgreement(target)),\n     abi.decode(data, (bytes calldata, bytes userdata)\n )"
									},
									"id": 780,
									"mutability": "constant",
									"name": "OPERATION_TYPE_SUPERFLUID_CALL_AGREEMENT",
									"nameLocation": "7037:40:5",
									"nodeType": "VariableDeclaration",
									"scope": 787,
									"src": "7012:75:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 776,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "7012:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_201_by_1",
											"typeString": "int_const 201"
										},
										"id": 779,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 777,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "7080:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"hexValue": "323030",
											"id": 778,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "7084:3:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_200_by_1",
												"typeString": "int_const 200"
											},
											"value": "200"
										},
										"src": "7080:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_201_by_1",
											"typeString": "int_const 201"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "7093:172:5",
										"text": " @dev Superfluid.callAppAction batch operation type\n Call spec:\n callAppAction(\n     ISuperApp(target)),\n     data\n )"
									},
									"id": 786,
									"mutability": "constant",
									"name": "OPERATION_TYPE_SUPERFLUID_CALL_APP_ACTION",
									"nameLocation": "7295:41:5",
									"nodeType": "VariableDeclaration",
									"scope": 787,
									"src": "7270:76:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 782,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "7270:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_202_by_1",
											"typeString": "int_const 202"
										},
										"id": 785,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "32",
											"id": 783,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "7339:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"hexValue": "323030",
											"id": 784,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "7343:3:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_200_by_1",
												"typeString": "int_const 200"
											},
											"value": "200"
										},
										"src": "7339:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_202_by_1",
											"typeString": "int_const 202"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 889,
							"src": "5648:1701:5",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SuperfluidGovernanceConfigs",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 788,
								"nodeType": "StructuredDocumentation",
								"src": "7351:77:5",
								"text": " @title Superfluid governance configs library\n @author Superfluid"
							},
							"fullyImplemented": true,
							"id": 888,
							"linearizedBaseContracts": [888],
							"name": "SuperfluidGovernanceConfigs",
							"nameLocation": "7437:27:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 793,
									"mutability": "constant",
									"name": "SUPERFLUID_REWARD_ADDRESS_CONFIG_KEY",
									"nameLocation": "7498:36:5",
									"nodeType": "VariableDeclaration",
									"scope": 888,
									"src": "7472:133:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 789,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "7472:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "6f72672e7375706572666c7569642d66696e616e63652e7375706572666c7569642e72657761726441646472657373",
												"id": 791,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7555:49:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f60ae461adf056670e03ae602566409933242392cb06744f5747c9f38b05d09",
													"typeString": "literal_string \"org.superfluid-finance.superfluid.rewardAddress\""
												},
												"value": "org.superfluid-finance.superfluid.rewardAddress"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f60ae461adf056670e03ae602566409933242392cb06744f5747c9f38b05d09",
													"typeString": "literal_string \"org.superfluid-finance.superfluid.rewardAddress\""
												}
											],
											"id": 790,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "7545:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 792,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7545:60:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 798,
									"mutability": "constant",
									"name": "CFAV1_PPP_CONFIG_KEY",
									"nameLocation": "7637:20:5",
									"nodeType": "VariableDeclaration",
									"scope": 888,
									"src": "7611:145:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 794,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "7611:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "6f72672e7375706572666c7569642d66696e616e63652e61677265656d656e74732e436f6e7374616e74466c6f7741677265656d656e742e76312e505050436f6e66696775726174696f6e",
												"id": 796,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7678:77:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e420d96e81cb4a6b2abb2366c4f93312d4e2ae878a7d4b22e73472fdad891f78",
													"typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1.PPPConfiguration\""
												},
												"value": "org.superfluid-finance.agreements.ConstantFlowAgreement.v1.PPPConfiguration"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e420d96e81cb4a6b2abb2366c4f93312d4e2ae878a7d4b22e73472fdad891f78",
													"typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1.PPPConfiguration\""
												}
											],
											"id": 795,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "7668:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 797,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7668:88:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 803,
									"mutability": "constant",
									"name": "SUPERTOKEN_MINIMUM_DEPOSIT_KEY",
									"nameLocation": "7788:30:5",
									"nodeType": "VariableDeclaration",
									"scope": 888,
									"src": "7762:138:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 799,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "7762:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "6f72672e7375706572666c7569642d66696e616e63652e7375706572666c7569642e7375706572546f6b656e4d696e696d756d4465706f736974",
												"id": 801,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7839:60:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_eae305fa863b373417e615b1044222e2806cefc7788d169ce6748a443c3f6cc4",
													"typeString": "literal_string \"org.superfluid-finance.superfluid.superTokenMinimumDeposit\""
												},
												"value": "org.superfluid-finance.superfluid.superTokenMinimumDeposit"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_eae305fa863b373417e615b1044222e2806cefc7788d169ce6748a443c3f6cc4",
													"typeString": "literal_string \"org.superfluid-finance.superfluid.superTokenMinimumDeposit\""
												}
											],
											"id": 800,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "7829:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 802,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7829:71:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "7996:135:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6f72672e7375706572666c7569642d66696e616e63652e7375706572666c7569642e74727573746564466f72776172646572",
																	"id": 813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8047:52:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_5e8d8c86403ce515d0afc5f813484261c20de0e66deea95df3a7de50a4365fdd",
																		"typeString": "literal_string \"org.superfluid-finance.superfluid.trustedForwarder\""
																	},
																	"value": "org.superfluid-finance.superfluid.trustedForwarder"
																},
																{
																	"id": 814,
																	"name": "forwarder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "8113:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_5e8d8c86403ce515d0afc5f813484261c20de0e66deea95df3a7de50a4365fdd",
																		"typeString": "literal_string \"org.superfluid-finance.superfluid.trustedForwarder\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 811,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "8023:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8027:6:5",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "8023:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8023:100:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 810,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "8013:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8013:111:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 809,
												"id": 817,
												"nodeType": "Return",
												"src": "8006:118:5"
											}
										]
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedForwarderConfigKey",
									"nameLocation": "7916:28:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "forwarder",
												"nameLocation": "7953:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "7945:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7945:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7944:19:5"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "7987:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 807,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7987:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7986:9:5"
									},
									"scope": 888,
									"src": "7907:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "8255:178:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6f72672e7375706572666c7569642d66696e616e63652e7375706572666c7569642e61707057686974654c697374696e672e726567697374726174696f6e4b6579",
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8306:67:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2ac2eda5c308a51ed3bd3433d0d20fe487916751b3404fa382719429ef24259a",
																		"typeString": "literal_string \"org.superfluid-finance.superfluid.appWhiteListing.registrationKey\""
																	},
																	"value": "org.superfluid-finance.superfluid.appWhiteListing.registrationKey"
																},
																{
																	"id": 832,
																	"name": "deployer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "8387:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 833,
																	"name": "registrationKey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "8409:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_2ac2eda5c308a51ed3bd3433d0d20fe487916751b3404fa382719429ef24259a",
																		"typeString": "literal_string \"org.superfluid-finance.superfluid.appWhiteListing.registrationKey\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 829,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "8282:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8286:6:5",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "8282:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8282:143:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 828,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "8272:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8272:154:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 827,
												"id": 836,
												"nodeType": "Return",
												"src": "8265:161:5"
											}
										]
									},
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAppRegistrationConfigKey",
									"nameLocation": "8146:27:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "8182:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "8174:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8174:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "registrationKey",
												"nameLocation": "8206:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "8192:29:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 822,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8192:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8173:49:5"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "8246:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 825,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8246:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8245:9:5"
									},
									"scope": 888,
									"src": "8137:296:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "8520:140:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6f72672e7375706572666c7569642d66696e616e63652e7375706572666c7569642e61707057686974654c697374696e672e666163746f7279",
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8571:59:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_3a9ec29d76a01dd4676b43ee8f5ae7a021577f823fb495dfb5627ad6bbb890b6",
																		"typeString": "literal_string \"org.superfluid-finance.superfluid.appWhiteListing.factory\""
																	},
																	"value": "org.superfluid-finance.superfluid.appWhiteListing.factory"
																},
																{
																	"id": 849,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "8644:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_3a9ec29d76a01dd4676b43ee8f5ae7a021577f823fb495dfb5627ad6bbb890b6",
																		"typeString": "literal_string \"org.superfluid-finance.superfluid.appWhiteListing.factory\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 846,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "8547:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8551:6:5",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "8547:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8547:105:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 845,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "8537:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8537:116:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 844,
												"id": 852,
												"nodeType": "Return",
												"src": "8530:123:5"
											}
										]
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAppFactoryConfigKey",
									"nameLocation": "8448:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "8479:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "8471:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8471:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8470:17:5"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "8511:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 842,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8511:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8510:9:5"
									},
									"scope": 888,
									"src": "8439:221:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "8785:129:5",
										"statements": [
											{
												"expression": {
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 863,
														"name": "liquidationPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "8795:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 864,
																		"name": "pppConfig",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 856,
																		"src": "8816:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3332",
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8829:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	"src": "8816:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 867,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8815:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8840:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		},
																		"typeName": {
																			"id": 869,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "8840:6:5",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		}
																	],
																	"id": 868,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "8835:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8835:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint32",
																	"typeString": "type(uint32)"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "8848:3:5",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "8835:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "8815:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8795:56:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "8795:56:5"
											},
											{
												"expression": {
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 876,
														"name": "patricianPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "8861:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 877,
															"name": "pppConfig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "8879:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8896:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		},
																		"typeName": {
																			"id": 879,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "8896:6:5",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		}
																	],
																	"id": 878,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "8891:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8891:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint32",
																	"typeString": "type(uint32)"
																}
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "8904:3:5",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "8891:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "8879:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8861:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "8861:46:5"
											}
										]
									},
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodePPPConfig",
									"nameLocation": "8675:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "pppConfig",
												"nameLocation": "8699:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "8691:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8691:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8690:19:5"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "liquidationPeriod",
												"nameLocation": "8741:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "8733:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8733:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "patricianPeriod",
												"nameLocation": "8768:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "8760:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8760:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8732:52:5"
									},
									"scope": 888,
									"src": "8666:248:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 889,
							"src": "7429:1487:5",
							"usedErrors": []
						}
					],
					"src": "35:8882:5"
				},
				"id": 5
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
				"ast": {
					"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
					"exportedSymbols": {
						"ISuperAgreement": [917],
						"ISuperfluidToken": [2496]
					},
					"id": 918,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 890,
							"literals": ["solidity", ">=", "0.8", ".4"],
							"nodeType": "PragmaDirective",
							"src": "35:25:6"
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
							"file": "./ISuperfluidToken.sol",
							"id": 892,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 918,
							"sourceUnit": 2497,
							"src": "62:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 891,
										"name": "ISuperfluidToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2496,
										"src": "71:16:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISuperAgreement",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 893,
								"nodeType": "StructuredDocumentation",
								"src": "122:65:6",
								"text": " @title Super agreement interface\n @author Superfluid"
							},
							"fullyImplemented": false,
							"id": 917,
							"linearizedBaseContracts": [917],
							"name": "ISuperAgreement",
							"nameLocation": "198:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "221:59:6",
										"text": " @dev Get the type of the agreement class"
									},
									"functionSelector": "7730599e",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "agreementType",
									"nameLocation": "294:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "307:2:6"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "333:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 896,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:9:6"
									},
									"scope": 917,
									"src": "285:57:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "348:425:6",
										"text": " @dev Calculate the real-time balance for the account of this agreement class\n @param account Account the state belongs to\n @param time Time used for the calculation\n @return dynamicBalance Dynamic balance portion of real-time balance of this agreement\n @return deposit Account deposit amount of this agreement\n @return owedDeposit Account owed deposit amount of this agreement"
									},
									"functionSelector": "9b2e48bc",
									"id": 916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "realtimeBalanceOf",
									"nameLocation": "787:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "814:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidToken_$2496",
													"typeString": "contract ISuperfluidToken"
												},
												"typeName": {
													"id": 902,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 901,
														"name": "ISuperfluidToken",
														"nameLocations": [
															"814:16:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2496,
														"src": "814:16:6"
													},
													"referencedDeclaration": 2496,
													"src": "814:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidToken_$2496",
														"typeString": "contract ISuperfluidToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "854:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "846:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "879:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "871:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "871:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:85:6"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "dynamicBalance",
												"nameLocation": "957:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "950:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 909,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "950:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "deposit",
												"nameLocation": "993:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "985:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "owedDeposit",
												"nameLocation": "1022:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "1014:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1014:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "936:107:6"
									},
									"scope": 917,
									"src": "778:266:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 918,
							"src": "188:859:6",
							"usedErrors": []
						}
					],
					"src": "35:1013:6"
				},
				"id": 6
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
				"ast": {
					"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
					"exportedSymbols": {
						"ISuperApp": [1031],
						"ISuperToken": [1431]
					},
					"id": 1032,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 919,
							"literals": ["solidity", ">=", "0.8", ".4"],
							"nodeType": "PragmaDirective",
							"src": "35:25:7"
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
							"file": "./ISuperToken.sol",
							"id": 921,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1032,
							"sourceUnit": 1432,
							"src": "62:48:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 920,
										"name": "ISuperToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1431,
										"src": "71:11:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISuperApp",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 922,
								"nodeType": "StructuredDocumentation",
								"src": "112:133:7",
								"text": " @title SuperApp interface\n @author Superfluid\n @dev Be aware of the app being jailed, when the word permitted is used."
							},
							"fullyImplemented": false,
							"id": 1031,
							"linearizedBaseContracts": [1031],
							"name": "ISuperApp",
							"nameLocation": "256:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "273:630:7",
										"text": " @dev Callback before a new agreement is created.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param ctx The context data.\n @return cbdata A free format in memory data the app can use to pass\n          arbitary information to the after-hook callback.\n @custom:note \n - It will be invoked with `staticcall`, no state changes are permitted.\n - Only revert with a \"reason\" is permitted."
									},
									"functionSelector": "30d9c915",
									"id": 939,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beforeAgreementCreated",
									"nameLocation": "917:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "961:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "949:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$1431",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 925,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 924,
														"name": "ISuperToken",
														"nameLocations": [
															"949:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1431,
														"src": "949:11:7"
													},
													"referencedDeclaration": 1431,
													"src": "949:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$1431",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "989:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "981:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "981:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "agreementId",
												"nameLocation": "1021:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "1013:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 929,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "agreementData",
												"nameLocation": "1057:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "1042:28:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 931,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1042:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "1095:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "1080:18:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 933,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1080:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:165:7"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "cbdata",
												"nameLocation": "1165:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "1152:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 936,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1152:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1151:21:7"
									},
									"scope": 1031,
									"src": "908:265:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 940,
										"nodeType": "StructuredDocumentation",
										"src": "1179:579:7",
										"text": " @dev Callback after a new agreement is created.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param cbdata The data returned from the before-hook callback.\n @param ctx The context data.\n @return newCtx The current context of the transaction.\n @custom:note \n - State changes is permitted.\n - Only revert with a \"reason\" is permitted."
									},
									"functionSelector": "d86ed3e5",
									"id": 958,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "afterAgreementCreated",
									"nameLocation": "1772:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "1815:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "1803:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$1431",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 942,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 941,
														"name": "ISuperToken",
														"nameLocations": [
															"1803:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1431,
														"src": "1803:11:7"
													},
													"referencedDeclaration": 1431,
													"src": "1803:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$1431",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "1843:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "1835:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "agreementId",
												"nameLocation": "1875:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "1867:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 946,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1867:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "agreementData",
												"nameLocation": "1911:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "1896:28:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 948,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1896:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "cbdata",
												"nameLocation": "1949:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "1934:21:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 950,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1934:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "1980:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "1965:18:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 952,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1965:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1793:196:7"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "newCtx",
												"nameLocation": "2037:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "2024:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 955,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2024:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2023:21:7"
									},
									"scope": 1031,
									"src": "1763:282:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "2051:630:7",
										"text": " @dev Callback before a new agreement is updated.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param ctx The context data.\n @return cbdata A free format in memory data the app can use to pass\n          arbitary information to the after-hook callback.\n @custom:note \n - It will be invoked with `staticcall`, no state changes are permitted.\n - Only revert with a \"reason\" is permitted."
									},
									"functionSelector": "884d1f40",
									"id": 975,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beforeAgreementUpdated",
									"nameLocation": "2695:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "2739:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "2727:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$1431",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 961,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 960,
														"name": "ISuperToken",
														"nameLocations": [
															"2727:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1431,
														"src": "2727:11:7"
													},
													"referencedDeclaration": 1431,
													"src": "2727:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$1431",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "2767:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "2759:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2759:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "agreementId",
												"nameLocation": "2799:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "2791:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 965,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "agreementData",
												"nameLocation": "2835:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "2820:28:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 967,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2820:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "2873:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "2858:18:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 969,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2858:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:165:7"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "cbdata",
												"nameLocation": "2943:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "2930:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2930:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2929:21:7"
									},
									"scope": 1031,
									"src": "2686:265:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "2958:566:7",
										"text": " @dev Callback after a new agreement is updated.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param cbdata The data returned from the before-hook callback.\n @param ctx The context data.\n @return newCtx The current context of the transaction.\n @custom:note \n - State changes is permitted.\n - Only revert with a \"reason\" is permitted."
									},
									"functionSelector": "230dbd29",
									"id": 994,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "afterAgreementUpdated",
									"nameLocation": "3538:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "3581:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "3569:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$1431",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 978,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 977,
														"name": "ISuperToken",
														"nameLocations": [
															"3569:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1431,
														"src": "3569:11:7"
													},
													"referencedDeclaration": 1431,
													"src": "3569:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$1431",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "3609:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "3601:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3601:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "agreementId",
												"nameLocation": "3641:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "3633:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 982,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3633:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "agreementData",
												"nameLocation": "3677:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "3662:28:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 984,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3662:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "cbdata",
												"nameLocation": "3715:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "3700:21:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 986,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3700:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "3746:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "3731:18:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 988,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3731:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3559:196:7"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "newCtx",
												"nameLocation": "3803:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "3790:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 991,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3789:21:7"
									},
									"scope": 1031,
									"src": "3529:282:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "3817:588:7",
										"text": " @dev Callback before a new agreement is terminated.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param ctx The context data.\n @return cbdata A free format in memory data the app can use to pass arbitary information to the after-hook callback.\n @custom:note \n - It will be invoked with `staticcall`, no state changes are permitted.\n - Revert is not permitted."
									},
									"functionSelector": "5f9e7d77",
									"id": 1011,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beforeAgreementTerminated",
									"nameLocation": "4419:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "4466:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "4454:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$1431",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 997,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 996,
														"name": "ISuperToken",
														"nameLocations": [
															"4454:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1431,
														"src": "4454:11:7"
													},
													"referencedDeclaration": 1431,
													"src": "4454:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$1431",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "4494:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "4486:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "agreementId",
												"nameLocation": "4526:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "4518:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1001,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4518:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "agreementData",
												"nameLocation": "4562:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "4547:28:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1003,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4547:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "4600:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "4585:18:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1005,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4585:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:165:7"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "cbdata",
												"nameLocation": "4670:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "4657:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1008,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4657:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4656:21:7"
									},
									"scope": 1031,
									"src": "4410:268:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "4684:552:7",
										"text": " @dev Callback after a new agreement is terminated.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param cbdata The data returned from the before-hook callback.\n @param ctx The context data.\n @return newCtx The current context of the transaction.\n @custom:note \n - State changes is permitted.\n - Revert is not permitted."
									},
									"functionSelector": "53c11f99",
									"id": 1030,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "afterAgreementTerminated",
									"nameLocation": "5250:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "5296:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "5284:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$1431",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 1014,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1013,
														"name": "ISuperToken",
														"nameLocations": [
															"5284:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1431,
														"src": "5284:11:7"
													},
													"referencedDeclaration": 1431,
													"src": "5284:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$1431",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "5324:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "5316:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "agreementId",
												"nameLocation": "5356:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "5348:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1018,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5348:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "agreementData",
												"nameLocation": "5392:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "5377:28:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1020,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5377:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "cbdata",
												"nameLocation": "5430:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "5415:21:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1022,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5415:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "5461:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "5446:18:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1024,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5446:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5274:196:7"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "newCtx",
												"nameLocation": "5518:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "5505:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1027,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5505:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5504:21:7"
									},
									"scope": 1031,
									"src": "5241:285:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1032,
							"src": "246:5282:7",
							"usedErrors": []
						}
					],
					"src": "35:5494:7"
				},
				"id": 7
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
				"ast": {
					"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
					"exportedSymbols": {
						"IERC20": [242],
						"IERC777": [405],
						"ISuperToken": [1431],
						"ISuperfluid": [2081],
						"ISuperfluidToken": [2496],
						"TokenInfo": [2530]
					},
					"id": 1432,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1033,
							"literals": ["solidity", ">=", "0.8", ".4"],
							"nodeType": "PragmaDirective",
							"src": "35:25:8"
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
							"file": "./ISuperfluid.sol",
							"id": 1035,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1432,
							"sourceUnit": 2082,
							"src": "62:48:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1034,
										"name": "ISuperfluid",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2081,
										"src": "71:11:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
							"file": "./ISuperfluidToken.sol",
							"id": 1037,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1432,
							"sourceUnit": 2497,
							"src": "111:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1036,
										"name": "ISuperfluidToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2496,
										"src": "120:16:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
							"file": "../tokens/TokenInfo.sol",
							"id": 1039,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1432,
							"sourceUnit": 2531,
							"src": "170:52:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1038,
										"name": "TokenInfo",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2530,
										"src": "179:9:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
							"file": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
							"id": 1041,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1432,
							"sourceUnit": 406,
							"src": "223:75:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1040,
										"name": "IERC777",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 405,
										"src": "232:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1043,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1432,
							"sourceUnit": 243,
							"src": "299:72:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1042,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 242,
										"src": "308:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1045,
										"name": "ISuperfluidToken",
										"nameLocations": ["496:16:8"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2496,
										"src": "496:16:8"
									},
									"id": 1046,
									"nodeType": "InheritanceSpecifier",
									"src": "496:16:8"
								},
								{
									"baseName": {
										"id": 1047,
										"name": "TokenInfo",
										"nameLocations": ["514:9:8"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2530,
										"src": "514:9:8"
									},
									"id": 1048,
									"nodeType": "InheritanceSpecifier",
									"src": "514:9:8"
								},
								{
									"baseName": {
										"id": 1049,
										"name": "IERC20",
										"nameLocations": ["525:6:8"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 242,
										"src": "525:6:8"
									},
									"id": 1050,
									"nodeType": "InheritanceSpecifier",
									"src": "525:6:8"
								},
								{
									"baseName": {
										"id": 1051,
										"name": "IERC777",
										"nameLocations": ["533:7:8"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 405,
										"src": "533:7:8"
									},
									"id": 1052,
									"nodeType": "InheritanceSpecifier",
									"src": "533:7:8"
								}
							],
							"canonicalName": "ISuperToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1044,
								"nodeType": "StructuredDocumentation",
								"src": "373:97:8",
								"text": " @title Super token (Superfluid Token + ERC20 + ERC777) interface\n @author Superfluid"
							},
							"fullyImplemented": false,
							"id": 1431,
							"linearizedBaseContracts": [
								1431, 405, 242, 2530, 2496
							],
							"name": "ISuperToken",
							"nameLocation": "481:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "f7f02227",
									"id": 1054,
									"name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER",
									"nameLocation": "728:45:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:8"
									},
									"src": "722:54:8"
								},
								{
									"errorSelector": "fe737d05",
									"id": 1056,
									"name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT",
									"nameLocation": "807:39:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:8"
									},
									"src": "801:48:8"
								},
								{
									"errorSelector": "e3e13698",
									"id": 1058,
									"name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED",
									"nameLocation": "886:51:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "937:2:8"
									},
									"src": "880:60:8"
								},
								{
									"errorSelector": "f79cf656",
									"id": 1060,
									"name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN",
									"nameLocation": "965:31:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "996:2:8"
									},
									"src": "959:40:8"
								},
								{
									"errorSelector": "7ffa6648",
									"id": 1062,
									"name": "SUPER_TOKEN_ONLY_SELF",
									"nameLocation": "1044:21:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1065:2:8"
									},
									"src": "1038:30:8"
								},
								{
									"errorSelector": "98f73704",
									"id": 1064,
									"name": "SUPER_TOKEN_ONLY_HOST",
									"nameLocation": "1123:21:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1144:2:8"
									},
									"src": "1117:30:8"
								},
								{
									"errorSelector": "81638627",
									"id": 1066,
									"name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS",
									"nameLocation": "1202:37:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1239:2:8"
									},
									"src": "1196:46:8"
								},
								{
									"errorSelector": "df070274",
									"id": 1068,
									"name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS",
									"nameLocation": "1281:35:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1316:2:8"
									},
									"src": "1275:44:8"
								},
								{
									"errorSelector": "ba2ab184",
									"id": 1070,
									"name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS",
									"nameLocation": "1360:34:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1394:2:8"
									},
									"src": "1354:43:8"
								},
								{
									"errorSelector": "0d243157",
									"id": 1072,
									"name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS",
									"nameLocation": "1439:32:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1471:2:8"
									},
									"src": "1433:41:8"
								},
								{
									"errorSelector": "eecd6c9b",
									"id": 1074,
									"name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS",
									"nameLocation": "1518:38:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1556:2:8"
									},
									"src": "1512:47:8"
								},
								{
									"errorSelector": "e219bd39",
									"id": 1076,
									"name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS",
									"nameLocation": "1597:36:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1633:2:8"
									},
									"src": "1591:45:8"
								},
								{
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "1671:47:8",
										"text": " @dev Initialize the contract"
									},
									"functionSelector": "42fe0980",
									"id": 1089,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "1732:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "underlyingToken",
												"nameLocation": "1759:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "1752:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$242",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1079,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1078,
														"name": "IERC20",
														"nameLocations": [
															"1752:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 242,
														"src": "1752:6:8"
													},
													"referencedDeclaration": 242,
													"src": "1752:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$242",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "underlyingDecimals",
												"nameLocation": "1790:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "1784:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1081,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1784:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1834:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "1818:17:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1083,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1818:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1861:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "1845:17:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1085,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1845:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1742:126:8"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1877:0:8"
									},
									"scope": 1431,
									"src": "1723:155:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [291, 2517],
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "2069:54:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1098,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2137:4:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1094,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1092,
												"name": "IERC777",
												"nameLocations": ["2167:7:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 405,
												"src": "2167:7:8"
											},
											{
												"id": 1093,
												"name": "TokenInfo",
												"nameLocations": ["2176:9:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2530,
												"src": "2176:9:8"
											}
										],
										"src": "2158:28:8"
									},
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2141:2:8"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "2196:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1095,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2196:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2195:15:8"
									},
									"scope": 1431,
									"src": "2128:83:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [297, 2523],
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "2217:102:8",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2333:6:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1103,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1101,
												"name": "IERC777",
												"nameLocations": ["2365:7:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 405,
												"src": "2365:7:8"
											},
											{
												"id": 1102,
												"name": "TokenInfo",
												"nameLocations": ["2374:9:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2530,
												"src": "2374:9:8"
											}
										],
										"src": "2356:28:8"
									},
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2339:2:8"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2394:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1104,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2394:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2393:15:8"
									},
									"scope": 1431,
									"src": "2324:85:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [2529],
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "2415:669:8",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n @custom:note SuperToken always uses 18 decimals.\n This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 1115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3098:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1111,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1110,
												"name": "TokenInfo",
												"nameLocations": ["3132:9:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2530,
												"src": "3132:9:8"
											}
										],
										"src": "3123:19:8"
									},
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3106:2:8"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "3152:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1112,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3152:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3151:7:8"
									},
									"scope": 1431,
									"src": "3089:70:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [191, 309],
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "3346:49:8",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3409:11:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1120,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1118,
												"name": "IERC777",
												"nameLocations": ["3446:7:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 405,
												"src": "3446:7:8"
											},
											{
												"id": 1119,
												"name": "IERC20",
												"nameLocations": ["3455:6:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 242,
												"src": "3455:6:8"
											}
										],
										"src": "3437:25:8"
									},
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3420:2:8"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "3472:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3472:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3471:9:8"
									},
									"scope": 1431,
									"src": "3400:81:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [199, 317],
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "3487:83:8",
										"text": " @dev Returns the amount of tokens owned by an account (`owner`)."
									},
									"functionSelector": "70a08231",
									"id": 1135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3584:9:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1131,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1129,
												"name": "IERC777",
												"nameLocations": ["3634:7:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 405,
												"src": "3634:7:8"
											},
											{
												"id": 1130,
												"name": "IERC20",
												"nameLocations": ["3643:6:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 242,
												"src": "3643:6:8"
											}
										],
										"src": "3625:25:8"
									},
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3602:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "3594:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3594:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:17:8"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "3667:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "3659:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3659:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3658:17:8"
									},
									"scope": 1431,
									"src": "3575:101:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [209],
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "3854:233:8",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n @return Returns Success a boolean value indicating whether the operation succeeded.\n @custom:emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4101:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1143,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1142,
												"name": "IERC20",
												"nameLocations": ["4163:6:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 242,
												"src": "4163:6:8"
											}
										],
										"src": "4154:16:8"
									},
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4118:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "4110:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4110:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4137:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "4129:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4109:35:8"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "4180:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4180:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4179:6:8"
									},
									"scope": 1431,
									"src": "4092:94:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [219],
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "4192:288:8",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n         allowed to spend on behalf of `owner` through {transferFrom}. This is\n         zero by default.\n @notice This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4494:9:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1155,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1154,
												"name": "IERC20",
												"nameLocations": ["4554:6:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 242,
												"src": "4554:6:8"
											}
										],
										"src": "4545:16:8"
									},
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4512:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "4504:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4504:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4527:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "4519:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4519:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4503:32:8"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "4576:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4576:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4575:9:8"
									},
									"scope": 1431,
									"src": "4485:100:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [229],
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "4591:668:8",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n @return Returns Success a boolean value indicating whether the operation succeeded.\n @custom:note Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n @custom:emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5273:7:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1167,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1166,
												"name": "IERC20",
												"nameLocations": ["5332:6:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 242,
												"src": "5332:6:8"
											}
										],
										"src": "5323:16:8"
									},
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5289:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "5281:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5281:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5306:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "5298:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5298:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5280:33:8"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "5349:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5349:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5348:6:8"
									},
									"scope": 1431,
									"src": "5264:91:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [241],
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "5361:336:8",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n         allowance mechanism. `amount` is then deducted from the caller's\n         allowance.\n @return Returns Success a boolean value indicating whether the operation succeeded.\n @custom:emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5711:12:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1181,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1180,
												"name": "IERC20",
												"nameLocations": ["5793:6:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 242,
												"src": "5793:6:8"
											}
										],
										"src": "5784:16:8"
									},
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5732:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "5724:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5724:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5748:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "5740:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5740:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5767:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "5759:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5759:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5723:51:8"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "5810:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5810:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5809:6:8"
									},
									"scope": 1431,
									"src": "5702:114:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1186,
										"nodeType": "StructuredDocumentation",
										"src": "5822:393:8",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n @custom:emits an {Approval} event indicating the updated allowance.\n @custom:requirements \n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 1195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6229:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6255:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "6247:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6247:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6272:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "6264:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6264:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6246:37:8"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "6302:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6302:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6301:6:8"
									},
									"scope": 1431,
									"src": "6220:88:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "6314:485:8",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n @custom:emits an {Approval} event indicating the updated allowance.\n @custom:requirements \n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 1205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6814:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6840:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "6832:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6832:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6857:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "6849:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6849:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6831:42:8"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "6892:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1202,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6892:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6891:6:8"
									},
									"scope": 1431,
									"src": "6805:93:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [303],
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "7077:315:8",
										"text": " @dev Returns the smallest part of the token that is not divisible. This\n         means all token operations (creation, movement and destruction) must have\n         amounts that are a multiple of this number.\n @custom:note For super token contracts, this value is always 1"
									},
									"functionSelector": "556f0dc7",
									"id": 1213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "granularity",
									"nameLocation": "7406:11:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1209,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1208,
												"name": "IERC777",
												"nameLocations": ["7443:7:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 405,
												"src": "7443:7:8"
											}
										],
										"src": "7434:17:8"
									},
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7417:2:8"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "7461:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7461:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7460:9:8"
									},
									"scope": 1431,
									"src": "7397:73:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [327],
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "7476:610:8",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n @dev If send or receive hooks are registered for the caller and `recipient`,\n      the corresponding functions will be called with `data` and empty\n      `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n @custom:emits a {Sent} event.\n @custom:requirements \n - the caller must have at least `amount` tokens.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"functionSelector": "9bd9bbc6",
									"id": 1225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "8100:4:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1223,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1222,
												"name": "IERC777",
												"nameLocations": ["8179:7:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 405,
												"src": "8179:7:8"
											}
										],
										"src": "8170:17:8"
									},
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8113:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "8105:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8105:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8132:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "8124:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8124:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8155:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "8140:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8140:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8104:56:8"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8187:0:8"
									},
									"scope": 1431,
									"src": "8091:97:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [335],
									"documentation": {
										"id": 1226,
										"nodeType": "StructuredDocumentation",
										"src": "8194:414:8",
										"text": " @dev Destroys `amount` tokens from the caller's account, reducing the\n total supply.\n If a send hook is registered for the caller, the corresponding function\n will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n @custom:emits a {Burned} event.\n @custom:requirements \n - the caller must have at least `amount` tokens."
									},
									"functionSelector": "fe9d9303",
									"id": 1235,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "8622:4:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1233,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1232,
												"name": "IERC777",
												"nameLocations": ["8682:7:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 405,
												"src": "8682:7:8"
											}
										],
										"src": "8673:17:8"
									},
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8635:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "8627:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8627:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8658:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "8643:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1229,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8643:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8626:37:8"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8690:0:8"
									},
									"scope": 1431,
									"src": "8613:78:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [345],
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "8697:249:8",
										"text": " @dev Returns true if an account is an operator of `tokenHolder`.\n Operators can send and burn tokens on behalf of their owners. All\n accounts are their own operator.\n See {operatorSend} and {operatorBurn}."
									},
									"functionSelector": "d95b6371",
									"id": 1247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOperatorFor",
									"nameLocation": "8960:13:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1243,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1242,
												"name": "IERC777",
												"nameLocations": ["9031:7:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 405,
												"src": "9031:7:8"
											}
										],
										"src": "9022:17:8"
									},
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8982:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "8974:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8974:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "9000:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "8992:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8992:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8973:39:8"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "9054:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9054:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9053:6:8"
									},
									"scope": 1431,
									"src": "8951:109:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [351],
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "9066:243:8",
										"text": " @dev Make an account an operator of the caller.\n See {isOperatorFor}.\n @custom:emits an {AuthorizedOperator} event.\n @custom:requirements \n - `operator` cannot be calling address."
									},
									"functionSelector": "959b8c3f",
									"id": 1255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "authorizeOperator",
									"nameLocation": "9323:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1253,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1252,
												"name": "IERC777",
												"nameLocations": ["9377:7:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 405,
												"src": "9377:7:8"
											}
										],
										"src": "9368:17:8"
									},
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9349:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "9341:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9341:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9340:18:8"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9385:0:8"
									},
									"scope": 1431,
									"src": "9314:72:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [357],
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "9392:271:8",
										"text": " @dev Revoke an account's operator status for the caller.\n See {isOperatorFor} and {defaultOperators}.\n @custom:emits a {RevokedOperator} event.\n @custom:requirements \n - `operator` cannot be calling address."
									},
									"functionSelector": "fad8b32a",
									"id": 1263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeOperator",
									"nameLocation": "9677:14:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1261,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1260,
												"name": "IERC777",
												"nameLocations": ["9728:7:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 405,
												"src": "9728:7:8"
											}
										],
										"src": "9719:17:8"
									},
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9700:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "9692:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9692:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9691:18:8"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9736:0:8"
									},
									"scope": 1431,
									"src": "9668:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [364],
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "9743:338:8",
										"text": " @dev Returns the list of default operators. These accounts are operators\n for all token holders, even if {authorizeOperator} was never called on\n them.\n This list is immutable, but individual holders may revoke these via\n {revokeOperator}, in which case {isOperatorFor} will return false."
									},
									"functionSelector": "06e48538",
									"id": 1272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "defaultOperators",
									"nameLocation": "10095:16:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1267,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1266,
												"name": "IERC777",
												"nameLocations": ["10132:7:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 405,
												"src": "10132:7:8"
											}
										],
										"src": "10123:17:8"
									},
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10111:2:8"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "10155:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1268,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10155:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1269,
													"nodeType": "ArrayTypeName",
													"src": "10155:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10154:18:8"
									},
									"scope": 1431,
									"src": "10086:87:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [378],
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "10179:724:8",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n be an operator of `sender`.\n If send or receive hooks are registered for `sender` and `recipient`,\n the corresponding functions will be called with `data` and\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n @custom:emits a {Sent} event.\n @custom:requirements \n - `sender` cannot be the zero address.\n - `sender` must have at least `amount` tokens.\n - the caller must be an operator for `sender`.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"functionSelector": "62ad1b83",
									"id": 1288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operatorSend",
									"nameLocation": "10917:12:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1286,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1285,
												"name": "IERC777",
												"nameLocations": ["11095:7:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 405,
												"src": "11095:7:8"
											}
										],
										"src": "11086:17:8"
									},
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "10947:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "10939:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10939:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10971:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "10963:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10963:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10998:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "10990:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10990:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11029:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "11014:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11014:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "11058:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "11043:27:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1282,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11043:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10929:147:8"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11103:0:8"
									},
									"scope": 1431,
									"src": "10908:196:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [390],
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "11110:542:8",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the total supply.\n The caller must be an operator of `account`.\n If a send hook is registered for `account`, the corresponding function\n will be called with `data` and `operatorData`. See {IERC777Sender}.\n @custom:emits a {Burned} event.\n @custom:requirements \n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n - the caller must be an operator for `account`."
									},
									"functionSelector": "fc673c4f",
									"id": 1302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operatorBurn",
									"nameLocation": "11666:12:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1300,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1299,
												"name": "IERC777",
												"nameLocations": ["11818:7:8"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 405,
												"src": "11818:7:8"
											}
										],
										"src": "11809:17:8"
									},
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11696:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "11688:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11688:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11721:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "11713:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11713:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11752:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "11737:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1294,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11737:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "11781:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "11766:27:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1296,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11766:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11678:121:8"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11826:0:8"
									},
									"scope": 1431,
									"src": "11657:170:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "12035:107:8",
										"text": " @dev Mint new tokens for the account\n @custom:modifiers \n  - onlySelf"
									},
									"functionSelector": "c68d4283",
									"id": 1312,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "selfMint",
									"nameLocation": "12156:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12182:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "12174:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12174:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12207:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "12199:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12199:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "12236:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "12223:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12223:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12164:86:8"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12259:0:8"
									},
									"scope": 1431,
									"src": "12147:113:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "12265:107:8",
										"text": " @dev Burn existing tokens for the account\n @custom:modifiers \n  - onlySelf"
									},
									"functionSelector": "9d876741",
									"id": 1322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "selfBurn",
									"nameLocation": "12385:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12410:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "12402:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12402:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12434:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "12426:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12426:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "12462:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "12449:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1318,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12449:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12393:82:8"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12484:0:8"
									},
									"scope": 1431,
									"src": "12376:109:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "12490:245:8",
										"text": " @dev Transfer `amount` tokens from the `sender` to `recipient`.\n If `spender` isn't the same as `sender`, checks if `spender` has allowance to\n spend tokens of `sender`.\n @custom:modifiers \n  - onlySelf"
									},
									"functionSelector": "41b706be",
									"id": 1334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "selfTransferFrom",
									"nameLocation": "12748:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "12782:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "12774:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12774:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12806:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "12798:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12798:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "12831:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "12823:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12823:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12858:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "12850:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12850:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12764:105:8"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12878:0:8"
									},
									"scope": 1431,
									"src": "12739:140:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "12884:145:8",
										"text": " @dev Give `spender`, `amount` allowance to spend the tokens of\n `account`.\n @custom:modifiers \n  - onlySelf"
									},
									"functionSelector": "66a12fb6",
									"id": 1344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "selfApproveFor",
									"nameLocation": "13042:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13074:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "13066:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13066:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13099:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "13091:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13091:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13124:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "13116:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13116:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13056:79:8"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13144:0:8"
									},
									"scope": 1431,
									"src": "13033:112:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "13346:87:8",
										"text": " @dev Transfer all available balance from `msg.sender` to `recipient`"
									},
									"functionSelector": "a3a7e7f3",
									"id": 1350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAll",
									"nameLocation": "13447:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "13467:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "13459:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13459:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13458:19:8"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13486:0:8"
									},
									"scope": 1431,
									"src": "13438:49:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "13676:110:8",
										"text": " @dev Return the underlying token contract\n @return tokenAddr Underlying token address"
									},
									"functionSelector": "ee719bc8",
									"id": 1356,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUnderlyingToken",
									"nameLocation": "13800:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13818:2:8"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "tokenAddr",
												"nameLocation": "13851:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "13843:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13843:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13842:19:8"
									},
									"scope": 1431,
									"src": "13791:71:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "13868:262:8",
										"text": " @dev Upgrade ERC20 to SuperToken.\n @param amount Number of tokens to be upgraded (in 18 decimals)\n @custom:note It will use `transferFrom` to get tokens. Before calling this\n function you should `approve` this contract"
									},
									"functionSelector": "45977d03",
									"id": 1362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "upgrade",
									"nameLocation": "14144:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14160:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "14152:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14152:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14151:16:8"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14176:0:8"
									},
									"scope": 1431,
									"src": "14135:42:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "14183:405:8",
										"text": " @dev Upgrade ERC20 to SuperToken and transfer immediately\n @param to The account to received upgraded tokens\n @param amount Number of tokens to be upgraded (in 18 decimals)\n @param data User data for the TokensRecipient callback\n @custom:note It will use `transferFrom` to get tokens. Before calling this\n function you should `approve` this contract"
									},
									"functionSelector": "5b9d09cc",
									"id": 1372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeTo",
									"nameLocation": "14602:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14620:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "14612:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14612:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14632:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "14624:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14624:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14655:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "14640:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14640:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14611:49:8"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14669:0:8"
									},
									"scope": 1431,
									"src": "14593:77:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1373,
										"nodeType": "StructuredDocumentation",
										"src": "14676:166:8",
										"text": " @dev Token upgrade event\n @param account Account where tokens are upgraded to\n @param amount Amount of tokens upgraded (in 18 decimals)"
									},
									"eventSelector": "25ca84076773b0455db53621c459ddc84fe40840e4932a62706a032566f399df",
									"id": 1379,
									"name": "TokenUpgraded",
									"nameLocation": "14853:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14892:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "14876:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14876:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14917:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "14909:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14909:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14866:63:8"
									},
									"src": "14847:83:8"
								},
								{
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "14936:158:8",
										"text": " @dev Downgrade SuperToken to ERC20.\n @dev It will call transfer to send tokens\n @param amount Number of tokens to be downgraded"
									},
									"functionSelector": "11bcc81e",
									"id": 1385,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "downgrade",
									"nameLocation": "15108:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15126:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "15118:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15118:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15117:16:8"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15142:0:8"
									},
									"scope": 1431,
									"src": "15099:44:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1386,
										"nodeType": "StructuredDocumentation",
										"src": "15149:150:8",
										"text": " @dev Token downgrade event\n @param account Account whose tokens are upgraded\n @param amount Amount of tokens downgraded"
									},
									"eventSelector": "3bc27981aebbb57f9247dc00fde9d6cd91e4b230083fec3238fedbcba1f9ab3d",
									"id": 1392,
									"name": "TokenDowngraded",
									"nameLocation": "15310:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15351:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "15335:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15335:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15376:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "15368:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15368:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15325:63:8"
									},
									"src": "15304:85:8"
								},
								{
									"documentation": {
										"id": 1393,
										"nodeType": "StructuredDocumentation",
										"src": "15578:277:8",
										"text": " @dev Perform ERC20 approve by host contract.\n @param account The account owner to be approved.\n @param spender The spender of account owner's funds.\n @param amount Number of tokens to be approved.\n @custom:modifiers \n  - onlyHost"
									},
									"functionSelector": "62aa5287",
									"id": 1402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operationApprove",
									"nameLocation": "15869:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15903:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "15895:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15895:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15928:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "15920:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15920:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15953:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "15945:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15945:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15885:80:8"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15974:0:8"
									},
									"scope": 1431,
									"src": "15860:115:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "15981:344:8",
										"text": " @dev Perform ERC20 transfer from by host contract.\n @param account The account to spend sender's funds.\n @param spender  The account where the funds is sent from.\n @param recipient The recipient of thefunds.\n @param amount Number of tokens to be transferred.\n @custom:modifiers \n  - onlyHost"
									},
									"functionSelector": "16d055d6",
									"id": 1414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operationTransferFrom",
									"nameLocation": "16339:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "16378:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "16370:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16370:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16403:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "16395:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16395:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "16428:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "16420:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16420:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16455:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "16447:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16447:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16360:107:8"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16476:0:8"
									},
									"scope": 1431,
									"src": "16330:147:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1415,
										"nodeType": "StructuredDocumentation",
										"src": "16483:233:8",
										"text": " @dev Upgrade ERC20 to SuperToken by host contract.\n @param account The account to be changed.\n @param amount Number of tokens to be upgraded (in 18 decimals)\n @custom:modifiers \n  - onlyHost"
									},
									"functionSelector": "ca789464",
									"id": 1422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operationUpgrade",
									"nameLocation": "16730:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "16755:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "16747:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16747:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16772:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "16764:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16764:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16746:33:8"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16788:0:8"
									},
									"scope": 1431,
									"src": "16721:68:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1423,
										"nodeType": "StructuredDocumentation",
										"src": "16795:237:8",
										"text": " @dev Downgrade ERC20 to SuperToken by host contract.\n @param account The account to be changed.\n @param amount Number of tokens to be downgraded (in 18 decimals)\n @custom:modifiers \n  - onlyHost"
									},
									"functionSelector": "245887fc",
									"id": 1430,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operationDowngrade",
									"nameLocation": "17046:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "17073:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "17065:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17065:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17090:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "17082:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17082:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17064:33:8"
									},
									"returnParameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17106:0:8"
									},
									"scope": 1431,
									"src": "17037:70:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1432,
							"src": "471:17166:8",
							"usedErrors": [
								1054, 1056, 1058, 1060, 1062, 1064, 1066, 1068,
								1070, 1072, 1074, 1076, 2217, 2219, 2221, 2223,
								2225, 2227
							]
						}
					],
					"src": "35:17603:8"
				},
				"id": 8
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
				"ast": {
					"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
					"exportedSymbols": {
						"ERC20WithTokenInfo": [2508],
						"IERC20": [242],
						"ISuperToken": [1431],
						"ISuperTokenFactory": [1559]
					},
					"id": 1560,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1433,
							"literals": ["solidity", ">=", "0.8", ".4"],
							"nodeType": "PragmaDirective",
							"src": "35:25:9"
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
							"file": "./ISuperToken.sol",
							"id": 1435,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1560,
							"sourceUnit": 1432,
							"src": "62:48:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1434,
										"name": "ISuperToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1431,
										"src": "71:11:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
							"file": "../tokens/ERC20WithTokenInfo.sol",
							"id": 1438,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1560,
							"sourceUnit": 2509,
							"src": "112:86:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1436,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 242,
										"src": "125:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1437,
										"name": "ERC20WithTokenInfo",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2508,
										"src": "137:18:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISuperTokenFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1439,
								"nodeType": "StructuredDocumentation",
								"src": "200:69:9",
								"text": " @title Super token factory interface\n @author Superfluid"
							},
							"fullyImplemented": false,
							"id": 1559,
							"linearizedBaseContracts": [1559],
							"name": "ISuperTokenFactory",
							"nameLocation": "280:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "91d67972",
									"id": 1441,
									"name": "SUPER_TOKEN_FACTORY_ALREADY_EXISTS",
									"nameLocation": "486:34:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "520:2:9"
									},
									"src": "480:43:9"
								},
								{
									"errorSelector": "872cac48",
									"id": 1443,
									"name": "SUPER_TOKEN_FACTORY_DOES_NOT_EXIST",
									"nameLocation": "548:34:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "582:2:9"
									},
									"src": "542:43:9"
								},
								{
									"errorSelector": "1b39b9b4",
									"id": 1445,
									"name": "SUPER_TOKEN_FACTORY_UNINITIALIZED",
									"nameLocation": "610:33:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "643:2:9"
									},
									"src": "604:42:9"
								},
								{
									"errorSelector": "478b8e83",
									"id": 1447,
									"name": "SUPER_TOKEN_FACTORY_ONLY_HOST",
									"nameLocation": "672:29:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "701:2:9"
									},
									"src": "666:38:9"
								},
								{
									"errorSelector": "305c9e82",
									"id": 1449,
									"name": "SUPER_TOKEN_FACTORY_ZERO_ADDRESS",
									"nameLocation": "734:32:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "766:2:9"
									},
									"src": "728:41:9"
								},
								{
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "791:60:9",
										"text": " @dev Get superfluid host contract address"
									},
									"functionSelector": "20bc4425",
									"id": 1455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getHost",
									"nameLocation": "865:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "872:2:9"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "905:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "897:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "896:14:9"
									},
									"scope": 1559,
									"src": "856:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1456,
										"nodeType": "StructuredDocumentation",
										"src": "917:32:9",
										"text": "@dev Initialize the contract"
									},
									"functionSelector": "8129fc1c",
									"id": 1459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "963:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "973:2:9"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "984:0:9"
									},
									"scope": 1559,
									"src": "954:31:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "991:77:9",
										"text": " @dev Get the current super token logic used by the factory"
									},
									"functionSelector": "9470a5b2",
									"id": 1466,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSuperTokenLogic",
									"nameLocation": "1082:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1100:2:9"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "1138:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "1126:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$1431",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 1463,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1462,
														"name": "ISuperToken",
														"nameLocations": [
															"1126:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1431,
														"src": "1126:11:9"
													},
													"referencedDeclaration": 1431,
													"src": "1126:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$1431",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1125:24:9"
									},
									"scope": 1559,
									"src": "1073:77:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISuperTokenFactory.Upgradability",
									"id": 1470,
									"members": [
										{
											"id": 1467,
											"name": "NON_UPGRADABLE",
											"nameLocation": "1314:14:9",
											"nodeType": "EnumValue",
											"src": "1314:14:9"
										},
										{
											"id": 1468,
											"name": "SEMI_UPGRADABLE",
											"nameLocation": "1408:15:9",
											"nodeType": "EnumValue",
											"src": "1408:15:9"
										},
										{
											"id": 1469,
											"name": "FULL_UPGRADABLE",
											"nameLocation": "1487:15:9",
											"nodeType": "EnumValue",
											"src": "1487:15:9"
										}
									],
									"name": "Upgradability",
									"nameLocation": "1209:13:9",
									"nodeType": "EnumDefinition",
									"src": "1204:304:9"
								},
								{
									"documentation": {
										"id": 1471,
										"nodeType": "StructuredDocumentation",
										"src": "1514:398:9",
										"text": " @notice Create new super token wrapper for the underlying ERC20 token\n @param underlyingToken Underlying ERC20 token\n @param underlyingDecimals Underlying token decimals\n @param upgradability Upgradability mode\n @param name Super token name\n @param symbol Super token symbol\n @return superToken The deployed and initialized wrapper super token"
									},
									"functionSelector": "a6d0c534",
									"id": 1489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createERC20Wrapper",
									"nameLocation": "1926:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "underlyingToken",
												"nameLocation": "1961:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "1954:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$242",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1473,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1472,
														"name": "IERC20",
														"nameLocations": [
															"1954:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 242,
														"src": "1954:6:9"
													},
													"referencedDeclaration": 242,
													"src": "1954:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$242",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "underlyingDecimals",
												"nameLocation": "1992:18:9",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "1986:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1475,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1986:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "upgradability",
												"nameLocation": "2034:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "2020:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Upgradability_$1470",
													"typeString": "enum ISuperTokenFactory.Upgradability"
												},
												"typeName": {
													"id": 1478,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1477,
														"name": "Upgradability",
														"nameLocations": [
															"2020:13:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1470,
														"src": "2020:13:9"
													},
													"referencedDeclaration": 1470,
													"src": "2020:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Upgradability_$1470",
														"typeString": "enum ISuperTokenFactory.Upgradability"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2073:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "2057:20:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1480,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2057:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "2103:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "2087:22:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1482,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2087:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:171:9"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "2162:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "2150:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$1431",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 1486,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1485,
														"name": "ISuperToken",
														"nameLocations": [
															"2150:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1431,
														"src": "2150:11:9"
													},
													"referencedDeclaration": 1431,
													"src": "2150:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$1431",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2149:24:9"
									},
									"scope": 1559,
									"src": "1917:257:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1490,
										"nodeType": "StructuredDocumentation",
										"src": "2180:433:9",
										"text": " @notice Create new super token wrapper for the underlying ERC20 token with extra token info\n @param underlyingToken Underlying ERC20 token\n @param upgradability Upgradability mode\n @param name Super token name\n @param symbol Super token symbol\n @return superToken The deployed and initialized wrapper super token\n NOTE:\n - It assumes token provide the .decimals() function"
									},
									"functionSelector": "431f1481",
									"id": 1506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createERC20Wrapper",
									"nameLocation": "2627:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "underlyingToken",
												"nameLocation": "2674:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "2655:34:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20WithTokenInfo_$2508",
													"typeString": "contract ERC20WithTokenInfo"
												},
												"typeName": {
													"id": 1492,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1491,
														"name": "ERC20WithTokenInfo",
														"nameLocations": [
															"2655:18:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2508,
														"src": "2655:18:9"
													},
													"referencedDeclaration": 2508,
													"src": "2655:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20WithTokenInfo_$2508",
														"typeString": "contract ERC20WithTokenInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "upgradability",
												"nameLocation": "2713:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "2699:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Upgradability_$1470",
													"typeString": "enum ISuperTokenFactory.Upgradability"
												},
												"typeName": {
													"id": 1495,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1494,
														"name": "Upgradability",
														"nameLocations": [
															"2699:13:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1470,
														"src": "2699:13:9"
													},
													"referencedDeclaration": 1470,
													"src": "2699:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Upgradability_$1470",
														"typeString": "enum ISuperTokenFactory.Upgradability"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2752:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "2736:20:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1497,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2736:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "2782:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "2766:22:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1499,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2766:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:149:9"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "2841:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "2829:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$1431",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 1503,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1502,
														"name": "ISuperToken",
														"nameLocations": [
															"2829:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1431,
														"src": "2829:11:9"
													},
													"referencedDeclaration": 1431,
													"src": "2829:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$1431",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2828:24:9"
									},
									"scope": 1559,
									"src": "2618:235:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1507,
										"nodeType": "StructuredDocumentation",
										"src": "2859:318:9",
										"text": " @notice Creates a wrapper super token AND sets it in the canonical list OR reverts if it already exists\n @dev salt for create2 is the keccak256 hash of abi.encode(address(_underlyingToken))\n @param _underlyingToken Underlying ERC20 token\n @return ISuperToken the created supertoken"
									},
									"functionSelector": "151188dc",
									"id": 1516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createCanonicalERC20Wrapper",
									"nameLocation": "3191:27:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "_underlyingToken",
												"nameLocation": "3238:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "3219:35:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20WithTokenInfo_$2508",
													"typeString": "contract ERC20WithTokenInfo"
												},
												"typeName": {
													"id": 1509,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1508,
														"name": "ERC20WithTokenInfo",
														"nameLocations": [
															"3219:18:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2508,
														"src": "3219:18:9"
													},
													"referencedDeclaration": 2508,
													"src": "3219:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20WithTokenInfo_$2508",
														"typeString": "contract ERC20WithTokenInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:37:9"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "3290:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$1431",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 1513,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1512,
														"name": "ISuperToken",
														"nameLocations": [
															"3290:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1431,
														"src": "3290:11:9"
													},
													"referencedDeclaration": 1431,
													"src": "3290:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$1431",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3289:13:9"
									},
									"scope": 1559,
									"src": "3182:121:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1517,
										"nodeType": "StructuredDocumentation",
										"src": "3309:502:9",
										"text": " @notice Computes/Retrieves wrapper super token address given the underlying token address\n @dev We return from our canonical list if it already exists, otherwise we compute it\n @dev note that this function only computes addresses for SEMI_UPGRADABLE SuperTokens\n @param _underlyingToken Underlying ERC20 token address\n @return superTokenAddress Super token address\n @return isDeployed whether the super token is deployed AND set in the canonical mapping"
									},
									"functionSelector": "bab74c89",
									"id": 1526,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "computeCanonicalERC20WrapperAddress",
									"nameLocation": "3825:35:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "_underlyingToken",
												"nameLocation": "3869:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "3861:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3861:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3860:26:9"
									},
									"returnParameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "superTokenAddress",
												"nameLocation": "3942:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "3934:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3934:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "isDeployed",
												"nameLocation": "3966:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "3961:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1523,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3961:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3933:44:9"
									},
									"scope": 1559,
									"src": "3816:162:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "3984:314:9",
										"text": " @notice Gets the canonical ERC20 wrapper super token address given the underlying token address\n @dev We return the address if it exists and the zero address otherwise\n @param _underlyingTokenAddress Underlying ERC20 token address\n @return superTokenAddress Super token address"
									},
									"functionSelector": "eff0a89d",
									"id": 1534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCanonicalERC20Wrapper",
									"nameLocation": "4312:24:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "_underlyingTokenAddress",
												"nameLocation": "4345:23:9",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "4337:31:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4337:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4336:33:9"
									},
									"returnParameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "superTokenAddress",
												"nameLocation": "4425:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "4417:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4417:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4416:27:9"
									},
									"scope": 1559,
									"src": "4303:141:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1535,
										"nodeType": "StructuredDocumentation",
										"src": "4450:131:9",
										"text": " @dev Creates a new custom super token\n @param customSuperTokenProxy address of the custom supertoken proxy"
									},
									"functionSelector": "d412d344",
									"id": 1540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initializeCustomSuperToken",
									"nameLocation": "4595:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "customSuperTokenProxy",
												"nameLocation": "4639:21:9",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "4631:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4621:45:9"
									},
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4683:0:9"
									},
									"scope": 1559,
									"src": "4586:98:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1541,
										"nodeType": "StructuredDocumentation",
										"src": "4690:103:9",
										"text": " @dev Super token logic created event\n @param tokenLogic Token logic address"
									},
									"eventSelector": "c13fb19d60857980e565bf5dae406b8802d3c1cec50c6156b30b12b874029783",
									"id": 1546,
									"name": "SuperTokenLogicCreated",
									"nameLocation": "4804:22:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenLogic",
												"nameLocation": "4847:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "4827:30:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$1431",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 1543,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1542,
														"name": "ISuperToken",
														"nameLocations": [
															"4827:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1431,
														"src": "4827:11:9"
													},
													"referencedDeclaration": 1431,
													"src": "4827:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$1431",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:32:9"
									},
									"src": "4798:61:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "4865:106:9",
										"text": " @dev Super token created event\n @param token Newly created super token address"
									},
									"eventSelector": "b52c6d9d122e8c07769b96d7bb14e66db58ee03fdebaaa2f92547e9c7ef0e65f",
									"id": 1552,
									"name": "SuperTokenCreated",
									"nameLocation": "4982:17:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5020:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "5000:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$1431",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 1549,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1548,
														"name": "ISuperToken",
														"nameLocations": [
															"5000:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1431,
														"src": "5000:11:9"
													},
													"referencedDeclaration": 1431,
													"src": "5000:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$1431",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4999:27:9"
									},
									"src": "4976:51:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1553,
										"nodeType": "StructuredDocumentation",
										"src": "5033:120:9",
										"text": " @dev Custom super token created event\n @param token Newly created custom super token address"
									},
									"eventSelector": "437790724a6e97b75d23117f28cdd4b1beeafc34f7a0911ef256e9334f4369a5",
									"id": 1558,
									"name": "CustomSuperTokenCreated",
									"nameLocation": "5164:23:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5208:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "5188:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$1431",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 1555,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1554,
														"name": "ISuperToken",
														"nameLocations": [
															"5188:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1431,
														"src": "5188:11:9"
													},
													"referencedDeclaration": 1431,
													"src": "5188:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$1431",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5187:27:9"
									},
									"src": "5158:57:9"
								}
							],
							"scope": 1560,
							"src": "270:4948:9",
							"usedErrors": [1441, 1443, 1445, 1447, 1449]
						}
					],
					"src": "35:5184:9"
				},
				"id": 9
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
				"ast": {
					"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
					"exportedSymbols": {
						"BatchOperation": [787],
						"ContextDefinitions": [666],
						"FlowOperatorDefinitions": [753],
						"IERC20": [242],
						"IERC777": [405],
						"ISuperAgreement": [917],
						"ISuperApp": [1031],
						"ISuperToken": [1431],
						"ISuperTokenFactory": [1559],
						"ISuperfluid": [2081],
						"ISuperfluidGovernance": [2210],
						"ISuperfluidToken": [2496],
						"SuperAppDefinitions": [590],
						"SuperfluidGovernanceConfigs": [888],
						"TokenInfo": [2530]
					},
					"id": 2082,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1561,
							"literals": ["solidity", ">=", "0.8", ".4"],
							"nodeType": "PragmaDirective",
							"src": "35:25:10"
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
							"file": "./ISuperfluidGovernance.sol",
							"id": 1563,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2082,
							"sourceUnit": 2211,
							"src": "62:68:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1562,
										"name": "ISuperfluidGovernance",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2210,
										"src": "71:21:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
							"file": "./ISuperfluidToken.sol",
							"id": 1565,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2082,
							"sourceUnit": 2497,
							"src": "131:58:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1564,
										"name": "ISuperfluidToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2496,
										"src": "140:16:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
							"file": "./ISuperToken.sol",
							"id": 1567,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2082,
							"sourceUnit": 1432,
							"src": "190:48:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1566,
										"name": "ISuperToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1431,
										"src": "199:11:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
							"file": "./ISuperTokenFactory.sol",
							"id": 1569,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2082,
							"sourceUnit": 1560,
							"src": "239:62:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1568,
										"name": "ISuperTokenFactory",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1559,
										"src": "248:18:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
							"file": "./ISuperAgreement.sol",
							"id": 1571,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2082,
							"sourceUnit": 918,
							"src": "302:56:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1570,
										"name": "ISuperAgreement",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 917,
										"src": "311:15:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
							"file": "./ISuperApp.sol",
							"id": 1573,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2082,
							"sourceUnit": 1032,
							"src": "359:44:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1572,
										"name": "ISuperApp",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1031,
										"src": "368:9:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
							"file": "./Definitions.sol",
							"id": 1579,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2082,
							"sourceUnit": 889,
							"src": "404:166:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1574,
										"name": "BatchOperation",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 787,
										"src": "417:14:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1575,
										"name": "ContextDefinitions",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 666,
										"src": "437:18:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1576,
										"name": "FlowOperatorDefinitions",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 753,
										"src": "461:23:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1577,
										"name": "SuperAppDefinitions",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 590,
										"src": "490:19:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1578,
										"name": "SuperfluidGovernanceConfigs",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 888,
										"src": "515:27:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
							"file": "../tokens/TokenInfo.sol",
							"id": 1581,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2082,
							"sourceUnit": 2531,
							"src": "571:52:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1580,
										"name": "TokenInfo",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2530,
										"src": "580:9:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1583,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2082,
							"sourceUnit": 243,
							"src": "624:72:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1582,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 242,
										"src": "633:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
							"file": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
							"id": 1585,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2082,
							"sourceUnit": 406,
							"src": "697:75:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1584,
										"name": "IERC777",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 405,
										"src": "706:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISuperfluid",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1586,
								"nodeType": "StructuredDocumentation",
								"src": "774:345:10",
								"text": " @title Host interface\n @author Superfluid\n @notice This is the central contract of the system where super agreement, super app\n and super token features are connected.\n The Superfluid host contract is also the entry point for the protocol users,\n where batch call and meta transaction are provided for UX improvements."
							},
							"fullyImplemented": false,
							"id": 2081,
							"linearizedBaseContracts": [2081],
							"name": "ISuperfluid",
							"nameLocation": "1130:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "ef4295f6",
									"id": 1588,
									"name": "HOST_AGREEMENT_CALLBACK_IS_NOT_ACTION",
									"nameLocation": "1361:37:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1398:2:10"
									},
									"src": "1355:46:10"
								},
								{
									"errorSelector": "474e7641",
									"id": 1590,
									"name": "HOST_CANNOT_DOWNGRADE_TO_NON_UPGRADEABLE",
									"nameLocation": "1439:40:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1479:2:10"
									},
									"src": "1433:49:10"
								},
								{
									"errorSelector": "0cd0ebc2",
									"id": 1592,
									"name": "HOST_CALL_AGREEMENT_WITH_CTX_FROM_WRONG_ADDRESS",
									"nameLocation": "1517:47:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1564:2:10"
									},
									"src": "1511:56:10"
								},
								{
									"errorSelector": "473f7bd4",
									"id": 1594,
									"name": "HOST_CALL_APP_ACTION_WITH_CTX_FROM_WRONG_ADDRESS",
									"nameLocation": "1595:48:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1643:2:10"
									},
									"src": "1589:57:10"
								},
								{
									"errorSelector": "f4c802a4",
									"id": 1596,
									"name": "HOST_INVALID_CONFIG_WORD",
									"nameLocation": "1673:24:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1697:2:10"
									},
									"src": "1667:33:10"
								},
								{
									"errorSelector": "7c281a78",
									"id": 1598,
									"name": "HOST_MAX_256_AGREEMENTS",
									"nameLocation": "1751:23:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1774:2:10"
									},
									"src": "1745:32:10"
								},
								{
									"errorSelector": "14f72c9f",
									"id": 1600,
									"name": "HOST_NON_UPGRADEABLE",
									"nameLocation": "1829:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1849:2:10"
									},
									"src": "1823:29:10"
								},
								{
									"errorSelector": "67e9985b",
									"id": 1602,
									"name": "HOST_NON_ZERO_LENGTH_PLACEHOLDER_CTX",
									"nameLocation": "1907:36:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1943:2:10"
									},
									"src": "1901:45:10"
								},
								{
									"errorSelector": "c5d22a4e",
									"id": 1604,
									"name": "HOST_ONLY_GOVERNANCE",
									"nameLocation": "1985:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2005:2:10"
									},
									"src": "1979:29:10"
								},
								{
									"errorSelector": "b4770115",
									"id": 1606,
									"name": "HOST_UNKNOWN_BATCH_CALL_OPERATION_TYPE",
									"nameLocation": "2063:38:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2101:2:10"
									},
									"src": "2057:47:10"
								},
								{
									"errorSelector": "dc9ddba8",
									"id": 1608,
									"name": "HOST_AGREEMENT_ALREADY_REGISTERED",
									"nameLocation": "2141:33:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2174:2:10"
									},
									"src": "2135:42:10"
								},
								{
									"errorSelector": "1c9e9bea",
									"id": 1610,
									"name": "HOST_AGREEMENT_IS_NOT_REGISTERED",
									"nameLocation": "2219:32:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2251:2:10"
									},
									"src": "2213:41:10"
								},
								{
									"errorSelector": "d4f6b30c",
									"id": 1612,
									"name": "HOST_MUST_BE_CONTRACT",
									"nameLocation": "2297:21:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2318:2:10"
									},
									"src": "2291:30:10"
								},
								{
									"errorSelector": "619c5359",
									"id": 1614,
									"name": "HOST_ONLY_LISTED_AGREEMENT",
									"nameLocation": "2375:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2401:2:10"
									},
									"src": "2369:35:10"
								},
								{
									"errorSelector": "a85ba64f",
									"id": 1618,
									"name": "APP_RULE",
									"nameLocation": "2546:8:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "_code",
												"nameLocation": "2563:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "2555:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2555:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2554:15:10"
									},
									"src": "2540:30:10"
								},
								{
									"errorSelector": "19ab84d1",
									"id": 1620,
									"name": "HOST_INVALID_OR_EXPIRED_SUPER_APP_REGISTRATION_KEY",
									"nameLocation": "2625:50:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2675:2:10"
									},
									"src": "2619:59:10"
								},
								{
									"errorSelector": "163cbe43",
									"id": 1622,
									"name": "HOST_NOT_A_SUPER_APP",
									"nameLocation": "2703:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2723:2:10"
									},
									"src": "2697:29:10"
								},
								{
									"errorSelector": "5b93ebf0",
									"id": 1624,
									"name": "HOST_NO_APP_REGISTRATION_PERMISSIONS",
									"nameLocation": "2781:36:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2817:2:10"
									},
									"src": "2775:45:10"
								},
								{
									"errorSelector": "96aa315e",
									"id": 1626,
									"name": "HOST_RECEIVER_IS_NOT_SUPER_APP",
									"nameLocation": "2859:30:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2889:2:10"
									},
									"src": "2853:39:10"
								},
								{
									"errorSelector": "bacfdc40",
									"id": 1628,
									"name": "HOST_SENDER_IS_NOT_SUPER_APP",
									"nameLocation": "2937:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2965:2:10"
									},
									"src": "2931:37:10"
								},
								{
									"errorSelector": "44725270",
									"id": 1630,
									"name": "HOST_SOURCE_APP_NEEDS_HIGHER_APP_LEVEL",
									"nameLocation": "3015:38:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3053:2:10"
									},
									"src": "3009:47:10"
								},
								{
									"errorSelector": "02384b64",
									"id": 1632,
									"name": "HOST_SUPER_APP_IS_JAILED",
									"nameLocation": "3093:24:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3117:2:10"
									},
									"src": "3087:33:10"
								},
								{
									"errorSelector": "01b0a935",
									"id": 1634,
									"name": "HOST_SUPER_APP_ALREADY_REGISTERED",
									"nameLocation": "3171:33:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3204:2:10"
									},
									"src": "3165:42:10"
								},
								{
									"errorSelector": "289533c5",
									"id": 1636,
									"name": "HOST_UNAUTHORIZED_SUPER_APP_FACTORY",
									"nameLocation": "3249:35:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3284:2:10"
									},
									"src": "3243:44:10"
								},
								{
									"functionSelector": "bbe4fd50",
									"id": 1641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNow",
									"nameLocation": "3844:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3850:2:10"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "3876:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3876:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3875:9:10"
									},
									"scope": 2081,
									"src": "3835:50:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1642,
										"nodeType": "StructuredDocumentation",
										"src": "4070:81:10",
										"text": " @dev Get the current governance address of the Superfluid host"
									},
									"functionSelector": "289b3c0d",
									"id": 1648,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getGovernance",
									"nameLocation": "4165:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4178:2:10"
									},
									"returnParameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "governance",
												"nameLocation": "4225:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "4203:32:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidGovernance_$2210",
													"typeString": "contract ISuperfluidGovernance"
												},
												"typeName": {
													"id": 1645,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1644,
														"name": "ISuperfluidGovernance",
														"nameLocations": [
															"4203:21:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2210,
														"src": "4203:21:10"
													},
													"referencedDeclaration": 2210,
													"src": "4203:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidGovernance_$2210",
														"typeString": "contract ISuperfluidGovernance"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4202:34:10"
									},
									"scope": 2081,
									"src": "4156:81:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1649,
										"nodeType": "StructuredDocumentation",
										"src": "4243:69:10",
										"text": " @dev Replace the current governance with a new one"
									},
									"functionSelector": "7283100c",
									"id": 1655,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "replaceGovernance",
									"nameLocation": "4326:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "newGov",
												"nameLocation": "4366:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "4344:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidGovernance_$2210",
													"typeString": "contract ISuperfluidGovernance"
												},
												"typeName": {
													"id": 1651,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1650,
														"name": "ISuperfluidGovernance",
														"nameLocations": [
															"4344:21:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2210,
														"src": "4344:21:10"
													},
													"referencedDeclaration": 2210,
													"src": "4344:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidGovernance_$2210",
														"typeString": "contract ISuperfluidGovernance"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4343:30:10"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4382:0:10"
									},
									"scope": 2081,
									"src": "4317:66:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1656,
										"nodeType": "StructuredDocumentation",
										"src": "4388:169:10",
										"text": " @dev Governance replaced event\n @param oldGov Address of the old governance contract\n @param newGov Address of the new governance contract"
									},
									"eventSelector": "13abda02e63c790d0e2818b251282cfe5cbe0a8abd69c54bf5d2260c0907bd2e",
									"id": 1664,
									"name": "GovernanceReplaced",
									"nameLocation": "4568:18:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldGov",
												"nameLocation": "4609:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "4587:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidGovernance_$2210",
													"typeString": "contract ISuperfluidGovernance"
												},
												"typeName": {
													"id": 1658,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1657,
														"name": "ISuperfluidGovernance",
														"nameLocations": [
															"4587:21:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2210,
														"src": "4587:21:10"
													},
													"referencedDeclaration": 2210,
													"src": "4587:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidGovernance_$2210",
														"typeString": "contract ISuperfluidGovernance"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1662,
												"indexed": false,
												"mutability": "mutable",
												"name": "newGov",
												"nameLocation": "4639:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "4617:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidGovernance_$2210",
													"typeString": "contract ISuperfluidGovernance"
												},
												"typeName": {
													"id": 1661,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1660,
														"name": "ISuperfluidGovernance",
														"nameLocations": [
															"4617:21:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2210,
														"src": "4617:21:10"
													},
													"referencedDeclaration": 2210,
													"src": "4617:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidGovernance_$2210",
														"typeString": "contract ISuperfluidGovernance"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:60:10"
									},
									"src": "4562:85:10"
								},
								{
									"documentation": {
										"id": 1665,
										"nodeType": "StructuredDocumentation",
										"src": "4844:188:10",
										"text": " @dev Register a new agreement class to the system\n @param agreementClassLogic Initial agreement class code\n @custom:modifiers \n - onlyGovernance"
									},
									"functionSelector": "15a024e1",
									"id": 1671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerAgreementClass",
									"nameLocation": "5046:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "agreementClassLogic",
												"nameLocation": "5085:19:10",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "5069:35:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperAgreement_$917",
													"typeString": "contract ISuperAgreement"
												},
												"typeName": {
													"id": 1667,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1666,
														"name": "ISuperAgreement",
														"nameLocations": [
															"5069:15:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 917,
														"src": "5069:15:10"
													},
													"referencedDeclaration": 917,
													"src": "5069:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperAgreement_$917",
														"typeString": "contract ISuperAgreement"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5068:37:10"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5114:0:10"
									},
									"scope": 2081,
									"src": "5037:78:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1672,
										"nodeType": "StructuredDocumentation",
										"src": "5120:280:10",
										"text": " @notice Agreement class registered event\n @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"\n @param agreementType The agreement type registered\n @param code Address of the new agreement"
									},
									"eventSelector": "878135063a6cfb3bc333e534b1fdc83f4f12221cad6705c31c0567048a8bd3d1",
									"id": 1678,
									"name": "AgreementClassRegistered",
									"nameLocation": "5411:24:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"indexed": false,
												"mutability": "mutable",
												"name": "agreementType",
												"nameLocation": "5444:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "5436:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1673,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"indexed": false,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "5467:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "5459:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5459:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5435:37:10"
									},
									"src": "5405:68:10"
								},
								{
									"documentation": {
										"id": 1679,
										"nodeType": "StructuredDocumentation",
										"src": "5479:176:10",
										"text": " @dev Update code of an agreement class\n @param agreementClassLogic New code for the agreement class\n @custom:modifiers \n  - onlyGovernance"
									},
									"functionSelector": "06cecba8",
									"id": 1685,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateAgreementClass",
									"nameLocation": "5669:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "agreementClassLogic",
												"nameLocation": "5706:19:10",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "5690:35:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperAgreement_$917",
													"typeString": "contract ISuperAgreement"
												},
												"typeName": {
													"id": 1681,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1680,
														"name": "ISuperAgreement",
														"nameLocations": [
															"5690:15:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 917,
														"src": "5690:15:10"
													},
													"referencedDeclaration": 917,
													"src": "5690:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperAgreement_$917",
														"typeString": "contract ISuperAgreement"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5689:37:10"
									},
									"returnParameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5735:0:10"
									},
									"scope": 2081,
									"src": "5660:76:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "5741:274:10",
										"text": " @notice Agreement class updated event\n @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"\n @param agreementType The agreement type updated\n @param code Address of the new agreement"
									},
									"eventSelector": "9279aa773f2b588996032d8de89911555039f28b13a11a7c17074330bc082d9a",
									"id": 1692,
									"name": "AgreementClassUpdated",
									"nameLocation": "6026:21:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"indexed": false,
												"mutability": "mutable",
												"name": "agreementType",
												"nameLocation": "6056:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "6048:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1687,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6048:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"indexed": false,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "6079:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "6071:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6071:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6047:37:10"
									},
									"src": "6020:65:10"
								},
								{
									"documentation": {
										"id": 1693,
										"nodeType": "StructuredDocumentation",
										"src": "6091:181:10",
										"text": " @notice Check if the agreement type is whitelisted\n @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\""
									},
									"functionSelector": "e8dccb7d",
									"id": 1700,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAgreementTypeListed",
									"nameLocation": "6286:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "agreementType",
												"nameLocation": "6316:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "6308:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1694,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6308:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6307:23:10"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "yes",
												"nameLocation": "6358:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "6353:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1697,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6353:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6352:10:10"
									},
									"scope": 2081,
									"src": "6277:86:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "6369:65:10",
										"text": " @dev Check if the agreement class is whitelisted"
									},
									"functionSelector": "8ca48484",
									"id": 1709,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAgreementClassListed",
									"nameLocation": "6448:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "6487:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "6471:30:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperAgreement_$917",
													"typeString": "contract ISuperAgreement"
												},
												"typeName": {
													"id": 1703,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1702,
														"name": "ISuperAgreement",
														"nameLocations": [
															"6471:15:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 917,
														"src": "6471:15:10"
													},
													"referencedDeclaration": 917,
													"src": "6471:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperAgreement_$917",
														"typeString": "contract ISuperAgreement"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6470:32:10"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "yes",
												"nameLocation": "6530:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "6525:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1706,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6525:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6524:10:10"
									},
									"scope": 2081,
									"src": "6439:96:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "6541:158:10",
										"text": " @notice Get agreement class\n @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\""
									},
									"functionSelector": "b6d200de",
									"id": 1718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAgreementClass",
									"nameLocation": "6713:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "agreementType",
												"nameLocation": "6739:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "6731:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1711,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6731:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6730:23:10"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "6792:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "6776:30:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperAgreement_$917",
													"typeString": "contract ISuperAgreement"
												},
												"typeName": {
													"id": 1715,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1714,
														"name": "ISuperAgreement",
														"nameLocations": [
															"6776:15:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 917,
														"src": "6776:15:10"
													},
													"referencedDeclaration": 917,
													"src": "6776:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperAgreement_$917",
														"typeString": "contract ISuperAgreement"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:32:10"
									},
									"scope": 2081,
									"src": "6704:104:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1719,
										"nodeType": "StructuredDocumentation",
										"src": "6814:113:10",
										"text": " @dev Map list of the agreement classes using a bitmap\n @param bitmap Agreement class bitmap"
									},
									"functionSelector": "c56a069d",
									"id": 1728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mapAgreementClasses",
									"nameLocation": "6941:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "bitmap",
												"nameLocation": "6969:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "6961:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6961:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6960:16:10"
									},
									"returnParameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "agreementClasses",
												"nameLocation": "7041:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "7016:41:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_ISuperAgreement_$917_$dyn_memory_ptr",
													"typeString": "contract ISuperAgreement[]"
												},
												"typeName": {
													"baseType": {
														"id": 1724,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1723,
															"name": "ISuperAgreement",
															"nameLocations": [
																"7016:15:10"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 917,
															"src": "7016:15:10"
														},
														"referencedDeclaration": 917,
														"src": "7016:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISuperAgreement_$917",
															"typeString": "contract ISuperAgreement"
														}
													},
													"id": 1725,
													"nodeType": "ArrayTypeName",
													"src": "7016:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_ISuperAgreement_$917_$dyn_storage_ptr",
														"typeString": "contract ISuperAgreement[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7015:43:10"
									},
									"scope": 2081,
									"src": "6932:127:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1729,
										"nodeType": "StructuredDocumentation",
										"src": "7065:236:10",
										"text": " @notice Create a new bitmask by adding a agreement class to it\n @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"\n @param bitmap Agreement class bitmap"
									},
									"functionSelector": "bced3ddc",
									"id": 1738,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addToAgreementClassesBitmap",
									"nameLocation": "7315:27:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "bitmap",
												"nameLocation": "7351:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "7343:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7343:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "agreementType",
												"nameLocation": "7367:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "7359:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1732,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7359:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7342:39:10"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "newBitmap",
												"nameLocation": "7429:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "7421:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7421:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7420:19:10"
									},
									"scope": 2081,
									"src": "7306:134:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1739,
										"nodeType": "StructuredDocumentation",
										"src": "7446:240:10",
										"text": " @notice Create a new bitmask by removing a agreement class from it\n @dev agreementType is the keccak256 hash of: \"org.superfluid-finance.agreements.<AGREEMENT_NAME>.<VERSION>\"\n @param bitmap Agreement class bitmap"
									},
									"functionSelector": "a5dbbbcd",
									"id": 1748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeFromAgreementClassesBitmap",
									"nameLocation": "7700:32:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "bitmap",
												"nameLocation": "7741:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "7733:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7733:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "agreementType",
												"nameLocation": "7757:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "7749:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1742,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7749:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7732:39:10"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "newBitmap",
												"nameLocation": "7819:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "7811:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7811:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7810:19:10"
									},
									"scope": 2081,
									"src": "7691:139:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1749,
										"nodeType": "StructuredDocumentation",
										"src": "8023:86:10",
										"text": " @dev Get the super token factory\n @return factory The factory"
									},
									"functionSelector": "731aed6e",
									"id": 1755,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSuperTokenFactory",
									"nameLocation": "8123:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8143:2:10"
									},
									"returnParameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "8188:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "8169:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperTokenFactory_$1559",
													"typeString": "contract ISuperTokenFactory"
												},
												"typeName": {
													"id": 1752,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1751,
														"name": "ISuperTokenFactory",
														"nameLocations": [
															"8169:18:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1559,
														"src": "8169:18:10"
													},
													"referencedDeclaration": 1559,
													"src": "8169:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperTokenFactory_$1559",
														"typeString": "contract ISuperTokenFactory"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8168:28:10"
									},
									"scope": 2081,
									"src": "8114:83:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1756,
										"nodeType": "StructuredDocumentation",
										"src": "8203:134:10",
										"text": " @dev Get the super token factory logic (applicable to upgradable deployment)\n @return logic The factory logic"
									},
									"functionSelector": "f2e55caf",
									"id": 1761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSuperTokenFactoryLogic",
									"nameLocation": "8351:25:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8376:2:10"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "logic",
												"nameLocation": "8410:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "8402:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8402:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8401:15:10"
									},
									"scope": 2081,
									"src": "8342:75:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "8423:93:10",
										"text": " @dev Update super token factory\n @param newFactory New factory logic"
									},
									"functionSelector": "54fbc493",
									"id": 1768,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateSuperTokenFactory",
									"nameLocation": "8530:23:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "newFactory",
												"nameLocation": "8573:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "8554:29:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperTokenFactory_$1559",
													"typeString": "contract ISuperTokenFactory"
												},
												"typeName": {
													"id": 1764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1763,
														"name": "ISuperTokenFactory",
														"nameLocations": [
															"8554:18:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1559,
														"src": "8554:18:10"
													},
													"referencedDeclaration": 1559,
													"src": "8554:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperTokenFactory_$1559",
														"typeString": "contract ISuperTokenFactory"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8553:31:10"
									},
									"returnParameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8593:0:10"
									},
									"scope": 2081,
									"src": "8521:73:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1769,
										"nodeType": "StructuredDocumentation",
										"src": "8599:108:10",
										"text": " @dev SuperToken factory updated event\n @param newFactory Address of the new factory"
									},
									"eventSelector": "ce13a9895a1719ad4493b2ac1a9bfb36070566161abab408e7ecbe586da8d499",
									"id": 1774,
									"name": "SuperTokenFactoryUpdated",
									"nameLocation": "8718:24:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFactory",
												"nameLocation": "8762:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "8743:29:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperTokenFactory_$1559",
													"typeString": "contract ISuperTokenFactory"
												},
												"typeName": {
													"id": 1771,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1770,
														"name": "ISuperTokenFactory",
														"nameLocations": [
															"8743:18:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1559,
														"src": "8743:18:10"
													},
													"referencedDeclaration": 1559,
													"src": "8743:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperTokenFactory_$1559",
														"typeString": "contract ISuperTokenFactory"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8742:31:10"
									},
									"src": "8712:62:10"
								},
								{
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "8780:147:10",
										"text": " @notice Update the super token logic to the latest\n @dev Refer to ISuperTokenFactory.Upgradability for expected behaviours"
									},
									"functionSelector": "787afde7",
									"id": 1781,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateSuperTokenLogic",
									"nameLocation": "8941:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8975:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "8963:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$1431",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 1777,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1776,
														"name": "ISuperToken",
														"nameLocations": [
															"8963:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1431,
														"src": "8963:11:10"
													},
													"referencedDeclaration": 1431,
													"src": "8963:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$1431",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8962:19:10"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8990:0:10"
									},
									"scope": 2081,
									"src": "8932:59:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1782,
										"nodeType": "StructuredDocumentation",
										"src": "8996:109:10",
										"text": " @dev SuperToken logic updated event\n @param code Address of the new SuperToken logic"
									},
									"eventSelector": "840acbd291b38534819f47f875839277e502f40e1c7bfea2c5fc2c8017442cd3",
									"id": 1789,
									"name": "SuperTokenLogicUpdated",
									"nameLocation": "9116:22:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9159:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "9139:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperToken_$1431",
													"typeString": "contract ISuperToken"
												},
												"typeName": {
													"id": 1784,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1783,
														"name": "ISuperToken",
														"nameLocations": [
															"9139:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1431,
														"src": "9139:11:10"
													},
													"referencedDeclaration": 1431,
													"src": "9139:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperToken_$1431",
														"typeString": "contract ISuperToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"indexed": false,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "9174:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "9166:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9166:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9138:41:10"
									},
									"src": "9110:70:10"
								},
								{
									"documentation": {
										"id": 1790,
										"nodeType": "StructuredDocumentation",
										"src": "9367:383:10",
										"text": " @dev Message sender (must be a contract) declares itself as a super app.\n @custom:deprecated you should use `registerAppWithKey` or `registerAppByFactory` instead,\n because app registration is currently governance permissioned on mainnets.\n @param configWord The super app manifest configuration, flags are defined in\n `SuperAppDefinitions`"
									},
									"functionSelector": "ad3915c8",
									"id": 1795,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerApp",
									"nameLocation": "9764:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "configWord",
												"nameLocation": "9784:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "9776:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9776:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9775:20:10"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9804:0:10"
									},
									"scope": 2081,
									"src": "9755:50:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1796,
										"nodeType": "StructuredDocumentation",
										"src": "9810:84:10",
										"text": " @dev App registered event\n @param app Address of jailed app"
									},
									"eventSelector": "0d540ad8f39e07d19909687352b9fa017405d93c91a6760981fbae9cf28bfef7",
									"id": 1801,
									"name": "AppRegistered",
									"nameLocation": "9905:13:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"indexed": true,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "9937:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "9919:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$1031",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 1798,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1797,
														"name": "ISuperApp",
														"nameLocations": [
															"9919:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1031,
														"src": "9919:9:10"
													},
													"referencedDeclaration": 1031,
													"src": "9919:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$1031",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9918:23:10"
									},
									"src": "9899:43:10"
								},
								{
									"documentation": {
										"id": 1802,
										"nodeType": "StructuredDocumentation",
										"src": "9948:655:10",
										"text": " @dev Message sender declares itself as a super app.\n @param configWord The super app manifest configuration, flags are defined in `SuperAppDefinitions`\n @param registrationKey The registration key issued by the governance, needed to register on a mainnet.\n @notice See https://github.com/superfluid-finance/protocol-monorepo/wiki/Super-App-White-listing-Guide\n On testnets or in dev environment, a placeholder (e.g. empty string) can be used.\n While the message sender must be the super app itself, the transaction sender (tx.origin)\n must be the deployer account the registration key was issued for."
									},
									"functionSelector": "bd1c448b",
									"id": 1809,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerAppWithKey",
									"nameLocation": "10617:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "configWord",
												"nameLocation": "10644:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "10636:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10636:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "registrationKey",
												"nameLocation": "10672:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "10656:31:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1805,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10656:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10635:53:10"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10697:0:10"
									},
									"scope": 2081,
									"src": "10608:90:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1810,
										"nodeType": "StructuredDocumentation",
										"src": "10704:400:10",
										"text": " @dev Message sender (must be a contract) declares app as a super app\n @param configWord The super app manifest configuration, flags are defined in `SuperAppDefinitions`\n @notice On mainnet deployments, only factory contracts pre-authorized by governance can use this.\n See https://github.com/superfluid-finance/protocol-monorepo/wiki/Super-App-White-listing-Guide"
									},
									"functionSelector": "f3733052",
									"id": 1818,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerAppByFactory",
									"nameLocation": "11118:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "11149:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "11139:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$1031",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 1812,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1811,
														"name": "ISuperApp",
														"nameLocations": [
															"11139:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1031,
														"src": "11139:9:10"
													},
													"referencedDeclaration": 1031,
													"src": "11139:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$1031",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "configWord",
												"nameLocation": "11162:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "11154:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11154:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11138:35:10"
									},
									"returnParameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11182:0:10"
									},
									"scope": 2081,
									"src": "11109:74:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "11189:90:10",
										"text": " @dev Query if the app is registered\n @param app Super app address"
									},
									"functionSelector": "3ca3ad4e",
									"id": 1827,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApp",
									"nameLocation": "11293:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "11309:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "11299:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$1031",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 1821,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1820,
														"name": "ISuperApp",
														"nameLocations": [
															"11299:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1031,
														"src": "11299:9:10"
													},
													"referencedDeclaration": 1031,
													"src": "11299:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$1031",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11298:15:10"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "11336:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1824,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11336:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11335:6:10"
									},
									"scope": 2081,
									"src": "11284:58:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1828,
										"nodeType": "StructuredDocumentation",
										"src": "11348:83:10",
										"text": " @dev Query app callbacklevel\n @param app Super app address"
									},
									"functionSelector": "9378fa13",
									"id": 1836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAppCallbackLevel",
									"nameLocation": "11445:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "11475:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "11465:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$1031",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 1830,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1829,
														"name": "ISuperApp",
														"nameLocations": [
															"11465:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1031,
														"src": "11465:9:10"
													},
													"referencedDeclaration": 1031,
													"src": "11465:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$1031",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11464:15:10"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "appCallbackLevel",
												"nameLocation": "11508:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "11502:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1833,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11502:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11501:24:10"
									},
									"scope": 2081,
									"src": "11436:90:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1837,
										"nodeType": "StructuredDocumentation",
										"src": "11532:93:10",
										"text": " @dev Get the manifest of the super app\n @param app Super app address"
									},
									"functionSelector": "f9f522f4",
									"id": 1849,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAppManifest",
									"nameLocation": "11639:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "11673:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "11663:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$1031",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 1839,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1838,
														"name": "ISuperApp",
														"nameLocations": [
															"11663:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1031,
														"src": "11663:9:10"
													},
													"referencedDeclaration": 1031,
													"src": "11663:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$1031",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11653:29:10"
									},
									"returnParameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "isSuperApp",
												"nameLocation": "11740:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "11735:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1842,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11735:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "isJailed",
												"nameLocation": "11769:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "11764:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1844,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11764:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "noopMask",
												"nameLocation": "11799:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "11791:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11791:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11721:96:10"
									},
									"scope": 2081,
									"src": "11630:188:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1850,
										"nodeType": "StructuredDocumentation",
										"src": "11824:92:10",
										"text": " @dev Query if the app has been jailed\n @param app Super app address"
									},
									"functionSelector": "6b4f3335",
									"id": 1858,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAppJailed",
									"nameLocation": "11930:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "11952:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "11942:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$1031",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 1852,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1851,
														"name": "ISuperApp",
														"nameLocations": [
															"11942:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1031,
														"src": "11942:9:10"
													},
													"referencedDeclaration": 1031,
													"src": "11942:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$1031",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11941:15:10"
									},
									"returnParameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "isJail",
												"nameLocation": "11985:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "11980:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11980:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11979:13:10"
									},
									"scope": 2081,
									"src": "11921:72:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1859,
										"nodeType": "StructuredDocumentation",
										"src": "11999:153:10",
										"text": " @dev Whitelist the target app for app composition for the source app (msg.sender)\n @param targetApp The target super app address"
									},
									"functionSelector": "57121e0c",
									"id": 1865,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowCompositeApp",
									"nameLocation": "12166:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "targetApp",
												"nameLocation": "12194:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "12184:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$1031",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 1861,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1860,
														"name": "ISuperApp",
														"nameLocations": [
															"12184:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1031,
														"src": "12184:9:10"
													},
													"referencedDeclaration": 1031,
													"src": "12184:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$1031",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12183:21:10"
									},
									"returnParameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12213:0:10"
									},
									"scope": 2081,
									"src": "12157:57:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1866,
										"nodeType": "StructuredDocumentation",
										"src": "12220:184:10",
										"text": " @dev Query if source app is allowed to call the target app as downstream app\n @param app Super app address\n @param targetApp The target super app address"
									},
									"functionSelector": "bb84cfa1",
									"id": 1877,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isCompositeAppAllowed",
									"nameLocation": "12418:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "12459:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "12449:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$1031",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 1868,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1867,
														"name": "ISuperApp",
														"nameLocations": [
															"12449:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1031,
														"src": "12449:9:10"
													},
													"referencedDeclaration": 1031,
													"src": "12449:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$1031",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "targetApp",
												"nameLocation": "12482:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "12472:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$1031",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 1871,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1870,
														"name": "ISuperApp",
														"nameLocations": [
															"12472:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1031,
														"src": "12472:9:10"
													},
													"referencedDeclaration": 1031,
													"src": "12472:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$1031",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12439:58:10"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "isAppAllowed",
												"nameLocation": "12542:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "12537:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1874,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12537:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12536:19:10"
									},
									"scope": 2081,
									"src": "12409:147:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1878,
										"nodeType": "StructuredDocumentation",
										"src": "12948:393:10",
										"text": " @dev (For agreements) StaticCall the app before callback\n @param  app               The super app.\n @param  callData          The call data sending to the super app.\n @param  isTermination     Is it a termination callback?\n @param  ctx               Current ctx, it will be validated.\n @return cbdata            Data returned from the callback."
									},
									"functionSelector": "74041e02",
									"id": 1892,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "callAppBeforeCallback",
									"nameLocation": "13355:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "13396:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "13386:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$1031",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 1880,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1879,
														"name": "ISuperApp",
														"nameLocations": [
															"13386:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1031,
														"src": "13386:9:10"
													},
													"referencedDeclaration": 1031,
													"src": "13386:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$1031",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "callData",
												"nameLocation": "13424:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "13409:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1882,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13409:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "isTermination",
												"nameLocation": "13447:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "13442:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1884,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13442:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "13485:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "13470:18:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1886,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13470:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13376:118:10"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "cbdata",
												"nameLocation": "13597:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "13584:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1889,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13584:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13583:21:10"
									},
									"scope": 2081,
									"src": "13346:259:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1893,
										"nodeType": "StructuredDocumentation",
										"src": "13611:393:10",
										"text": " @dev (For agreements) Call the app after callback\n @param  app               The super app.\n @param  callData          The call data sending to the super app.\n @param  isTermination     Is it a termination callback?\n @param  ctx               Current ctx, it will be validated.\n @return newCtx            The current context of the transaction."
									},
									"functionSelector": "1e6d0a84",
									"id": 1907,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "callAppAfterCallback",
									"nameLocation": "14018:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "14058:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "14048:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$1031",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 1895,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1894,
														"name": "ISuperApp",
														"nameLocations": [
															"14048:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1031,
														"src": "14048:9:10"
													},
													"referencedDeclaration": 1031,
													"src": "14048:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$1031",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "callData",
												"nameLocation": "14086:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "14071:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1897,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14071:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "isTermination",
												"nameLocation": "14109:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "14104:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1899,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14104:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "14147:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "14132:18:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1901,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14132:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14038:118:10"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "newCtx",
												"nameLocation": "14259:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "14246:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1904,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14246:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14245:21:10"
									},
									"scope": 2081,
									"src": "14009:258:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1908,
										"nodeType": "StructuredDocumentation",
										"src": "14273:408:10",
										"text": " @dev (For agreements) Create a new callback stack\n @param  ctx                     The current ctx, it will be validated.\n @param  app                     The super app.\n @param  appCreditGranted        App credit granted so far.\n @param  appCreditUsed           App credit used so far.\n @return newCtx                  The current context of the transaction."
									},
									"functionSelector": "768fabb0",
									"id": 1925,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "appCallbackPush",
									"nameLocation": "14695:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "14735:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "14720:18:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1909,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14720:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "14758:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "14748:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$1031",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 1912,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1911,
														"name": "ISuperApp",
														"nameLocations": [
															"14748:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1031,
														"src": "14748:9:10"
													},
													"referencedDeclaration": 1031,
													"src": "14748:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$1031",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "appCreditGranted",
												"nameLocation": "14779:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "14771:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14771:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "appCreditUsed",
												"nameLocation": "14812:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "14805:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1916,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "14805:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "appCreditToken",
												"nameLocation": "14852:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "14835:31:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidToken_$2496",
													"typeString": "contract ISuperfluidToken"
												},
												"typeName": {
													"id": 1919,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1918,
														"name": "ISuperfluidToken",
														"nameLocations": [
															"14835:16:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2496,
														"src": "14835:16:10"
													},
													"referencedDeclaration": 2496,
													"src": "14835:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidToken_$2496",
														"typeString": "contract ISuperfluidToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14710:162:10"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "newCtx",
												"nameLocation": "14976:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "14963:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1922,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14963:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14962:21:10"
									},
									"scope": 2081,
									"src": "14686:298:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1926,
										"nodeType": "StructuredDocumentation",
										"src": "14990:554:10",
										"text": " @dev (For agreements) Pop from the current app callback stack\n @param  ctx                     The ctx that was pushed before the callback stack.\n @param  appCreditUsedDelta      App credit used by the app.\n @return newCtx                  The current context of the transaction.\n @custom:security\n - Here we cannot do assertValidCtx(ctx), since we do not really save the stack in memory.\n - Hence there is still implicit trust that the agreement handles the callback push/pop pair correctly."
									},
									"functionSelector": "989b0c3e",
									"id": 1935,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "appCallbackPop",
									"nameLocation": "15558:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "15597:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "15582:18:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1927,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15582:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "appCreditUsedDelta",
												"nameLocation": "15617:18:10",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "15610:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1929,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "15610:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15572:69:10"
									},
									"returnParameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "newCtx",
												"nameLocation": "15714:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "15701:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1932,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15701:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15700:21:10"
									},
									"scope": 2081,
									"src": "15549:173:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "15728:288:10",
										"text": " @dev (For agreements) Use app credit.\n @param  ctx                      The current ctx, it will be validated.\n @param  appCreditUsedMore        See app credit for more details.\n @return newCtx                   The current context of the transaction."
									},
									"functionSelector": "59a29141",
									"id": 1945,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ctxUseCredit",
									"nameLocation": "16030:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "16067:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "16052:18:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1937,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16052:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "appCreditUsedMore",
												"nameLocation": "16087:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "16080:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1939,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "16080:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16042:68:10"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "newCtx",
												"nameLocation": "16214:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "16201:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1942,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16201:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:21:10"
									},
									"scope": 2081,
									"src": "16021:201:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1946,
										"nodeType": "StructuredDocumentation",
										"src": "16228:244:10",
										"text": " @dev (For agreements) Jail the app.\n @param  app                     The super app.\n @param  reason                  Jail reason code.\n @return newCtx                  The current context of the transaction."
									},
									"functionSelector": "b724211e",
									"id": 1958,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "jailApp",
									"nameLocation": "16486:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "16518:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "16503:18:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1947,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16503:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "16541:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "16531:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$1031",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 1950,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1949,
														"name": "ISuperApp",
														"nameLocations": [
															"16531:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1031,
														"src": "16531:9:10"
													},
													"referencedDeclaration": 1031,
													"src": "16531:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$1031",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "16562:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "16554:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16554:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16493:81:10"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "newCtx",
												"nameLocation": "16678:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "16665:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1955,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16665:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16664:21:10"
									},
									"scope": 2081,
									"src": "16477:209:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1959,
										"nodeType": "StructuredDocumentation",
										"src": "16692:172:10",
										"text": " @dev Jail event for the app\n @param app Address of jailed app\n @param reason Reason the app is jailed (see Definitions.sol for the full list)"
									},
									"eventSelector": "be3aa33bd245135e4e26b223d79d14ea479a47bff09f2b03c53838af1edbb14b",
									"id": 1966,
									"name": "Jail",
									"nameLocation": "16875:4:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"indexed": true,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "16898:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "16880:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$1031",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 1961,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1960,
														"name": "ISuperApp",
														"nameLocations": [
															"16880:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1031,
														"src": "16880:9:10"
													},
													"referencedDeclaration": 1031,
													"src": "16880:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$1031",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1964,
												"indexed": false,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "16911:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "16903:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16903:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16879:39:10"
									},
									"src": "16869:50:10"
								},
								{
									"documentation": {
										"id": 1967,
										"nodeType": "StructuredDocumentation",
										"src": "17480:265:10",
										"text": " @dev Call agreement function\n @param agreementClass The agreement address you are calling\n @param callData The contextual call data with placeholder ctx\n @param userData Extra user data being sent to the super app callbacks"
									},
									"functionSelector": "39255d5b",
									"id": 1979,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "callAgreement",
									"nameLocation": "17760:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "17800:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "17784:30:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperAgreement_$917",
													"typeString": "contract ISuperAgreement"
												},
												"typeName": {
													"id": 1969,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1968,
														"name": "ISuperAgreement",
														"nameLocations": [
															"17784:15:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 917,
														"src": "17784:15:10"
													},
													"referencedDeclaration": 917,
													"src": "17784:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperAgreement_$917",
														"typeString": "contract ISuperAgreement"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "callData",
												"nameLocation": "17840:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "17825:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1971,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17825:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "17874:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "17859:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1973,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17859:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17773:116:10"
									},
									"returnParameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "returnedData",
												"nameLocation": "17993:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "17980:25:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1976,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17980:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17979:27:10"
									},
									"scope": 2081,
									"src": "17751:256:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1980,
										"nodeType": "StructuredDocumentation",
										"src": "18013:268:10",
										"text": " @notice Call app action\n @dev Main use case is calling app action in a batch call via the host\n @param callData The contextual call data\n @custom:note See \"Contextless Call Proxies\" above for more about contextual call data."
									},
									"functionSelector": "1e855cf3",
									"id": 1990,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "callAppAction",
									"nameLocation": "18295:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "18328:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "18318:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$1031",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 1982,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1981,
														"name": "ISuperApp",
														"nameLocations": [
															"18318:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1031,
														"src": "18318:9:10"
													},
													"referencedDeclaration": 1031,
													"src": "18318:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$1031",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "callData",
												"nameLocation": "18356:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "18341:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1984,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18341:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18308:62:10"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "returnedData",
												"nameLocation": "18500:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "18487:25:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1987,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18487:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18486:27:10"
									},
									"scope": 2081,
									"src": "18286:228:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISuperfluid.Context",
									"id": 2014,
									"members": [
										{
											"constant": false,
											"id": 1992,
											"mutability": "mutable",
											"name": "appCallbackLevel",
											"nameLocation": "19759:16:10",
											"nodeType": "VariableDeclaration",
											"scope": 2014,
											"src": "19753:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1991,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "19753:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1994,
											"mutability": "mutable",
											"name": "callType",
											"nameLocation": "19815:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 2014,
											"src": "19809:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1993,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "19809:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1996,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "19873:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 2014,
											"src": "19865:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1995,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "19865:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1998,
											"mutability": "mutable",
											"name": "msgSender",
											"nameLocation": "19952:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 2014,
											"src": "19944:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1997,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "19944:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2000,
											"mutability": "mutable",
											"name": "agreementSelector",
											"nameLocation": "20117:17:10",
											"nodeType": "VariableDeclaration",
											"scope": 2014,
											"src": "20110:24:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes4",
												"typeString": "bytes4"
											},
											"typeName": {
												"id": 1999,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "20110:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2002,
											"mutability": "mutable",
											"name": "userData",
											"nameLocation": "20198:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 2014,
											"src": "20192:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2001,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "20192:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2004,
											"mutability": "mutable",
											"name": "appCreditGranted",
											"nameLocation": "20300:16:10",
											"nodeType": "VariableDeclaration",
											"scope": 2014,
											"src": "20292:24:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2003,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "20292:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2006,
											"mutability": "mutable",
											"name": "appCreditWantedDeprecated",
											"nameLocation": "20383:25:10",
											"nodeType": "VariableDeclaration",
											"scope": 2014,
											"src": "20375:33:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2005,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "20375:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2008,
											"mutability": "mutable",
											"name": "appCreditUsed",
											"nameLocation": "20946:13:10",
											"nodeType": "VariableDeclaration",
											"scope": 2014,
											"src": "20939:20:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 2007,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "20939:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2010,
											"mutability": "mutable",
											"name": "appAddress",
											"nameLocation": "21000:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 2014,
											"src": "20992:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2009,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "20992:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2013,
											"mutability": "mutable",
											"name": "appCreditToken",
											"nameLocation": "21074:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 2014,
											"src": "21057:31:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_ISuperfluidToken_$2496",
												"typeString": "contract ISuperfluidToken"
											},
											"typeName": {
												"id": 2012,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2011,
													"name": "ISuperfluidToken",
													"nameLocations": [
														"21057:16:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2496,
													"src": "21057:16:10"
												},
												"referencedDeclaration": 2496,
												"src": "21057:16:10",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidToken_$2496",
													"typeString": "contract ISuperfluidToken"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Context",
									"nameLocation": "19659:7:10",
									"nodeType": "StructDefinition",
									"scope": 2081,
									"src": "19652:1443:10",
									"visibility": "public"
								},
								{
									"functionSelector": "4329d293",
									"id": 2030,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "callAgreementWithContext",
									"nameLocation": "21110:24:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "21160:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "21144:30:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperAgreement_$917",
													"typeString": "contract ISuperAgreement"
												},
												"typeName": {
													"id": 2016,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2015,
														"name": "ISuperAgreement",
														"nameLocations": [
															"21144:15:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 917,
														"src": "21144:15:10"
													},
													"referencedDeclaration": 917,
													"src": "21144:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperAgreement_$917",
														"typeString": "contract ISuperAgreement"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "callData",
												"nameLocation": "21199:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "21184:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2018,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21184:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "21232:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "21217:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2020,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21217:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "21265:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "21250:18:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2022,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21250:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21134:140:10"
									},
									"returnParameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "newCtx",
												"nameLocation": "21395:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "21382:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2025,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21382:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "returnedData",
												"nameLocation": "21416:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "21403:25:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2027,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21403:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21381:48:10"
									},
									"scope": 2081,
									"src": "21101:329:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ba48b5f8",
									"id": 2042,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "callAppActionWithContext",
									"nameLocation": "21445:24:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "app",
												"nameLocation": "21489:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "21479:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperApp_$1031",
													"typeString": "contract ISuperApp"
												},
												"typeName": {
													"id": 2032,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2031,
														"name": "ISuperApp",
														"nameLocations": [
															"21479:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1031,
														"src": "21479:9:10"
													},
													"referencedDeclaration": 1031,
													"src": "21479:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperApp_$1031",
														"typeString": "contract ISuperApp"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "callData",
												"nameLocation": "21517:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "21502:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2034,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21502:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "21550:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "21535:18:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2036,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21535:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21469:90:10"
									},
									"returnParameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "newCtx",
												"nameLocation": "21667:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "21654:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2039,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21654:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21653:21:10"
									},
									"scope": 2081,
									"src": "21436:239:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3f6c923a",
									"id": 2050,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decodeCtx",
									"nameLocation": "21690:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "21713:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "21700:16:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2043,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21700:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21699:18:10"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "context",
												"nameLocation": "21772:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "21757:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Context_$2014_memory_ptr",
													"typeString": "struct ISuperfluid.Context"
												},
												"typeName": {
													"id": 2047,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2046,
														"name": "Context",
														"nameLocations": [
															"21757:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2014,
														"src": "21757:7:10"
													},
													"referencedDeclaration": 2014,
													"src": "21757:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Context_$2014_storage_ptr",
														"typeString": "struct ISuperfluid.Context"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21756:24:10"
									},
									"scope": 2081,
									"src": "21681:100:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bf428734",
									"id": 2057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isCtxValid",
									"nameLocation": "21796:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "ctx",
												"nameLocation": "21822:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "21807:18:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2051,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21807:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21806:20:10"
									},
									"returnParameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "21850:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2054,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21850:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21849:6:10"
									},
									"scope": 2081,
									"src": "21787:69:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISuperfluid.Operation",
									"id": 2064,
									"members": [
										{
											"constant": false,
											"id": 2059,
											"mutability": "mutable",
											"name": "operationType",
											"nameLocation": "22193:13:10",
											"nodeType": "VariableDeclaration",
											"scope": 2064,
											"src": "22186:20:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2058,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "22186:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2061,
											"mutability": "mutable",
											"name": "target",
											"nameLocation": "22252:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 2064,
											"src": "22244:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2060,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "22244:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2063,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "22316:4:10",
											"nodeType": "VariableDeclaration",
											"scope": 2064,
											"src": "22310:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2062,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "22310:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Operation",
									"nameLocation": "22095:9:10",
									"nodeType": "StructDefinition",
									"scope": 2081,
									"src": "22088:239:10",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2065,
										"nodeType": "StructuredDocumentation",
										"src": "22333:94:10",
										"text": " @dev Batch call function\n @param operations Array of batch operations"
									},
									"functionSelector": "6ad3ca7d",
									"id": 2072,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchCall",
									"nameLocation": "22441:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "operations",
												"nameLocation": "22472:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "22451:31:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Operation_$2064_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ISuperfluid.Operation[]"
												},
												"typeName": {
													"baseType": {
														"id": 2067,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2066,
															"name": "Operation",
															"nameLocations": [
																"22451:9:10"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2064,
															"src": "22451:9:10"
														},
														"referencedDeclaration": 2064,
														"src": "22451:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Operation_$2064_storage_ptr",
															"typeString": "struct ISuperfluid.Operation"
														}
													},
													"id": 2068,
													"nodeType": "ArrayTypeName",
													"src": "22451:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Operation_$2064_storage_$dyn_storage_ptr",
														"typeString": "struct ISuperfluid.Operation[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22450:33:10"
									},
									"returnParameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22492:0:10"
									},
									"scope": 2081,
									"src": "22432:61:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2073,
										"nodeType": "StructuredDocumentation",
										"src": "22499:128:10",
										"text": " @dev Batch call function for trusted forwarders (EIP-2771)\n @param operations Array of batch operations"
									},
									"functionSelector": "670e77e3",
									"id": 2080,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "forwardBatchCall",
									"nameLocation": "22641:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "operations",
												"nameLocation": "22679:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "22658:31:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Operation_$2064_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ISuperfluid.Operation[]"
												},
												"typeName": {
													"baseType": {
														"id": 2075,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2074,
															"name": "Operation",
															"nameLocations": [
																"22658:9:10"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2064,
															"src": "22658:9:10"
														},
														"referencedDeclaration": 2064,
														"src": "22658:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Operation_$2064_storage_ptr",
															"typeString": "struct ISuperfluid.Operation"
														}
													},
													"id": 2076,
													"nodeType": "ArrayTypeName",
													"src": "22658:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Operation_$2064_storage_$dyn_storage_ptr",
														"typeString": "struct ISuperfluid.Operation[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22657:33:10"
									},
									"returnParameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22699:0:10"
									},
									"scope": 2081,
									"src": "22632:68:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2082,
							"src": "1120:22687:10",
							"usedErrors": [
								1588, 1590, 1592, 1594, 1596, 1598, 1600, 1602,
								1604, 1606, 1608, 1610, 1612, 1614, 1618, 1620,
								1622, 1624, 1626, 1628, 1630, 1632, 1634, 1636
							]
						}
					],
					"src": "35:23773:10"
				},
				"id": 10
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
				"ast": {
					"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
					"exportedSymbols": {
						"ISuperAgreement": [917],
						"ISuperToken": [1431],
						"ISuperfluid": [2081],
						"ISuperfluidGovernance": [2210],
						"ISuperfluidToken": [2496]
					},
					"id": 2211,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2083,
							"literals": ["solidity", ">=", "0.8", ".4"],
							"nodeType": "PragmaDirective",
							"src": "35:25:11"
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
							"file": "./ISuperAgreement.sol",
							"id": 2085,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2211,
							"sourceUnit": 918,
							"src": "62:56:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2084,
										"name": "ISuperAgreement",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 917,
										"src": "71:15:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
							"file": "./ISuperToken.sol",
							"id": 2087,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2211,
							"sourceUnit": 1432,
							"src": "119:48:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2086,
										"name": "ISuperToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1431,
										"src": "128:11:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
							"file": "./ISuperfluidToken.sol",
							"id": 2089,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2211,
							"sourceUnit": 2497,
							"src": "168:59:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2088,
										"name": "ISuperfluidToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2496,
										"src": "177:16:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
							"file": "./ISuperfluid.sol",
							"id": 2091,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2211,
							"sourceUnit": 2082,
							"src": "228:48:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2090,
										"name": "ISuperfluid",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2081,
										"src": "237:11:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISuperfluidGovernance",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2092,
								"nodeType": "StructuredDocumentation",
								"src": "279:71:11",
								"text": " @title Superfluid governance interface\n @author Superfluid"
							},
							"fullyImplemented": false,
							"id": 2210,
							"linearizedBaseContracts": [2210],
							"name": "ISuperfluidGovernance",
							"nameLocation": "361:21:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "27743aa6",
									"id": 2094,
									"name": "SF_GOV_ARRAYS_NOT_SAME_LENGTH",
									"nameLocation": "574:29:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "603:2:11"
									},
									"src": "568:38:11"
								},
								{
									"errorSelector": "e171980a",
									"id": 2096,
									"name": "SF_GOV_INVALID_LIQUIDATION_OR_PATRICIAN_PERIOD",
									"nameLocation": "648:46:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "694:2:11"
									},
									"src": "642:55:11"
								},
								{
									"errorSelector": "80dddd73",
									"id": 2098,
									"name": "SF_GOV_MUST_BE_CONTRACT",
									"nameLocation": "722:23:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "745:2:11"
									},
									"src": "716:32:11"
								},
								{
									"documentation": {
										"id": 2099,
										"nodeType": "StructuredDocumentation",
										"src": "791:76:11",
										"text": " @dev Replace the current governance with a new governance"
									},
									"functionSelector": "44864b25",
									"id": 2107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "replaceGovernance",
									"nameLocation": "881:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "920:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "908:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluid_$2081",
													"typeString": "contract ISuperfluid"
												},
												"typeName": {
													"id": 2101,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2100,
														"name": "ISuperfluid",
														"nameLocations": [
															"908:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "908:11:11"
													},
													"referencedDeclaration": 2081,
													"src": "908:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluid_$2081",
														"typeString": "contract ISuperfluid"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "newGov",
												"nameLocation": "942:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "934:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:51:11"
									},
									"returnParameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "958:0:11"
									},
									"scope": 2210,
									"src": "872:87:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2108,
										"nodeType": "StructuredDocumentation",
										"src": "965:54:11",
										"text": " @dev Register a new agreement class"
									},
									"functionSelector": "cadf8f85",
									"id": 2116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerAgreementClass",
									"nameLocation": "1033:22:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "1077:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "1065:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluid_$2081",
													"typeString": "contract ISuperfluid"
												},
												"typeName": {
													"id": 2110,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2109,
														"name": "ISuperfluid",
														"nameLocations": [
															"1065:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "1065:11:11"
													},
													"referencedDeclaration": 2081,
													"src": "1065:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluid_$2081",
														"typeString": "contract ISuperfluid"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "1099:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "1091:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1055:59:11"
									},
									"returnParameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:0:11"
									},
									"scope": 2210,
									"src": "1024:100:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2117,
										"nodeType": "StructuredDocumentation",
										"src": "1130:193:11",
										"text": " @dev Update logics of the contracts\n @custom:note \n - Because they might have inter-dependencies, it is good to have one single function to update them all"
									},
									"functionSelector": "427942a4",
									"id": 2130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateContracts",
									"nameLocation": "1337:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "1374:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "1362:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluid_$2081",
													"typeString": "contract ISuperfluid"
												},
												"typeName": {
													"id": 2119,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2118,
														"name": "ISuperfluid",
														"nameLocations": [
															"1362:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "1362:11:11"
													},
													"referencedDeclaration": 2081,
													"src": "1362:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluid_$2081",
														"typeString": "contract ISuperfluid"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "hostNewLogic",
												"nameLocation": "1396:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "1388:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1388:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "agreementClassNewLogics",
												"nameLocation": "1437:23:11",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "1418:42:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2123,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1418:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2124,
													"nodeType": "ArrayTypeName",
													"src": "1418:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "superTokenFactoryNewLogic",
												"nameLocation": "1478:25:11",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "1470:33:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1470:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:157:11"
									},
									"returnParameters": {
										"id": 2129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:0:11"
									},
									"scope": 2210,
									"src": "1328:191:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2131,
										"nodeType": "StructuredDocumentation",
										"src": "1525:113:11",
										"text": " @dev Update supertoken logic contract to the latest that is managed by the super token factory"
									},
									"functionSelector": "42148deb",
									"id": 2141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchUpdateSuperTokenLogic",
									"nameLocation": "1652:26:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "1700:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "1688:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluid_$2081",
													"typeString": "contract ISuperfluid"
												},
												"typeName": {
													"id": 2133,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2132,
														"name": "ISuperfluid",
														"nameLocations": [
															"1688:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "1688:11:11"
													},
													"referencedDeclaration": 2081,
													"src": "1688:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluid_$2081",
														"typeString": "contract ISuperfluid"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "1737:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "1714:29:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_ISuperToken_$1431_$dyn_calldata_ptr",
													"typeString": "contract ISuperToken[]"
												},
												"typeName": {
													"baseType": {
														"id": 2136,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2135,
															"name": "ISuperToken",
															"nameLocations": [
																"1714:11:11"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1431,
															"src": "1714:11:11"
														},
														"referencedDeclaration": 1431,
														"src": "1714:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISuperToken_$1431",
															"typeString": "contract ISuperToken"
														}
													},
													"id": 2137,
													"nodeType": "ArrayTypeName",
													"src": "1714:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_ISuperToken_$1431_$dyn_storage_ptr",
														"typeString": "contract ISuperToken[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1678:66:11"
									},
									"returnParameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1753:0:11"
									},
									"scope": 2210,
									"src": "1643:111:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2142,
										"nodeType": "StructuredDocumentation",
										"src": "1764:58:11",
										"text": " @dev Set configuration as address value"
									},
									"functionSelector": "78707cb8",
									"id": 2155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setConfig",
									"nameLocation": "1836:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "1867:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "1855:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluid_$2081",
													"typeString": "contract ISuperfluid"
												},
												"typeName": {
													"id": 2144,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2143,
														"name": "ISuperfluid",
														"nameLocations": [
															"1855:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "1855:11:11"
													},
													"referencedDeclaration": 2081,
													"src": "1855:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluid_$2081",
														"typeString": "contract ISuperfluid"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "1898:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "1881:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidToken_$2496",
													"typeString": "contract ISuperfluidToken"
												},
												"typeName": {
													"id": 2147,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2146,
														"name": "ISuperfluidToken",
														"nameLocations": [
															"1881:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2496,
														"src": "1881:16:11"
													},
													"referencedDeclaration": 2496,
													"src": "1881:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidToken_$2496",
														"typeString": "contract ISuperfluidToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1926:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "1918:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1947:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "1939:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1845:113:11"
									},
									"returnParameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1967:0:11"
									},
									"scope": 2210,
									"src": "1827:141:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2156,
										"nodeType": "StructuredDocumentation",
										"src": "1978:58:11",
										"text": " @dev Set configuration as uint256 value"
									},
									"functionSelector": "f79a8e63",
									"id": 2169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setConfig",
									"nameLocation": "2050:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "2081:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "2069:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluid_$2081",
													"typeString": "contract ISuperfluid"
												},
												"typeName": {
													"id": 2158,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2157,
														"name": "ISuperfluid",
														"nameLocations": [
															"2069:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "2069:11:11"
													},
													"referencedDeclaration": 2081,
													"src": "2069:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluid_$2081",
														"typeString": "contract ISuperfluid"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "2112:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "2095:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidToken_$2496",
													"typeString": "contract ISuperfluidToken"
												},
												"typeName": {
													"id": 2161,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2160,
														"name": "ISuperfluidToken",
														"nameLocations": [
															"2095:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2496,
														"src": "2095:16:11"
													},
													"referencedDeclaration": 2496,
													"src": "2095:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidToken_$2496",
														"typeString": "contract ISuperfluidToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2140:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "2132:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2163,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2132:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2161:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "2153:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:113:11"
									},
									"returnParameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:0:11"
									},
									"scope": 2210,
									"src": "2041:141:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2170,
										"nodeType": "StructuredDocumentation",
										"src": "2188:43:11",
										"text": " @dev Clear configuration"
									},
									"functionSelector": "640b6cc9",
									"id": 2181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "clearConfig",
									"nameLocation": "2245:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "2278:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "2266:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluid_$2081",
													"typeString": "contract ISuperfluid"
												},
												"typeName": {
													"id": 2172,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2171,
														"name": "ISuperfluid",
														"nameLocations": [
															"2266:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "2266:11:11"
													},
													"referencedDeclaration": 2081,
													"src": "2266:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluid_$2081",
														"typeString": "contract ISuperfluid"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "2309:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "2292:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidToken_$2496",
													"typeString": "contract ISuperfluidToken"
												},
												"typeName": {
													"id": 2175,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2174,
														"name": "ISuperfluidToken",
														"nameLocations": [
															"2292:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2496,
														"src": "2292:16:11"
													},
													"referencedDeclaration": 2496,
													"src": "2292:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidToken_$2496",
														"typeString": "contract ISuperfluidToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2337:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "2329:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2177,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2329:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:90:11"
									},
									"returnParameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:0:11"
									},
									"scope": 2210,
									"src": "2236:120:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2182,
										"nodeType": "StructuredDocumentation",
										"src": "2362:58:11",
										"text": " @dev Get configuration as address value"
									},
									"functionSelector": "8369a0f1",
									"id": 2195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getConfigAsAddress",
									"nameLocation": "2434:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "2474:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "2462:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluid_$2081",
													"typeString": "contract ISuperfluid"
												},
												"typeName": {
													"id": 2184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2183,
														"name": "ISuperfluid",
														"nameLocations": [
															"2462:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "2462:11:11"
													},
													"referencedDeclaration": 2081,
													"src": "2462:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluid_$2081",
														"typeString": "contract ISuperfluid"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "2505:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "2488:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidToken_$2496",
													"typeString": "contract ISuperfluidToken"
												},
												"typeName": {
													"id": 2187,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2186,
														"name": "ISuperfluidToken",
														"nameLocations": [
															"2488:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2496,
														"src": "2488:16:11"
													},
													"referencedDeclaration": 2496,
													"src": "2488:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidToken_$2496",
														"typeString": "contract ISuperfluidToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2533:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "2525:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2189,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2452:85:11"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2569:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "2561:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2561:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2560:15:11"
									},
									"scope": 2210,
									"src": "2425:151:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2196,
										"nodeType": "StructuredDocumentation",
										"src": "2582:58:11",
										"text": " @dev Get configuration as uint256 value"
									},
									"functionSelector": "80f70cba",
									"id": 2209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getConfigAsUint256",
									"nameLocation": "2654:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "2694:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "2682:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluid_$2081",
													"typeString": "contract ISuperfluid"
												},
												"typeName": {
													"id": 2198,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2197,
														"name": "ISuperfluid",
														"nameLocations": [
															"2682:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "2682:11:11"
													},
													"referencedDeclaration": 2081,
													"src": "2682:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluid_$2081",
														"typeString": "contract ISuperfluid"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "superToken",
												"nameLocation": "2725:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "2708:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISuperfluidToken_$2496",
													"typeString": "contract ISuperfluidToken"
												},
												"typeName": {
													"id": 2201,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2200,
														"name": "ISuperfluidToken",
														"nameLocations": [
															"2708:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2496,
														"src": "2708:16:11"
													},
													"referencedDeclaration": 2496,
													"src": "2708:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISuperfluidToken_$2496",
														"typeString": "contract ISuperfluidToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2753:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "2745:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2203,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2745:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2672:85:11"
									},
									"returnParameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2789:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "2781:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2781:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2780:15:11"
									},
									"scope": 2210,
									"src": "2645:151:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2211,
							"src": "351:2448:11",
							"usedErrors": [2094, 2096, 2098]
						}
					],
					"src": "35:2765:11"
				},
				"id": 11
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
				"ast": {
					"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
					"exportedSymbols": {
						"ISuperAgreement": [917],
						"ISuperfluidToken": [2496]
					},
					"id": 2497,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2212,
							"literals": ["solidity", ">=", "0.8", ".4"],
							"nodeType": "PragmaDirective",
							"src": "35:25:12"
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
							"file": "./ISuperAgreement.sol",
							"id": 2214,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2497,
							"sourceUnit": 918,
							"src": "62:56:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2213,
										"name": "ISuperAgreement",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 917,
										"src": "71:15:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISuperfluidToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2215,
								"nodeType": "StructuredDocumentation",
								"src": "120:66:12",
								"text": " @title Superfluid token interface\n @author Superfluid"
							},
							"fullyImplemented": false,
							"id": 2496,
							"linearizedBaseContracts": [2496],
							"name": "ISuperfluidToken",
							"nameLocation": "197:16:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "f05521f6",
									"id": 2217,
									"name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS",
									"nameLocation": "401:33:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:12"
									},
									"src": "395:42:12"
								},
								{
									"errorSelector": "dae18809",
									"id": 2219,
									"name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST",
									"nameLocation": "463:33:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:2:12"
									},
									"src": "457:42:12"
								},
								{
									"errorSelector": "10ecdf44",
									"id": 2221,
									"name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE",
									"nameLocation": "525:34:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "559:2:12"
									},
									"src": "519:43:12"
								},
								{
									"errorSelector": "2f4cb941",
									"id": 2223,
									"name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE",
									"nameLocation": "587:34:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "621:2:12"
									},
									"src": "581:43:12"
								},
								{
									"errorSelector": "c9ff6644",
									"id": 2225,
									"name": "SF_TOKEN_ONLY_LISTED_AGREEMENT",
									"nameLocation": "649:30:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "679:2:12"
									},
									"src": "643:39:12"
								},
								{
									"errorSelector": "c51efddd",
									"id": 2227,
									"name": "SF_TOKEN_ONLY_HOST",
									"nameLocation": "711:18:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "729:2:12"
									},
									"src": "705:27:12"
								},
								{
									"documentation": {
										"id": 2228,
										"nodeType": "StructuredDocumentation",
										"src": "954:60:12",
										"text": " @dev Get superfluid host contract address"
									},
									"functionSelector": "20bc4425",
									"id": 2233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getHost",
									"nameLocation": "1028:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1035:2:12"
									},
									"returnParameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "host",
												"nameLocation": "1068:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "1060:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:14:12"
									},
									"scope": 2496,
									"src": "1019:55:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISuperfluidToken.LiquidationTypeData",
									"id": 2238,
									"members": [
										{
											"constant": false,
											"id": 2235,
											"mutability": "mutable",
											"name": "version",
											"nameLocation": "1507:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 2238,
											"src": "1499:15:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2234,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1499:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2237,
											"mutability": "mutable",
											"name": "liquidationType",
											"nameLocation": "1530:15:12",
											"nodeType": "VariableDeclaration",
											"scope": 2238,
											"src": "1524:21:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2236,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1524:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LiquidationTypeData",
									"nameLocation": "1469:19:12",
									"nodeType": "StructDefinition",
									"scope": 2496,
									"src": "1462:90:12",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2239,
										"nodeType": "StructuredDocumentation",
										"src": "1754:321:12",
										"text": " @dev Calculate the real balance of a user, taking in consideration all agreements of the account\n @param account for the query\n @param timestamp Time of balance\n @return availableBalance Real-time balance\n @return deposit Account deposit\n @return owedDeposit Account owed Deposit"
									},
									"functionSelector": "eb3537cc",
									"id": 2252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "realtimeBalanceOf",
									"nameLocation": "2089:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2123:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "2115:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2115:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2147:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "2139:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2106:56:12"
									},
									"returnParameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "availableBalance",
												"nameLocation": "2222:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "2215:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2245,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "deposit",
												"nameLocation": "2260:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "2252:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2252:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "owedDeposit",
												"nameLocation": "2289:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "2281:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2281:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:100:12"
									},
									"scope": 2496,
									"src": "2080:222:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2253,
										"nodeType": "StructuredDocumentation",
										"src": "2308:339:12",
										"text": " @notice Calculate the realtime balance given the current host.getNow() value\n @dev realtimeBalanceOf with timestamp equals to block timestamp\n @param account for the query\n @return availableBalance Real-time balance\n @return deposit Account deposit\n @return owedDeposit Account owed Deposit"
									},
									"functionSelector": "2ec8eec7",
									"id": 2266,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "realtimeBalanceOfNow",
									"nameLocation": "2661:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2698:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "2690:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2690:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2681:30:12"
									},
									"returnParameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "availableBalance",
												"nameLocation": "2771:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "2764:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2257,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2764:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "deposit",
												"nameLocation": "2809:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "2801:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2801:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "owedDeposit",
												"nameLocation": "2838:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "2830:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2830:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2871:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "2863:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2863:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2750:131:12"
									},
									"scope": 2496,
									"src": "2652:230:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2267,
										"nodeType": "StructuredDocumentation",
										"src": "2888:309:12",
										"text": " @notice Check if account is critical\n @dev A critical account is when availableBalance < 0\n @param account The account to check\n @param timestamp The time we'd like to check if the account is critical (should use future)\n @return isCritical Whether the account is critical"
									},
									"functionSelector": "d9d078d6",
									"id": 2276,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAccountCritical",
									"nameLocation": "3211:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3246:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "3238:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3238:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "3271:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "3263:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3263:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3228:58:12"
									},
									"returnParameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "isCritical",
												"nameLocation": "3330:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "3325:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3325:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3324:17:12"
									},
									"scope": 2496,
									"src": "3202:140:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2277,
										"nodeType": "StructuredDocumentation",
										"src": "3348:239:12",
										"text": " @notice Check if account is critical now (current host.getNow())\n @dev A critical account is when availableBalance < 0\n @param account The account to check\n @return isCritical Whether the account is critical"
									},
									"functionSelector": "79359f6f",
									"id": 2284,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAccountCriticalNow",
									"nameLocation": "3601:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3639:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "3631:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3621:31:12"
									},
									"returnParameters": {
										"id": 2283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "isCritical",
												"nameLocation": "3696:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "3691:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2281,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3691:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3690:17:12"
									},
									"scope": 2496,
									"src": "3592:116:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2285,
										"nodeType": "StructuredDocumentation",
										"src": "3714:383:12",
										"text": " @notice Check if account is solvent\n @dev An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\n @param account The account to check\n @param timestamp The time we'd like to check if the account is solvent (should use future)\n @return isSolvent True if the account is solvent, false otherwise"
									},
									"functionSelector": "b84cdd4a",
									"id": 2294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAccountSolvent",
									"nameLocation": "4111:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4145:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "4137:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "4170:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "4162:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4162:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4127:58:12"
									},
									"returnParameters": {
										"id": 2293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2292,
												"mutability": "mutable",
												"name": "isSolvent",
												"nameLocation": "4229:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "4224:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4224:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4223:16:12"
									},
									"scope": 2496,
									"src": "4102:138:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2295,
										"nodeType": "StructuredDocumentation",
										"src": "4246:289:12",
										"text": " @notice Check if account is solvent now\n @dev An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\n @param account The account to check\n @return isSolvent True if the account is solvent, false otherwise"
									},
									"functionSelector": "bb0d196e",
									"id": 2302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAccountSolventNow",
									"nameLocation": "4549:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4586:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "4578:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4578:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4568:31:12"
									},
									"returnParameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "isSolvent",
												"nameLocation": "4643:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "4638:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4638:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:16:12"
									},
									"scope": 2496,
									"src": "4540:114:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2303,
										"nodeType": "StructuredDocumentation",
										"src": "4660:277:12",
										"text": " @notice Get a list of agreements that is active for the account\n @dev An active agreement is one that has state for the account\n @param account Account to query\n @return activeAgreements List of accounts that have non-zero states for the account"
									},
									"functionSelector": "386fa221",
									"id": 2312,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAccountActiveAgreements",
									"nameLocation": "4951:26:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4986:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "4978:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4977:17:12"
									},
									"returnParameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "activeAgreements",
												"nameLocation": "5056:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "5031:41:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_ISuperAgreement_$917_$dyn_memory_ptr",
													"typeString": "contract ISuperAgreement[]"
												},
												"typeName": {
													"baseType": {
														"id": 2308,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2307,
															"name": "ISuperAgreement",
															"nameLocations": [
																"5031:15:12"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 917,
															"src": "5031:15:12"
														},
														"referencedDeclaration": 917,
														"src": "5031:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISuperAgreement_$917",
															"typeString": "contract ISuperAgreement"
														}
													},
													"id": 2309,
													"nodeType": "ArrayTypeName",
													"src": "5031:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_ISuperAgreement_$917_$dyn_storage_ptr",
														"typeString": "contract ISuperAgreement[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5030:43:12"
									},
									"scope": 2496,
									"src": "4942:132:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2313,
										"nodeType": "StructuredDocumentation",
										"src": "5280:110:12",
										"text": " @dev Create a new agreement\n @param id Agreement ID\n @param data Agreement data"
									},
									"functionSelector": "12a6a3f8",
									"id": 2321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createAgreement",
									"nameLocation": "5404:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5437:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "5429:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5429:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5468:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "5449:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2316,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5449:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2317,
													"nodeType": "ArrayTypeName",
													"src": "5449:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5419:59:12"
									},
									"returnParameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5495:0:12"
									},
									"scope": 2496,
									"src": "5395:101:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2322,
										"nodeType": "StructuredDocumentation",
										"src": "5501:174:12",
										"text": " @dev Agreement created event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param data Agreement data"
									},
									"eventSelector": "770ea40a13a4644573ed785e5c7116890709947918747febc5add46feb531e2d",
									"id": 2331,
									"name": "AgreementCreated",
									"nameLocation": "5686:16:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"indexed": true,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "5728:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "5712:30:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5712:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2326,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5760:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "5752:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2325,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5752:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2329,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5782:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "5772:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2327,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5772:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2328,
													"nodeType": "ArrayTypeName",
													"src": "5772:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5702:90:12"
									},
									"src": "5680:113:12"
								},
								{
									"documentation": {
										"id": 2332,
										"nodeType": "StructuredDocumentation",
										"src": "5799:184:12",
										"text": " @dev Get data of the agreement\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @return data Data of the agreement"
									},
									"functionSelector": "6c2d9f2f",
									"id": 2344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAgreementData",
									"nameLocation": "5997:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "6031:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "6023:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6023:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "6063:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "6055:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2335,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6055:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "dataLength",
												"nameLocation": "6080:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "6075:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2337,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6075:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6013:83:12"
									},
									"returnParameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6152:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "6135:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2340,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "6135:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2341,
													"nodeType": "ArrayTypeName",
													"src": "6135:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6134:23:12"
									},
									"scope": 2496,
									"src": "5988:170:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2345,
										"nodeType": "StructuredDocumentation",
										"src": "6164:110:12",
										"text": " @dev Create a new agreement\n @param id Agreement ID\n @param data Agreement data"
									},
									"functionSelector": "a1b2bf8b",
									"id": 2353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateAgreementData",
									"nameLocation": "6288:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "6325:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "6317:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2346,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6317:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6356:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "6337:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2348,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "6337:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2349,
													"nodeType": "ArrayTypeName",
													"src": "6337:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6307:59:12"
									},
									"returnParameters": {
										"id": 2352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6383:0:12"
									},
									"scope": 2496,
									"src": "6279:105:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2354,
										"nodeType": "StructuredDocumentation",
										"src": "6389:174:12",
										"text": " @dev Agreement updated event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param data Agreement data"
									},
									"eventSelector": "0c4c547b3a4fcaa5be8353b3111472b124155bccc86de811d4a481c9e6e9faca",
									"id": 2363,
									"name": "AgreementUpdated",
									"nameLocation": "6574:16:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"indexed": true,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "6616:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "6600:30:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2358,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "6648:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "6640:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2357,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6640:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2361,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6670:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "6660:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2359,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "6660:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2360,
													"nodeType": "ArrayTypeName",
													"src": "6660:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6590:90:12"
									},
									"src": "6568:113:12"
								},
								{
									"documentation": {
										"id": 2364,
										"nodeType": "StructuredDocumentation",
										"src": "6687:73:12",
										"text": " @dev Close the agreement\n @param id Agreement ID"
									},
									"functionSelector": "27048397",
									"id": 2371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "terminateAgreement",
									"nameLocation": "6774:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "6810:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "6802:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2365,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6802:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "dataLength",
												"nameLocation": "6827:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "6822:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2367,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6822:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6792:51:12"
									},
									"returnParameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6860:0:12"
									},
									"scope": 2496,
									"src": "6765:96:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2372,
										"nodeType": "StructuredDocumentation",
										"src": "6866:143:12",
										"text": " @dev Agreement terminated event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID"
									},
									"eventSelector": "71a63dc095de07aa5512ad57a7596a39516317e316981a1cd71000057be1537b",
									"id": 2378,
									"name": "AgreementTerminated",
									"nameLocation": "7020:19:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2374,
												"indexed": true,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "7065:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "7049:30:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2376,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "7097:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "7089:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2375,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7089:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7039:66:12"
									},
									"src": "7014:92:12"
								},
								{
									"documentation": {
										"id": 2379,
										"nodeType": "StructuredDocumentation",
										"src": "7112:199:12",
										"text": " @dev Update agreement state slot\n @param account Account to be updated\n @custom:note \n - To clear the storage out, provide zero-ed array of intended length"
									},
									"functionSelector": "090c415e",
									"id": 2389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateAgreementStateSlot",
									"nameLocation": "7325:24:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7367:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "7359:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7359:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "slotId",
												"nameLocation": "7392:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "7384:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7384:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "slotData",
												"nameLocation": "7427:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "7408:27:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2384,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7408:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2385,
													"nodeType": "ArrayTypeName",
													"src": "7408:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7349:92:12"
									},
									"returnParameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7458:0:12"
									},
									"scope": 2496,
									"src": "7316:143:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2390,
										"nodeType": "StructuredDocumentation",
										"src": "7464:214:12",
										"text": " @dev Agreement account state updated event\n @param agreementClass Contract address of the agreement\n @param account Account updated\n @param slotId slot id of the agreement state"
									},
									"eventSelector": "30f416fa68fca014a0f334464c64b000ba53e99b6d2afdea9d5ca756372d5985",
									"id": 2398,
									"name": "AgreementStateUpdated",
									"nameLocation": "7689:21:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"indexed": true,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "7736:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "7720:30:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7720:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2394,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7776:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "7760:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7760:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2396,
												"indexed": false,
												"mutability": "mutable",
												"name": "slotId",
												"nameLocation": "7801:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "7793:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7793:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7710:103:12"
									},
									"src": "7683:131:12"
								},
								{
									"documentation": {
										"id": 2399,
										"nodeType": "StructuredDocumentation",
										"src": "7820:267:12",
										"text": " @dev Get data of the slot of the state of an agreement\n @param agreementClass Contract address of the agreement\n @param account Account to query\n @param slotId slot id of the state\n @param dataLength length of the state data"
									},
									"functionSelector": "4b61cc33",
									"id": 2413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAgreementStateSlot",
									"nameLocation": "8101:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "8140:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "8132:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8132:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8172:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "8164:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8164:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "slotId",
												"nameLocation": "8197:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "8189:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8189:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "dataLength",
												"nameLocation": "8218:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "8213:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2406,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8213:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8122:112:12"
									},
									"returnParameters": {
										"id": 2412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "slotData",
												"nameLocation": "8291:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "8274:25:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2409,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "8274:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2410,
													"nodeType": "ArrayTypeName",
													"src": "8274:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8273:27:12"
									},
									"scope": 2496,
									"src": "8092:209:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2414,
										"nodeType": "StructuredDocumentation",
										"src": "8307:320:12",
										"text": " @notice Settle balance from an account by the agreement\n @dev The agreement needs to make sure that the balance delta is balanced afterwards\n @param account Account to query.\n @param delta Amount of balance delta to be settled\n @custom:modifiers \n  - onlyAgreement"
									},
									"functionSelector": "cf97256d",
									"id": 2421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "settleBalance",
									"nameLocation": "8641:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8672:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "8664:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8664:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "delta",
												"nameLocation": "8696:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "8689:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2417,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8689:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8654:53:12"
									},
									"returnParameters": {
										"id": 2420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8724:0:12"
									},
									"scope": 2496,
									"src": "8632:93:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2422,
										"nodeType": "StructuredDocumentation",
										"src": "8731:1154:12",
										"text": " @dev Make liquidation payouts (v2)\n @param id Agreement ID\n @param liquidationTypeData Data regarding the version of the liquidation schema and the type\n @param liquidatorAccount Address of the executor of the liquidation\n @param useDefaultRewardAccount Whether or not the default reward account receives the rewardAmount\n @param targetAccount Account to be liquidated\n @param rewardAmount The amount the rewarded account will receive\n @param targetAccountBalanceDelta The delta amount the target account balance should change by\n @custom:note \n - If a bailout is required (bailoutAmount > 0)\n   - the actual reward (single deposit) goes to the executor,\n   - while the reward account becomes the bailout account\n   - total bailout include: bailout amount + reward amount\n   - the targetAccount will be bailed out\n - If a bailout is not required\n   - the targetAccount will pay the rewardAmount\n   - the liquidator (reward account in PIC period) will receive the rewardAmount\n @custom:modifiers \n  - onlyAgreement"
									},
									"functionSelector": "1863e809",
									"id": 2439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "makeLiquidationPayoutsV2",
									"nameLocation": "9899:24:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "9946:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "9938:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2423,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9938:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "liquidationTypeData",
												"nameLocation": "9971:19:12",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "9958:32:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2425,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9958:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "liquidatorAccount",
												"nameLocation": "10008:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "10000:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10000:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "useDefaultRewardAccount",
												"nameLocation": "10040:23:12",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "10035:28:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2429,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10035:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "targetAccount",
												"nameLocation": "10081:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "10073:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10073:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "10112:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "10104:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10104:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "targetAccountBalanceDelta",
												"nameLocation": "10141:25:12",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "10134:32:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2435,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "10134:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9928:244:12"
									},
									"returnParameters": {
										"id": 2438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10181:0:12"
									},
									"scope": 2496,
									"src": "9890:292:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2440,
										"nodeType": "StructuredDocumentation",
										"src": "10187:1512:12",
										"text": " @dev Agreement liquidation event v2 (including agent account)\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param liquidatorAccount Address of the executor of the liquidation\n @param targetAccount Account of the stream sender\n @param rewardAmountReceiver Account that collects the reward or bails out insolvent accounts\n @param rewardAmount The amount the reward recipient account balance should change by\n @param targetAccountBalanceDelta The amount the sender account balance should change by\n @param liquidationTypeData The encoded liquidation type data including the version (how to decode)\n @custom:note \n Reward account rule:\n - if the agreement is liquidated during the PIC period\n   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount\n   - the targetAccount will pay for the rewardAmount\n - if the agreement is liquidated after the PIC period AND the targetAccount is solvent\n   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)\n   - the targetAccount will pay for the rewardAmount\n - if the targetAccount is insolvent\n   - the liquidatorAccount will get the rewardAmount (single deposit)\n   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount\n   - the targetAccount will receive the bailoutAmount"
									},
									"eventSelector": "b8381a3ce157650e06186e3e8f4dd4dc29236f2688b6eed1893d0a60d7c6386f",
									"id": 2458,
									"name": "AgreementLiquidatedV2",
									"nameLocation": "11710:21:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2442,
												"indexed": true,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "11757:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "11741:30:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11741:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2444,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "11789:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "11781:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2443,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11781:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2446,
												"indexed": true,
												"mutability": "mutable",
												"name": "liquidatorAccount",
												"nameLocation": "11817:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "11801:33:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11801:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2448,
												"indexed": true,
												"mutability": "mutable",
												"name": "targetAccount",
												"nameLocation": "11860:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "11844:29:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11844:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2450,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmountReceiver",
												"nameLocation": "11891:20:12",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "11883:28:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11883:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2452,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "11929:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "11921:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11921:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2454,
												"indexed": false,
												"mutability": "mutable",
												"name": "targetAccountBalanceDelta",
												"nameLocation": "11958:25:12",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "11951:32:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2453,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11951:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2456,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidationTypeData",
												"nameLocation": "11999:19:12",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "11993:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11993:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11731:293:12"
									},
									"src": "11704:321:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2459,
										"nodeType": "StructuredDocumentation",
										"src": "12837:435:12",
										"text": " @dev Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param penaltyAccount Account of the agreement to be penalized\n @param rewardAccount Account that collect the reward\n @param rewardAmount Amount of liquidation reward\n @custom:deprecated Use AgreementLiquidatedV2 instead"
									},
									"eventSelector": "8505c3d8f1f184f032cf0bc4cd80ee61c8b9d94f8907c3281bf0101a2610fe80",
									"id": 2471,
									"name": "AgreementLiquidated",
									"nameLocation": "13283:19:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2461,
												"indexed": true,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "13328:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "13312:30:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13312:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2463,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13360:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "13352:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2462,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13352:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2465,
												"indexed": true,
												"mutability": "mutable",
												"name": "penaltyAccount",
												"nameLocation": "13388:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "13372:30:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13372:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2467,
												"indexed": true,
												"mutability": "mutable",
												"name": "rewardAccount",
												"nameLocation": "13428:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "13412:29:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13412:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2469,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "13459:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "13451:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13451:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13302:175:12"
									},
									"src": "13277:201:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2472,
										"nodeType": "StructuredDocumentation",
										"src": "13484:276:12",
										"text": " @dev System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\n @param bailoutAccount Account that bailout the penalty account\n @param bailoutAmount Amount of account bailout\n @custom:deprecated Use AgreementLiquidatedV2 instead"
									},
									"eventSelector": "d6c9a04afc81e8c614310bbee6c9e84f5abe15b82038bf8347014ce0852e6ffd",
									"id": 2478,
									"name": "Bailout",
									"nameLocation": "13771:7:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2474,
												"indexed": true,
												"mutability": "mutable",
												"name": "bailoutAccount",
												"nameLocation": "13804:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "13788:30:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13788:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2476,
												"indexed": false,
												"mutability": "mutable",
												"name": "bailoutAmount",
												"nameLocation": "13836:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "13828:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13828:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13778:77:12"
									},
									"src": "13765:91:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2479,
										"nodeType": "StructuredDocumentation",
										"src": "13862:1082:12",
										"text": " @dev Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\n @param liquidatorAccount Account of the agent that performed the liquidation.\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param penaltyAccount Account of the agreement to be penalized\n @param bondAccount Account that collect the reward or bailout accounts\n @param rewardAmount Amount of liquidation reward\n @param bailoutAmount Amount of liquidation bailouot\n @custom:deprecated Use AgreementLiquidatedV2 instead\n @custom:note \n Reward account rule:\n - if bailout is equal to 0, then\n   - the bondAccount will get the rewardAmount,\n   - the penaltyAccount will pay for the rewardAmount.\n - if bailout is larger than 0, then\n   - the liquidatorAccount will get the rewardAmouont,\n   - the bondAccount will pay for both the rewardAmount and bailoutAmount,\n   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount."
									},
									"eventSelector": "5f22b60e58b1d6de858bc27c48d5a4653e052da99e083c1d88bb8c58e1abc8ef",
									"id": 2495,
									"name": "AgreementLiquidatedBy",
									"nameLocation": "14955:21:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2481,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidatorAccount",
												"nameLocation": "14994:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "14986:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14986:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2483,
												"indexed": true,
												"mutability": "mutable",
												"name": "agreementClass",
												"nameLocation": "15037:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "15021:30:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15021:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2485,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "15069:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "15061:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2484,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15061:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2487,
												"indexed": true,
												"mutability": "mutable",
												"name": "penaltyAccount",
												"nameLocation": "15097:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "15081:30:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15081:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2489,
												"indexed": true,
												"mutability": "mutable",
												"name": "bondAccount",
												"nameLocation": "15137:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "15121:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15121:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2491,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "15166:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "15158:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15158:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2493,
												"indexed": false,
												"mutability": "mutable",
												"name": "bailoutAmount",
												"nameLocation": "15196:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "15188:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15188:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14976:239:12"
									},
									"src": "14949:267:12"
								}
							],
							"scope": 2497,
							"src": "187:15031:12",
							"usedErrors": [2217, 2219, 2221, 2223, 2225, 2227]
						}
					],
					"src": "35:15184:12"
				},
				"id": 12
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
				"ast": {
					"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
					"exportedSymbols": {
						"ERC20WithTokenInfo": [2508],
						"IERC20": [242],
						"TokenInfo": [2530]
					},
					"id": 2509,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2498,
							"literals": ["solidity", ">=", "0.8", ".4"],
							"nodeType": "PragmaDirective",
							"src": "35:25:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2500,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2509,
							"sourceUnit": 243,
							"src": "62:72:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2499,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 242,
										"src": "71:6:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
							"file": "./TokenInfo.sol",
							"id": 2502,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2509,
							"sourceUnit": 2531,
							"src": "135:44:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2501,
										"name": "TokenInfo",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2530,
										"src": "144:9:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2504,
										"name": "IERC20",
										"nameLocations": ["530:6:13"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 242,
										"src": "530:6:13"
									},
									"id": 2505,
									"nodeType": "InheritanceSpecifier",
									"src": "530:6:13"
								},
								{
									"baseName": {
										"id": 2506,
										"name": "TokenInfo",
										"nameLocations": ["538:9:13"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2530,
										"src": "538:9:13"
									},
									"id": 2507,
									"nodeType": "InheritanceSpecifier",
									"src": "538:9:13"
								}
							],
							"canonicalName": "ERC20WithTokenInfo",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2503,
								"nodeType": "StructuredDocumentation",
								"src": "181:263:13",
								"text": " @title ERC20 token with token info interface\n @author Superfluid\n @dev Using abstract contract instead of interfaces because old solidity\n      does not support interface inheriting other interfaces\n solhint-disable-next-line no-empty-blocks"
							},
							"fullyImplemented": false,
							"id": 2508,
							"linearizedBaseContracts": [2508, 2530, 242],
							"name": "ERC20WithTokenInfo",
							"nameLocation": "508:18:13",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2509,
							"src": "490:60:13",
							"usedErrors": []
						}
					],
					"src": "35:516:13"
				},
				"id": 13
			},
			"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
				"ast": {
					"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
					"exportedSymbols": {
						"TokenInfo": [2530]
					},
					"id": 2531,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2510,
							"literals": ["solidity", ">=", "0.8", ".4"],
							"nodeType": "PragmaDirective",
							"src": "35:25:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TokenInfo",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2511,
								"nodeType": "StructuredDocumentation",
								"src": "62:188:14",
								"text": " @title ERC20 token info interface\n @author Superfluid\n @dev ERC20 standard interface does not specify these functions, but\n      often the token implementations have them."
							},
							"fullyImplemented": false,
							"id": 2530,
							"linearizedBaseContracts": [2530],
							"name": "TokenInfo",
							"nameLocation": "261:9:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2512,
										"nodeType": "StructuredDocumentation",
										"src": "277:54:14",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "345:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:2:14"
									},
									"returnParameters": {
										"id": 2516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "375:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2514,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "375:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:15:14"
									},
									"scope": 2530,
									"src": "336:54:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2518,
										"nodeType": "StructuredDocumentation",
										"src": "396:102:14",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 2523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "512:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "518:2:14"
									},
									"returnParameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "544:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2520,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "544:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "543:15:14"
									},
									"scope": 2530,
									"src": "503:56:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2524,
										"nodeType": "StructuredDocumentation",
										"src": "565:612:14",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 2529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1191:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1199:2:14"
									},
									"returnParameters": {
										"id": 2528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "1225:5:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2526,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1225:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1224:7:14"
									},
									"scope": 2530,
									"src": "1182:50:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2531,
							"src": "251:983:14",
							"usedErrors": []
						}
					],
					"src": "35:1200:14"
				},
				"id": 14
			},
			"contracts/OurSuperToken.sol": {
				"ast": {
					"absolutePath": "contracts/OurSuperToken.sol",
					"exportedSymbols": {
						"OurSuperToken": [2649],
						"Ownable": [112],
						"SuperTokenBase": [2817]
					},
					"id": 2650,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2532,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "35:23:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2534,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2650,
							"sourceUnit": 113,
							"src": "60:67:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2533,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 112,
										"src": "68:7:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/base/SuperTokenBase.sol",
							"file": "./base/SuperTokenBase.sol",
							"id": 2536,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2650,
							"sourceUnit": 2818,
							"src": "129:57:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2535,
										"name": "SuperTokenBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2817,
										"src": "137:14:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2538,
										"name": "SuperTokenBase",
										"nameLocations": ["311:14:15"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2817,
										"src": "311:14:15"
									},
									"id": 2539,
									"nodeType": "InheritanceSpecifier",
									"src": "311:14:15"
								},
								{
									"baseName": {
										"id": 2540,
										"name": "Ownable",
										"nameLocations": ["327:7:15"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "327:7:15"
									},
									"id": 2541,
									"nodeType": "InheritanceSpecifier",
									"src": "327:7:15"
								}
							],
							"canonicalName": "OurSuperToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2537,
								"nodeType": "StructuredDocumentation",
								"src": "188:97:15",
								"text": "@title Mintable Pure Super Token\n @author jtriley.eth\n @notice Only the owner may mint"
							},
							"fullyImplemented": true,
							"id": 2649,
							"linearizedBaseContracts": [
								2649, 112, 427, 2817, 2881, 164, 2825
							],
							"name": "OurSuperToken",
							"nameLocation": "294:13:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2569,
										"nodeType": "Block",
										"src": "709:86:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2558,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2544,
															"src": "725:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2559,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2546,
															"src": "734:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2560,
															"name": "symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2548,
															"src": "740:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2557,
														"name": "_initialize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2705,
														"src": "713:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,string memory,string memory)"
														}
													},
													"id": 2561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "713:34:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2562,
												"nodeType": "ExpressionStatement",
												"src": "713:34:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2564,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2552,
															"src": "757:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2565,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2550,
															"src": "767:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2566,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2554,
															"src": "782:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2563,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2744,
														"src": "751:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "751:40:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2568,
												"nodeType": "ExpressionStatement",
												"src": "751:40:15"
											}
										]
									},
									"documentation": {
										"id": 2542,
										"nodeType": "StructuredDocumentation",
										"src": "343:194:15",
										"text": "@notice Initializer, used AFTER factory upgrade\n @param factory Super token factory for initialization\n @param name Name of Super Token\n @param symbol Symbol of Super Token"
									},
									"functionSelector": "a6a05598",
									"id": 2570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "551:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "573:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2570,
												"src": "565:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "598:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2570,
												"src": "584:18:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2545,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "584:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "620:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2570,
												"src": "606:20:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2547,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "606:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "638:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 2570,
												"src": "630:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "663:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2570,
												"src": "655:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2554,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "688:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2570,
												"src": "675:21:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "675:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:138:15"
									},
									"returnParameters": {
										"id": 2556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "709:0:15"
									},
									"scope": 2649,
									"src": "542:253:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2588,
										"nodeType": "Block",
										"src": "1023:41:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2583,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2573,
															"src": "1033:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2584,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2575,
															"src": "1043:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2585,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2577,
															"src": "1051:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2582,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2744,
														"src": "1027:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1027:33:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2587,
												"nodeType": "ExpressionStatement",
												"src": "1027:33:15"
											}
										]
									},
									"documentation": {
										"id": 2571,
										"nodeType": "StructuredDocumentation",
										"src": "798:133:15",
										"text": "@notice Mints tokens, only the owner may do this\n @param receiver Receiver of minted tokens\n @param amount Amount to mint"
									},
									"functionSelector": "94d008ef",
									"id": 2589,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2580,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2579,
												"name": "onlyOwner",
												"nameLocations": ["1013:9:15"],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1013:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1013:9:15"
										}
									],
									"name": "mint",
									"nameLocation": "942:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "955:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "947:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "947:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2575,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "973:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "965:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "965:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "994:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "981:21:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2576,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "981:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "946:57:15"
									},
									"returnParameters": {
										"id": 2581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1023:0:15"
									},
									"scope": 2649,
									"src": "933:131:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2597,
										"nodeType": "Block",
										"src": "1124:32:15",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2594,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2721,
														"src": "1134:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1134:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2596,
												"nodeType": "ExpressionStatement",
												"src": "1134:14:15"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 2598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1079:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1090:2:15"
									},
									"returnParameters": {
										"id": 2593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "t",
												"nameLocation": "1121:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2598,
												"src": "1116:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2591,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1116:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1115:8:15"
									},
									"scope": 2649,
									"src": "1070:86:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2613,
										"nodeType": "Block",
										"src": "1235:51:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2608,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2600,
															"src": "1254:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2609,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2602,
															"src": "1263:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2610,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2604,
															"src": "1272:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2607,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2790,
														"src": "1245:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1245:34:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2612,
												"nodeType": "ExpressionStatement",
												"src": "1245:34:15"
											}
										]
									},
									"functionSelector": "e1f21c67",
									"id": 2614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1170:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2600,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1186:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "1178:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2602,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1202:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "1194:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1194:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2604,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1218:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "1210:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1177:48:15"
									},
									"returnParameters": {
										"id": 2606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1235:0:15"
									},
									"scope": 2649,
									"src": "1161:125:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2632,
										"nodeType": "Block",
										"src": "1389:63:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2626,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2616,
															"src": "1413:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2627,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2618,
															"src": "1420:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2628,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2620,
															"src": "1428:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2629,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2622,
															"src": "1438:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2625,
														"name": "_transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2816,
														"src": "1399:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 2630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1399:46:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2631,
												"nodeType": "ExpressionStatement",
												"src": "1399:46:15"
											}
										]
									},
									"functionSelector": "15dacbea",
									"id": 2633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1301:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "1322:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "1314:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1314:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1337:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "1329:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1354:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "1346:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1346:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1372:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "1364:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1364:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1313:66:15"
									},
									"returnParameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1389:0:15"
									},
									"scope": 2649,
									"src": "1292:160:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2647,
										"nodeType": "Block",
										"src": "1520:50:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2641,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1536:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1540:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1536:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2643,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2635,
															"src": "1547:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2644,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2637,
															"src": "1554:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2640,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2767,
														"src": "1530:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1530:33:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2646,
												"nodeType": "ExpressionStatement",
												"src": "1530:33:15"
											}
										]
									},
									"functionSelector": "fe9d9303",
									"id": 2648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1467:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1480:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "1472:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1472:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2637,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "1501:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "1488:21:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2636,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1488:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:39:15"
									},
									"returnParameters": {
										"id": 2639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1520:0:15"
									},
									"scope": 2649,
									"src": "1458:112:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2650,
							"src": "285:1289:15",
							"usedErrors": [2835, 2838]
						}
					],
					"src": "35:1540:15"
				},
				"id": 15
			},
			"contracts/base/SuperTokenBase.sol": {
				"ast": {
					"absolutePath": "contracts/base/SuperTokenBase.sol",
					"exportedSymbols": {
						"IERC20": [242],
						"ISuperToken": [1431],
						"ISuperTokenFactory": [1559],
						"SuperTokenBase": [2817],
						"SuperTokenStorage": [2825],
						"UUPSProxy": [2881]
					},
					"id": 2818,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2651,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "35:23:16"
						},
						{
							"absolutePath": "contracts/base/SuperTokenStorage.sol",
							"file": "../base/SuperTokenStorage.sol",
							"id": 2653,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2818,
							"sourceUnit": 2826,
							"src": "60:64:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2652,
										"name": "SuperTokenStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2825,
										"src": "68:17:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/base/UUPSProxy.sol",
							"file": "../base/UUPSProxy.sol",
							"id": 2655,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2818,
							"sourceUnit": 2882,
							"src": "125:48:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2654,
										"name": "UUPSProxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2881,
										"src": "133:9:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2657,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2818,
							"sourceUnit": 243,
							"src": "175:70:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2656,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 242,
										"src": "183:6:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
							"file": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
							"id": 2659,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2818,
							"sourceUnit": 1432,
							"src": "246:115:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2658,
										"name": "ISuperToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1431,
										"src": "254:11:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
							"file": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
							"id": 2661,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2818,
							"sourceUnit": 1560,
							"src": "362:129:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2660,
										"name": "ISuperTokenFactory",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1559,
										"src": "370:18:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2663,
										"name": "SuperTokenStorage",
										"nameLocations": ["786:17:16"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2825,
										"src": "786:17:16"
									},
									"id": 2664,
									"nodeType": "InheritanceSpecifier",
									"src": "786:17:16"
								},
								{
									"baseName": {
										"id": 2665,
										"name": "UUPSProxy",
										"nameLocations": ["805:9:16"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2881,
										"src": "805:9:16"
									},
									"id": 2666,
									"nodeType": "InheritanceSpecifier",
									"src": "805:9:16"
								}
							],
							"canonicalName": "SuperTokenBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2662,
								"nodeType": "StructuredDocumentation",
								"src": "493:257:16",
								"text": "@title Abstract contract containing a thin layer of abstraction for aux logic.\n @author jtriley.eth\n @dev The initial supply may be zero, in the event the token is mintable.\n Inheriting contracts MUST have an initializer calling this function!"
							},
							"fullyImplemented": true,
							"id": 2817,
							"linearizedBaseContracts": [2817, 2881, 164, 2825],
							"name": "SuperTokenBase",
							"nameLocation": "768:14:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2704,
										"nodeType": "Block",
										"src": "1110:156:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2682,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1177:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SuperTokenBase_$2817",
																		"typeString": "contract SuperTokenBase"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SuperTokenBase_$2817",
																		"typeString": "contract SuperTokenBase"
																	}
																],
																"id": 2681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1169:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2680,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1169:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1169:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2677,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2669,
																	"src": "1133:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2676,
																"name": "ISuperTokenFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "1114:18:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISuperTokenFactory_$1559_$",
																	"typeString": "type(contract ISuperTokenFactory)"
																}
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1114:27:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISuperTokenFactory_$1559",
																"typeString": "contract ISuperTokenFactory"
															}
														},
														"id": 2679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1142:26:16",
														"memberName": "initializeCustomSuperToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1540,
														"src": "1114:54:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 2684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1114:69:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2685,
												"nodeType": "ExpressionStatement",
												"src": "1114:69:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1240:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1232:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2694,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1232:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1232:10:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2693,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "1225:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$242_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1225:18:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$242",
																"typeString": "contract IERC20"
															}
														},
														{
															"hexValue": "3138",
															"id": 2699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1245:2:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														{
															"id": 2700,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2671,
															"src": "1249:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2701,
															"name": "symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2673,
															"src": "1255:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$242",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2689,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1207:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SuperTokenBase_$2817",
																				"typeString": "contract SuperTokenBase"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SuperTokenBase_$2817",
																				"typeString": "contract SuperTokenBase"
																			}
																		],
																		"id": 2688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1199:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2687,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1199:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1199:13:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2686,
																"name": "ISuperToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "1187:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISuperToken_$1431_$",
																	"typeString": "type(contract ISuperToken)"
																}
															},
															"id": 2691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1187:26:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISuperToken_$1431",
																"typeString": "contract ISuperToken"
															}
														},
														"id": 2692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1214:10:16",
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1089,
														"src": "1187:37:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$242_$_t_uint8_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,uint8,string memory,string memory) external"
														}
													},
													"id": 2702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1187:75:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2703,
												"nodeType": "ExpressionStatement",
												"src": "1187:75:16"
											}
										]
									},
									"documentation": {
										"id": 2667,
										"nodeType": "StructuredDocumentation",
										"src": "819:200:16",
										"text": "@dev Upgrades the super token with the factory, then initializes.\n @param factory super token factory for initialization\n @param name super token name\n @param symbol super token symbol"
									},
									"id": 2705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initialize",
									"nameLocation": "1030:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "1050:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "1042:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2671,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1073:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "1059:18:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2670,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1059:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2673,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1093:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "1079:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1079:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:59:16"
									},
									"returnParameters": {
										"id": 2675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1110:0:16"
									},
									"scope": 2817,
									"src": "1021:245:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2720,
										"nodeType": "Block",
										"src": "1382:55:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2714,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1413:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SuperTokenBase_$2817",
																				"typeString": "contract SuperTokenBase"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SuperTokenBase_$2817",
																				"typeString": "contract SuperTokenBase"
																			}
																		],
																		"id": 2713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1405:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2712,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1405:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1405:13:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2711,
																"name": "ISuperToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "1393:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISuperToken_$1431_$",
																	"typeString": "type(contract ISuperToken)"
																}
															},
															"id": 2716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1393:26:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISuperToken_$1431",
																"typeString": "contract ISuperToken"
															}
														},
														"id": 2717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1420:11:16",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1124,
														"src": "1393:38:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 2718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1393:40:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2710,
												"id": 2719,
												"nodeType": "Return",
												"src": "1386:47:16"
											}
										]
									},
									"documentation": {
										"id": 2706,
										"nodeType": "StructuredDocumentation",
										"src": "1269:53:16",
										"text": "@dev Gets totalSupply\n @return t total supply"
									},
									"id": 2721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalSupply",
									"nameLocation": "1333:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1345:2:16"
									},
									"returnParameters": {
										"id": 2710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2709,
												"mutability": "mutable",
												"name": "t",
												"nameLocation": "1379:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "1371:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1371:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1370:11:16"
									},
									"scope": 2817,
									"src": "1324:113:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2743,
										"nodeType": "Block",
										"src": "1756:70:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2738,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2724,
															"src": "1796:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2739,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2726,
															"src": "1805:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2740,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2728,
															"src": "1813:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2734,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1780:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SuperTokenBase_$2817",
																				"typeString": "contract SuperTokenBase"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SuperTokenBase_$2817",
																				"typeString": "contract SuperTokenBase"
																			}
																		],
																		"id": 2733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1772:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2732,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1772:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1772:13:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2731,
																"name": "ISuperToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "1760:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISuperToken_$1431_$",
																	"typeString": "type(contract ISuperToken)"
																}
															},
															"id": 2736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1760:26:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISuperToken_$1431",
																"typeString": "contract ISuperToken"
															}
														},
														"id": 2737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1787:8:16",
														"memberName": "selfMint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1312,
														"src": "1760:35:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory) external"
														}
													},
													"id": 2741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1760:62:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2742,
												"nodeType": "ExpressionStatement",
												"src": "1760:62:16"
											}
										]
									},
									"documentation": {
										"id": 2722,
										"nodeType": "StructuredDocumentation",
										"src": "1440:234:16",
										"text": "@dev Internal mint, calling functions should perform important checks!\n @param account Address receiving minted tokens\n @param amount Amount of tokens minted\n @param userData Optional user data for ERC777 send callback"
									},
									"id": 2744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "1685:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2724,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1699:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "1691:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1691:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2726,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1716:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "1708:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2728,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "1737:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "1724:21:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1724:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1690:56:16"
									},
									"returnParameters": {
										"id": 2730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1756:0:16"
									},
									"scope": 2817,
									"src": "1676:150:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2766,
										"nodeType": "Block",
										"src": "2132:67:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2761,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2747,
															"src": "2172:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2762,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2749,
															"src": "2178:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2763,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2751,
															"src": "2186:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2757,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2156:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SuperTokenBase_$2817",
																				"typeString": "contract SuperTokenBase"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SuperTokenBase_$2817",
																				"typeString": "contract SuperTokenBase"
																			}
																		],
																		"id": 2756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2148:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2755,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2148:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2148:13:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2754,
																"name": "ISuperToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "2136:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISuperToken_$1431_$",
																	"typeString": "type(contract ISuperToken)"
																}
															},
															"id": 2759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2136:26:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISuperToken_$1431",
																"typeString": "contract ISuperToken"
															}
														},
														"id": 2760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2163:8:16",
														"memberName": "selfBurn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1322,
														"src": "2136:35:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory) external"
														}
													},
													"id": 2764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2136:59:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2765,
												"nodeType": "ExpressionStatement",
												"src": "2136:59:16"
											}
										]
									},
									"documentation": {
										"id": 2745,
										"nodeType": "StructuredDocumentation",
										"src": "1829:224:16",
										"text": "@dev Internal burn, calling functions should perform important checks!\n @param from Address from which to burn tokens\n @param amount Amount to burn\n @param userData Optional user data for ERC777 send callback"
									},
									"id": 2767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "2064:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2078:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2767,
												"src": "2070:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2070:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2092:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2767,
												"src": "2084:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2751,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "2113:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2767,
												"src": "2100:21:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2750,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2100:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2069:53:16"
									},
									"returnParameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2132:0:16"
									},
									"scope": 2817,
									"src": "2055:144:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2789,
										"nodeType": "Block",
										"src": "2486:75:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2784,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2770,
															"src": "2532:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2785,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2772,
															"src": "2541:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2786,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2774,
															"src": "2550:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2780,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2510:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SuperTokenBase_$2817",
																				"typeString": "contract SuperTokenBase"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SuperTokenBase_$2817",
																				"typeString": "contract SuperTokenBase"
																			}
																		],
																		"id": 2779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2502:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2778,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2502:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2502:13:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2777,
																"name": "ISuperToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "2490:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISuperToken_$1431_$",
																	"typeString": "type(contract ISuperToken)"
																}
															},
															"id": 2782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2490:26:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISuperToken_$1431",
																"typeString": "contract ISuperToken"
															}
														},
														"id": 2783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2517:14:16",
														"memberName": "selfApproveFor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1344,
														"src": "2490:41:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 2787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2490:67:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2788,
												"nodeType": "ExpressionStatement",
												"src": "2490:67:16"
											}
										]
									},
									"documentation": {
										"id": 2768,
										"nodeType": "StructuredDocumentation",
										"src": "2202:205:16",
										"text": "@dev Internal approve, calling functions should perform important checks!\n @param account Address of approving party\n @param spender Address of spending party\n @param amount Approval amount"
									},
									"id": 2790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "2418:8:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2770,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2435:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "2427:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2772,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2452:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "2444:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2444:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2774,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2469:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "2461:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2426:50:16"
									},
									"returnParameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2486:0:16"
									},
									"scope": 2817,
									"src": "2409:152:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2815,
										"nodeType": "Block",
										"src": "2969:87:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2809,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2793,
															"src": "3017:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2810,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2795,
															"src": "3025:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2811,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2797,
															"src": "3034:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2812,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2799,
															"src": "3045:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2805,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2993:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SuperTokenBase_$2817",
																				"typeString": "contract SuperTokenBase"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SuperTokenBase_$2817",
																				"typeString": "contract SuperTokenBase"
																			}
																		],
																		"id": 2804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2985:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2803,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2985:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2985:13:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2802,
																"name": "ISuperToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "2973:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISuperToken_$1431_$",
																	"typeString": "type(contract ISuperToken)"
																}
															},
															"id": 2807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2973:26:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISuperToken_$1431",
																"typeString": "contract ISuperToken"
															}
														},
														"id": 2808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3000:16:16",
														"memberName": "selfTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1334,
														"src": "2973:43:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256) external"
														}
													},
													"id": 2813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2973:79:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2814,
												"nodeType": "ExpressionStatement",
												"src": "2973:79:16"
											}
										]
									},
									"documentation": {
										"id": 2791,
										"nodeType": "StructuredDocumentation",
										"src": "2564:292:16",
										"text": "@dev Internal transferFrom, calling functions should perform important checks!\n @param holder Owner of the tranfserred tokens\n @param spender Address of spending party (approved/operator)\n @param recipient Address of recipient party\n @param amount Amount to be tranfserred"
									},
									"id": 2816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferFrom",
									"nameLocation": "2867:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2793,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "2892:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2816,
												"src": "2884:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2884:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2795,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2910:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2816,
												"src": "2902:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2797,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2929:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2816,
												"src": "2921:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2921:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2799,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2950:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2816,
												"src": "2942:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2942:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:79:16"
									},
									"returnParameters": {
										"id": 2801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2969:0:16"
									},
									"scope": 2817,
									"src": "2858:198:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2818,
							"src": "750:2308:16",
							"usedErrors": [2835, 2838]
						}
					],
					"src": "35:3024:16"
				},
				"id": 16
			},
			"contracts/base/SuperTokenStorage.sol": {
				"ast": {
					"absolutePath": "contracts/base/SuperTokenStorage.sol",
					"exportedSymbols": {
						"SuperTokenStorage": [2825]
					},
					"id": 2826,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2819,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "35:23:17"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "SuperTokenStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2820,
								"nodeType": "StructuredDocumentation",
								"src": "60:348:17",
								"text": "@title Abstract Storage Contract to pad the first 32 slots of storage\n @author Superfluid\n @dev MUST be the FIRST contract inherited to pad the first 32 slots. The slots are padded to\n ensure the implementation contract (SuperToken.sol) does not override any auxiliary state\n variables. For more info see `./docs/StorageLayout.md`."
							},
							"fullyImplemented": true,
							"id": 2825,
							"linearizedBaseContracts": [2825],
							"name": "SuperTokenStorage",
							"nameLocation": "426:17:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2824,
									"mutability": "mutable",
									"name": "_storagePaddings",
									"nameLocation": "471:16:17",
									"nodeType": "VariableDeclaration",
									"scope": 2825,
									"src": "450:37:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$32_storage",
										"typeString": "uint256[32]"
									},
									"typeName": {
										"baseType": {
											"id": 2821,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "450:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2823,
										"length": {
											"hexValue": "3332",
											"id": 2822,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "458:2:17",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_32_by_1",
												"typeString": "int_const 32"
											},
											"value": "32"
										},
										"nodeType": "ArrayTypeName",
										"src": "450:11:17",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$32_storage_ptr",
											"typeString": "uint256[32]"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 2826,
							"src": "408:82:17",
							"usedErrors": []
						}
					],
					"src": "35:456:17"
				},
				"id": 17
			},
			"contracts/base/UUPSProxy.sol": {
				"ast": {
					"absolutePath": "contracts/base/UUPSProxy.sol",
					"exportedSymbols": {
						"Proxy": [164],
						"UUPSProxy": [2881]
					},
					"id": 2882,
					"license": "AGPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2827,
							"literals": ["solidity", "^", "0.8", ".0"],
							"nodeType": "PragmaDirective",
							"src": "35:23:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
							"file": "@openzeppelin/contracts/proxy/Proxy.sol",
							"id": 2829,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2882,
							"sourceUnit": 165,
							"src": "60:62:18",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2828,
										"name": "Proxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 164,
										"src": "68:5:18",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2831,
										"name": "Proxy",
										"nameLocations": ["456:5:18"],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 164,
										"src": "456:5:18"
									},
									"id": 2832,
									"nodeType": "InheritanceSpecifier",
									"src": "456:5:18"
								}
							],
							"canonicalName": "UUPSProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2830,
								"nodeType": "StructuredDocumentation",
								"src": "124:310:18",
								"text": "@title UUPS Proxy implementation contract\n @author jtriley.eth\n @notice Stores the logic contract's address at the _IMPLEMENTATION_SLOT\n @dev `initializeProxy(address)` is called by the Super Token Factory\n The call to the factory should be in the same transaction to avoid being\n front run"
							},
							"fullyImplemented": true,
							"id": 2881,
							"linearizedBaseContracts": [2881, 164],
							"name": "UUPSProxy",
							"nameLocation": "443:9:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2833,
										"nodeType": "StructuredDocumentation",
										"src": "465:58:18",
										"text": "@notice Thrown when the logic contract address is zero"
									},
									"errorSelector": "d92e233d",
									"id": 2835,
									"name": "ZeroAddress",
									"nameLocation": "531:11:18",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "542:2:18"
									},
									"src": "525:20:18"
								},
								{
									"documentation": {
										"id": 2836,
										"nodeType": "StructuredDocumentation",
										"src": "548:55:18",
										"text": "@notice Thrown when the logic contract has been set"
									},
									"errorSelector": "5daa87a0",
									"id": 2838,
									"name": "Initialized",
									"nameLocation": "611:11:18",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "622:2:18"
									},
									"src": "605:20:18"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2839,
										"nodeType": "StructuredDocumentation",
										"src": "628:128:18",
										"text": "@notice Precomputed from the following for gas savings\n bytes32(uint256(keccak256(\"eip1967.proxy.implementation\") - 1));"
									},
									"id": 2842,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "784:20:18",
									"nodeType": "VariableDeclaration",
									"scope": 2881,
									"src": "758:117:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2840,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "758:7:18",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 2841,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "809:66:18",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2870,
										"nodeType": "Block",
										"src": "1107:188:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2848,
														"name": "initialAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2845,
														"src": "1115:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1141:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1133:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2849,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1133:7:18",
																"typeDescriptions": {}
															}
														},
														"id": 2852,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1133:10:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1115:28:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2857,
												"nodeType": "IfStatement",
												"src": "1111:54:18",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2854,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2835,
															"src": "1152:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1152:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2856,
													"nodeType": "RevertStatement",
													"src": "1145:20:18"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2858,
															"name": "_implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																2880
															],
															"referencedDeclaration": 2880,
															"src": "1173:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1173:17:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1202:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1194:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2860,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1194:7:18",
																"typeDescriptions": {}
															}
														},
														"id": 2863,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1194:10:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1173:31:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2868,
												"nodeType": "IfStatement",
												"src": "1169:57:18",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2865,
															"name": "Initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2838,
															"src": "1213:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1213:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2867,
													"nodeType": "RevertStatement",
													"src": "1206:20:18"
												}
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1239:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_IMPLEMENTATION_SLOT",
																		"nodeType": "YulIdentifier",
																		"src": "1251:20:18"
																	},
																	{
																		"name": "initialAddress",
																		"nodeType": "YulIdentifier",
																		"src": "1273:14:18"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "1244:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1244:44:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1244:44:18"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2842,
														"isOffset": false,
														"isSlot": false,
														"src": "1251:20:18",
														"valueSize": 1
													},
													{
														"declaration": 2845,
														"isOffset": false,
														"isSlot": false,
														"src": "1273:14:18",
														"valueSize": 1
													}
												],
												"id": 2869,
												"nodeType": "InlineAssembly",
												"src": "1230:62:18"
											}
										]
									},
									"documentation": {
										"id": 2843,
										"nodeType": "StructuredDocumentation",
										"src": "879:168:18",
										"text": "@notice Stores the logic contract address only once.\n @dev Called by the SuperTokenFactory contract on upgrade\n @param initialAddress logic contract address"
									},
									"functionSelector": "4a0687ef",
									"id": 2871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initializeProxy",
									"nameLocation": "1058:15:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "initialAddress",
												"nameLocation": "1082:14:18",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "1074:22:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:24:18"
									},
									"returnParameters": {
										"id": 2847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1107:0:18"
									},
									"scope": 2881,
									"src": "1049:246:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [129],
									"body": {
										"id": 2879,
										"nodeType": "Block",
										"src": "1487:60:18",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1500:44:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1505:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "_IMPLEMENTATION_SLOT",
																		"nodeType": "YulIdentifier",
																		"src": "1519:20:18"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "1513:5:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1513:27:18"
															},
															"variableNames": [
																{
																	"name": "impl",
																	"nodeType": "YulIdentifier",
																	"src": "1505:4:18"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2842,
														"isOffset": false,
														"isSlot": false,
														"src": "1519:20:18",
														"valueSize": 1
													},
													{
														"declaration": 2876,
														"isOffset": false,
														"isSlot": false,
														"src": "1505:4:18",
														"valueSize": 1
													}
												],
												"id": 2878,
												"nodeType": "InlineAssembly",
												"src": "1491:53:18"
											}
										]
									},
									"documentation": {
										"id": 2872,
										"nodeType": "StructuredDocumentation",
										"src": "1298:95:18",
										"text": "@notice Reads logic contract from precomputed slot\n @return impl Logic contract address"
									},
									"id": 2880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "1404:15:18",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2874,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1452:8:18"
									},
									"parameters": {
										"id": 2873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1419:2:18"
									},
									"returnParameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "1480:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "1472:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1472:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:14:18"
									},
									"scope": 2881,
									"src": "1395:152:18",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2882,
							"src": "434:1115:18",
							"usedErrors": [2835, 2838]
						}
					],
					"src": "35:1515:18"
				},
				"id": 18
			}
		}
	}
}
